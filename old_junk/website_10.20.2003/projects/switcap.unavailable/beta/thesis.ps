%!PS-Adobe-2.0
%%Creator: dvipsk 5.58c Copyright 1986, 1994 Radical Eye Software
%%Title: report.dvi
%%Pages: 193
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -f -N0 report.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1999.05.31:2305
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (report.dvi)
@start /Fa 3 104 df<167FD801F0903807FF80D807FC131FD80E1F017F7F3A1C0F81F8
3F273807C3E07F00309038E7801F3B7003EF000FF014FE6D486D7E834A13030078820038
6D1301003C82001F81D80F81ED7F80EA07C10003EE3FC0EA01E100006DEC1FE013711880
EF7E00EE03FC91B612F0178004FCC7FCECFE011260136113E11270EA31C1EA3F81EA0F01
000013FC821500A600305B123C127C12F8001849EC01C0D81C031507000C499038FF0F80
000E92387F1F006C484814BC26038780EB3FF86CB4C7EA0FF0D8007CEC03E033387DB537
>60 D<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F91C7FC137E5BEA03F8EA
7FE048C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D7E6D7EEB00FEEC3FE014
071B4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F80131FB3A580130F6D7E
6D7EEB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A495A131F5CB3A5133F91
C7FC5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I E /Fb
6 123 df<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF
9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0
EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC07
FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFC
12FC12702F2E7AA93C>62 D<010FB500C090B5FCA39026003FE0C7EA1FE04B1500183E4B
143818F0027FEC01C04D5A92C7000EC7FC5F4A5C17E04A495A4C5A0101020EC8FC5E4A5B
16F0010313011503ECF80F4B7E0107133FEDF3FCECF1C39138F381FE90380FF7019138FC
00FF5C5C49486D7EA24A6D7EA2013F6E7EA24A6D7EA2137F707E91C7FC707E5B707E5B00
014B7EB500FC013F13F85EA240337DB241>75 D<ED01F815FFA216F01507A316E0A2150F
A216C0A2151FA21680A2153FA2D901F81300EB07FE90381F077F90387C03FF496C5AEA01
F000031300485A495B120F381F8001A2D83F005BA214035A007E5CA2140712FE485C1640
020F136016E0EDC0C0127CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7C300390F
0787C73907FE03FE3900F800F825357EB328>100 D<14FE903807FF8090381F03C09038
7C01E03801F800485A485A485A485A1401D83F0013C01403007EEB0F80ECFE00387FFFF8
B5128000FCC8FCA45AA415186C1438007C147015E0003CEB01C0003EEB07806CEB1E0038
0F80FC3803FFE0C690C7FC1D227DA024>I<EB0380EB0FC0A3131FA21480A2133FA21400
A25BA2137E387FFFFEA2B5FC3800FC00A21201A25BA21203A25BA21207A25BA2120FA25B
1408001F131C14181380143814701460EB00E0EB01C0380F8380EB8700EA07FEEA01F817
307FAE1C>116 D<903807800390381FE00790383FF00690387FF80E9038FFFC1C48EBFE
789038E03FF03803800190C712E0EC01C0C7EA0380EC0700140E143C14705C495A495A49
C7FC130E133C0170130C49131C484813184848133848C71278D80EC013F0380FFE03391F
3FFFE0D8381F13C0486C1380D86007130038E003FE38C000F020227DA024>122
D E /Fc 2 112 df<D91FE0ECFFF0D97FFC010713FE496C011F6D7E489026FF807F8048
6EB67ED807F101C101817FD80FE1903AE3FC007FF801E0EBFFF048484A800480133F4848
91C7FC01815B127F01015B5D4949147F12FE5DA24916FF0000605DA2495D615D5F495FA2
92C75A615B5F4A5EA2017F4B147EF100FE5C5F01FFEEFE01057F14FC4A15FCF103F85A95
38F807F05CF10FE048F01FC0053F133F4AEEFF8071B512004A6E5B6C496E13F86C90C800
015B017E9238007F80473776B54E>110 D<923807FFC0037F13FC0203B6FC020F15C002
3F8191B5000313F8499039F8007FFC010701E0133F4901806D7E4990C76C7E4948168049
5A4948804818C0485BA2485BA248494A13E05AA2485BA24D13C05A91C8FCA25FB517805B
A25F19005B6017FF605E60495E5E6C6C4A5B604C5B003F4B90C7FC6D4A5A001F4B5A6C6C
4A5A6CD980035B6CD9F01F13C06C90B65A6C4BC8FC013F14F0010F14C0010001F8C9FC3B
3773B547>I E /Fd 5 115 df<121C127FEAFF80A213C0A3127F121C1200A412011380A2
120313005A1206120E5A5A5A12600A19798817>59 D<EB03F0EA01FFA3EA00075CA3130F
5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED783801FEEBE0F89039FC01C1FCEC
0383EC07070001130ED9F81C13F891383803F091387001E0000349C7FCEBF1C0EBF38001
F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E141F001F80D9800F1330A2167000
3F011F136001001380A216E04815C0007E1481020F1380158300FE903807870048EB03FE
0038EB00F8263B7CB92B>107 D<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781F0
0F03E03D1C3E1E00F83C01F026383F38D9FC707F00304914E04A90387DC000007049EB7F
8000604991C7FCA200E090C700FE1301485A017E5CA200000201140301FE5F495CA20303
1407000160495C180F03075D1203494A011F13601980030F023F13E00007F000C0495C19
01031F023E1380000F1803494A150061033F150E001FEF1E1C4991C7EA0FF80007C7000E
EC03E043267EA449>109 D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826
383F387F00305B4A137C00705B00605BA200E090C712FC485A137EA20000140101FE5C5B
A2150300015D5B15075E120349010F133016C0031F13700007ED80605B17E0EE00C0000F
15014915801603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267EA432>I<3903E001
F83907F807FE390E3C1E07391C3E381F3A183F703F800038EBE07F0030EBC0FF00705B00
601500EC007E153CD8E07F90C7FCEAC07EA2120013FE5BA312015BA312035BA312075BA3
120F5BA3121F5B0007C9FC21267EA425>114 D E /Fe 2 84 df<1D7C52B4FC02304F13
8002786102F81BC04A611301495A4A1BE0130749488591CD7E5B011E86013E7413C0133C
017C1B7F137801F81B3F5B00011C1F491C8012035B12075B06701700000F17F890C9487E
1703481C1E121E4D5A1D3E003E1C3C123C4D5A1D7C007C1C7812784D4816F8651C0100F8
5F65053F16034E1507651C0F95C95B1C1F057E163F9AC7FC6C04FE5E040117FE4C6C1501
515A6C4B4C5A4C160F6C4B6D4A5A047F163F6D91B56C4A5A6D49D9BFE049485A6D01076E
01075BD87FF8011FD93FF8131F9027FF01FFFED9FF01B5C8FC91B500FC91B55A6C4B6C5D
04F05E636C4B6C5D6C03805E6C4B6C5D6C4A6D4AC9FC6C02F86D5C6C4A6D14F0013F0180
023F1380D90FFCC8D80FFCCAFC634E7DCB69>33 D<DF3FFE15380607B500E01478061F02
FC14F895B7FC050393388001F0050FD9E007EBC0034D48C7387FF007DD7FF091380FF80F
DDFFC0DA03FC13E04C90C80001131FDC07FE9238007E3FDC0FF8EE3F7F4C48041F13C04C
4817FF4C48824C48824B90CA14804C834B5A15074B487113005E151F5E033F725AA24B5A
A203FF615EA34A62A465A25C1C0170601C006E97C7FC82A28282826E7F707E6F13E017FC
6FEBFF8018F86FECFF806F15F06F15FF1AF0030116FC6F16FF7016C0041F827082040182
DC001F81050381DD003F80060381F0007F0707801900083F7F1A0F747F868686A2757EA3
1B3FA3131C013C191FA2137C6413781B3F13F864A300011A7F64A2515A120399C8FC6263
486C180363505A6D180F000F626D4E5A505A6E177F486D4D5A4F90C9FC6E4C5AD9F3F84C
5A263FE1FCEE1FF0D9E0FF4C5A9026C07FC0EDFFC09026803FF002035B277F001FFEDA1F
FECAFC007E903B0FFFF001FFFC020390B612F0007C010016C048023F92CBFC48020314F8
0060DA001F1380657E78F968>83 D E /Ff 2 42 df[<1638167816F0ED01E0ED03C0ED
0780ED0F00151E153E5D5D4A5A4A5AA24A5A4A5A141F92C7FC143E147E147C14FC495AA2
495AA2495AA2495AA2495AA2133F91C8FC5B137EA213FE5B1201A25B1203A3485AA4485A
A4485AA5123F5BA5127FA390C9FCA65AB3A87EA67FA3123FA57F121FA56C7EA46C7EA46C
7EA312017FA212007F137EA2137F7F80131FA26D7EA26D7EA26D7EA26D7EA26D7E147C14
7E143E8081140F6E7E6E7EA26E7E6E7E157C81151E81ED0780ED03C0ED01E0ED00F01678
1638>37 172 113 256 61 40 D[<12E07E12787E7E7E6C7E6C7E7F6C7E6C7E137C7FA2
7F6D7E8013076D7E801301806D7EA2147EA280A26E7EA26E7EA2811407811403A2811401
81A2140081A3157FA4ED3F80A4ED1FC0A516E0150FA516F0A31507A616F8B3A816F0A615
0FA316E0A5151F16C0A5ED3F80A4ED7F00A415FEA35D1401A25D14035DA214075D140F5D
A24A5AA24AC7FCA2147EA25CA2495A5C13035C495A130F5C49C8FC133EA25B5B485A485A
5B485A48C9FC121E5A5A5A5A>37 172 120 256 61 I E /Fg 1
1 df<007FB81280B912C0A26C17803204799641>0 D E /Fh 1 50
df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D E /Fi 1 1 df<B712FEA327037A8F34>0 D E /Fj 8 117 df<1238127C12FE12FFA2
127F123B1203A31206A3120C121812381270122008127A8614>59
D<4AB41308020FEBE01891397F80F038903A01F8001870D903E0EB0CF0D90F80130749C7
1203013E15E05B491401485A484815C0485A120F5B001F168090C8FC4892C7FCA2127EA4
127C12FCA21606007C5DA35E007E5D123E5E6C5D6C6C495A00074AC7FCD803E0130E6C6C
13383900FE01F090383FFFC0D907FCC8FC2D2A7DA830>67 D<D93FFC903801FFF8800101
9138001F006E141E170C902603BF80131C1718EC1FC0A2496C6C1338173090380607F0A2
90260E03F81370176090380C01FCA290261C00FE13E05F0118137FA20138EB3F81031F5B
013014C1150F017014E3030790C7FC016014F3150301E014FF6F5A5B15001201167C5B48
6C143C1207D8FFFC1418A235287DA735>78 D<91381FE0089138FFFC18903903E01E3890
390780077090390E0003F0491301491300017814E0137013F0A2000115C0A216007F7F6C
B47E14F86DB47E6D13F06D7F01077F01007F1407EC00FF153F81A3001880A20038141E12
300038141C153C00781438007C5C007E5C0077EB03C026E3E00FC7FC38C0FFFE38801FF0
252A7CA829>83 D<EB0FE0EB3FF8EBF81C3801E00E3803803E0007137EEA0F00001E137C
123E003C1300127CA25AA45AA31404140C0078131814306C13E0381E07C0380FFF00EA03
F8171B7C991E>99 D<133EEA07FEA2EA007CA213FCA25BA21201A25BA21203EC07809038
E01FC0EC38600007EB61E014C3EBC187EBC307D80FC613C09038CC038001B8C7FC13E048
7E13FEEB3F80EB0FC0486C7E1303003E1460A2127EECC0C0127CECC18012FC903801E300
38F800FE0070137C1B297CA723>107 D<EB0FE0EB7FF8EBF03C3801C00E0003131E3807
803EA2143C000F1318EBE0006CB4FC14C06C13E06C13F06C13F813071301EA3C00007E13
78A24813F05A387001E0EB03C0383C0F80381FFE00EA07F8171B7C991F>115
D<131C133EA25BA45BA4485AB512E0A23801F000485AA4485AA4485AA448C7FC1460A214
C0123EEB0180EB0300EA1E06EA1F1CEA0FF8EA03E013267EA419>I
E /Fk 5 109 df<49B4FC010F13E0017F13FC9038FF83FE4848C67E4848EB7F804848EB
3FC04848EB1FE0A2001F15F0A24848EB0FF8A3007F15FCA500FF15FEB3007F15FCA4003F
15F8A26D131F001F15F0A2000F15E06D133F000715C06C6CEB7F806C6CEBFF003900FF83
FE6DB45A011F13F0010190C7FC27387CB630>48 D<DB3FFCEB01C00203B5EAC003021FEC
F00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF0804948
80485B48177F4849153F4890C9FC181F485A180F123F5B1807127FA24993C7FC12FFAD12
7F7FF003C0123FA27F001F1707A26C6C1780180F6C6D16006C6D5D6C173E6C6D157ED97F
F85D6D6C4A5A6DB44A5A010701C0EB0FE06D01FCEBFF80010090B548C7FC021F14F80203
14E09126003FFEC8FC3A3B7BB945>67 D<DB3FFCEB01C00203B5EAC003021FECF00791B6
EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF080494880485B48
177F4849153F4890C9FC181F485A180F123F5B1807127FA24993C8FC12FFAB043FB61280
A2127F7FDC0003EBC000123FA27F121FA26C7EA26C7F6C7F6C7F7ED97FF85C6D7E6DB45C
010701C05B6D01FCEBFF3F010090B5EAFE0F021FECF8030203ECE0009126003FFEC9FC41
3B7BB94B>71 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F
7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3F
F85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF8
0F39003FE0032A257DA42E>97 D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>
108 D E /Fl 13 122 df<0103B712FC010F16FF133F5B90B9FC4817FE4817F82707F800
1EC8FCEA0FC0495B48C7FC123E003C147C5A4814785A15F8C8FCA24A5AA31403A25D1407
A44A5AA3141FA25D143FA44AC9FCA35CA3495AA45CA2EB00F038347CB233>28
D<F101E00106EF07F0010EEF0FF8131E49171F1AFC5B0170170F01F01707484817035B00
031801491700000719F890CCFC1A785A000E151C001E033E1570001C157EA21AF0003C4B
15E01238A2190100784A4815C0127019034C1580190715034CEC0F006100F8181E4B4814
3E614B6C14FC6C021F4A5A007C023F1403007E4A6C495A03FF4A5A007F01036D133F9027
C00FFBFCEBFFC09028F8FFF9FF8F5B6CB500F190B5C7FC03E15C6C02C05C4B5C6C49486C
13E06C496D5B000101F06D90C8FC26007F80EB07F846357FB349>33
D<120FEA3FC0EA7FE012FF13F0A213F8A3127F123FEA0F381200A513781370A313F013E0
A2120113C0120313801207EA0F00121EA25A5A12300D23768B21>59
D<1738177CA217FC17F8A2160117F0A2160317E0A2160717C0A2160F1780161F1700A25E
163EA2167E167CA216FC5EA215015E15035EA215075EA2150F5EA2151F93C7FCA25D153E
157E157CA215FC5DA214015DA214035DA214075D140F5DA2141F92C8FCA25C143EA2147E
147CA214FC5CA213015C13035CA213075CA2130F5CA2131F91C9FCA25B133E137E137CA2
13FC5BA212015BA212035BA212075B120F5BA2121F90CAFCA25A123EA2127E127CA212FC
5AA212702E787AD93B>61 D<020FB600E090B612FEA4DA00070180C8387FF8006F90C96C
5A4C5F0307177F645EA2030F17FF645EA2031F5E99C7FC5EA2033F5E635EA2037F160763
5EA203FF160F635EA24A171F6393C9FCA24A173F6393B8FCA25C6303FCC9127FA2020F17
FF635DA2021F5E98C8FC5DA2023F5E625DA2027F1607625DA202FF160F625DA249171F62
92C9FCA249173F625CA20107177F625CA2010F17FFA2D93FFE03037F007FB60107B612F0
B75BA24B5F5F527AD161>72 D<4CB46C1338041F13F0047F01FC13704BB613F0922607FE
001381DB1FE0EB1FC3DB3F80903807E7E0037EC7EA03F74A48EC01FF4A48804BED7FC04A
48153F4A5A4A5AF11F804AC9FC147EA202FEEE0F005CA30101170EA3191E191CA26E93C7
FCA280816D7F8115F86EB4FC16F06E13FF6E14E06E14FE6E6E7E020115E06E6C80031F80
030180DB001F7F04037FEE003F05077F83170085187F183FA2181FA3EA0380A3120761A2
90CAFC48173F96C7FCA26D167E121F60A26D4B5A003F4C5A6D4B5A6D4B5A6D151F486C4B
5A017E037EC8FC267E3F80495A267C1FE0EB07F826F80FFEEB3FE00103B65A48C64AC9FC
48011F13F848010113C045567AD348>83 D<EF07F0EF1FFE94387FFF809438FC0FC09338
01F807933903F01FE0933807E03F040F137F17C0161F19C0163F19809438801E00047F90
C7FCA316FF94C8FCA45D5EA415035EA41507023FB612C0A491260007F8C8FC150F5EA415
1F5EA4153F5EA4157FA25EA415FF93C9FCA45C5DA414035DA54A5AA54A5AA45D141FA35D
A2143F5DA3000F49CAFCEA3FC0007F137EA200FF5BA2EBC1F8EB81F01303387C07E0387E
0FC06CB4CBFCEA0FFEEA03F83B6C7AD33A>102 D<EC1FF0EB3FFF495BA3EB007F5D143F
147FA25DA314FF92C9FCA35B5CA313035CA313075CA3130F5CED03FE92381FFFC0011F01
7F13F09139E0FC07F89139E3E003FC9139E7C001FED93FEFC7FC02DE8014FC5C495A5CA2
5C495AA291C8FC5E485E5BA2160300035E5BA2160700075E5B160F5F120F49141F5FA200
1F033F13074915C0167FEF800F003F170E4914FFEF001E181C007F173C494A1338187818
7000FF17F090C8EB01E093387E03C093383F0F804892381FFF00EE0FFC0078ED03F03854
79D243>104 D<EC1FF0EB3FFF5D5BA2EB007F5D143F147FA25DA314FF92C9FCA35B5CA3
13035CA313075CA3130F5C177E933803FF80011F020F13C04A90381F03E0EE7C019338F0
07F0013F903801E01F9139C003C03FED078092380F007F017F131E4A4814E05D4BEB3FC0
9026FF81E0EB0F004A4890C7FC4A5A4AC9FC48131EEBFE7CEBFFF05C487F14FF15C09038
FC7FF00007EB0FFC9038F803FE6E7E6E7F000F147F4980153FA2001FEE03805BA2170700
3F027F1400491480A25F007F160E49151E171C153F00FF5E90C714786F6C5A92380FE1E0
486EB45A03015B0078DA007EC7FC345479D23D>107 D<013EDA07FCEC07FCD9FFC09026
3FFF8090383FFF8000036D90B500E090B512E0903FC3F003F80FF001F80FF0400783F807
C007F807C007F8400F01FC1F0003FC0F8003FC000E023E010190381E0001001ED9FE784B
80001C4A6E5A4B5D003C6D486E5A0038605DD8780390C75C007095C7FC5C4A5DD8F00703
0315034E5D00005BA2010F03071507644A5DA2011F030F150F644A5D1B1F013F031F5EA2
4A4B143F64017F153F097F130E4A4B15801BFF01FF037FEE001E1D1C91C8495B51133C48
04FF17381D784993C74913701DF000034B18E01C01494BEE03C00800EB078098387E1F00
494BED3FFE755AD801E0DA00F0ED07E05F357DB366>109 D<013FEC0FF8D9FFC0EB7FFF
00036D48B512C0903BC3F803F01FE0D8078190390F800FF03C0F01FC1F0007F8000E023C
1303001E6D4880001C5C6E5A003C5C00385CA2D8780390C7FC00705BA25CD8F007150760
00005BA2010F150F605CA2011F151F605C173F013F5EA24A147F60137F05FF131C4A1500
5E01FF4B133C193891C712034D137848187019F0494B13E01801000318C0180349EE0780
0401EB0F00933800FC3E49ED7FFCEF3FF0D801E0ED0FC03E357DB346>I<EC01C0EC07F0
140FA2141FA25DA2143FA25DA2147FA25DA214FFA292C7FCA25BA25CA2007FB612F0B7FC
16E0A2260007FCC7FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA25CA213FFA291
C8FCA25AA25BA21203ED03805B150700071500A2495B150E151E5D15384913785D6D485A
0003495A4A5A2601FC1FC7FC3800FFFEEB3FF8EB0FE0244C7ECA2A>116
D<EB0FE0D93FF815E0496CEC03F8D9F07E14073801E07F48486C140FD807806D14F0EA0F
00000E137F001E161F001C17E0123C003813FF92C7123F007817C0EA70015C00F0167F01
03168000005B13074A14FF1800130F5C5E011F5D5CA21603013F5D5CA21607017F5D5CA2
160F5FA3161F5F163F013F147FA26E495A011F13036D6C5A903807F81F903A03FFFE7F80
010013F8EC1FE091C712FF94C7FCA25D5EA2D807E0495A487E001F4A5A123F4B5A4B5A5E
49495A018049C8FC003CC712FE4A5A6C495A6CEB0FF09038E03FC00003B5C9FCC613FCEB
3FE0354C7DB339>121 D E /Fm 4 84 df<180E0118163F0138EE7F805B016016FF01E0
167F485A49163F0003171F90CAFC48170F1206000E1707120C1900001C14060018140FA2
0038021E14061230A2180E00704A140C1260181C181803381438157800E002705CA203F0
5C6C010114014D5A14030078496C495A020F141F007CD91F7C49C7FC007ED97E7E137E3B
7F83FE7F03FC6CB4486CB45A02F85C6C496C5B6C01C05C6CD9000790C8FCD801FCEB01F8
392D7FAB3D>33 D<4CB46C1318043F01F013384BB512FC0307D9007E1378DB1FF090380F
80F0DB7F80EB03C1DA01FEC7EA01C34A48EC00E7DA0FF0ED7FE04A48153F4A5A02FFC912
1F494817C04948160F495A130F4A178049481607495A137F4948170091CAFC5A485A1906
485AA2485A96C7FC121F5BA2123F5BA3127F5BA4485AA419C0A2180161127F180396C7FC
6018066C6C160E601818001F17386D5E000F5F6D4B5A6C6C4B5A00034CC8FC6C6C150E6C
6C153C017F5DD93FC0EB01E0D91FF0EB0FC0D907FE017FC9FC0101B512FCD9003F13E002
0790CAFC45487CC546>67 D<91B87E19F019FC02009039C00007FF6F489038007FC003FF
ED1FE0737E93C86C7E737E19014A707E5D1A7FA20203EF3F805DA21BC014075DA3140F4B
17E0A3141F4B17C0A3143F4B167FA3027F18804B16FFA302FF180092C95A62A24917034A
5F19076201034D5A5C4F5A620107173F4A5F4FC7FC19FE010F4C5A4A15034E5AF00FE001
1F4C5A4A4B5A06FFC8FC013FED01FCEF0FF84AEC3FE001FF913803FF80B848C9FC17F094
CAFC4B447CC351>I<9339FF8001800307EBF003033F13FC9239FF007E07DA01F8EB0F0F
DA07E09038079F004A486DB4FC4AC77E023E804A5D187E5C495A183C495AA213074A1538
A3130F183080A295C7FC806D7E8014FF6D13E015FC6DEBFFC06D14FC6E13FF6E14C0020F
80020314F8EC003F03077F9238007FFE160F1603707E8283A283A21206A4000E163EA212
0C177E001E167CA25F5F003F15014C5A6D4A5A4C5A486C4AC8FC6D143ED87CF85CD8787E
495A3AF01FC00FE0D8E007B51280010149C9FC39C0003FF039487BC53C>83
D E /Fn 11 85 df<6C130800E0133800F813F8383E03E0381F07C0380FDF803803FE00
6C5A6C5A1320150A76B42A>20 D<15301578B3A6007FB812F8B912FCA26C17F8C80078C8
FCB3A6153036367BAF41>43 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E
007FB512F0A31C3879B72A>49 D<007FB812F8B912FCA3CCFCAEB912FCA36C17F836167B
9F41>61 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA202
1C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F16
7FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201
486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B812FCA30001903880000F
6C90C71201EE007E173E171E170EA31706A317078316C0A394C7FCA31501A21503150F91
B5FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380A21707A2170F
173F177F486D903807FF00B9FCA333397DB839>69 D<EC03FF021F13E09138FE01FC9039
01F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E00
03167F4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300
FF17FCAC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F00
0317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7
FC903900FE01FC91381FFFE0020390C8FC363D7BBA41>79 D<B712C016F816FE00019039
8001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2
EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB8
39>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA2
83A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00
FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A040113
06933800FE0ECAEA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B5128139
03F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC
1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680
013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501
A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39
E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E00
01FE130348EE01F00078160000701770A300601730A400E01738481718A4C71600B3B091
3807FF80011FB612E0A335397DB83C>I E /Fo 23 120 df<003FB512C04814E0A215C0
A2B6FCA215806C14001B09789726>45 D<EB0F80EB3FE0EB7FF013FF5AA25AA314E0A26C
13C06C1380EB7E0090C7FCACEA07E0EA1FF0487E487EA212FFA35BA25B5B6C5A001FC7FC
142875A720>58 D<DC1FFEEB01C00303B538C003E0031F9138F007C0037FECF81F0203B6
EAFC3F4A9039FC03FE7F021F903AC0007FFF804A90C77EDAFFFC804901F0804901C06E13
00495B4990C87E495A49485E4948150113FF5C48495E5A5C5A4A5E5AA24890C95B95C8FC
485AA3127F5BA312FF5BA45BA2180F60A360183E187E187C18FC007F4C5A6D5E1703003F
4C5A6D4B5A6C6C4B5A000F047FC8FC6C6C6C14FE6C6DEB03FC6C01F0EB0FF86C01FFEBFF
E06D90B55A011F92C9FC010714FC010114E0D9001F90CAFC434271BF4B>67
D<49B500FC0407B512C0496E4C14E0635114C0A2D900014E90C7FC1BF74A6D93B5FC9738
01EFFE03F7EE03CFA20207EF079F97380F1FFC15E703E36D141E020FEF3C3F6403C31678
A2021FEFF07FDF01E05B03817FF103C0023F93380780FF6403014B5A191E027F5F6F6D01
3C5C027E1678A202FE4C5A644AED01E093397FF003C0010160DE078091C8FC4AED0F00A2
0103041E5B4E5C4AEB3FF86001074C131F634AECF9E0EFFBC0010F183F70B4485C5C95C7
FC011F4B147F634A5C5F013F020F15FF017F4B5D007FB500804948B612F0B600C04A8103
8001C05E1780EE0700633E79BD62>77 D<EE3FFC0303B512C0031F14F8037F80913A01FF
E01FFF0207D900031380DA1FFC6D13C04A486D13E0DA7FE0EC7FF04A48EC3FF801034914
1F4990C813FC5C010FEE0FFE495A495A137F4A16FF13FF485BA2485BA2485BA2485F91C9
FC5AA219FE4848163FA44848EE7FFCA319F818FF5B00FF18F05F19E05F19C05F1980007F
5E19004D5AA24D5A6C6C4B5A4D5A001F4B5B6D4A5B6C6C4A5B4C90C7FC6C01C0EB3FFE6C
6DEBFFF86CD9FC075B6C90B612C0013F92C8FC010F14FC010314E09026003FFCC9FC4042
72BF4E>79 D<DB07FE131C92393FFFC03E4AB5EAF07E4AECF8FC020F14FD91391FFC07FF
91383FF000DA7FC0EB3FF84A48131F4990C7FC4A140F010316F04A14071307A2494815E0
A3131F18C08018806E91C7FC6E7E15F8EDFF8016F816FE6D6E7E836D81836D817F6D8114
3F020F801401EC001F1501ED003F161F160FA2D8078014077F000F5E5BA2160F001F5EA2
5F6D141F003F5E163F6D4A5A6D4A5A486C4990C7FC01FF495A9138E01FFC6DB55AD8FE3F
14E0486C5CD8F00391C8FC39E0007FF0374278BF3B>83 D<EC0FF8ECFFFE0103EBFF1F49
ECBF8090391FFC1FFF90263FF00713C049487EEBFFC048496C1380481300485C5B000F16
005B001F5CA248485CA2150F127F495CA2151F12FF495CA2033F133C177C4914F0A2157F
17F8007F15E015FF6C6C48EBE1F05C261FF00F13E3260FF83FEBE7E06CB5389FFFC06C02
0F13806CD9FC0313003A003FE000FE2E2A77A836>97 D<EC07FE91383FFFC049B512E049
14F0010FEB07F890381FF80390393FF007FC9038FFC00F48EB801FA2481300484814F812
0F4914F0001FEC0FE0ED0780484890C7FCA3127F5BA312FF5BA55B007F153016786D14FC
1501003FEC03F86C6CEB0FF06DEB7FE03A0FFE03FFC00003B612006C14FC6C6C13F0010F
90C7FC262A77A830>99 D<EE01FF93B5FC5DA492380007FEA2160FA217FCA2161FA217F8
A2163FA217F0A2167FA2DA0FF813E0ECFFFE010390B5FC5B90261FFC1F13C090383FF007
49487EEBFFC048496C1380481300485C5B000F16005B001F5CA248485CA2150F127F495C
A2151F12FF495CA2033F133C177C4914F0A2157F17F8007F15E015FF6C6C48EBE1F05C26
1FF00F13E3260FF83FEBE7E06CB5389FFFC06C020F13806CD9FC0313003A003FE000FE30
4077BE36>I<EC07FE91387FFF8049B512E0010714F049EB07F890383FF801D97FE013FC
9038FFC000485B4890C7FC4814014914F8120F491303001FEC07F0ED1FE04848EBFFC001
F9B5128090B612004814FC15C091C8FC13F0A25B12FFA2127FA31630167816FC003F1401
ED03F86C6CEB0FF06C6CEB7FE03A07FE03FFC06CB612006C14FC6C6C13F0010F90C7FC26
2A77A830>I<4AB4FC020F13C0023FEBE3E091B5EAF7F049EBC3FF49010013F8D907FC13
7F4948133F011F15F0495A4948137FA201FF15E05C4815FFA2484914C0A25D5A02001480
A25D5A491500A25DA25E5B0007140FA25E6C6C131F157F6C6C13FF6C01835B6DB5FC7F6D
13BF903903FE3FF090C7FC157FA25EA2D80F8013FF487E486C5C486C5A5E48485A4A90C7
FC4A5A49485A397F807FF86CB512E06C14806C49C8FC000113E02D3C7BA830>103
D<49B4FC90B5FC5AA4380007FEA2130FA25CA2131FA25CA2133FA25CA2137FA29138E07F
E09138E3FFF8D9FFEF13FE91B6FC03C113804AC6FC484914C014F05C5C5A5C91C7FCA248
5CA2491580A2000F5C17005B5D001F5DA249130F5E003F160F031F131F4914F8A2007F02
3F133FEEF03E5B177C00FFEDE0FC17F849ECE1F0ED1FE7EEFFE0496D13C06CC700031300
003EEC00FE304079BE36>I<143E147FECFF805B5BA46D13005CEB007891C7FCAC137F38
01FFC0487F487F380FC7F8EA1F87497E123EA2127C131F00FC5BEAF83FA25CEAF07F0000
5BA213FF5C5AA25C5A91C7FCA248EB0780EBFE0F120FA2EBFC1F001F140013F8143EA25C
380FF0FCEBF1F86CB45A6C5B6C5B6C6CC7FC194178BF20>I<EB01FEEA01FFA25AA27E38
000FFCA2131FA214F8A2133FA214F0A2137FA214E0A213FFA214C0A25AA21480A25AA214
00A25AA25BA2120FA25BA2121FA25BA2123FA25BA2007F137814F813E0A2EAFFE114F013
C1A2EBC3E0A2387FC7C013CF383FFF806C1300EA07FEEA01F8174079BE1B>108
D<D801FCD903FEECFFC048B490271FFFC00713F048D9C07FD9F01F13FC486DB56C487F3E
1F9FE3FC0FFC7F83FF283F1FF7F007EBFC01003ED9FFC0D9FFF81480038014E0007C0200
14C04A15805C48484815005F5C017F020F5C12F00000494A1500A201FF021F5C624A5C19
0F48033F5DA24A4A131F6248037F161E073F133E91C74914F0A24803FF027F137EF2E07C
495DF2C0F8000F5CF2C1F0494BECC3E0F13FCFF2FFC04992C76C13806C486D48913807FE
006C48027CEC01FC4F2A78A856>I<D801FCEB07FE48B490383FFF804801C0B512E04801
E1803B1F9FF3FC1FF890391FF7E00F003ED9FFC07F1500007C5B5CA248485A5CA2017F14
1F12F00000495CA201FF143F5F5C167F485EA24A13FF5F4817F04B13C102001481A2484A
1383EF03E05BEF07C0000FEDFE0F188049ED1F000301137FEEFFFE496D5B6C48EC3FF06C
48EC0FE0342A78A83B>I<913803FF80023F13F091B512FC010380010FEB03FF90261FF8
0013804948EB7FC0D97FC0EB3FE0495A4816F04890C7FC4848141F000F16F849143F121F
A2485AA2167F007F16F05BA216FF00FF16E05BA24B13C0A21780495B007F16006D495A4B
5A003F5D4B5A6C6CEB7FE06C6C495A2607FE075B6CB548C7FC6C14F86C6C13E0D90FFEC8
FC2D2A77A836>I<D907F0EB7FC0903A0FFC03FFF890261FFF0F7F49019F7F903A7E7FFF
C1FF01FC0200138001F801FCEB7FC05DD801F049EB3FE05D02FF15F0485A5DA201E1157F
13C1D800015BA24915FF18E092C7FCA2495C18C05CA2010F4A1380A24A15005E011F5D16
0F4A5C4C5A496C495A4C5A6E495ADAFF835B49D9FFFEC7FC5E02E713F002E190C8FCD9FF
E0C9FCA25CA25AA25CA25AA291CAFCA2007F13FCB5FCA35C343B7EA836>I<D801FCEB3F
E048B4EBFFF84801C313FE4801E77F3B1F9FFFE07F80011FEB803F003E9138007FC04A13
FF007C495A14F8A2D8F83F49138014F06F1300017F6D5A00F0157C00004990C7FCA213FF
A25CA25AA25CA25AA291C9FCA25AA25BA2120FA25BA35B6C5A6C5A2A2A78A82E>114
D<EC3FF0903801FFFE01077F49148090391FF03FC090393FC00FE090387F001F153F01FE
137FA3000115C0A26DEB3F809138C01E0002FEC7FCECFFC015F06C806D7F817F010F7F13
03EB001F00031303381FC001486C7E487E8100FF5C495BA24A5A13C06CC6485AEC0FF039
3FC03FE06CB55A6C5C000349C7FC38007FE0232A78A82C>I<147C14FE1301497E5BA25C
A2130FA25CA2131FA25CA2133FA25C007FB512F0B612F815F0A27EC6EBE000A25CA25AA2
5CA25AA291C7FCA25AA25BA2120FA25BA2001F14F0140113F8140315E0003F130701F013
C0140FEC1F80001FEB3F00147EEBF1FC6CB45A6C5B00015B6C6CC7FC1D3C78BA23>I<13
3FD9FFE0EB03E000036D497E486D497ED80FE7141FEB87FCD81F07143F003F5EEA3E0F12
7C167FD8FC1F5D00F85BA2013F14FF00F0495C1200137F4A5A01FF5D14C0A25D4893C7FC
1480A24BEB078048EDFE0F1400A2150FEF1F0016FCA26C021F133E153F6CD9807F5BDAC3
FF13FC903A7FFFFBFFF86D01E15B010F9038C07FE0903A03FE001FC0312A78A838>I<01
7FEE03E0D9FFC0903907C007F8000301F090380FE00F486D90391FF01FFCD80FE7143FD9
87FCED3FFED81F07147F003F16E0003E171FD87C0F160F04FFEB07FCD8FC1FEDC00300F8
491501A2013F49140000F001F04A13F81200137F4A48140119F001FF150014C04B140348
18E002805BA2F007C048140F02005BF00F80A2181F6C1800606E486C133E606C6D486C13
FCD97FF0B5EA83F890263FFFFCEBFFF06D496C5B0107D9E01F1380010090268003FEC7FC
3F2A78A846>119 D E /Fp 2 121 df<ECFF80010713E0011F13F0EB7FC79038FF0FF8EA
01FEA2EA03FCA2EC07F0EC00801500A5B512FCA4D803FCC7FCB3A4383FFFE0A41D2E7EAD
19>102 D<D8FFFEEBFFF8A4D803FCEB7E006C6C5B6D485A6CEB81F090387FC3E090383F
E7C090381FEF806DB4C7FC6D5A6D5A6D7E80497F497F497FEB1F9FEC0FF090383E07F849
6C7E496C7ED801F07F48486C138026FFF80113FCA4261E7E9D2B>120
D E /Fq 5 117 df<EC07FC91383FFF8049B5EAC7C049ECEFE0010F90380FFFF090261F
F8037F49487E49486C5B495A4849137F4815FF4890C75BA2485A5D001F5E5B123F5D007F
5E5BA25D00FF93C7FC5BA25D5E5BEF07C0031FEB0FE004FC13C0A25B171F033F148016F8
6C6C017FEB3F0015FF003F0103147E6C6C5A270FFC3FEF5B6CB538C7FFF86C02035BC649
C65BD91FF0EB3F80332E75AC3B>97 D<D93F80D93FF049B47E9028FFE001FFFE010F13F0
48D9F8079026FF803F13FC486D486E487F2807E3FE3FE09039E1FF07FF2C0FC3FF7F007F
F3F8037F018301FE90393FF7F001001F02F8ECFFC04B038080D83F0349150049495C127F
007E4A5C92C75B49037F5C00FE4D5D007C5B1200011F03FF5C99C7FC4A5DA2013F4A5D63
4A5D1A1F017F4A5EA24A4B133F9838F80F8001FF4A037FEB1FC009F013804A92C7FC1AFF
484B9338E03F00A24A4A167E1BC048031F5FF3C1F84A4A15C397387FC7F074B45A91C749
6E5B6C486E486E90C7FCD800F8DA07C0EC03FC5A2E79AC5E>109
D<D901FCEB0FF8D907FFEB7FFF4901C0B512C04901E314E0903B3F1FF7FC3FF0017E9039
FFE00FF89338C007FC01FC020013FE5DD801F849EB03FF143F00035C13F05F147F1207D8
03E05BC7FC02FF5CA25DA2495DA24B14FEA249153F18FC5D18F849157F18F092C7FCEFFF
E05B4C13C04A15806E491300494A5A6F485A6F485A9238F0FFF04990B512C05F02F901FC
C7FC9138F83FE0017F90C9FCA25CA213FFA25CA25AA25CA25A007F13FFB6FCA36C5B3840
7EAC3B>112 D<EC07FF023F13E091B512F04914F8903903FE03FC903907F000FE90390F
E001FF49485A4A5A133FA2017FEB0FFEA2ED07FC02C013F89138F003F002FFC7FC15F815
FEEDFF806D14C06D14E016F07F010314F81300020F13FCEC007FD807C0131FD80FF01307
121F486CEB03F8127FA21507484814F0A26C48EB0FE049EB1FC090C7EA3F80D83FC0EBFF
00391FF807FE6CB55A6C14F0000114C026003FFEC7FC282E78AC31>115
D<143FEC7F8014FF4913C0A35B1580A35B1500A35B5CA3131F5C007FB512FEB7FCA215FE
7E39003FF800137F5CA313FF5CA35A5CA35A5CA35A91C7FCA35A5B153E157F001F147E5B
15FE15FC003FEB01F8EBF80315F0001FEB07E0EC0FC0EC1F80000FEB7F003807FFFE6C5B
6C13F038003FC0204177BF26>I E /Fr 2 50 df<B712C0A322037A8D30>0
D<01FEEC0FE02603FFC0EB3FF8000F01F0EBFE3E3B1F0FF801F0073C3C01FC07C003803B
3000FE0F00010070D93F1EEB00C00060EB1F9C00E0D90FF81460485C14076E7E6E7E8102
0315E00060D9073F14C091390F1F80016C90261E0FE01380003890397C07F0073C1C01F0
03FE1F003B0F8FE001FFFE3B03FF80007FF8C648C7EA0FE033177C953D>49
D E /Fs 7 54 df<1438B2B712FEA3C70038C7FCB227277C9F2F>43
D<13FF000313C0380781E0380F00F0001E137848133CA248131EA400F8131FAD0078131E
A2007C133E003C133CA26C13786C13F0380781E03803FFC0C6130018227DA01E>48
D<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>I<EA01FC3807FF8038
1C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013FCC7FC14F8A2EB01F0
EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600185A5A383FFFF85AB5
12F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F8003E13FC147CA2001E13
FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00F01478147C143E143F
1230127812FCA2143E48137E0060137C003813F8381E03F0380FFFC00001130018227DA0
1E>I<14E01301A213031307A2130D131D13391331136113E113C1EA01811203EA070112
06120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFFA218227DA11E>I<00
101330381E01F0381FFFE014C01480EBFE00EA1BF00018C7FCA513FE381BFF80381F03C0
381C01E0381800F014F8C71278A2147CA21230127812F8A214784813F8006013F0387001
E01238381E07803807FF00EA01F816227CA01E>I E /Ft 46 126
df<1430147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F85B12015B1203A2485A
A3485AA3121F90C7FCA25AA3123EA2127EA6127C12FCB3A2127C127EA6123EA2123FA37E
A27F120FA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB03C01301EB00E014
7014301462738226>0 D<12C07E12707E123C7E7EA26C7E6C7EA26C7E7F12007F137813
7CA27FA37FA31480130FA214C0A31307A214E0A6130314F0B3A214E01307A614C0A2130F
A31480A2131F1400A3133EA35BA2137813F85B12015B485AA2485A48C7FCA2121E5A1238
5A5A5A14627C8226>I<12F0B3B3B2043674811C>12 D<151E153E157C15F8EC01F0EC03
E01407EC0FC0EC1F8015005C147E5CA2495A495AA2495AA2495AA2495AA249C7FCA2137E
A213FE5B12015BA212035BA21207A25B120FA35B121FA45B123FA548C8FCA912FEB3A812
7FA96C7EA5121F7FA4120F7FA312077FA21203A27F1201A27F12007F137EA27FA26D7EA2
6D7EA26D7EA26D7EA26D7E6D7EA2147E80801580EC0FC0EC07E01403EC01F0EC00F8157C
153E151E1F94718232>16 D<12F07E127C7E7E6C7E7F6C7E6C7E12017F6C7E137EA27F6D
7EA26D7EA26D7EA26D7EA26D7EA26D7EA280147E147F80A21580141FA215C0A2140F15E0
A3140715F0A4140315F8A5EC01FCA9EC00FEB3A8EC01FCA9EC03F8A515F01407A415E014
0FA315C0141FA21580A2143F1500A25C147E14FE5CA2495AA2495AA2495AA2495AA2495A
A249C7FC137EA25B485A5B1203485A485A5B48C8FC123E5A5A5A1F947D8232>I<160F16
1F163E167C16F8ED01F0ED03E0ED07C0150FED1F801600153E157E5D4A5A5D14034A5A5D
140F4A5AA24AC7FC143E147E5CA2495AA2495AA2495AA2130F5CA2495AA2133F91C8FCA2
5B137E13FEA25B1201A25B1203A35B1207A35B120FA35BA2121FA45B123FA690C9FC5AAA
12FEB3AC127FAA7E7FA6121F7FA4120FA27FA312077FA312037FA312017FA212007FA213
7E137F7FA280131FA26D7EA2801307A26D7EA26D7EA26D7EA2147E143E143F6E7EA26E7E
1407816E7E1401816E7E157E153E811680ED0FC01507ED03E0ED01F0ED00F8167C163E16
1F160F28C66E823D>I<12F07E127C7E7E6C7E6C7E6C7E7F6C7E1200137C137E7F6D7E13
0F806D7E1303806D7EA26D7E147C147E80A26E7EA26E7EA26E7EA2811403A26E7EA28114
00A281157E157FA2811680A2151F16C0A3150F16E0A3150716F0A31503A216F8A4150116
FCA6150016FEAA167FB3AC16FEAA16FC1501A616F81503A416F0A21507A316E0150FA316
C0151FA31680153FA216005DA2157E15FE5DA214015DA24A5AA214075DA24A5AA24A5AA2
4AC7FCA2147E147C14FC495AA2495A5C1307495A5C131F49C8FC137E137C5B1201485A5B
485A485A48C9FC123E5A5A5A28C67E823D>I<B512F8A500F8C7FCB3B3B3B3B3B3B3B3B3
B3A8B512F8A515C66B822C>I<B512F8A5C7FCB3B3B3B3B3B3B3B3B3B3A8B5FCA515C67F
822C>I<12F012FCB4FC13C0EA3FE0EA0FF86C7E6C7EC67E6D7E6D7E131F806D7E130780
1303801301A2801300B3B3B3A38080A36E7EA281141F6E7EA26E7E6E7E816E7E6E7EED7F
80ED1FC0ED0FF0ED07F8ED01FEED007EA2ED01FEED07F8ED0FF0ED1FC0ED7F80EDFF004A
5A4A5A5D4A5A4A5AA24A5A143F5DA24AC7FCA35C5CB3B3B3A313015CA213035C13075C13
0F495A5C133F495A49C8FCEA03FE485A485AEA3FE0B45A90C9FC12FC12F027C675823E>
27 D<EE01E01603EE07C0EE0F80161F1700163E5E5E15015E4B5A15074B5A5E151F4BC7
FC153E157E5DA24A5A14035D14075D140F5D141F5D143F92C8FC5C147E14FE5C1301A25C
13035C1307A25C130FA2495AA3495AA3137F91C9FCA25B5BA312015BA31203A25BA21207
A35BA2120FA35BA3121FA45BA2123FA75B127FAC90CAFC5AB3B3A27E7FAC123F7FA7121F
A27FA4120FA37FA31207A27FA31203A27FA21201A37F1200A37F7FA280133FA36D7EA36D
7EA2130780A2130380130180A2130080147E147F8081141F81140F811407811403811401
6E7EA2157E153E153F6F7E150F826F7E15036F7E821500167C82821780160FEE07C0EE03
E016012BF86C8242>32 D<12F07E127C7E123F7E6C7E6C7E6C7E7F12016C7E7F137E133E
133F6D7E130F806D7EA26D7E80130180130080147E147F8081141F81140F81140781A214
0381140181A2140081A2157FA36F7EA382151FA282150FA3821507A382A21503A282A315
01A282A31500A382A482A21780A7163F17C0AC161F17E0B3B3A217C0163FAC1780167FA7
1700A25EA45EA31501A35EA21503A35EA21507A25EA3150F5EA3151F5EA2153F5EA34BC7
FCA315FEA25D1401A25D14035D1407A25D140F5D141F5D143F92C8FC5C147E14FE5C1301
5C13035C495AA2495A5C131F49C9FC133E137E5B5B485A12035B485A485A48CAFC5A123E
5A5A5A2BF87E8242>I<B61280A600FCC8FCB3B3B3B3B3B3B3B3B3B3B3B3B3A2B61280A6
19F86A8230>I<B61280A6C7121FB3B3B3B3B3B3B3B3B3B3B3B3B3A2B6FCA619F8808230>
I<EE03C0160F163F167F923801FF004B5A4B5AED0FF04B5A4B5A4B5A4BC7FC5C5D4A5A14
075D4A5AA2141F5DA24A5AA44A5AB3B3B3B214FF92C8FCA35B5CA2495AA25C13075C130F
495A5C133F495A49C9FC485A485A485A485AEA1FC0485AB4CAFC12FCA2B4FCEA3F806C7E
EA0FF06C7E6C7E6C7E6C7E6D7E6D7E131F806D7E130780130380A26D7EA2807FA381147F
B3B3B3B26E7EA46E7EA281140FA26E7E8114036E7E81806F7E6F7E6F7E6F7EED07FC6F7E
6F7E9238007FC0163F160F16032AF8748243>40 D<12F012FCB4FC7FEA3FE06C7E6C7EEA
03FC6C7E6C7E6D7E6D7E80131F6D7E8013076D7EA2801301A26D7EA46E7EB3B3B3B28114
3FA381141FA26E7EA21407811403816E7E1400816F7E6F7E6F7E6F7E6F7E6F7EED00FE16
7FEE3FC0160FA2163FEE7F0016FEED03FC4B5A4B5A4B5A4B5A4B5A4BC7FC5D14014A5A5D
14075D140FA24A5AA2143F5DA3147F5DB3B3B3B24AC8FCA4495AA213035CA2495A130F5C
495A133F5C495A49C9FC485A485AEA0FF8485A485AEAFF8090CAFC12FC12F02AF8748243
>I<177C17FCEE01F8A2EE03F0EE07E0EE0FC0A2EE1F80EE3F005E167E5E15015E15034B
5A5E150F5E151F4B5AA24BC7FCA215FEA24A5AA24A5AA24A5AA2140F5D141F5D143F5DA2
147F92C8FC5CA25C13015C1303A25C1307A3495AA3495AA3133F5CA3137F5CA313FF91C9
FCA35A5BA31203A25BA31207A35BA3120FA45BA2121FA65BA2123FA85BA2127FAE5B12FF
B3A62E95688149>48 D<12F87E127EA27E6C7E6C7EA26C7E6C7E7F12016C7E7F137E137F
6D7E131F80130F806D7EA26D7EA26D7EA26D7EA2147FA26E7EA281141F81140F811407A2
81140381A2140181140081A28182A36F7EA36F7EA382150FA3821507A3821503A3821501
A382A281A31780A3167FA317C0A4163FA217E0A6161FA217F0A8160FA217F8AE160717FC
B3A62E957E8149>I<B612F0A600FCC8FCB3B3B3B3B3B3B3B01C94668137>I<B612F0A6C7
1203B3B3B3B3B3B3B3B01C94808137>I<12FCB3B3B3B3B3B3B3B0B612F0A61C94668237>
I<EC03F0B3B3B3B3B3B3B3B0B6FCA61C94808237>I<12FCB3B3B00634668037>I<12FCB3
B3B006346A8037>I<EC01F01407140F143F147F903801FFC0491380491300495A495A49
5A495A5C495A485B5A91C7FC485AA2485AA2485AA2123F5BA2127F5BA412FF5BB3B3A71C
4B607E4A>I<12F812FE6C7E7F13F0EA3FF86C7E6C7EEA03FF6C7F6C7F6D7E6D7E806D7E
130F6D7E807F15807F15C07FA2EC7FE0A3EC3FF0A415F8141FB3B3A71D4B737E4A>I<EA
FFC0B3B3A77F127FA47F123FA27F121FA26C7EA26C7EA26C7E807E6C7F6D7E806D7E6D7E
6D7E6D7E6D13806D13C09038007FF0143F140F140714011C4B60804A>I<EC1FF8B3B3A7
143F15F0A4EC7FE0A3ECFFC0A25B15805B15005B5C495A131F495A5C495A495A485B4890
C7FCEA0FFE485A485AB45A13C05B48C8FC12F81D4B73804A>I<EC1FF8B3B3A7143F15F0
A4EC7FE0A315C014FFA2491380A215005B5C1307495A5C131F495A5C495A495A4890C7FC
485A485A485A485AEA7FE0EAFF8090C8FC12FCB4FC7FEA7FE0EA1FF06C7E6C7E6C7E6C7E
6C7F6D7E6D7E806D7E130F806D7E1303807F1580A26D13C0A2147F15E0A3EC3FF0A415F8
141FB3B3A71D9773804A>I<EAFFC0B3B3A86C7EA56C7EA36C7EA2120F7FA26C7E12037F
7E807E6D7E6D7E80131F6D7E6D7E6D7E6D7E6D1380EC3FE0EC1FF0140714031407141FEC
3FE0ECFF80491300495A495A495A495A133F5C495A495A5A91C7FC5A5B1207485AA25B12
1FA2485AA3485AA5485AB3B3A81C9760804A>I<EAFFC0B3A90A1B60804A>I<B47EB3A612
7F7FAE123FA27FA8121FA27FA6120FA27FA41207A37FA31203A37FA21201A37F7EA38013
7FA380133FA380131FA36D7EA36D7EA3130380A2130180130080A28081143FA281141F81
140F811407A26E7EA26E7EA26E7EA2157FA26F7EA26F7E150F821507826F7E1501821500
167E167F82EE1F80EE0FC0A2EE07E0EE03F0EE01F8A2EE00FC177C2E95688349>64
D<EE07FCB3A617F8160FAE17F0A2161FA817E0A2163FA617C0A2167FA41780A316FFA317
00A35DA25EA315035EA315075EA3150F5EA3151F5EA34B5AA34B5AA393C7FC5DA25D1401
5D1403A25D14075DA2140F5D141F5D143F5DA24AC8FCA214FEA2495AA2495AA2495AA249
5A5C131F5C133F49C9FC137E13FE5B485A12035B485A485AA2485A48CAFC127EA25A5A2E
957E8349>I<EAFF80B3B3B00934688049>I<EAFF80B3B3B00934598049>I<167F923801
FFC0923803C0F0923807803892380F007892381F01FC151E153EA2157E92387C00701700
15FCA44A5AA81403A45DA41407A94A5AAA4A5AA95DA4143FA492C8FCA7143E147EA4147C
123800FE13FC5CA2495A5CEA7803387007C0383C0F80D80FFEC9FCEA03F82E5C7C7F27>
82 D<BF12E08AA38A6C90CCFC0900806C6D19076C6D07007F6C6D1A1F1D076C6DF201FF
6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C06D6D1A01F600E06D7F6D6D1B706D1D30
816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E7F6E7FA26F7E6F7F6F7F
A26F7F6F7F81836F7F6F7F167F83707F707F8284707F707FA2707F82715A60173F715A60
4D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE4B5A4B5A4B5AA24B5A4B
5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4B1B70023F1C604ACF12E002FE
1B014948F303C049481B074948F30F801E1F49481B7F4948F3FF0049481A0349CE120F01
FEF37FFEF403FF48481A7F4848077FB55A48BEFC48655AA248655ABFFC666D747B7F78>
88 D<F107C0F11FF0F13C3CF17C0EF1F83E0601137FF1F0FF18036118071A7E95380FC0
3C1A00181F61A2183FA296C7FC60A3187E18FEA34D5AA4170360A31707A260A2170FA260
A3171FA360173FA44D5AA517FF95C8FCA35EA35FA21603A35FA21607A44C5AA5161F5FA4
163F5FA4167F5FA416FF5FA45D94C9FCA54B5AA54B5AA45EA2150FA35EA2151FA35EA315
3F5EA54B5AA493CAFC5DA35DA31401A25DA21403A25DA314075DA44A5AA35D141FA25DA2
143F92CBFCA25C147EA2003C5B127EB4485AA2495A5CEAFE07007C5B38700F80D83C1FCC
FCEA0FFCEA03F048B87B7F2E>90 D<B512E0A500F8C7FCB3B3B3B3B3B3B3ACB512E0A513
946E8227>104 D<B512E0A5EA0003B3B3B3B3B3B3B3ACB5FCA513947F8227>I<ED03C015
0F153F15FF02031300EC07FC4A5AEC1FE04A5A4A5A4AC7FCA2495A5CA213035CB3B3A613
075CA2130F5C131F5C495A137F49C8FCEA01FCEA07F8485AEA3FC0B45A48C9FCA26C7EEA
3FC0EA0FF06C7EEA01FC6CB4FC6D7E133F6D7E80130F801307A2801303B3B3A6801301A2
806D7EA26E7E6E7E6E7EEC0FF86E7E6EB4FC020013C0153F150F15032294768237>110
D<12F012FE6C7E13E0EA3FF0EA0FFCEA03FE6C7E6C6C7E6D7E6D7EA26D7E1307A2801303
B3B3A76D7EA28013008080816E7E6E7E6E7E6E7EEC01FC6EB4FCED3FC0150FA2153FEDFF
00EC01FCEC07F84A5A4A5A4A5A4A5A92C7FC5C5C13015CA2495AB3B3A713075CA2130F49
5AA2495A495A4848C8FC485AEA0FFCEA3FF0B45A138048C9FC12F02294768237>I<EE7F
80ED0FFF157F4AB5FC140F143F5C49B6FC13075B4991C7FC4913E090B5C8FC4813F84813
E014804848C9FC485AEA1FF0485A5B485A48CAFCA25A5A5A291B838925>122
D<B4FC13F813FF14C014F814FE8015C015F081C66C7F01037F9039007FFF80020F7F0203
7F1400ED3FF06F7EED07FC6F7E15016F7EEE7F80A2163F161F160F291B818925>I<12F8
7E7E7EA26C7E6C7E7F6C7EEA0FFC6C7E6C6C7E14E06C13F86C13FF013F13E06D13FF6DEC
FF807F13016D7E80140F14016E7E150FED007F291B839A25>I<EE0F80161F163F167FA2
EEFF004B5A15034B5AED1FF84B5AEDFFE01403020F5B027F5B902603FFFEC7FC017F5BB6
5A5D15C092C8FC5C14F814C091C9FC13F890CAFC291B819A25>I
E /Fu 19 123 df<EA07C013F0C67E137CA2133C133E131E131F7F80A26D7EA213038013
01801300801303EB077C130E497E1338EB701EEBE01F48487E00031480380F8007D81F00
13C0003E13034814E05A48EB01F04813001C247CA225>21 D<150E0002141F12065A001C
140F121848140714C0D8600113061303A3903807800C00E0141CEC001815386C48137039
701F81E0007FB5FC01FB13C0D83FF31380391FE1FE00380F80F820177E9527>33
D<127812FCA212FEA2127E1206A3120CA2121C121812301260124007107A8513>59
D<151815381578157C15FC1401A2EC037C14071406EC0C7EEC1C3E14181430A21460ECC0
3FA249487EEB0300A213065B010FB512805B903838000F13305B13E05B484814C0000314
0790C7FCD80F80130FD8FFE0EBFFFE16FC27247DA32E>65 D<D9FFE0EBFFF0A2D907F0EB
0F00160ED90DF8130C130C80147C01185C80A28001305CEC0F80A2EC07C001605C15E014
0315F0D9C0015B15F8140015FC4848EB7D80157F153FA248C76CC7FCA281EA0F80D8FFF0
1306A22C227CA130>78 D<EB0FE0EB7FF83801F03C3803C01C3807803C380F007C121E00
3E133814005AA35AA400781304140C00381338003C1370381F03E0380FFF803801FC0016
177E951C>99 D<EC03E0EC3FC0A21403A2EC0780A4EC0F00A4EB1F1EEBFF9E3801E0DE38
03807E3807007C48133C121E123E003C5B127CA3485BA215401560903801E0C012781303
393807E180391C1CF300380FF87F3807E03C1B247EA220>I<EB07C0EB3FE39038783780
3801E01FD803C0130080EA0780120FEB001E5AA3003E5BA3121E5C14F8EA0F0138078778
3803FEF0EA00F81300A2495AA21238387803C038F80780130FD8703EC7FCEA7FFCEA1FE0
19217E951E>103 D<13F8EA0FF0A21200A2485AA4485AA4380787E0EB9FF8EBB83CEBE0
1C380FC01E1380A21300001E5BA35C5AA2ECF0201530481460EB01E015C0A239F000E380
ECFF000060133C1C247CA224>I<1338137CA2137813701300A7EA0780EA1FC0EA38E012
30EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA1E0CA21318121CEA1E70EA0F
E0EA07800F237DA116>I<13F8EA0FF0A21200A2485AA4485AA43807801E147FEB81C3EB
8387380F060F495A1318EB700E4848C7FCA213FCEA1E7EEA3C0F80EB0781158039780F03
00A21402EB070600F0138CEB03F8386000F019247CA221>107 D<000F017E13FC3A1F81
FF83FF3B31C383C707803A61EE03CC039026EC01F813C0D8C1F813F013F001E013E00003
903903C0078013C0A2EE0F003907800780A2EE1E041706270F000F00130C163C1718A200
1E011EEB1C70EE1FE0000C010CEB07802F177D9536>109 D<000F13FC381FC3FF3931C7
07803861EC0301F813C0EAC1F0A213E03903C00780A3EC0F00EA0780A2EC1E041506D80F
00130C143C15181538001EEB1C70EC1FE0000CEB07801F177D9526>I<380F01F0381FC7
F83831CE1CEA61F8EBF03C00C1137C13E014383803C000A4485AA448C7FCA4121EA2120C
16177D951D>114 D<EB3F80EBFFE03801E0F038038030EB00704813F0A2EB8040EBC000
13FE3803FF806C13C038003FE0EB03F0EA3000127800F813E0A24813C0EA600138780F80
383FFE00EA07F814177D951D>I<133013785BA4485AA4485AB51280A23803C000485AA4
48C7FCA4121EA25B1480383C03001306A25BEA1C38EA0FF0EA07C011217D9F18>I<EA07
C0380FE0033918F0078012300060EB0F0012C0A2EAC1E00001131EEA03C0A348485AA215
101518EC7830A214F8018113603903C3B8C03901FF1F803900FC0F001D177D9525>I<EA
07C0380FE0033918F0078012300060EB0F0012C0A2EAC1E00001131EEA03C0A348485AA4
5CA214F813813803C3F0EA01FFEA00FC1300495A121E383E03C05CD83C07C7FCEA300EEA
383CEA1FF8EA07C019217D9520>121 D<EB780CEA01FC3803FE183807FF30EB07E0EA0C
0014C038000180EB0700130C5B5B5B5B380180083803000C00061318000F1338381FE0F0
3839FFE038607FC0EB3F8038C01E0016177D951E>I E /Fv 9 79
df<B812C0A32A037A9137>0 D<130C131EA50060EB01800078130739FC0C0FC0007FEB3F
80393F8C7F003807CCF83801FFE038007F80011EC7FCEB7F803801FFE03807CCF8383F8C
7F397F0C3F8000FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C9E23>3
D<170EA3170F8384170384170184717E1878187C84180FF007C0BA12F819FC19F8CBEA07
C0F00F00183E601878604D5A60170360170795C7FC5F170EA33E237CA147>33
D<137813FE1201A3120313FCA3EA07F8A313F0A2EA0FE0A313C0121F1380A3EA3F00A312
3E127E127CA35AA35A0F227EA413>48 D<D93F80EC07F0D9FFF0EC3FFC000301FC91B5FC
4801FF903901F80780D80F80903A8007C001C03D1E003FC00F8000E0486D6C48C7127000
3890260FF03E143048902607F83C14386E6C48141800606D6C5A00E06D6C48141C48027F
150C5E153F6F7E6F7E82151F6C6F141C0060DA3DFE1418DB78FF143800704A6C7E003001
016D6C1370003849486C6C13F06C903B07C00FF001E06C903B0F8007FC07C02807807E00
03B512806CB44801001400C601F0EC3FFCD93F80EC07F03E1F7C9D47>I<91B512C01307
131FD97F80C7FC01FCC8FCEA01F0EA03C0485A48C9FC120E121E5A123812781270A212F0
5AA3B712C0A300E0C9FCA37E1270A212781238123C7E120E120F6C7E6C7EEA01F0EA00FC
EB7F80011FB512C013071300222B7AA52F>I<D9038013FE010790380FFF80011F013F13
C0017F4913E03A01FF01E07F3A03DF03801F3A021F0F000F26003F1E13075C4A14C05C17
804AEB0F004A131E017F5C4A13F0ED03E09138000F80037EC7FC90387E01FFD9FE0713E0
D9FC1F13F8829138003FFE49EB07FF000114016F138049147F163F120349141FA3120749
1500A2161E4848143E163C90C85AD81F3C5CD81EFFEB03C0003F9038E01F80003DD9FFFE
C7FC007C14F8D8703F13C026E007FCC8FC2B2F7EAD2E>66 D<ED7F80913807FFC0021F13
E0147F903801F01F903803C00F90380F0007011E14C05B49148049130F00011500495B48
48131E00075C491338000F91C7FC90C9FC5AA2123EA3127E127CA312FCA67EA2ED01806C
14076CEC0F006D131E6D5B6C6C5B01F813E0391FFE07C06CB5C7FC6C5B000113F038007F
80232F7FAD25>I<F101F0190F193F197F19FF4E13E0DA01C016C00203923803F8004A6C
15C096C7FC180681140F6081140D181CDA0CFC1418141CA2037E143802181530A2810238
5D02307F151F18E09126700FC05B1460820307130102C05DED03F0A2D90180EBF8030301
91C8FCA249C712FC5FEEFE060106147E167FEE3F0E49158EEE1FCCEA301CD83C38EC0FEC
D87FF8EC07FC495D4848140316016C485D6C4891CAFC000FCDFC443782B33A>78
D E /Fw 66 123 df<141E147F14FF5BEB03FEEB07FCEB0FF0EB1FE0EB3FC0EB7F80EBFF
00485A5B12035B485A120F5BA2485AA2123F5BA2127F90C7FCA412FEAD127FA47F123FA2
7F121FA26C7EA27F12076C7E7F12017F6C7EEB7F80EB3FC0EB1FE0EB0FF0EB07FCEB03FE
EB01FF7F147F141E184771BE30>40 D<127812FE7E7F6C7E6C7EEA0FF06C7E6C7E6C7E6C
7EEB7F80133F14C0131FEB0FE014F01307A2EB03F8A214FC1301A214FE1300A4147FAD14
FEA4130114FCA2130314F8A2EB07F0A2130F14E0EB1FC0133F1480137FEBFF00485A485A
485A485AEA3FE0485A485A90C7FC5A1278184778BE30>I<14E0497E497EA60038EC0380
007EEC0FC0D8FF83EB3FE001C3137F9038F3F9FF267FFBFB13C06CB61280000FECFE0000
0314F86C5C6C6C13C0011F90C7FC017F13C048B512F04880000F14FE003FECFF80267FFB
FB13C026FFF3F913E09038C3F87F0183133FD87E03EB0FC00038EC0380000091C7FCA66D
5A6D5A23277AAE30>I<143EA2147FAF007FB7FCA2B81280A36C1600A2C76CC8FCAF143E
A229297DAF30>I<EA03E0EA0FF0EA1FF813FCEA3FFEA213FFA27EA27E1203EA007FA213
7E13FEEA01FC1203EA07F8EA3FF0127FEAFFE0EA7F801300123C1019708B30>I<007FB6
12F0A2B712F8A36C15F0A225077B9E30>I<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA
3FC0EA0F000C0C6E8B30>I<16F01501ED03F8A21507A2ED0FF0A2ED1FE0A2ED3FC0A2ED
7F80A2EDFF00A24A5AA25D1403A24A5AA24A5AA24A5AA24A5AA24A5AA24AC7FCA2495AA2
5C1303A2495AA2495AA2495AA2495AA2495AA249C8FCA2485AA25B1203A2485AA2485AA2
485AA2485AA2485AA248C9FCA25AA2127CA225477BBE30>I<14FE903807FFC0497F013F
13F8497F90B57E48EB83FF4848C6138049137F4848EB3FC04848EB1FE049130F001F15F0
491307A24848EB03F8A290C712014815FCA400FEEC00FEAD6C14016C15FCA36D1303003F
15F8A26D1307001F15F0A26D130F6C6CEB1FE0A26C6CEB3FC06C6CEB7F806D13FF2601FF
8313006CEBFFFE6D5B6D5B010F13E06D5BD900FEC7FC273A7CB830>I<EB03C0497EA213
0FA2131FA2133F137F13FF1203123FB5FCA213EF138FEA7E0F1200B3B0003FB512F84814
FCB612FEA26C14FC6C14F81F3977B830>I<EB07FC90383FFFC090B512F00003804814FE
4880261FF80F1380263FE00113C09038C0007F4848EB3FE090C7121FED0FF04814075A6C
15F81503A3127E1218C8FCA2150716F0150F16E0151F16C0153FED7F8015FF4A13005DEC
07FC4A5A4A5A4A5A4A5A4A5A4990C7FC495A495AEB0FF0EB3FE0495A495A4890C8FC4848
EB01F04848EB03F8485AEA1FE048B6FCB7FCA37E6C15F025397BB830>I<EB03FF013F13
E090B512F84814FE4880481580260FFE0113C09038F0007F4848EB1FE0150F16F01507A2
6C5A6C5AC8FC150F16E0A2151FED3FC0157FEDFF8002071300903807FFFE495B5D8115FF
6D1480D9000113C09138003FE0ED1FF0ED07F8150316FC150116FE1500A21218127EB4FC
A2150116FC4814036C15F86C6C13076DEB1FF0D83FF0133F3A1FFE01FFE06CB612C06C15
806CECFE00C65C013F13F001031380273A7CB830>I<EC03FC4A7E140F141FA2143F147F
157E14FEA2EB01FCEB03F8A2EB07F0A2EB0FE0EB1FC0A2EB3F80A2EB7F0013FEA2485A48
5AA2485AA2485A485AA2485AA248C7FC12FEB8FC1780A46C1600C8007EC7FCAA91387FFF
FE91B6FCA46E5B29397DB830>I<000FB612804815C05AA316800180C8FCAEEB83FF019F
13C090B512F015FC8181D9FE0313809039F0007FC049133F0180EB1FE06CC7120F000E15
F0C81207A216F81503A31218127EA2B4FC150716F048140F6C15E06C141F6DEB3FC06D13
7F3A3FE001FF80261FFC0F13006CB55A6C5C6C5C6C14E06C6C1380D90FFCC7FC25397BB7
30>I<EC0FF8EC7FFF49B51280010714E0131F4914F090387FF80F9039FFC007F8481380
3803FE005B485A4848EB03F0ED01E0484890C7FC5B123F5BA2127FEB000C903803FFE001
0F13F8D8FF3F13FE48B6FCB7128016C09039FE007FE001F8EB1FF001E0130F49EB07F8ED
03FC5B90C7120116FE1500A37EA46C7E15016D14FC121F6D1303000FEC07F86D130F6C6C
EB1FF06DEB3FE03A03FF81FFC06C90B512806C15006D5B011F13F8010713E00101138027
3A7CB830>I<127CB712FC16FEA416FC48C7EA0FF816F0ED1FE0007CEC3FC0C8EA7F80ED
FF00A24A5A4A5A5D14075D140F5D4A5AA24A5AA24AC7FCA25C5C13015CA213035CA21307
5CA4495AA6131F5CA96D5A6DC8FC273A7CB830>I<49B4FC011F13F0017F13FC90B57E00
03ECFF804815C048010113E03A1FF8003FF049131FD83FC0EB07F8A24848EB03FC90C712
01A56D1303003F15F86D13076C6CEB0FF06C6CEB1FE0D807FCEB7FC03A03FF83FF806C90
B512006C6C13FC011F13F0497F90B512FE48802607FE0013C0D80FF8EB3FE0D81FE0EB0F
F04848EB07F8491303007F15FC90C712014815FE481400A66C14016C15FC6D1303003F15
F86D1307D81FF0EB1FF06D133F3A0FFF01FFE06C90B512C06C1580C6ECFE006D5B011F13
F0010190C7FC273A7CB830>I<49B4FC010F13E0013F13F890B57E488048804801011380
3A0FFC007FC0D81FF0EB3FE04848131F49EB0FF048481307A290C7EA03F85A4815FC1501
A416FEA37E7E6D130315076C7E6C6C130F6D133FD80FFC13FF6CB6FC7E6C14FE6C14F901
3FEBE1FC010F138190380060011400ED03F8A2150716F0150F000F15E0486C131F486CEB
3FC0157FEDFF804A1300EC07FE391FF01FFC90B55A6C5C6C5C6C1480C649C7FCEB3FF027
3A7CB830>I<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F00C7FCAF120FEA3F
C0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C276EA630>I<007FB7FCA2B81280A36C
16006C5DCBFCA7003FB612FE4881B81280A36C1600A229157DA530>61
D<147F4A7EA2497FA4497F14F7A401077F14E3A3010F7FA314C1A2011F7FA490383F80FE
A590387F007FA4498049133F90B6FCA34881A39038FC001F00038149130FA40007814913
07A2D87FFFEB7FFFB56CB51280A46C496C130029397DB830>65 D<007FB512F0B612FE6F
7E82826C813A03F8001FF815076F7E1501A26F7EA615015EA24B5A1507ED1FF0ED7FE090
B65A5E4BC7FC6F7E16E0829039F8000FF8ED03FC6F7E1500167FA3EE3F80A6167F1700A2
5E4B5A1503ED1FFC007FB6FCB75A5E16C05E6C02FCC7FC29387EB730>I<91387F803C90
3903FFF03E49EBFC7E011F13FE49EBFFFE5B9038FFE07F48EB801F3903FE000F48481307
5B48481303A2484813015B123F491300A2127F90C8FC167C16005A5AAC7E7EA2167C6D14
FE123FA27F121F6D13016C6C14FCA26C6CEB03F86D13076C6CEB0FF03901FF801F6C9038
E07FE06DB512C06D14806D1400010713FC6D13F09038007FC0273A7CB830>I<003FB512
E04814FCB67E6F7E6C816C813A03F8007FF0ED1FF8150F6F7E6F7E15016F7EA2EE7F80A2
163F17C0161FA4EE0FE0AC161F17C0A3163F1780A2167F17005E4B5A15034B5A150F4B5A
ED7FF0003FB65A485DB75A93C7FC6C14FC6C14E02B387FB730>I<007FB7FCB81280A47E
D803F8C7123FA8EE1F0093C7FCA4157C15FEA490B5FCA6EBF800A4157C92C8FCA5EE07C0
EE0FE0A9007FB7FCB8FCA46C16C02B387EB730>I<003FB712804816C0B8FCA27E7ED801
FCC7121FA8EE0F8093C7FCA5153E157FA490B6FCA69038FC007FA4153E92C8FCAE383FFF
F8487FB5FCA27E6C5B2A387EB730>I<02FF13F00103EBC0F8010F13F1013F13FD4913FF
90B6FC4813C1EC007F4848133F4848131F49130F485A491307121F5B123F491303A2127F
90C7FC6F5A92C8FC5A5AA892B5FC4A14805CA26C7F6C6D1400ED03F8A27F003F1407A27F
121F6D130F120F7F6C6C131FA2D803FE133F6C6C137FECC1FF6C90B5FC7F6D13FB010F13
F30103EBC1F0010090C8FC293A7DB830>I<007FB6FCB71280A46C1500260007F0C7FCB3
B3A8007FB6FCB71280A46C1500213879B730>73 D<D83FFF90380FFF80486D4813C0B56C
5AA26C497E6C496C1380D803F0903803F8004B5A4B5A151F4B5A5E4BC7FC15FE14014A5A
5D4A5A4A5A141F5D4A5A4AC8FC5C13F18101F37F13F790B57E14EFECC7F01483EC03F814
0101FE7F496C7E5B157F497F82151F82150F826F7EA26F7E1501821500D83FFF903803FF
C0486D4813E0B56C5AA26C497E6C496C13C02B387FB730>75 D<383FFFF8487FB57EA26C
5B6C5BD801FCC9FCB3B0EE0F80EE1FC0A9003FB7FC5AB8FCA27E6C16802A387EB730>I<
D83FF8ECFFE0486C4913F0486C4913F8A2007F16F06C6C4913E00007160001EF14BFEC80
0FA39039E7C01F3FA4ECE03F01E3133EA2ECF07EA201E1137CA2ECF8FCA201E013F8A214
FDEC7DF0A3147FEC3FE0A3EC1FC0A2EC070091C7FCADD83FFC903801FFE0486C4913F0B5
4913F8A26C486D13F06C486D13E02D387FB730>I<D83FFC90381FFF80486C4913C0B549
13E0A26C6D6C13C06C6E13800003913801F800EBF7C0A3EBF3E0A314F013F1A214F8A213
F014FCA2147C147EA2143E143FA2141FA21581A2140F15C1A2140715E1A2140315F1A214
01A215F91400A3157DA3153FEA3FFF481380B5EAC01FA26CEB800F6C496C5A2B387EB730
>I<90383FFFE048B512FC000714FF4815804815C04815E0EBF80001E0133FD87F80EB0F
F0A290C71207A44815F8481403B3A96C1407A26C15F0A36D130FA26D131F6C6CEB3FE001
F813FF90B6FC6C15C06C15806C1500000114FCD8003F13E0253A7BB830>I<007FB512F0
B612FE6F7E16E0826C813903F8003FED0FFCED03FE15016F7EA2821780163FA6167F1700
5EA24B5A1503ED0FFCED3FF890B6FC5E5E16804BC7FC15F001F8C9FCB0387FFFC0B57EA4
6C5B29387EB730>I<003FB57E4814F0B612FC15FF6C816C812603F8017F9138003FF015
1F6F7E15071503821501A515035E1507150F4B5A153F4AB45A90B65A5E93C7FC5D8182D9
F8007FED3FE0151F150F821507A817F8EEF1FCA53A3FFF8003FB4801C0EBFFF8B56C7E17
F06C496C13E06C49EB7FC0C9EA1F002E397FB730>82 D<90390FF803C0D97FFF13E048B5
12C74814F74814FF5A381FF80F383FE001497E4848137F90C7123F5A48141FA2150FA37E
ED07C06C91C7FC7F7FEA3FF0EA1FFEEBFFF06C13FF6C14E0000114F86C80011F13FF0103
1480D9003F13C014019138007FE0151FED0FF0A2ED07F8A2007C140312FEA56C140716F0
7F6DEB0FE06D131F01F8EB3FC001FF13FF91B51280160000FD5CD8FC7F13F8D8F81F5BD8
78011380253A7BB830>I<003FB712C04816E0B8FCA43AFE003F800FA8007CED07C0C791
C7FCB3B1011FB5FC4980A46D91C7FC2B387EB730>I<3B7FFFC007FFFCB56C4813FEA46C
496C13FCD803F8C7EA3F80B3B16D147F00011600A36C6C14FE6D13016D5CEC800390393F
E00FF890391FF83FF06DB55A6D5C6D5C6D91C7FC9038007FFCEC1FF02F3980B730>I<D8
7FFE90380FFFC0B54913E06E5AA24A7E6C486D13C0D807F0903801FC00A26D130300035D
A46C6C495AA46C6C495AA46D131F6D5CA3EC803F013F5CA46D6C48C7FCA490380FE0FEA4
01075B14F1A301035BA314FB01015BA314FFA26D5BA46E5A6E5A2B397EB730>I<007FB5
FCB61280A4150048C8FCB3B3B3A5B6FC1580A46C140019476DBE30>91
D<007FB5FCB61280A47EC7123FB3B3B3A5007FB5FCB6FCA46C140019477DBE30>93
D<EB3FFC48B57E4814E04880488048809038F00FFE9038E001FF806F7E6C48133F6C4880
C8121FA491B5FC130F137F48B6FC12075A48EBC01F383FFC00EA7FE0138048C7FC5AA46C
143FA26C6C137F9038C001FF263FF80FEBFFC06CB712E0A2000714F76C14C3C6020013C0
D93FF090C7FC2B2A7CA830>97 D<EA3FFC487E12FFA2127F123F1200AAEC03FE91381FFF
80027F13E091B57E90B612FC82ECFE079138F001FF4A6C13804A137F4AEB3FC091C7121F
4915E0160FA217F01607A8160FA217E07F161F6EEB3FC0A26EEB7F806E13FFDAF0031300
9138FC0FFE91B55A5E495CD97E7F13C0D93C1F90C7FC90380003FC2C3980B730>I<ECFF
E0010713FC011F7F017F7F90B612804815C048EB807F3907FC003F485A485A49EB1F8048
48EB0F004990C7FC127F90C9FCA25A5AA87E7EA27F003FEC07C06DEB0FE06C7E6D131F6C
6C14C0D807FE133F9039FFC0FF806C90B5FCC615006D5B011F13F801075B01011380232A
7AA830>I<913801FFE04A7F5CA28080EC0007AAEB03FE90381FFF874913E790B6FC5A5A
481303380FFC00D81FF0133F49131F485A150F4848130790C7FCA25AA25AA87E6C140FA2
7F003F141F6D133F6C7E6D137F390FF801FF2607FE07EBFFC06CB712E06C16F06C14F76D
01C713E0011F010313C0D907FCC8FC2C397DB730>I<49B4FC010713E0011F13F8017F7F
90B57E488048018113803A07FC007FC04848133FD81FE0EB1FE0150F484814F049130712
7F90C7FCED03F85A5AB7FCA516F048C9FC7E7EA27F003FEC01F06DEB03F86C7E6C7E6D13
07D807FEEB1FF03A03FFC07FE06C90B5FC6C15C0013F14806DEBFE00010713F8010013C0
252A7CA830>I<EDFF80020713E0021F13F05C4A13F891B5FC491387903803FE079138FC
03F0903907F800C04A1300A8003FB612C04815E0B7FCA36C15C0260007F0C7FCB3A9003F
B512FE4880B71280A26C15006C5C25397DB830>I<D903FC13FF90261FFF8713C04913DF
90B712E05A5A2607FE07138F903AF801FE07C048486C6CC7FCA2497F001F8149133FA56D
137F000F92C7FC6D5BA26C6C485AEBFE0790B55A5D485C15C001DF5BD9C3FCC8FC01C0C9
FCA37F7F6CB512F015FF6C15C04815F0488148813A3FE0001FFE0180130148C8127F007E
8100FE168048151FA56C153F007FED7F006D5C6C6C495A01F013076CB4EB7FFC6C90B55A
6C5D000115C06C6C91C7FC011F13FC010113C02B3E7DA730>I<EA3FFC487E12FFA2127F
123F1200AAEC01FE91380FFF80023F13E091B57E90B67EA29138FE07FCECF8039138E001
FE14C0EC8000A291C7FCA25BB3A23B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14
FC6C496C13F82F3880B730>I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCA9381FFFF8
487F5AA27E7EEA0001B3A9003FB612C04815E0B7FCA27E6C15C023397AB830>I<EA7FF8
487EA4127F1200AB0203B512804A14C017E0A217C06E14809139001FE0004B5A4B5A4BC7
FC4A5A4A5AEC0FF84A5A4A5A4A5A4A5A01FD7F90B57E8114F7ECE3F8ECC1FCEC81FEEC00
FF497F496D7E6F7E826F7E15076F7E6F7E3B7FFFF81FFFE0B56C4813F017F8A217F06C49
6C13E02D387FB730>107 D<387FFFF8B57EA47EEA0001B3B3A8007FB612F0B712F8A46C
15F025387BB730>I<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B57E
6C010F13872607FE07EB03F801FC13FE9039F803FC01A201F013F8A301E013F0B3A23C7F
FE0FFF07FF80B548018F13C0A46C486C01071380322881A730>I<EC01FE3A3FFC0FFF80
267FFE3F13E000FF90B57E90B67E7E6C9038FE07FCC6EBF8039138E001FE14C0EC8000A2
91C7FCA25BB3A23B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14FC6C496C13F82F
2880A730>I<49B4FC010F13E0013F13F8497F90B57E0003ECFF8014013A07FC007FC048
48EB3FE0D81FE0EB0FF0A24848EB07F8491303007F15FC90C71201A300FEEC00FEA86C14
016C15FCA26D1303003F15F86D13076D130F6C6CEB1FF06C6CEB3FE06D137F3A07FF01FF
C06C90B512806C15006C6C13FC6D5B010F13E0010190C7FC272A7CA830>I<EC03FE3A3F
FC1FFF80267FFE7F13E000FF90B57E90B612FC6C816CEBFE07C69038F001FF4A6C13804A
137F4AEB3FC091C7121F4915E0160FA217F01607A8160FA217E07F161F6EEB3FC0A26EEB
7F806E13FFDAF00313009138FC0FFE91B55A5E495C6E13C0021F90C7FCEC03FC91C9FCAD
383FFFF8487FB57EA26C5B6C5B2C3C80A730>I<49B413F8010FEBC1FC013F13F14913FD
48B6FC5A481381390FFC007F49131F4848130F491307485A491303127F90C7FC15015A5A
A77E7E15037FA26C6C1307150F6C6C131F6C6C133F01FC137F3907FF01FF6C90B5FC6C14
FD6C14F9013F13F1010F13C1903803FE0190C7FCAD92B512F84A14FCA46E14F82E3C7DA7
30>I<ED07F83A3FFF803FFF486DB51280B512C302CF14C06C13DF6C9038FFFC3FD8001F
13E09238801F809238000F004A90C7FC5C5C5CA25CA45CAF003FB512FC4880B7FCA26C5C
6C5C2A287EA730>I<90381FFC1E48B5129F000714FF5A5A5A387FF007EB800100FEC7FC
4880A46C143E007F91C7FC13E06CB4FC6C13FC6CEBFF806C14E0000114F86C6C7F01037F
9038000FFF02001380007C147F00FEEC1FC0A2150F7EA27F151F6DEB3F806D137F9039FC
03FF0090B6FC5D5D00FC14F0D8F83F13C026780FFEC7FC222A79A830>I<EB0780497E13
1FA9003FB612E04815F0B7FCA36C15E026001FC0C7FCB216F8ED01FCA5ECE003010FEB07
F814F09138FC1FF06DB512E06D14C016806D14009038007FFCEC1FF026337EB130>I<D8
3FFCEB3FFC486C497E00FF14FFA2007F147F003F143F00001400B3A41501A2150315076D
130F903A7FC07FFFF891B612FC6D15FE7F6D4913FC6D9038F87FF8010001C0C7FC2F2880
A630>I<3B3FFFC07FFF80486DB512C0B515E0A26C16C06C496C13803B01F80003F000A2
6D130700005DA26D130F017E5CA2017F131F6D5CA2EC803F011F91C7FCA26E5A010F137E
A2ECE0FE01075BA214F101035BA3903801FBF0A314FF6D5BA36E5A6E5A2B277EA630>I<
3B3FFFC01FFFE0486D4813F0B515F8A26C16F06C496C13E0D807E0C7EA3F00A26D5C0003
157EA56D14FE00015DEC0F80EC1FC0EC3FE0A33A00FC7FF1F8A2147DA2ECFDF9017C5C14
F8A3017E13FBA290393FF07FE0A3ECE03FA2011F5C90390F800F802D277FA630>I<3A3F
FF81FFFC4801C37FB580A26C5D6C01815BC648C66CC7FC137FEC80FE90383F81FC90381F
C3F8EB0FE3ECE7F06DB45A6D5B7F6D5B92C8FC147E147F5C497F81903803F7E0EB07E790
380FE3F0ECC1F890381F81FC90383F80FE90387F007E017E137F01FE6D7E48486D7E267F
FF80B5FCB500C1148014E3A214C16C0180140029277DA630>I<3B3FFFC07FFF80486DB5
12C0B515E0A26C16C06C496C13803B01FC0003F000A2000014076D5C137E150F017F5C7F
151FD91F805BA214C0010F49C7FCA214E00107137EA2EB03F0157C15FCEB01F85DA2EB00
F9ECFDF0147D147FA26E5AA36E5AA35DA2143F92C8FCA25C147EA2000F13FE486C5AEA3F
C1EBC3F81387EB8FF0EBFFE06C5B5C6C90C9FC6C5AEA01F02B3C7EA630>I<001FB612FC
4815FE5AA316FC90C7EA0FF8ED1FF0ED3FE0ED7FC0EDFF80003E491300C7485A4A5A4A5A
4A5A4A5A4A5A4A5A4990C7FC495A495A495A495A495A495A4948133E4890C7127F485A48
5A485A485A485A48B7FCB8FCA46C15FE28277DA630>I E /Fx 53
122 df<ED0FFF4AB512C0020F14F0027F80903A01FFF803FC499038C000FE010FEB0003
4948497E49485B5C495A4C138001FF6E13005CA3705AEE01F893C8FCA74BB51280B9FCA5
C69038E00003B3B0007FD9FFC1B6FCA538467EC53E>12 D<DB0FFFEC1FFE4AB5D8E003B5
7E020FDAF01F14E0027F02FCB67E902701FFF803B538F007F8499026C0007F90388001FC
010F903B0001FFFE00074948010749497E49484B131F4A495B49485D507E01FF725A4A5D
A282706F5A70ED03F097C8FCA70703B5FCBDFCA5C69026E000019038C00007B3B0007FD9
FFC0B60083B512FEA557467EC55D>14 D<EA07C0EA1FF0487E487E487E7FA31480A37E7E
EA1FF7EA07C7EA0007130FA21400A25B131E133EA25B13FC5B485A485A1207485A485A90
C7FC120C112278C41F>39 D<EA07C0EA1FF0EA3FF8EA7FFC12FF13FEA213FFA47E7E7EEA
07CFEA000FA2131F131EA2133EA2133C137C13F8A2EA01F0120313E0EA07C0EA1F801300
121E120C1022788E1F>44 D<B612F8A91D097F9A25>I<EA07C0EA1FF0EA3FF8EA7FFCEA
FFFEA7EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F>I<EE01C0EE03E01607A2160F17C016
1F1780A2163F17005E167EA216FE5E15015EA215035EA215075E150F5EA2151F5E153F93
C7FCA25D157E15FE5DA214015D14035DA214075D140F5DA2141F5D143F92C8FCA25C147E
A214FE5C13015CA213035C13075CA2130F5C131F5CA2133F91C9FC5B137EA213FE5B1201
5BA212035BA212075B120F5BA2121F5B123F90CAFCA25A127E12FE5AA25A12782B647ACA
38>I<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C0
38>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0007FFFD8
1F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A6C5A6C5A
C9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5A
EC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC017C1401
49140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713FF011F14
C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16C07FA66C
5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC15F815FF
16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0EA3FF048
7EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80FFEEBFFFE
6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E5D5DA25D
5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8EB01F0EB
03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A12FCB912
80A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FFEB07FF91
B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C714C001DF
14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8FC6F13F0
A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C0123E003F4A
1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01FCC7FC01
0113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F8090390FFC00
1FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE7F80EE1E
00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9F01FFC90
39FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127FA5123FA2
17F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038E01FFC6D
B55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<121E121F13FC90B712FE
A45A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D15014B5A00F8
4A5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D143FA2147F5D14
FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EC7FF00103B5FC010F14
C0013F14F090397F801FFC3A01FC0003FE48486D7E497F4848EC7F80163F484815C0A200
1F151FA27FA27F7F01FE143F6D158002C0137F02F014006C01FC5B6E485A6C9038FF83FC
EDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F8090B7FC48013F14802607
FC0F14C0260FF80314E04848C6FC496D13F0003F141F48481307496D13F8150000FF157F
90C8123F161F160FA21607A36D15F0127F160F6D15E06C6C141F6DEC3FC06C6CEC7F80D8
0FFE903801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F91C7FC010013F02D427B
C038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82
033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F0207815D173F02
0F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8FCA201
03834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020FB612F0A5
4C457CC455>65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B5
39E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F
4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FF
AE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE
1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001
FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F72
7F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F
624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9
FC4B447CC356>I<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193E
A3191EA21778A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F1
01E01778A2F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4D
B5FCBBFC61A443447DC34A>I<BA1280A419C026003FFEC7121F1701EF007F183F181F18
0F180719E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE
007F160F16071603A31601A693C9FCAFB712F0A53C447CC346>I<B712E0A5D8001F90C7
FCB3B3B3A4B712E0A523447DC32A>73 D<B712F0A526003FFECAFCB3B1F00780A4180F19
00A460A360A2187EA218FE170117031707171F177FEE03FFB95AA539447CC343>76
D<B500FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079F
A26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC
03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485A
A26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA270
5BA2705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A>I<B64BB512FE8181
A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E7F6E7F6E7F82806E7F6E7F6F7E
6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F707F8482707F707F717E71138071
13C019E0837113F07113F87113FC7113FE19FF847213F884848484A28484197F193F191F
A2190F1907B61603190119001A78A24F447CC358>I<923807FFC092B512FE0207ECFFC0
021F15F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E
6C7E49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890C96C13E0A2
4819F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A2
6D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D
6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F802
0715C002004AC8FC030713C047467AC454>I<DAFFE0131C010701FE133C013F9038FF80
7C90B6EAE0FC4815F9489038801FFF3907FC00014848EB007F4848143F4848140F491407
007F15035B1601160012FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF0
15FF6C15E016FC6C816C6F7E6C826C826C6C81011F810107811300020F80140003077FED
007F82040F1380828212F082A282A27EA218007EA26C5D6C5E6D14036D5D6D140701F84A
5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F0480107138031
467AC43E>83 D<003FBA12E0A59026FE000FEB8003D87FE09338003FF049171F90C71607
A2007E1803007C1801A300781800A400F819F8481978A5C81700B3B3A20107B8FCA54543
7CC24E>I<B76C010FB512F8A526003FFEC93803E000B3B3A9011F17076280190F6D606F
151F6D95C7FC6D6D5D197E6D6D5D6D6D1403DA7FFC4A5A6EB4EC3FF0020F9039F003FFE0
6E90B61280020193C8FC6E6C14FC030F14E09226007FFEC9FC4D457CC356>I<B792B6FC
A526003FFECAEAFC00806D606F15016D608119036D606F15076D606F150F6D6081191F6D
6D93C7FC61027F163E6F157E023F167C8119FC6E6D5C18016E5E7013036E5E8218076E6D
5C180F6E5E70131F6E93C8FC705B037F143E82187E033F147C7013FC6F5C17816F5C17C1
17C36F5C17E76F5C17FF6F5CA36F91C9FCA2705AA2705AA3705AA2705AA2705AA250457E
C355>I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E48
6C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FF
FC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83F
FE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36
>97 D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF
000FFE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A217
7F18F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512
F0D9F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14
FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E
5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB
1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7C
AD32>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039
FFF807FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212
FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038
F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103
B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A
001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2
123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE
01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E002
7F13F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0
ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0
137E010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC
4848903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D
6C6C495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA4
7F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC014
074848020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3F
F83B07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<
EB7FC0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF80
1F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>I<13
7C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA
7FFFA512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB293387FFFE0A59338
0FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7EC
DFFF91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E
163FB60003B512F8A535457DC43B>107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519
457CC420>I<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E00281
6E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C01
9E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA557
2D7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F80
1F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC
3E>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848
C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F17
00A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F
90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590
B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15
C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E
4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FC
ADB67EA536407DAC3E>I<DA3FE0131E902603FFFC133E010F01FF137E013F1480903AFF
F80FE0FE489038E003F148EBC0014890388000FB4890C7127F49143F001F151F485A160F
5B127FA3485AAC6C7EA46C7EA26C6C141F163F6C6C147F6C15FF6C6D5A6C9038E003EF6C
9038F01FCF6DB5128F011FEBFE0F010313F89038007FC091C7FCAD0307B512FCA536407C
AC3B>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13
BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>I<90
391FFC038090B51287000314FF120F381FF003383FC00049133F48C7121F127E00FE140F
A215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C
7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB
3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<
EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601E0
C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13FC
01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A8
5EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F1407010313FE9026
007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C80017F5D
8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE0
1E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FC
A26E5AA26E5AA21578362C7EAB3B>I<B5D8FE1FB539801FFFF0A500019027C0003FE0C7
EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F1407
011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E15806D902681E07F5B
18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E9039000FFDE018FF6E
486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51>I<
B500FE90383FFFF0A5C601F0903803E0006D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E
6DEB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F
4A7F8291381F3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F49487E02C08049486C7F49
C76C7E013E6E7E017E141FB500E090B512FCA5362C7EAB3B>I<B6903803FFFCA5000101
E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5D
ED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F
5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F80
5B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CAFC
EA01FC36407EAB3B>I E /Fy 59 123 df<B712FEA33903FC00010001EC007E161F8282
A382A4EE0180A493C7FCB3AB487EB512FEA329337DB230>0 D<0107B512FCA390260007
FCC8FC6E5AA6B4EE1FE001C0157F001F170001E05D000F5E01F0140100075EAAD803F84A
5AA3D801FC4A5AA200005E01FE140F017F4A5AD93F83495AD91FC349C7FCD907E313FC6D
B55AD9007F13C0DA0FFEC8FCEC03F8A74A7E0107B512FCA333337CB23C>9
D<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A3F001FE0FE01
7E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3A7486C497EB5
0083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780EB1F8090393F
000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486CEB
1FE0267FFFC1B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0
903B0FC0077E003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95
C7FCA9187EB912FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A3
3D357FB440>14 D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E12
0C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F00130E5B133C5B5BA2485A48
5AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121F
A27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>
I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E13
1FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A48
5AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<123C127EB4FCA21380A2127F12
3D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<EB0FE0EB7FFCEB
F83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14
FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F
803900F83E00EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5FC13BFEAF83F
1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E
007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123C
C7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E13
3C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126
>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013
F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE0
14FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312
780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F34
7DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307
130E130C131C13381330137013E013C0EA0180120313001206120E120C5A123812305A12
E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90B5
128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F
80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F80060
14E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D34
7CB126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E0
1207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F8090
38E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA2
6C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFC
EB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C71238006014301570
15E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA213
0FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F8039
07C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13
F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001
F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC00
7E12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001B5
120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390F
C007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301A2
127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7FC
1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00001C137E381F
01FC380FFFF0000313C0C690C7FC1F347DB126>I<007FB812C0B912E0A26C17C0CCFCAC
007FB812C0B912E0A26C17C033147C9C3C>61 D<15E0A34A7EA24A7EA34A7EA3EC0DFE14
0CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA3
01066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA2000182
1607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65 D<DA03FE130C91393FFF801C
91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC712034848
1401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D
150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F
80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E37
7CB437>67 D<B77E16F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E
177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE
5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D8
03FCC7127F0001150FEE03E01601A21600A21760A403061330A41700150EA2151E157E90
B512FEA39038FC007E151E150EA21506170CA3171892C7FCA41738A21770A217F0160116
0316070003157FB812E0A32E337DB234>I<B5D8FE03B512F8A3000190C73807FC006C48
6E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>72
D<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<B512FEA3D803FEC9FC
6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337DB230>76
D<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EB
C1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED
0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2
486C1400D807F81578B500C01438A2171835337EB23A>78 D<B612FEEDFFC016F03A03FC
0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F
0016FEED07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>80
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>83 D<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA200
60160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<EAFFF0A4
EAF000B3B3B3ADEAFFF0A40C4B79B715>91 D<EAFFF0A41200B3B3B3AD12FFA40C4B7FB7
15>93 D<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FC
A4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C13
1F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>108
D<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7
003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A3
3C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE49
7FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F8039
01F007C03903C001E000078048486C7E48C7127CA248147E003E143E007E143FA300FE15
80A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93F
FEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE
7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F
6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325
307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4
FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F
3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FF
E1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A3
1A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90
C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C13
07A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370
A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC
0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380
B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>
I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D
1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5A
A36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000
030100141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090
263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF8
0116FE6D486C5AA36D481378A36D48133034217F9F37>I<B53801FFF8A32603FE001380
6C48EB7C0000001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE
6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01
707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07
F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F
1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430
A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F
9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB3F800070137F1500006013
FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A12035B48481370485A001F
14604913E0485A387F000348130F90B5FCA21C207E9F22>I E /Fz
28 107 df<007FB812FEBAFCA26C17FE3804799847>0 D<121EEA7F80A2EAFFC0A4EA7F
80A2EA1E000A0A799B19>I<0060166000F816F06C1501007E15036CED07E06C6CEC0FC0
6C6CEC1F806C6CEC3F006C6C147E6C6C5C6C6C495A017E495A6D495A6D6C485A6D6C485A
6D6C48C7FC903803F07E6D6C5A903800FDF8EC7FF06E5A6E5AA24A7E4A7EECFDF8903801
F8FC903803F07E49487E49486C7E49486C7E49486C7E017E6D7E496D7E48486D7E484814
7E4848804848EC1F804848EC0FC048C8EA07E0007EED03F0481501481500006016602C2C
73AC47>I<EB03C0A2805CA600F0140F00FC143F00FE147F00FF14FF393FC3C3FC390FE1
87F03903F18FC03900FDBF00EB3FFCEB0FF0EB03C0EB0FF0EB3FFCEBFDBF3903F18FC039
0FE187F0393FC3C3FC39FF03C0FF00FE147F00FC143F00F0140F00001400A6805CA22027
7AA92D>I<140C141F4A7E4A7E4A7E903801FBF0903803F1F8903807E0FC90380FC07E49
487E49486C7E017E6D7E496D7E48486D7E48486D7E48486D7E4848147E48488048C8EA1F
80007EED0FC0481507A2007E150F6CED1F806C6CEC3F006C6C147E6C6C5C6C6C495A6C6C
495A6C6C495A017E495A6D495A6D6C48C7FC90380FC07E6D6C5A903803F1F8903801FBF0
6DB45A6E5A6E5A6EC8FC140C2A2A7FAB2D>5 D<1506150FB3A9007FB912E0BA12F0A26C
18E0C8000FC9FCB3A6007FB912E0BA12F0A26C18E03C3C7BBB47>I<EB0FFCEB3FFF90B5
12C0000314F04880488048804880A2481580A3B712C0AA6C1580A36C1500A26C5C6C5C6C
5C6C5CC614C0013F90C7FCEB0FFC22227BA72D>15 D<007FB912E0BA12F0A26C18E0CDFC
AE007FB912E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C287BAA47>17
D<180E183F18FFEF03FEEF0FF8EF3FE0EFFF80933803FE00EE1FF8EE7FE0923801FF80DB
07FEC7FCED1FF0ED7FC04A48C8FCEC07FCEC3FF0ECFFC0010390C9FCEB0FFCEB3FE0EBFF
80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC6C7EEA7FE0EA0FF8EA03FEC66C7EEB3FE0EB
0FFCEB03FF010013C0EC3FF0EC07FCEC01FF9138007FC0ED1FF0ED07FE923801FF809238
007FE0EE1FF8EE03FE933800FF80EF3FE0EF0FF8EF03FEEF00FF183F180E1800AE007FB8
12FEBAFCA26C17FE384779B947>20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF3800
7FC0EB1FF8EB07FE903801FF809038007FE0EC0FF8EC03FE913800FF80ED3FE0ED0FFCED
03FF030013C0EE3FF0EE07FCEE01FF9338007FC0EF1FF0EF07FCEF01FFEF007FEF01FFEF
07FEEF1FF0EF7FC0933801FF00EE07FCEE3FF0EEFFC0030390C7FCED0FFCED3FE0EDFF80
DA03FEC8FCEC0FF8EC7FE0903801FF80D907FEC9FCEB1FF8EB7FC04848CAFCEA07FCEA1F
F0EA7FC048CBFC12FC1270CCFCAE007FB812FEBAFCA26C17FE384779B947>I<D91FE016
20D97FF816703801FFFE486D7E48804814F09038E01FF8271F8007FC15F0273E0001FE15
E0003CD9007F1401007CDA3FC013030078DA0FE014C00070DA07F8130700F0DA03FEEB1F
8048913A01FF807F006F90B5FC043F5B705B04075B040113E000409238007F803C157BA0
47>24 D<D91FE01620D9FFFC16704813FF000714C04814F048809026E01FFE15F0273F00
03FFEC01E0007E010013C00078DA3FF01307DB0FFCEB0FC048913A07FF807F8048020190
B5FC6F1500043F5B040F13F804035B00409238007F80CDFCA4D91FE01620D9FFFC167048
13FF000714C04814F048809026E01FFE15F0273F0003FFEC01E0007E010013C00078DA3F
F01307DB0FFCEB0FC048913A07FF807F8048020190B5FC6F1500043F5B040F13F804035B
00409238007F803C287BAB47>I<140C141EA2143E143CA2147C1478A214F8495AA2495A
495AA2495A49CDFC133E137EEA01F8485AEA0FE0003FBB12FEBDFCA2003F1AFED80FE0CD
FCEA03F06C7EEA007E133E7F6D7E6D7EA26D7E6D7EA26D7E1478A2147C143CA2143E141E
A2140C50307BAE5B>32 D<19301978A2197C193CA2193E191EA2191F737EA2737E737EA2
737E737E1A7C1A7EF21F80F20FC0F207F0007FBB12FCBDFCA26C1AFCCDEA07F0F20FC0F2
1F80F27E001A7C624F5A4F5AA24F5A4F5AA24FC7FC191EA2193E193CA2197C1978A21930
50307BAE5B>I<140C141EB3B3B20040168000F8ED07C0B4153F0180147FD83FE0903801
FF00D807F8EB07F8D801FCEB0FE0D8007EEB1F80013F49C7FC90380F9E7C903807DEF86D
B45AA26D5B6D5B6E5AA26EC8FCA3141EA3140CA32A517FBE2D>35
D<D907FCEE1FE090261FFF80EDFFF8017F01E0020313FE48B500F891390FF01F804802FE
91393F8003C02707E00FFF91397E0001E0260F80036D01F8EB00F090C79026E001F01470
001E6E6C48481438001C6E6C4848141C48021F495A6F6C48C8120C48912607FE3E150E04
FF160600606E13FC00E06E4915076F1703486F5AA2163F707E707E83A24C6C15076C8300
604B6D1406047C6D140E0070167F00304B6C6C141C00384A486C7EDB03E06D14386C4A48
6C6C14786C4A486C6C14F0000F91261F0001EBC0016C6C017E6D9038F007E06C6C48486E
B512C02701F80FF0021F148027007FFFC00207EBFE00011F90C8000113F8D907F8923800
3FE050297BA75B>49 D<0203B512F8023F14FC91B6FC010315F8D90FFEC8FCEB1FE0EB7F
8001FEC9FCEA01F8485A485A485A5B48CAFCA2123EA25AA21278A212F8A25AA2B812F817
FCA217F800F0CAFCA27EA21278A2127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80
EB1FE0EB0FFE0103B612F8010015FC143F020314F82E3679B13D>I<1718173C177CA217
F8A2EE01F0A2EE03E0A2EE07C0160F1780EE1F00A2163EA25EA25EA24B5AA24B5AA24B5A
A24B5AA24BC7FCA2153E157E157C5DA24A5AA24A5AA24A5AA24A5AA24AC8FCA2143EA25C
A25C13015C495AA2495AA2495AA249C9FCA2133EA25BA25BA2485AA2485AA2485A120F5B
48CAFCA2123EA25AA25AA25A12602E5474C000>54 D<177F01FC91380FFF80D803FF143F
270787C001B57E3B0E03E003F07F281C01F00FC07F3B3C00F81F003F0038D9FC3C800078
D97E78131F4B8000706D48130F4B80170700784A806F13036C011F81003E826C18800180
6D7F000F18C0D807C0167FD803E017E00001173F01F017F00000171F1378F00FC0F03F00
18FC0138ED07F0EF1FC0017890B6C7FC17FC5F0020ECE00712701370A3EA38F0D839E081
D81FC01403EA0F00C7FCA615C0A41230007E1480003E133F12F86C1400001C18F0001E01
3EECFE01000E017E0101EB03E0000F017C9138FF07806C6C486DEB9F00D803C0ED7FFE26
01E1F0EC3FF82600FFC06E5A011FC8EA07E03C437CC042>60 D<020EEC7FC0023E903803
FFF802FE011F7F0103027F7F010F49B6FC011F903803F81F013F90260FC0031380903A79
FC1F00010101013E7F5D4B147F903803FDF002FF16005D5D187E4B14FE4990C85A604A4A
5A4D5A4A4A5AEF1F80010F037EC7FC4A495AEE0FF04AEB7FC0DB03FFC8FC011F011F13E0
4A4813F84B13FE92B6FC4AC66C7F013F020F7F04037F4A1300717E173F49C86C7EA2170F
A201FE1507A448485EA3495E0003160F605B00074C5A4993C7FCD9E180143E260FE7C05C
D9DFE05C48B46CEB03F0D9BFFCEB0FC09139FF80FF80D83F1FD9FFFEC8FC6D14F8D87E07
14E0D8780191C9FC39E0003FF039427DBF3C>66 D<EE3FE0923803FFF8031F13FC037F13
FE4AB5FC913807FC0F91380FC00391383F0001147C4A14FC495A494814F8495A4948EB03
F0131F49C7EA07E0133E017EEC0FC05BEE1F8048481500163E4848143893C7FC485AA212
0F5B121FA3485AA4127F90CAFCA45AA87F17E01603EE07C06C6CEC0F80161F6DEC3F0016
3E6C6C5C6D5C6C6C495A01FFEB07E06C9038E03F806C90B5C7FC6C14FC6C14F06C6C1380
D90FFCC8FC2F427FBF30>I<047FB612FC0307B8FC031F1780157F4AB9FC912903F80FE0
00011300DA0FC0ED007EDA1F00167C023E17604A011F92C7FC02FC5C495AA213034A495A
495A5C0106C7FC90C848CAFCA3167E16FEA34B5AA35E150393B612F0A24B5D614B92C8FC
04E0CAFC5E151F5EA24BCBFCA25D157E15FE5DA24A5AA24A5AA24A5AA20003495A121F48
6C485A127F486C48CCFCEBE03E387FFC7CEBFFF86C5B6C13C06C5BD801FCCDFC49417FBD
41>70 D<033FB612F00207B7FC023F16E091B812800103EEFE0090280FFC0007C0C7FCD9
1F80130F013EC7485A4992C8FC01FC5C48485C167E484814FE01C05C90C8FCC812015E15
03A34B5AA35E150FA34B5AA44B5AA44BC9FCA415FEA35D1401A25D14035DA24A5A18704A
48EB01F04D5A4A48130792C7485A023E5D4A023FC7FC0007B712FE001F16F8485E481680
B700FCC8FC3C3E83BD32>73 D<F41F80F301FF1B07631B3F51130098B5FCED01C0DB07E0
4B5B030F95C7FC031F17F0F203C0705E1A0798C8FC82621A0E153F70151E1A1CA2DB3BFE
153C15390379163882037816781A7003707F047F15F015F0715CEDE03F1901020180041F
5DA203C06D1303160F02035F03807F04071407020794C9FC83DB00035CA24A6E130E020E
130171131E141E70141C021C1580057F133C023C15C002381638173F4AEDE078171F02F0
15F04A1670EF0FF8010117F04AEC07FCD81003705A0038491403D83C0716FFD87F0FC87E
01FF6F5B485A187F5B725A6C48041ECAFC6C4893CBFC6C5AEA0780594C82C64B>78
D<1A071A1F1A7E023FB812FC49B912F8010718E0011F18C0017FEFFE0090B912F0D801F0
C76CC9FCD807E05C120F48485B003F5D5B127F150348C75B5A5A00F01407C85BA3150F5E
A3151F5EA3153F5EA3157F5EA315FF93CAFCA35C5DA314035DA314075DA34A5AA34A5AA2
5D143FA24A5AA292CBFC14FE5C495A14C048477DC032>84 D<153FEC03FFEC0FE0EC3F80
EC7E00495A5C495AA2495AB3AA130F5C131F495A91C7FC13FEEA03F8EA7FE048C8FCEA7F
E0EA03F8EA00FE133F806D7E130F801307B3AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03
FFEC003F205B7AC32D>102 D<12FCEAFFC0EA07F0EA01FCEA007E6D7E131F6D7EA26D7E
B3AA801303806D7E1300147FEC1FC0EC07FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A
5C13075CB3AA495AA2495A133F017EC7FC485AEA07F0EAFFC000FCC8FC205B7AC32D>I<
126012F0B3B3B3B3B11260045B76C319>106 D E /FA 17 116 df<13E0EA01F01203A2
EA07E0EA0FC0EA1F00121E5A5A12E012400C0C72AD23>19 D<13031307130E131C133813
7013F0EA01E013C01203EA0780A2EA0F00A2121EA35AA45AA512F8A25AAB7EA21278A57E
A47EA37EA2EA0780A2EA03C0120113E0EA00F013701338131C130E1307130310437AB11B
>40 D<12C07E12707E7E7E120FEA0780120313C0EA01E0A2EA00F0A21378A3133CA4131E
A5131FA2130FAB131FA2131EA5133CA41378A313F0A2EA01E0A2EA03C013801207EA0F00
120E5A5A5A5A5A10437CB11B>I<EC0380B3A4B812FCA3C7D80380C7FCB3A42E2F7CA737>
43 D<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248EB03E0
A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803F0
FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE
387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A
0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F0014
7E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E000
1FB5FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F
80003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0
EB00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C000
70131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E14
3EA2147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA018012
0313001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D
7EAC23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0
EB7FF8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A4127812
FCA448EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FFE03800
7F801C2D7DAB23>I<EB03F8EB0FFE90383E0780EBF8013901F007C03803E00FEA07C0EA
0F80A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB4487E
01001380EC07C04814E0A214034814F0A4127CA3127EA2003E14E01407121E001F14C06C
EB0F803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<1230123C003FB5
12F8A215F05A15E039700001C000601480140348EB0700140E140CC7121C5C143014705C
495AA2495AA249C7FCA25B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>I<
007FB712F8B812FCA2CBFCADB812FCA26C16F82E137C9937>61 D<13FF000713C0380F01
F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F3801FE1FEA07F0EA1FC0EA3F
80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C391F83C7FC390FFF03F83901
FC01E01F207D9E23>97 D<EB1F80EBFFF03803E0783807C03E380F801E381F001FEC0F80
123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C0123F6C1301390F80
038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>101
D<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F3C0FCE01F8E01F803B07DC00F9C0
0F01F8D9FF8013C04990387F000749137EA249137CB2486C01FEEB0FE03CFFFE0FFFE0FF
FEA2371E7E9D3C>109 D<3801FE183807FFB8381E01F8EA3C00481378481338A21418A2
7E7EB41300EA7FF06CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C13
1EA27EA26C133CA26C137838FF01F038E3FFC000C0130017207E9E1C>115
D E /FB 50 123 df<EB01FCEB0FFF90383F07C090387C03E03A01F801F00CEA03F03907
E000F84848141C49EBFC18001F147C48C713381630481570007E156016E016C000FE147D
48EC7F801600157EA2157CA2127C15FE0203130C6CEB073E6C011E131C3A0F81F81F383A
03FFE00FF03A00FE0003C0261F7D9D2D>11 D<157E913801FFC091380781E091381E00F0
14384A13F84A1378495A494813F891C7FC5B1306010E1301010C14F0131C0118EB03E0ED
07C0013814809039301FEF00EC3FFE13709038601FEF9138000F80ED07C013E04914E0A3
12015BA30003140F90C713C0A348EC1F80A2ED3F00A2486C137E000D147C6D5B390CE001
F0391C7003E039183C0F80D91FFEC7FCEB03F80038C9FC1230A312701260A312E05AA325
3C7EAE28>I<147C49B4FC903803C78090380783C090381F03E0EB1E01133E017C13F013
F8A2EA01F0120313E01207A2EA0FC01403A2EA1F80A21407003F14E0130090B5FCA2397F
000FC0127EA2141F1580127C00FC14005CA2147EA248137C14FC00785B495AA2387C03E0
383C07C0495A001C90C7FCEA1E3EEA0FF8EA03E01C307DAE21>18
D<13FC13FFEB1FC0130F6D7EA36D7EA2130180A26D7EA3147EA280A36E7EA2140F81A24A
7E143F147FECF3F0EB01E3EB03C190380781F8130F49C67E133E5B49137E485A48487F12
07485A4848EB1F8048C7FC127E48EC0FC048EC07E000701403232F7DAD29>21
D<90B612F812035A4815F03A1E0380C000003C130000701301130700E05CEAC00638000E
03A3131CA2133C140713381378A201F07FA21201A2D803E07FA20007130313C0A26C486C
5A251E7E9C29>25 D<90B6128012035A481500261E00E0C7FC5A00705B130112E012C0EA
0003A25CA21307A349C8FCA35BA2131E133EA45BA21338211E7E9C1F>28
D<1560A315E0A25DA21401A25DA21403A292C7FCA25CEC3FE0903803FFF890380FC63E90
393E0E0F80017CEB07C03A01F00C03E0D803E0EB01F03807C01CD80F801300001F011813
F81300003E1338A2481330A2EC700100FC15F0481360150302E013E01507007801C013C0
007CEC0F800101EB1F00003C143E003E495A001F5C390F8383E03903E39F802600FFFEC7
FCEB1FF00107C8FCA21306A2130EA2130CA2131CA21318A3253C7DAD2A>30
D<160E486C143F120348C813801206000E151F000C150F001C160000188112380030130C
141E007015061260143E023C130E00E0150C5A0238131C6C01785B14705E02F013F06C48
6C485A010313033A7C0FFC0FC03A7FFFBFFF80023F90C7FC393FFC1FFE391FF80FF83907
E007E0291F7F9D2C>33 D<123C127EB4FCA21380A2127F123D1201A312031300A25A1206
120E5A5A5A126009157A8714>59 D<15C0140114031580A214071500A25C140EA2141E14
1CA2143C143814781470A214F05CA213015CA213035C130791C7FCA25B130EA2131E131C
A2133C1338A21378137013F05BA212015BA212035BA2120790C8FC5A120EA2121E121CA2
123C1238A212781270A212F05AA21A437CB123>61 D<1670A216F01501A24B7EA2150715
0DA2151915391531ED61FC156015C0EC0180A2EC03005C14064A7F167E5C5CA25C14E05C
4948137F91B6FC5B0106C7123FA25B131C1318491580161F5B5B120112031207000FED3F
C0D8FFF8903807FFFEA22F2F7DAE35>65 D<013FB6FC17C0903A00FE0007F0EE01F84AEB
00FC177E1301177F5CA21303177E4A14FEA20107EC01FC17F84AEB03F0EE07E0010FEC1F
C0EE7F009138C003FC91B55A4914FE9139C0003F804AEB0FC017E0013F140717F091C7FC
16035BA2017E1407A201FE15E0160F4915C0161F0001ED3F80EE7F004914FEED03F80003
EC0FF0B712C003FCC7FC302D7CAC35>I<92387FC003913903FFF80791391FC03E0F9139
7E00071FD901F8EB03BF4948EB01FED90FC013004948147E49C8FC017E157C49153C485A
120348481538485AA2485A173048481500A2127F90CAFCA35A5AA5EE018016031700A200
7E5D1606160E6C5D5E6C6C5C000F5D6C6C495A6C6CEB0780D801F8011EC7FCD8007E13F8
90381FFFE0010390C8FC302F7CAD32>I<013FB512FEEEFFC0903A00FE0007F0EE01F84A
EB007E8301018118804A140F18C00103150718E05CA21307A25CA2130FA24A140FA2131F
18C04A141FA2013F1680173F91C81300A249157EA2017E5D5F01FE14014C5A494A5A4C5A
00014BC7FC163E4914FCED03F00003EC1FC0B7C8FC15F8332D7CAC3A>I<013FB71280A2
D900FEC7127F170F4A1407A20101150318005CA21303A25C16300107147094C7FC4A1360
16E0130F15019138C007C091B5FC5BECC0074A6C5AA2133FA20200EB000CA249151C92C7
1218017E1538173001FE15705F5B4C5A000115034C5A49140F161F00034AB4C7FCB8FC5E
312D7DAC34>I<013FB7FCA2D900FEC7127F171F4A140FA20101150717065CA21303A25C
16300107147017004A136016E0130F15019138C007C091B5FC5BECC0074A6C5AA2133FA2
020090C7FCA25B92C8FC137EA213FEA25BA21201A25BA21203B512F0A2302D7DAC2D>I<
92387FC003913903FFF80791391FC03E0F91397E00071FD901F8EB03BF4948EB01FED90F
C013004948147E49C8FC017E157C49153C485A120348481538485AA2485A173048481500
A2127F90CAFCA35A5AA292381FFFFCA29238003FC0EE1F80163F1700A2127E5E167E7EA2
6C6C14FE000F4A5A6C7E6C6C1307D801F8EB1E3CD8007EEBFC3890391FFFE018010390C8
FC302F7CAD37>I<90263FFFFC90381FFF80A2D900FEC73803F80018E04AEC07804DC7FC
0101151C5F4A14E04C5A01034A5A040EC8FC4A5B5E010714E04B5A9138E00780030EC9FC
010F131F157F4A487E14C190391FC71FC014CEEC9C0F02F07F90383FE00702C07FEC0003
825B6F7E137E6F7E13FE167F5B707E1201161F4981831203B539E001FFFEA2392D7CAC3C
>75 D<D93FFE923801FFF060D900FFEEF800180702DFED0DF0A20101161BF033E0EC8F80
1863010316C761020FEC0187EF0307496C6C140F05065B0106150CA2010EED181F053090
C7FC90380C03E01760011C4B5A183E0118EC0180EE030090263801F0147E0406137C0130
5CA201704A13FC4C5B13606E6C5A01E0ECC0016049EBF980EDFB0000011603037E5C4913
7C487ED80FE001781307D8FFFED97001B57E1530442D7CAC44>77
D<D93FFE91B5FCA2D900FFEC07E018C06FEB038002DF150001016D5B02CF1406EC8FE014
8701036D130E170C140381D90701141C6F1318EB060081010E017E1338037F1330010C7F
A2011CEC8070031F1360011814C0150F0138ECE0E003075B013014F01503017014F1EEF9
800160130116FD01E0EB00FF94C7FC4980A2000181163E5B486C141EEA0FE0D8FFFE140C
A2382D7CAC38>I<ED7FC0913807FFF891381F807E91397C001F80D901F0EB0FC0D907E0
EB03E0D90F8014F049C71201013EEC00F84915FC5B12014848157E485AA2485A121FA248
5A17FE90C9FC5AA300FEED01FCA3EE03F8A217F0160717E0160FEE1FC01780007EED3F00
5E6C157E5E6C6C495AED03E06C6CEB0FC06C6C49C7FCD803F8137E3900FE03F890383FFF
C0D907FEC8FC2F2F7CAD36>I<013FB6FC17E0903A00FE0007F0EE01FC4AEB007EA20101
81A25C1880010316005F5CA2010715FEA24A5C4C5A010F4A5A4C5A4AEB1F8004FFC7FC91
B512F84914C00280C9FCA3133F91CAFCA35B137EA313FE5BA312015BA21203B512E0A231
2D7DAC2D>I<013FB512F816FF903A00FE001FC0EE07E04A6D7E707E01016E7EA24A80A2
13034C5A5CA201074A5A5F4A495A4C5A010F4A5A047EC7FC9138C003F891B512E04991C8
FC9138C007C04A6C7E6F7E013F80150091C77EA2491301A2017E5CA201FE1303A25BA200
01EE038018005B5F0003913801FC0EB5D8E000133CEE7FF0C9EA0FC0312E7CAC35>82
D<913807F00691383FFE0E9138F80F9E903903E001FE903807800049C7127C131E49143C
A2491438A313F81630A26D1400A27FEB7F8014F86DB47E15F06D13FC01077F01007F141F
02011380EC003F151F150FA215071218A3150F00381500A2151EA2007C5C007E5C007F5C
397B8003E039F1F00F8026E07FFEC7FC38C00FF0272F7CAD2B>I<000FB8FCA23B1FC003
F8003F0100151F001C4A130E123C003801071406123000704A130EA20060010F140C12E0
485CA2141FC715005DA2143FA292C8FCA25CA2147EA214FEA25CA21301A25CA21303A25C
A21307A25C130F131F001FB512F0A2302D7FAC29>I<B500C090380FFFC0A2D807F8C738
01FC006C48EC00F05F4C5A5F6D4AC7FC120116065EA25E6D5C12005E5EA24B5A6D49C8FC
A2017E13065DA25D017F5BA26D5B5DA24A5A0283C9FCA2EB1F86148CA2149814F0A26D5A
5CA25C91CAFCA21306322E7CAC29>86 D<EB07E0EB1FF890387C1CE0EBF80D3801F00F38
03E007EA07C0120FD81F8013C0A2EA3F00140F481480127EA2141F00FE14005AA2EC3F02
EC3E06A25AEC7E0E007CEBFE0C14FC0101131C393E07BE18391F0E1E38390FFC0FF03903
F003C01F1F7D9D25>97 D<13F8121FA21201A25BA21203A25BA21207A25BA2120FEBC7E0
EB9FF8EBB83C381FF01EEBE01F13C09038800F80EA3F00A2123EA2007E131FA2127CA214
3F00FC14005AA2147EA2147C14FC5C387801F01303495A383C0F806C48C7FCEA0FFCEA03
F0192F7DAD1E>I<EB01F8EB0FFE90383E0780EB7C01D801F813C03803F0073807E00FEA
0FC001801380121F48C8FCA25A127EA312FE5AA51560007C14E0EC01C0EC03806CEB0F00
001E131C380F81F83807FFE0C648C7FC1B1F7D9D1F>I<151FEC03FFA2EC003FA2153EA2
157EA2157CA215FCA215F8A21401EB07E190381FF9F0EB7C1DEBF80FEA01F03903E007E0
EA07C0120FEA1F8015C0EA3F00140F5A007E1480A2141F12FE481400A2EC3F021506143E
5AEC7E0E007CEBFE0C14FC0101131C393E07BE18391F0E1E38390FFC0FF03903F003C020
2F7DAD24>I<EB03F8EB0FFE90383E0780EBF803D801F013C03803E001EA07C0000F1303
D81F8013801407393F000F00141E387F01FCEBFFF091C7FC007EC8FC12FE5AA4127C1560
15E0EC01C06CEB0380EC0F006C131C380F81F83803FFE0C648C7FC1B1F7D9D21>I<157C
4AB4FC913807C380EC0F87150FEC1F1FA391383E0E0092C7FCA3147E147CA414FC90383F
FFF8A2D900F8C7FCA313015CA413035CA413075CA5130F5CA4131F91C8FCA4133EA3EA38
3C12FC5BA25B12F0EAE1E0EA7FC0001FC9FC213D7CAE22>I<14FCEB03FF90380F839C90
381F01BC013E13FCEB7C005B1201485A15F8485A1401120F01C013F0A21403121F018013
E0A21407A215C0A2000F130F141F0007EB3F80EBC07F3803E1FF3800FF9F90383E1F0013
005CA2143EA2147E0038137C00FC13FC5C495A38F807E038F00F80D87FFEC7FCEA1FF81E
2C7E9D22>I<131FEA03FFA2EA003FA2133EA2137EA2137CA213FCA25BA21201143F9038
F1FFC09038F3C1F03803FF0001FC7F5BA2485A5BA25B000F13015D1380A2001F13035D13
00140748ECC04016C0003E130F1580007E148191381F0180007C1403ED070000FCEB0F06
151E48EB07F80070EB01E0222F7DAD29>I<1307EB0F80EB1FC0A2EB0F80EB070090C7FC
A9EA01E0EA07F8EA0E3CEA1C3E123812301270EA607EEAE07C12C013FC485A120012015B
12035BA21207EBC04014C0120F13801381381F01801303EB0700EA0F06131EEA07F8EA01
F0122E7EAC18>I<15E0EC01F01403A3EC01C091C7FCA9147CEB03FE9038078F80EB0E07
131C013813C01330EB700F0160138013E013C0EB801F13001500A25CA2143EA2147EA214
7CA214FCA25CA21301A25CA21303A25CA2130700385BEAFC0F5C49C7FCEAF83EEAF0F8EA
7FF0EA1F801C3B81AC1D>I<131FEA03FFA2EA003FA2133EA2137EA2137CA213FCA25BA2
120115F89038F003FCEC0F0E0003EB1C1EEC387EEBE07014E03807E1C09038E3803849C7
FC13CEEA0FDC13F8A2EBFF80381F9FE0EB83F0EB01F81300481404150C123EA2007E141C
1518007CEBF038ECF83000FC1470EC78E048EB3FC00070EB0F801F2F7DAD25>I<137CEA
0FFCA21200A213F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA2
1300A25AA2123EA2127EA2127CA2EAFC08131812F8A21338133012F01370EAF860EA78E0
EA3FC0EA0F000E2F7DAD15>I<27078007F0137E3C1FE01FFC03FF803C18F0781F0783E0
3B3878E00F1E01263079C001B87F26707F8013B00060010013F001FE14E000E015C0485A
4914800081021F130300015F491400A200034A13076049133E170F0007027EEC80801881
49017C131F1801000F02FCEB3F03053E130049495C180E001F0101EC1E0C183C010049EB
0FF0000E6D48EB03E0391F7E9D3E>I<3907C007E0391FE03FF83918F8783E393879E01E
39307B801F38707F00126013FEEAE0FC12C05B00815C0001143E5BA20003147E157C5B15
FC0007ECF8081618EBC00115F0000F1538913803E0300180147016E0001F010113C015E3
90C7EAFF00000E143E251F7E9D2B>I<EB01F8EB0FFF90383F078090387C03C0D801F813
E03903F001F0EA07E0D80FC013F8EB8000121F48C7FC14015A127EA2140300FE14F05AA2
EC07E0A2EC0FC0A2007CEB1F801500143E6C5B6C485A380F83E03803FF80D800FCC7FC1D
1F7D9D22>I<90387C01F89038FE07FE3901CF8E0F3A03879C0780D907B813C0000713F0
00069038E003E0EB0FC0000E1380120CA2D8081F130712001400A249130F16C0133EA201
7EEB1F80A2017C14005D01FC133E5D15FC6D485A3901FF03E09038FB87C0D9F1FFC7FCEB
F0FC000390C8FCA25BA21207A25BA2120FA2EAFFFCA2232B829D24>I<3807C01F390FF0
7FC0391CF8E0E0383879C138307B8738707F07EA607E13FC00E0EB03804848C7FCA21281
12015BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1B1F7E9D20>114
D<EB07E0EB3FF8EB781EEBF0063801E0073803C00F141FA20007131E140CEBE00013F8EB
FF806C13E06C13F06C13F8EB3FFC13011300147C0078133C12FCA2147C48137800E013F8
14F0386001E0387807C0381FFF00EA07F8181F7C9D21>I<130E131FA25BA2133EA2137E
A2137CA213FCA2B512F8A23801F800A25BA21203A25BA21207A25BA2120FA25BA2001F13
10143013001470146014E0381E01C0EB0380381F0700EA0F0EEA07FCEA01F0152B7EA919
>I<EA01E0D807F8130ED80E3C131FD81C3E5B0038143E12301270D8607E137ED8E07C13
7C12C013FC484813FC00005C12015B140100035C13E0A2020313200007ECE06013C0A216
E0020713C00003EB0FC09038E01FC191383BE1803901F071E33A007FE0FF0090381F803C
231F7E9D29>I<D801E01570D807F890381C01F8D80E3C133ED81C3E017E13FC0038147C
003015000070167CD8607E01FC1378D8E07C49133812C013FC3880F8010000163000015C
13F0020314700003166001E05BA217E00007010714C001C0EBC00117801603000316006D
486C5A160E3A01F01DF01C3A00F838F83890397FF07FF090390FC00FC02E1F7E9D33>
119 D<013F137C9038FFC1FF3A01C1E383803A0380F703C0390700F60F000E13FE4813FC
12180038EC0700003049C7FCA2EA200100005BA313035CA301075B5D14C000385CD87C0F
130600FC140E011F130C011B131C39F03BE038D8707113F0393FE0FFC0260F803FC7FC22
1F7E9D28>I<EA01E0D807F8130ED80E3C131FD81C3E133F0038143E12301270D8607E13
7ED8E07C137C12C013FC484813FC000014F812015B1401000314F013E0A21403000714E0
13C0A2140715C00003130FEBE01F143F3901F07F8038007FEFEB1F8FEB001F1500A2003E
133EA2007E5B5C387C01F0387003E0383007C0383C0F80D80FFEC7FCEA03F0202C7E9D23
>I<011E1330EB3F809038FFC07048EBE0E0ECF1C03803C0FF9038803F80903800070048
130EC75A5C5C5C495A495A49C7FC131E13385B491340484813C0485A38070001000EEB03
80380FE007391FF81F0038387FFF486C5A38601FFC38E00FF038C003C01C1F7D9D21>I
E /FC 65 124 df<DC0FF0EB0F80DC7FFEEB3FE0922601FC0FEBF878923B03F00381F03C
923B07C007C3E07C923B0F801FC7E1FC031F013F13C318CFED3F001983069F13F8037E90
390E1F80E005001400183F03FE92C7FC5DA3600201157E5DA318FE02035D0103B9FCA261
90290003F00001FCC7FC14074B5CA41703020F5D5DA31707021F5D5DA3170F023F5D92C7
FCA3171F4A5D147EA3173F02FE92C8FC5CA35F0101157E5CA35F495AA34C5A495AA2001E
02F05B007F9038C3F803010F5D00FF018713075F0207495AD8FE1F4948C9FCD8F81EEBC0
1E3A703C03803C3A787801E0F83A1FF000FFE0D807C0EB3F80465383BF38>11
D<933807FF80043F13E09338FE00F8DB01F0133EDB07E0130E4B48131F4C137F031F14FF
4BC7FCA218FE157E1878180015FE5DA31401A25DA414030103B712F0A218E0903A0003F0
00070207140F4B14C0A3171F020F15805DA2173F1800141F5D5F177EA2143F92C712FE5F
A34A1301027EECF81CA3160302FEECF03C4A1538A21878187013014A010113F018E09338
00F1C0EF7F804948EC1F0094C7FCA35C1307A2001E5B127F130F00FF5BA249CAFC12FEEA
F81EEA703CEA7878EA1FF0EA07C0385383BF33>I<DC07FCEC7FF893273FFF8003B5FC93
3CFC03C00FE007C0923D03F001E03F0001F0DB07E0D9F07CEB007092260FC0074914F893
26800FF11403031FDAF3F01307A2DB3F00EBF7E006E715F09438038FC0037ED9000FEC03
C098C7FCA2181F03FE5D5DA2183FA2020193C9FC5DA349BB12805B1C0090260003F0C700
7EC7123F6306FE147E02075D5D1BFE631701020F5D4B160163A21703021F4B13034B5FA3
05071407023F4B5CA292C7FC1A0F050FEDC0E0605C027E171F1B811CC0171F02FE4B1483
4A1980A2053FEC0F8795C714004948EF078EF203FCF200F8057E92C7FC495AA2177C17FC
5CD81E0701785B007F9038E1FC0114C126FF0FC35C0283495A160727FE1F03F85BD8F81E
9038E00F8028703C01C01ECBFC3A787800F07CD81FF0EB7FF0D807C0EB1FC0555383BF50
>14 D<EA01E0EA07F8120F13FC121FA4120FEA03D8EA0018A2133813301370136013E013
C01201EA038013005A120E5A5A5A5A5A0E1C6DBE1C>39 D<ED01801507ED0F00151C5D5D
5D14014A5A4A5A4AC7FC141E143E5C14785C1301495AA2495A5C130F49C8FCA2133EA25B
A213FC5B12015BA212035B1207A25B120FA25BA2121FA290C9FCA25AA2123EA2127EA212
7CA65AAB1278A67EA47EA2120E120F7EA26C7EA26C7E6C7E1360215A73C325>I<140315
80A2EC01C0EC00E0A21570A215781538153CA3151EA4151FA2150FA7151FA9153FA2153E
A3157EA2157CA215FCA215F8A21401A215F0A2140315E0A2140715C0A2EC0F80A2141F15
005C143EA25CA25CA2495A5C1303495A5C130F49C7FC131E5B137C5B5B485A485A485A48
C8FC121E5A12705A5A205A7FC325>I<EA01E0EA07F8120FA2EA1FFCA4EA0FF8EA0798EA
001813381330A21370136013E013C01201EA0380EA07001206120E5A5A5A5A5A0E1C7A89
1C>44 D<387FFFFEA3B5FCA21705799521>I<120FEA3FC0127FA212FFA31380EA7F0012
3C0A0A77891C>I<15FE913807FF8091381F07C091387C01F0ECF000494813F849481378
0107147C495A49C7FC167E133E137EA25BA2485AA2000315FEA25B000715FCA249130112
0FA34848EB03F8A44848EB07F0A448C7EA0FE0A316C0007E141F12FE1680153FA2481500
A2157EA25DA25D4813015D6C495A127C4A5A4A5A6C49C7FC143E6C5B380FC1F03803FFC0
C648C8FC273F76BC2E>48 D<15031507150F151F151E153E157EEC01FEEC03FC1407141F
EB01FF90380FFBF8EB1FC3EB0E07130015F0A2140FA215E0A2141FA215C0A2143FA21580
A2147FA21500A25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CEB
7FE0B612F0A215E0203D77BC2E>I<15FE913803FFC091380F01F091383C00F84A137C4A
7F4948133F49487F4A148049C7FC5BEB0E0C011E15C0EB1C0EEB3C06133813781370020E
133FD9F00C148013E0141C0218137F00011600EBC0384A13FEEC600102E05B3A00E3C003
F89039FF0007F0013C495A90C7485A5E037FC7FC15FC4A5A4A5AEC0FC04AC8FC147E14F8
EB03E0495A011FC9FC133E49141801F0143C48481438485A1678485A48C85A120E001E4A
5AD83FE0130301FF495A397C3FF01FD8780FB55AD8700391C7FCD8F0015B486C6C5A6E5A
EC07C02A3F79BC2E>I<ED7F80913803FFE091380F80F891383C007C02F87FD901E07F49
4814804948130F49C7FC010E15C0131EEB1C18EB3C1CEB380C0178141F17801370A2021C
133F6D4814004A5BD91FE0137ED90F805B90C8FC4B5A4B5A4B5AED1F8003FFC7FCECFFFC
15F0A2EC00FC153E153F8182150F82A4151FA2121E127F153F485DA3484AC7FC12F800E0
14FE5D14016C495A0070495A0078EB0FC00038495A6C017EC8FC380F01F83803FFE0C690
C9FC2A3F78BC2E>I<02C0EB018002F0130FD901FEEB7F0091B512FE5E5E4914E016804B
C7FCECBFF8D90780C8FC91C9FCA35B130EA3131E131CA3133C9038381FC0ECFFF090383B
E07C90387F003E017E133F017C7F0178805B498090C7FCA6153FA4001F147F486C5C487E
A24913FF00FF92C7FC90C7FC48495A12E04A5A5D6C495A140F00705C0078495A6C495A00
3E01FEC8FC381F03FC380FFFF0000313C0C648C9FC293F77BC2E>53
D<ED0FE0ED7FF8913801F01C913807C00E91381F800F91383E00074A131F4A137F494813
FF1303495A494813FE131F4948137891C8FC5B13FEA2485AA212035B0007EB1FC0EC7FF0
390FF1E07C9038F3803EEBF700D81FFE7F4914805B49EB0FC0123F5B151F4914E0127FA2
5BED3FC0A248C7FCA2157F16805AA215FF1600A24A5AA2485C007C495AA2007E495A4A5A
003E495A003F495A261F807EC7FC380FC1FC6CB45A6C13E0C66CC8FC283F76BC2E>I<15
7F913801FFE0913807C0F091381F007C023C133C4A133E4A131F1301495A5C1307A2495A
A2163F011F143EA2167E6E137C16F8ECE00102F013F09138F803E09138FC07C090390FFE
0F00ECFFBE6D13F86D5B7F6D7F8101037F90380F9FFFD91F0F1380D97C0713C0497E4848
6C13E03903E0007F4848133F4848131F001F140F90C7FC003E1407A2127E127CA200FC15
C05AA2ED0F80A2ED1F00153E007C143C157C007E5C6CEB03F0391F8007C0390FE03F8026
07FFFEC7FC000113F838003FC0283F78BC2E>56 D<15FF020713C091381F81E091383E00
F002FC13F84948137C495A4948137E010F143E495A133F4A133F017F147F91C7FC5BA248
5AA216FF12035B16FE150112075B1503A216FC491307A20003140F16F8151F12016D133F
0000EC7FF015EF90387C01CF90393E079FE090380FFE1FD903F813C090C7123FA2168015
7F160015FEA24A5A001C5C007F1303485C4A5A4A5A4A5A4849C7FC00F8137E00E05B6C48
5A387C07E0383FFFC06C90C8FCEA03F8283F77BC2E>I<131EEB3F80137FEBFFC05AA214
806C13005B133C90C7FCB3120FEA3FC0127FA212FFA35B6CC7FC123C122777A61C>I<17
1C173C177CA217FCA216011603A21607A24C7EA2161DA216391679167116E1A2ED01C1A2
ED038115071601150EA2031C7FA24B7EA25D15F05D4A5AA24A5AA24AC7FC5C140E5C021F
B6FC4A81A20270C7127FA25C13015C495AA249C8FCA2130E131E131C133C5B01F882487E
D807FEEC01FFB500E0017FEBFF80A25C39417BC044>65 D<49B712C018F818FE903B0003
FC0001FF9438007F804BEC3FC0A2F01FE014074B15F0180FA2140F5D181FA2021F16E05D
183F19C0023FED7F804B14FF19004D5A027F4A5A92C7EA07F0EF1FE0EF7F804AD903FEC7
FC92B512F017FE4AC7EA3F800101ED1FE04A6E7E17078401036F7E5CA30107825CA3010F
5E4A1407A260011F150F5C4D5A60013F153F4A4A5A4D5A017F4A90C7FC4C5A91C7EA0FF8
49EC3FF0B812C094C8FC16F83C3E7BBD40>I<9339FF8001C0030F13E0033F9038F80380
9239FF807E07913A03FC001F0FDA0FF0EB071FDA1FC0ECBF00DA7F806DB4FC4AC77E495A
D903F86E5A495A130F4948157E4948157C495A13FF91C9FC4848167812035B1207491670
120FA2485A95C7FC485AA3127F5BA312FF5BA490CCFCA2170FA2170EA2171E171C173C17
3817786C16706D15F04C5A003F5E6D1403001F4B5A6D4AC8FC000F151E6C6C5C6C6C14F8
6C6C495A6C6CEB07C090397FC03F8090261FFFFEC9FC010713F0010013803A4272BF41>
I<49B712C018F818FE903B0003FE0003FF9438007F804BEC1FC0F00FE0F007F014074BEC
03F8F001FCA2140F4BEC00FEA3141F4B15FFA3143F5DA3027F5D5DA219FE14FF92C81203
A34917FC4A1507A219F813034A150F19F0A20107EE1FE05CF03FC0A2010FEE7F804A1600
6060011F4B5A4A4A5A4D5AA2013F4B5A4AEC3FC04DC7FC017F15FEEE03FC4AEB0FF001FF
EC7FE0B8128004FCC8FC16E0403E7BBD45>I<49B812F8A390260003FEC7121F18074B14
031801F000F014075DA3140F5D19E0A2141F4B1338A2EF7801023F027013C04B91C7FCA2
17F0027F5CED80011603160F91B65AA3ED001F49EC07805CA3010392C8FC5CF003804C13
070107020E14005C93C75A180E010F161E4A151C183CA2011F5E5C60A2013F15014A4A5A
1707017F150F4D5A4A147F01FF913807FF80B9FCA295C7FC3D3E7BBD3E>I<49B812F0A3
90260003FEC7123F180F4B1403A2F001E014075DA3140F5D19C0A2141F5D1770EFF00302
3F02E013804B91C7FCA21601027F5CED8003A2160702FFEB1F8092B5FCA349D9003FC8FC
4A7F82A20103140E5CA2161E0107141C5CA293C9FC130F5CA3131F5CA3133F5CA2137FA2
5C497EB612E0A33C3E7BBD3B>I<49B648B6FC495DA2D9000390C7000313004B5D4B5DA2
180714074B5DA2180F140F4B5DA2181F141F4B5DA2183F143F4B5DA2187F147F4B5DA218
FF91B8FC96C7FCA292C712015B4A5DA2170313034A5DA2170713074A5DA2170F130F4A5D
A2171F131F4A5DA2173F133F4A5DA2017F157FA24A5D496C4A7EB66CB67EA3483E7BBD44
>72 D<49B6FC5BA2D9000313005D5DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA3
14FF92C7FCA35B5CA313035CA313075CA3130F5CA3131F5CA3133F5CA2137FA25C497EB6
7EA3283E7BBD23>I<4AB61280A2180091C713C0167F5FA216FF94C7FCA35D5EA315035E
A315075EA3150F5EA3151F5EA3153F5EA3157FA25EA215FFA293C8FCA25CA25DA2380F80
03EA3FC0D87FE05BA21407D8FFC05B140F01805B49485A12FC0070495A4A5A6C01FEC9FC
383C01FC380F07F03807FFC0C648CAFC314079BD30>I<49B6903807FFFE605ED9000390
C7000113E04B6E13004B15FC4E5A19E002074B5A4BEC0F804EC7FC183C020F5D4B5C4D5A
EF07C0021F4AC8FC4B131E5F5F023F5C9238C003E0EE07804CC9FC027F5B4B5AEEFF8015
81ECFF834B7FED0F7FED1E3F49017C7FECFEF89138FFE01F03C07F491380ED000F4A805C
010714074A80A21603010F815C160183131F4A6D7FA2177F013F825C173F017F82A24A81
496C4A7EB6D8800FB512C0A261473E7BBD46>I<49B612C0A25FD9000390C8FC5D5DA314
075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92C9FCA35B5CA313035C18C0EF01E0
010716C05C17031880130F4A140718005F131F4A141EA2173E013F5D4A14FC1601017F4A
5A16074A131F01FFECFFF0B8FCA25F333E7BBD39>I<49B5933807FFFC496062D90003F0
FC00505ADBBF805E1A771AEF1407033F923801CFE0A2F1039F020FEE071F020E606F6C14
0E1A3F021E161C021C04385BA2F1707F143C023804E090C7FCF001C0629126780FE0495A
02705FF00700F00E0114F002E0031C5BA2F03803010116704A6C6C5D18E019070103ED01
C00280DA03805BA2943807000F13070200020E5C5FDB03F8141F495D010E4B5CA24D133F
131E011CDAF9C05CEEFB80197F013C6DB4C7FC013895C8FC5E01784A5C13F8486C4A5CD8
07FE4C7EB500F04948B512FE16E01500563E7BBD52>I<902601FFFE020FB5FC496D5CA2
D900016D010013C04AEE3F00193E70141C193CEC07BFDB3FE01438151F1978020F7FDA0E
0F15708219F0EC1E07021C6D5CA203031401023C7FDA38015DA2701303EC780002700280
5BA2047F130702F014C04A013F91C7FCA2715A0101141F4AECF00EA2040F131E010315F8
4A151C1607EFFC3C0107140391C7143817FE040113784915FF010E16708218F0131E011C
6F5AA2173F133C01385E171F137813F8486C6F5AEA07FEB500F01407A295C8FC483E7BBD
44>I<EEFFC0030713F892383F80FE9238FC003FDA03F0EB0F804A486D7EDA1F80804AC7
6C7E027E6E7E4A81494814004948811307495A4948157F133F5C49C9FC4917805B120148
5AA212075B000F17FFA25B121F190048485DA448484B5AA34D5AA25B4D5A12FF60171F60
007F163F604D5AA24DC7FC5F003F15014C5A6D5D001F4B5A4C5A6C6C4A5A4C5A6C6C4AC8
FC000315FC6C6C495A6C6CEB07E0017FEB1F8090261FC07EC9FC903807FFF80100138039
4273BF46>I<49B77E18F018FC903B0003FE0003FEEF00FF4BEC7F80F03FC00207151F19
E05DA2020F16F0A25DA2141FF03FE05DA2023F16C0187F4B1580A2027FEDFF00604B495A
4D5A02FF4A5A4D5A92C7EA3FC04CB4C7FC4990B512FC17E04ACAFCA21303A25CA21307A2
5CA2130FA25CA2131FA25CA2133FA25CA2137FA25C497EB67EA33C3E7BBD3E>I<49B612
FCEFFF8018F0903B0003FE000FF8EF03FE4BEB00FF8419800207ED3FC05DA219E0140F5D
A3021FED7FC05DA2F0FF80143F4B15004D5A60027F4A5A4B495A4D5AEF3F8002FF02FEC7
FC92380007F892B512E01780499038000FE04A6D7E707E707E0103814A130083A213075C
A25E130F5C5F1603131F5CA3013F020714404A16E05F017F160119C04A01031303496C16
80B6D8800113079438FE0F009338007E1ECAEA3FFCEF07F03B407BBD42>82
D<92390FF001C0ED7FFE4AB5EA0380913907F80FC791390FC003EF91391F8001FF4AC713
00027E805C495A4948143EA2495AA2010F153C5CA3011F1538A38094C7FC80A214FC6DB4
FC15F015FE6DEBFFC06D14F06D14FC6D80143F020F7F020180EC001F150303007F167F16
3FA2161FA212075A5F120EA2001E153F94C7FCA2163E003E157E167C003F15FC4B5A486C
5C4B5A6D495AD87DE0EB1F80D8F8F849C8FC017F13FE39F03FFFF8D8E00F13E048C690C9
FC32427ABF33>I<48B9FCA25A903AFE001FF00101F89138E0007FD807E0163E49013F14
1E5B48C75BA2001E147FA2001C4B131C123C003814FFA2007892C7FC12704A153C00F017
38485CC716001403A25DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA25DA2
14FFA292C9FCA25BA25CA21303A25CEB0FFE003FB67E5AA2383D71BC41>I<001FB500F0
90B512F0485DA226003FF0C7380FFC004AEC03F04A5D715A017F1503A24A5DA201FF1507
95C7FC91C8FCA2485E170E5BA20003161E171C5BA20007163C17385BA2000F167817705B
A2001F16F05F5BA2003F1501A2495DA2007F1503A2495DA2160794C8FC48C8FC5E160E16
1E6C151C163C5E5E5E6C6C13014B5A001F4A5A6C6C011FC9FC6D133E6C6C13F83903FC07
F0C6B512C0013F90CAFCEB07F83C406FBD44>I<B500FE91387FFFE094B5FC19C0000301
8091380FFC0049C8EA07F000015F606095C7FC170EA25F173C17386D5DA26C5E16015F4C
5AA24CC8FC5E160E5E805E137F5E5EA24B5AA24B5A150793C9FCECC00EA2013F5B153C15
385DA25D14C15DECC38014E302E7CAFCEB1FEF14EE14FCA25CA25CA25C5C130F5CA291CB
FC130E3B406DBD44>I<277FFFFE01B500FC90B512E0B5FCA20003902680000790C7380F
FC006C90C701FCEC07F049725A04035EA26350C7FCA20407150EA2040F5D1A3C041F1538
62163B6216734F5A6D14E303014B5A6C15C303034BC8FC1683DB0703140E191E030E151C
61031C7F61ED380161157003F04A5A15E002014B5A15C0DA03804AC9FC60DA0700140E60
140E605C029C5D14B8D97FF85D5C715A5C4A5DA24A92CAFC5F91C7FC705A137E5F137C5F
137801705D53406EBD5B>I<147E49B47E903907C1C38090391F80EFC090383F00FF017E
137F4914804848133F485AA248481400120F5B001F5C157E485AA215FE007F5C90C7FCA2
1401485C5AA21403EDF0385AA21407EDE078020F1370127C021F13F0007E013F13E0003E
137FECF3E1261F01E313C03A0F8781E3803A03FF00FF00D800FC133E252977A72E>97
D<EB1FC0EA0FFF5CA2EA003FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25B
147E3907F1FF809038F783E09038EF01F013FE390FF800F8A24913FC49137C485A157E5B
15FE123FA290C7FCA248130115FC127EA2140300FE14F85AA2EC07F0A215E048130F15C0
141F15800078EB3F00127C147E003C5B383E01F8381E03E06C485A6CB4C7FCEA01F81F40
76BE2A>I<EC1FE0ECFFF8903803F03E903807C00F90381F8007D93F001380017E131F49
137F485A485A000715005B000F147E484890C7FCA2485AA3127F90C9FCA35A5AA6481403
007E5C5D151E003E5C5D6C5CEC03E0390F800F802603E07EC7FC3801FFF838003FC02129
77A72A>I<EE3F80ED1FFF1700A2ED007FA2167EA216FEA25EA21501A25EA21503A25EA2
1507A25E147E903801FF8F903807C1CF90391F80EFC090383F00FF017E137F5B48486D5A
485AA2485A000F92C7FC5B001F5CA24848137EA215FE127F90C75AA214015A485CA21403
16384814F0A21407167891380FE070127C021F13F0007E013F5B003E137FECF3E1261F01
E35B3A0F8781E3802703FF00FFC7FCD800FC133E294077BE2E>I<EC3F80903801FFE090
3807E0F890381F803CEB3E0001FC131E485A485A12074848133E49133C121F4848137C15
F8EC03F0397F000FE0ECFF80B5EAFC0014C048C8FCA45AA61506150E151E007C143C1578
6C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038007F801F2976A72A>I<167C
4BB4FC923807C78092380F83C0ED1F87161FED3F3FA2157EA21780EE0E004BC7FCA41401
5DA414035DA30103B512F8A390260007E0C7FCA3140F5DA5141F5DA4143F92C8FCA45C14
7EA414FE5CA413015CA4495AA4495AA4495A121E127F5C12FF49C9FCA2EAFE1EEAF83C12
70EA7878EA3FE0EA0F802A5383BF1C>I<EC03F0EC0FFC91383E0E1C9138FC077E903901
F003FE1303903807E001D90FC013FCEB1F80A2EB3F004914F8137E01FE1303A2484814F0
A2150712034914E0A2150F12074914C0A2151FA216805B153F1203ED7F006D5BA200015B
0000495A9038F80F7E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403A25D001C
1307007F5C48130F5D4A5A4AC7FC48137E00F85B387C03F0381FFFC0D803FEC8FC273B7C
A72A>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8
FCEC03F890387F0FFE91383E0F80D97E7813C0ECE007D9FFC013E014801400A2485A5BA2
5B0003140F16C05BA20007141F16805BA2000F143F16005B5D001F147EEDFE074913FCA2
003F0101130FEDF80E1300161E48ECF01CA2007E1538A200FE1570020013E048EC7FC000
38EC1F0028407ABE2E>I<1478EB01FCA21303A314F8EB00E01400AD137C48B4FC38038F
80EA0707000E13C0121E121CEA3C0F1238A2EA781F00701380A2EAF03F140012005B137E
13FE5BA212015BA212035B1438120713E0000F1378EBC070A214F0EB80E0A2EB81C01383
148038078700EA03FEEA00F8163E79BC1C>I<EB01FC13FF5CA21303A25CA21307A25CA2
130FA25CA2131FA25CA2133FA291C8FCED03E049EB0FF8ED3C3C017EEB707CEDE1FC9038
FE01C1EC03839038FC0703140E0001011C13F891383800E0494813001460000313E0EBF9
C0EBF78001FEC8FC1207EBFFE0EBE7F8EBE0FE000F137F6E7EEBC01F6E7E121F16701380
A2003F15F0021F13E001001380A248148116C0007EEB0F83168000FE14879138078F0048
EB03FE0038EB00F826407ABE2A>107 D<EB07F0EA03FF14E0A2EA000FA214C0A2131FA2
1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120F
A25BA2121FA25BA2123FA290C7FCA25A1307127EA2EAFE0F130E12FCA2131E131CA2EA7C
381378EA3C70EA1FE0EA0780144079BE17>I<D801F0D93F80137F3D07FC01FFE003FFC0
3D0F3E07C1F80F83F03D0E1F0F00FC1E01F8001E011C90387C3800001C49D97E707F003C
01F05C0038157F4A5C26783FC05C12704A91C7FC91C7127E00F003FE1301494A5CEA007E
A20301140301FE5F495CA203031407000160495C180F03075D0003051F13E0494A1480A2
030FEC3F810007F001C0495CA2031F91383E0380120F494AEC0700A2033F150E001FEF1E
1C4991C7EA0FF80007C7000EEC03E0432979A74A>I<D801F0EB3F803A07FC01FFE03A0F
3E07C1F83A0E1F0F00FC001E011C137C001C49137E003C13F012385C38783FC012705C91
C7FC00F015FE495CEA007EA2150101FE5C5BA2150300015D5B15075E0003020F13704914
C0A2031F13F00007ED80E05B1681EE01C0120F49EC0380A2EE0700001FEC0F0E49EB07FC
0007C7EA01F02C2979A733>I<EC1FC0ECFFF8903803F07C90380FC01FEB1F8090393F00
0F80017E14C0491307484814E0485A12075B000F15F0485AA2485AA2ED0FE0127F90C7FC
A2151F4815C05AA2ED3F80A2ED7F00A248147E007C5C007E13015D4A5A003E495A6C495A
4A5A260F803EC7FC3807C0FC3801FFF038003F80242977A72E>I<903903E001F890390F
F807FE903A1E7C1E0F80903A1C3E3C07C0013C137801389038E003E0EB783F017001C013
F0ED80019038F07F0001E015F8147E1603000113FEA2C75AA20101140717F05CA2010314
0F17E05CA20107EC1FC0A24A1480163F010F15005E167E5E131F4B5A6E485A4B5A90393F
B80F80DA9C1FC7FCEC0FFCEC03E049C9FCA2137EA213FEA25BA21201A25BA21203A2387F
FFE0B5FCA22D3A80A72E>I<027E1360903901FF81E0903807C1C390391F80E7C090383F
00F7017E137F5B4848EB3F80485AA2485A000F15005B121F5D4848137EA3007F14FE90C7
5AA3481301485CA31403485CA314074A5A127C141F007E133F003E495A14FF381F01EF38
0F879F3903FF1F80EA00FC1300143F92C7FCA35C147EA314FE5CA21301130390B512F05A
A2233A77A72A>I<D801F013FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0001EEB380F
001C1370003CEBE01F123814C0D8783F14C00070903880070092C7FC91C8FC12F05BEA00
7EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC232979A726>I<
EC7F80903801FFE0903807C0F890381F003C013E131C013C131E017C133E49137E15FEA2
000114FCA215706D13007FEBFFC014FC6C13FF15806D13C06D13E0010F13F01300140F14
071403120C123F387F80011403D8FF0013E0A300FCEB07C000F0EB0F8012700078EB1F00
6C133C381F01F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03F01307A25CA2130FA2
5CA2131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7FC13FEA25BA21201A2
5BA21203A25BA21207A25BA2120FA25BA2121F141C1380A2003F133C1438EB0078147014
F05C495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I<137C48B4141C26038F80
137EEA0707000E7F001E15FE121CD83C0F5C12381501EA781F007001805BA2D8F03F1303
140000005D5B017E1307A201FE5C5B150F1201495CA2151F0003EDC1C0491481A2153F16
83EE0380A2ED7F07000102FF13005C01F8EBDF0F00009038079F0E90397C0F0F1C90391F
FC07F8903907F001F02A2979A731>I<017CEB01C048B4EB07F038038F80EA0707000E01
C013F8121E001C1403EA3C0F0038EC01F0A2D8781F130000705BA2EAF03F91C712E01200
5B017E130116C013FE5B1503000115805BA2ED07001203495B150EA25DA25D1578000114
706D5B0000495A6D485AD97E0FC7FCEB1FFEEB03F0252979A72A>I<017C167048B49138
7001FC3A038F8001F8EA0707000E01C015FE001E1403001CEDF000EA3C0F0038177C1507
D8781F4A133C00701380A2D8F03F130F020049133812005B017E011F14784C137013FE5B
033F14F0000192C712E05BA2170100034A14C049137E17031880A2EF070015FE170E0001
0101141E01F86D131C0000D9039F5BD9FC076D5A903A3E0F07C1E0903A1FFC03FFC09027
03F0007FC7FC372979A73C>I<903903F001F890390FFC07FE90393C1E0E0F9026780F1C
138001F0EBB83FD801E013F89039C007F07FEA0380000714E0D9000F140048151C000E4A
C7FCA2001E131FA2C75BA2143F92C8FCA35C147EA314FE4A131CA30101143C001E153800
3F491378D87F811470018314F000FF5D9039077801C039FE0F7C033A7C0E3C078027783C
1E1EC7FC391FF80FFC3907E003F029297CA72A>I<137C48B4143826038F8013FCEA0707
000E7F001E1401001C15F8EA3C0F12381503D8781F14F000701380A2D8F03F1307020013
E012005B017E130F16C013FE5B151F1201491480A2153F000315005BA25D157EA315FE5D
00011301EBF8030000130790387C1FF8EB3FF9EB07E1EB00035DA21407000E5CEA3F8000
7F495AA24A5AD8FF0090C7FC143E007C137E00705B387801F0383803E0381E0FC06CB4C8
FCEA03F8263B79A72C>I<D901F01370D907FC13F0010F14E090381FFE0190393FFF03C0
49EB838090387C0FCF9039F803FF009038F0007E49133C000114386C48137890C75A4A5A
4A5A4A5A4AC7FC141E5C5C5C495A495A495A49C8FC131E4913075B5B48485B4848131E48
5A01F05BD80FFE137C391F1F81F8383E0FFFD83C075B486C5B00705CD8F00190C7FC38E0
007C24297BA725>I<B8FCA2280278982E>I E /FD 67 124 df<EDFFF8020F13FF027F80
49B612E001079038C01FF090390FFE0007D91FF8497ED93FE0131F4948497E13FF5C5A91
C7FCA2705A705AEE03C093C8FCA6EE03FCB8FCA50001903880001F160FB3AB007FD9FE03
B512F0A534407EBF3A>12 D<D80FC0EB1F80486CEB3FC0486CEB7FE0486CEBFFF0486C48
13F8A301FE14FCA3007F7F003F147F001F143FD80FDEEB1FBCD8001EEB003CA2013E147C
013C1478A2017C14F8017814F0A201F813014848EB03E0A24848EB07C04848EB0F804848
EB1F00001F5C48C7127E003E147C001C143826207DBE37>34 D<EA0FC0EA1FE0EA3FF0EA
7FF8EAFFFCA313FEA3127F123F121FEA0FDEEA001EA2133E133CA2137C1378A213F8EA01
F0A2EA03E0EA07C0EA0F80121FEA3F00121E120C0F2079BE1D>39
D<EC0780140F141FEC3E0014FE495A495A5C495A130F495A495AA249C7FC5B5B1201485A
A212075BA2120F5B121FA3485AA4127F5BA512FFB0127FA57F123FA46C7EA3120F7F1207
A27F1203A26C7E12007F7F6D7EA26D7E6D7E13076D7E806D7E6D7E143EEC1F80140F1407
195A77C329>I<127012F8127C7EEA3F806C7E6C7E12076C7E7F6C7E6C7EA2137F80133F
806D7EA280130FA280130780A36D7EA4807FA51580B01500A55B5CA4495AA35C130F5CA2
131F5CA2495A5C137F91C7FC13FEA2485A485A5B485A120F485A485A003EC8FC5A5A1270
195A7AC329>I<B612E0A91B097F9823>45 D<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA
7FF8EA3FF0EA1FE0EA0FC00E0E798D1D>I<161C163E167EA216FE16FC150116F8A21503
16F0A2150716E0150F16C0A2151F1680153F1600A25D157E15FE5DA214015DA214035D14
075DA2140F5D141F5DA2143F92C7FC5C147EA214FE5CA213015C13035CA213075C130F5C
A2131F5C133F91C8FCA25B137EA213FE5B12015BA212035B12075BA2120F5B121F5BA212
3F90C9FCA25A127E12FE5AA25A1278275B7AC334>I<ECFFE0010713FC011F13FF017F14
C0D9FFE07F489038803FF03A03FE000FF848486D7EA248486D7E001F81A348486D1380A3
007F16C0A500FF16E0B3A2007F16C0A5003F16806D5BA2001F1600A2000F5D6D13076C6C
495A6C6C495A6C6D485A6C9038E0FFE06DB55A011F91C7FC010713FC010013E02B3D7CBB
34>I<140F143F5C495A130F48B5FCB6FCA313F7EAFE071200B3B3A8B712F0A5243C78BB
34>I<903803FF80013F13F890B512FE00036E7E4881260FF80F7F261FC0037F4848C67F
486C6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A0007C7FCC8FC4B1300A25E153F
5E4B5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A5A9139FF000F80EB01FC495A
4948EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA4293C7BBB34
>I<903801FFE0010F13FE013F6D7E90B612E04801817F3A03FC007FF8D807F06D7E82D8
0FFC131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B5A5E4B5A4A5B020F5B902607
FFFEC7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F7E1780A26F13C0A217E0EA0F
C0487E487E487E487EA317C0A25D491580127F49491300D83FC0495A6C6C495A3A0FFE01
FFF86CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34>I<ED01F815031507A2150F
151F153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C14FCEB01F814F0EB03E01307
EB0FC0EB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A127E5AB812F8A5C838
7FF800AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB01F801FE133F90B6FC5E5E5E
5E93C7FC5D15F85D15C04AC8FC0180C9FCA9ECFFC0018713FC019F13FF90B67E020113E0
9039F8007FF0496D7E01C06D7E5B6CC77FC8120F82A31780A21207EA1FC0487E487E12FF
7FA21700A25B4B5A6C5A01805C6CC7123F6D495AD81FE0495A260FFC075B6CB65A6C92C7
FCC614FC013F13F0010790C8FC293D7BBB34>I<EC07FF023F13C049B512F001078049EB
03FC90383FF80090397FE001FE9038FFC0034849487E48495AA2485A120FA2485A6F5A00
3F6E5A6F5A92C8FC485AA21402EC3FFE00FF496C7E01F9B512E001FB809138E03FF89039
FF800FFC4A6C7E825B6F13804915C0A317E05BA4127FA5123FA26D15C0121FA2000F4A13
806D150012076C6C495A6C6D485A6C9038E07FF86DB55A6D5C6D1480010749C7FC010013
F02B3D7CBB34>I<121F7F13F890B712F0A45A17E017C0178017005E5E5A007EC7EA01F8
4B5A007C4A5A4B5A4B5A93C7FC485C157E5DC7485A4A5AA24A5A140F5D141F143F5D147F
A214FF92C8FC5BA25BA3495AA3130FA5131FAA6D5A6D5A6D5A2C3F7ABD34>I<903801FF
E0010F13FC013F13FF90B612C04801E07F489038003FF048486D7E000F6E7E485A6F7E12
3F48488081178012FFA217C0A517E0A4007F5CA4003F5C6C7E5D6C7E00075C3903FF80FB
6C13FF6C6C13F36D13C3010F018313C090380008031400A24B1380EA03F0487E486C1500
487E4B5AA25E151F4B5A495C6C48EBFFE049485B2607FC0F5B6CB6C7FC6C14FC6C14F06D
13C0D90FFEC8FC2B3D7CBB34>57 D<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3F
F0EA1FE0EA0FC0C7FCACEA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA
0FC00E2879A71D>I<16FCA24B7EA24B7EA34B7FA24B7FA34B7FA24B7FA34B7F157C03FC
7FEDF87FA2020180EDF03F0203804B7E02078115C082020F814B7E021F811500824A8102
3E7F027E81027C7FA202FC814A147F49B77EA34982A2D907E0C7001F7F4A80010F835C83
011F8391C87E4983133E83017E83017C81B500FC91B612FCA5463F7CBE4F>65
D<B812F8EFFF8018F018FC8426003FFCC7EA3FFF050F13807113C07113E08319F0A27113
F8A719F05FA24D13E019C04D13804D1300EF3FFE933801FFF891B712E0188018F818FE02
FCC7380FFF80050313C07113E07113F019F8F07FFCA2F03FFEA219FFA38460A419FE187F
A2F0FFFC4D13F85F4D13F0053F13E0BA12C0190018FC18F095C7FC403E7DBD4A>I<9226
07FFC0130E92B500FC131E020702FF133E023FEDC07E91B7EAE1FE01039138803FFB4990
39F80003FF4901C01300013F90C8127F4948151FD9FFF8150F48491507485B4A15034817
01485B18004890CAFC197E5A5B193E127FA349170012FFAC127F7F193EA2123FA27F6C18
7E197C6C7F19FC6C6D16F86C6D150119F06C6D15036C6DED07E0D97FFEED0FC06D6CED3F
80010F01C0ECFF006D01F8EB03FE6D9039FF801FFC010091B55A023F15E0020715800200
02FCC7FC030713C03F407ABE4C>I<B812F8EFFF8018F018FC18FF26003FFCC76C13C005
077F05017F716C7E727E727E727E721380A27213C0A27213E0A21AF084A21AF8A41AFCA5
197FA319FFA51AF8A41AF0A2601AE0A24E13C0A24E13804E1300604E5A4E5A4D485A0507
13E0057F5BBA5A4EC7FC18F818C005F8C8FC463E7DBD50>I<BAFCA4198026003FFEC712
3F1707170183183FA2181FF00FC0A31807EE07C0A3F003E0A3160F95C7FC161F163F16FF
91B6FCA54AC6FC163F161F040F147CA2160719F8A593C71201A219F01803A21807A2180F
F01FE0183F18FF1703173FBAFCA219C0A33E3D7DBC45>I<B912FEA48426003FFEC77E17
0F1703170084A284F01F80A3180FA2EE07C0A2F007C0A4040F90C7FCA2161F163F16FF91
B6FCA54AC6FC163F161F160FA21607A693C9FCACB712E0A53A3D7DBC42>I<922607FFC0
130E92B500FC131E020702FF133E023FEDC07E91B7EAE1FE01039138803FFB499039F800
03FF4901C01300013F90C8127F4948151FD9FFF8150F48491507485B4A1503481701485B
18004890CAFC197E5A5B193E127FA34994C7FC12FFAB0407B612FC127F7FA3003F92C738
3FFE00A27F7EA26C7FA26C7F6C7FA26C7F6C7FD97FFE157F6D6C7E010F01E014FF6D01F8
13036D9038FF801F010091B512F3023F15C00207ED803E02009138FE000E030701E090C7
FC46407ABE52>I<B7D8803FB612E0A526003FFEC8000FEB8000B3A491B9FCA54AC8120F
B3A7B7D8803FB612E0A54B3E7DBD52>I<B71280A526003FFEC7FCB3B3B0B71280A5213E
7DBD28>I<B76C90B6FCA526003FFEC8D801FCC7FCF007F84E5A4E5AF03F804EC8FC18FE
EF03FC4D5A4D5AEF1FC04D5A4DC9FCEE01FE4C5A4C5AEE0FE04C5A4C5A16FF4B7F4B7F5D
4B7F4B7F037F7F92B5FC6E486C7E9238F83FFF03F0804B7E4B6C7F4B6C7F0300804A7F70
7F707F84717E83717F85717F83717F85717F83727E85727F84B7D88007B612C0A54A3E7D
BD52>75 D<B712E0A526003FFEC9FCB3AD183EA4187E187CA418FCA21701A2EF03F8A217
07170F171F177FEE01FF160FB9FC18F0A4373E7DBD3F>I<B6051FB512C06F5EA26F5EA2
D8003F97C7FC6F16F7A26E6CED01E7A26E6CED03C7A36E6CED0787A26E6CED0F07A26E6C
151EA36E6D143CA26E6D1478A26E6D14F0A26F6CEB01E0A36F6CEB03C0A26F6CEB0780A2
6F6CEB0F00A36F6C131EA26F6D5AA26F6D5AA26F6D5AA393387FF1E0A293383FFBC0A270
B45AA37090C7FCA2705AA2705AB600C0031FB612C0A2705AA2705A5A3E7CBD63>I<B603
7FB512E0A2818181D8003F6D9139001F800081A281816E7E6E7F6E7F80826E7F6E7F6E7F
6E7F157F826F7F6F7F6F7F6F7F81836F7F6F7F707E701380A27013C07013E07013F07013
F87013FCA27013FEEF7FFF71139F7113DF8319FF8383838384A28484848484A284B600C0
80197F193F191FA24B3E7DBD52>I<ED3FFF0203B512F0021F14FE027F6E7E902701FFF8
0713E00107D9C00013F84990C7EA3FFCD93FFCEC0FFF49486E7F49486E7F48496E7F4A80
488448496F7EA24890C96C7E4884A249161F003F84A34848701380A400FF19C0AD007F19
806D5EA3003F1900A26D5E6C60A26C6D4B5AA26C6D4B5A6C6D4A5BA26C6D4A5B6C6D4A5B
6D6C4A5B6DB4023F90C7FC6D01C0EBFFFE0107D9F80713F8010190B612E06D5E021F4AC8
FC020314F0DA003F90C9FC42407ABE4F>I<B812F017FF18C018F018FC26003FFCC77FEF
1FFF7113807113C07113E0A27113F0A319F8A819F0A34D13E019C05F4D1380053F1300EF
FFFE91B712F860188005FCC7FC4ACAFCB3A4B77EA53D3E7DBD47>I<B87E17FCEFFF8018
F08428003FFC000113FE9338003FFF050F7F717F717FA2858385A761A25F61614D5B4D90
C8FCEF3FFE4CB45A91B712F018C04DC9FC717E9126FC000F7F040113F0707F717EA2717E
A2717EA685A6F207C019C0A271140F07E01380B76DEBF01F719038FC3F007190B5FC716C
5B061F13F8CB000113E04A3F7DBD4E>82 D<903A03FFC001C0011FEBF803017FEBFE0748
B6128F4815DF48010013FFD80FF8130F48481303497F4848EB007F127F49143F161F12FF
160FA27F1607A27F7F01FC91C7FCEBFF806C13F8ECFFC06C14FCEDFF806C15E016F86C81
6C816C816C16806C6C15C07F010715E0EB007F020714F0EC003F1503030013F8167F163F
127800F8151FA2160FA27EA217F07E161F6C16E06D143F01E015C001F8EC7F8001FEEB01
FF9026FFE00713004890B55A486C14F8D8F81F5CD8F00314C027E0003FFEC7FC2D407ABE
3A>I<003FB912FCA5903BFE003FFE003FD87FF0EE0FFE01C0160349160190C71500197E
127EA2007C183EA400FC183F48181FA5C81600B3AF010FB712F8A5403D7CBC49>I<B76C
90B61280A526003FFEC9003EC7FCB3B3A4197E011F177C80A26D17FC616D6D14014E5A6D
6D4A5A6D6D140F6D01F8EC3FC0DA7FFEECFF8091273FFFC00F90C8FC020F90B512FC0203
5D020015E0031F1480030101F8C9FC493F7DBD50>I<B600FC020FB512C0A5C66C48C938
1F8000013F95C7FC80616D173E6F157E6D177C6F15FC6D5F8118016D6D5D18036D5F6F14
076D5F6F140F027F5E81181F023F93C8FC6F5C6E153E70137E6E157C8218FC6E6D5B1701
6E5DEEF0036E5DEEF8076E5D16FC170F037F5CEEFE1F033F91C9FC705A6F133E17BE17FE
6F5BA26F5BA26F5BA26F5BA36F5BA2705AA270CAFCA24A3F7EBD4F>I<B600FE020FB512
C0A5C66C90C9381F80006D6D4BC7FC6D6D157EA26D6D5D6D6D4A5A816D4C5A6D6D4A5A81
6D4C5A6E6C4A5A6E7F4EC8FC6E6D137E6E7F606E6D485A6E13F84D5A6E6D485A6E13FE70
485A6F495A6F139F05FFC9FC6F5B815F6F5B816F5B5FB3A20207B612F8A54A3E7EBD4F>
89 D<B5FCA6EAFC00B3B3B3B3A7B5FCA6105B76C31D>91 D<017014E001F8EB01F00001
14034848EB07E04914C04848EB0F804848EB1F0048C7123EA2003E5C003C1478A2007C14
F800785CA200F81301485CA2D8F7E0EBEFC0D8FFF0EBFFE001F814F001FC14F801FE14FC
A3007F7FA36C48EB7FF86C48EB3FF06C48EB1FE06C48EB0FC0262073BE37>I<B5FCA6EA
003FB3B3B3B3A7B5FCA6105B7EC31D>I<903807FFC0013F13F848B6FC48812607FE037F
260FF8007F6DEB3FF0486C806F7EA36F7EA26C5A6C5AEA01E0C8FC153F91B5FC130F137F
3901FFFE0F4813E0000F1380381FFE00485A5B485A12FF5BA4151F7F007F143F6D90387B
FF806C6C01FB13FE391FFF07F36CEBFFE100031480C6EC003FD91FF890C7FC2F2B7DA933
>97 D<13FFB5FCA512077EAFEDFFE0020713FC021FEBFF80027F80DAFF8113F09139FC00
3FF802F06D7E4A6D7E4A13074A80701380A218C082A318E0AA18C0A25E1880A218005E6E
5C6E495A6E495A02FCEB7FF0903AFCFF01FFE0496CB55AD9F01F91C7FCD9E00713FCC700
0113C033407DBE3A>I<EC7FF00107B5FC011F14C0017F14E09039FFF01FF0489038800F
F848EB001F4848EB3FFC120F485AA2485AA2007FEC1FF849EB0FF0ED03C000FF91C7FCAB
127F7FA3003F153E7F001F157E6C6C147C6C6C14FC91388001F86C9038C003F0C69038F8
1FE06DB512C0011F14800107EBFE009038007FF0272B7DA92E>I<EE07F8ED07FFA5ED00
3F161FAFEC7FF0903807FFFE011FEBFF9F017F14DF9039FFF01FFF48EBC00348EB000148
48EB007F485A001F153F5B123FA2127F5BA212FFAA127FA37F123FA26C6C147F120F6D14
FF6C6C01037F6C6D48EBFFE06CEBF03F6C6CB512BF6D143F010713FC010001E0EBE00033
407DBE3A>I<ECFFF0010713FE011F6D7E017F809039FFE07FE0489038801FF048496C7E
48486D7E48486D7E121F491301003F81A2485A6F1380A212FFA290B7FCA401F0C9FCA512
7FA27F123FEE0F806C7E161F6C6C15006C6C5C6C6D137E6C9038E001FC6C9038F80FF801
3FB55A6D14C0010391C7FC9038007FF8292B7DA930>I<EC07FE91387FFF8049B512C001
0714E090390FFE3FF0EB1FF090393FE07FF8EB7FC013FF1480A2489038003FF0ED1FE0ED
0FC092C7FCAAB612E0A500010180C7FCB3AC007FEBFF80A525407DBF20>I<903A03FF80
07F0013F9038F83FF8499038FCFFFC48B712FE48018313F93A07FC007FC34848EB3FE100
1FEDF1FC4990381FF0F81700003F81A7001F5DA26D133F000F5D6C6C495A3A03FF83FF80
91B5C7FC4814FC01BF5BD80F03138090CAFCA2487EA27F13F06CB6FC16F016FC6C15FF17
806C16C06C16E01207001F16F0393FE000034848EB003F49EC1FF800FF150F90C81207A5
6C6CEC0FF06D141F003F16E001F0147FD81FFC903801FFC02707FF800F13006C90B55AC6
15F8013F14E0010101FCC7FC2F3D7DA834>I<13FFB5FCA512077EAFED1FF8EDFFFE0203
6D7E4A80DA0FE07F91381F007F023C805C4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A533
3F7CBE3A>I<EA01F8487E487E487E481380A66C13006C5A6C5A6C5AC8FCA913FFB5FCA5
12077EB3ABB512F8A515407CBF1D>I<13FFB5FCA512077EB092380FFFFEA5DB01FEC7FC
4B5AED07F0ED1FE04B5A4B5A4BC8FCEC03FC4A5A4A5A141FEC7FF84A7EA2818102E77F02
C37F148102007F826F7E6F7E151F6F7E826F7F6F7F816F7FB5D8FC07EBFFC0A5323F7DBE
37>107 D<13FFB5FCA512077EB3B3AFB512FCA5163F7CBE1D>I<01FFD91FF8ECFFC0B590
B5010713F80203DAC01F13FE4A6E487FDA0FE09026F07F077F91261F003FEBF801000701
3EDAF9F0806C0178ECFBC04A6DB4486C7FA24A92C7FC4A5CA34A5CB3A4B5D8FE07B5D8F0
3FEBFF80A551297CA858>I<01FFEB1FF8B5EBFFFE02036D7E4A80DA0FE07F91381F007F
0007013C806C5B4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A533297CA83A>I<EC7FF090
3803FFFE011FEBFFC0017F14F09039FFE03FF8489038800FFC3A03FE0003FE48486D7E00
0F168048486D13C0A2003F16E049147F007F16F0A400FF16F8AA007F16F0A46C6CECFFE0
A2001F16C06C6C491380A26C6C4913003A03FF800FFE6C9038E03FFC6C6CB512F0011F14
C0010791C7FC9038007FF02D2B7DA934>I<01FFEBFFE0B5000713FC021FEBFF80027F80
DAFF8113F09139FC007FF8000301F06D7E4A6D7E4A130F4A6D7E1880A27013C0A38218E0
AA4C13C0A318805E18005E6E5C6E495A6E495A02FCEBFFF0DAFF035B92B55A029F91C7FC
028713FC028113C00280C9FCACB512FEA5333B7DA83A>I<DA7FE01378902607FFFC13F8
011FEBFF01017F14819039FFF81FC3489038E007E74890388003F74890380001FF48487F
001F157F5B003F153F5B127F161FA2485AAA127F7FA36C6C143F167F121F6C6C14FF6D5B
6C6D5A6CEBC00F6CEBF03F6C6CB512BF6DEBFE3F010713F8010013C091C7FCAC030FB512
E0A5333B7DA837>I<3901FE01FE00FF903807FF804A13E04A13F0EC3F1F91387C3FF800
0713F8000313F0EBFFE0A29138C01FF0ED0FE091388007C092C7FCA391C8FCB3A2B6FCA5
25297DA82B>I<90383FFC1E48B512BE000714FE5A381FF00F383F800148C7FC007E147E
A200FE143EA27E7F6D90C7FC13F8EBFFE06C13FF15C06C14F06C806C806C806C80C61580
131F1300020713C014000078147F00F8143F151F7EA27E16806C143F6D140001E013FF90
38F803FE90B55A15F0D8F87F13C026E00FFEC7FC222B7DA929>I<EB07C0A5130FA4131F
A3133F137FA213FF5A1207001FEBFFFEB6FCA40001EBC000B3151FA96CEBE03EA2017F13
7EECF8FC90383FFFF86D13F0010713E001001380203B7EB929>I<D9FF80EB0FF8B5EB0F
FFA50007EC007F6C153FB3A5167FA316FF6C5C4B7F6C903AC007DFFFE09138F01F9F6DB5
121F6D13FE010F13F8010101E0EBE000332A7CA83A>I<B500FC90383FFFC0A5000101C0
903803E0006E1307A26C5E6E130F017F5D6E131F013F92C7FC6E5B011F143E6E137E010F
147C6E13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5BA36E90C8FCA26E5AA26E5AA2
6E5AA26E5AA232287EA737>I<B53CFC3FFFFC03FFFEA50003D980009039C0000F806E16
1F6C037F15006E496C5B6C183E836E48157E017F177C6E486D13FC013F02EF5C83DAFC07
1401011F02C75CDAFE0FEBFE03010F02835C17FFDAFF1F14076D02015C03BF148F6DD9BE
005C18CF03FE14DF6D49017F90C7FC18FF6D496D5AA36E486D5AA26E486D5AA36E486D5A
A26E486D5A47287EA74C>I<B5D8FC03B51280A5C69026E0007FC7FC6E13FE6D6C5B6D6C
485A6D6C485A010F13076D6C485AED9FC06DEBFF806D91C8FC6D5B6E5AA2143F6E7E140F
814A7F4A7F4A7F02FE7F903801FC7F49486C7E02F07F49486C7E49486C7E011F7F49486C
7FD97F008001FE6D7FB5D8C007EBFFC0A532287EA737>I<B500FC90383FFFC0A5000101
C0903803E0006E1307A26C5E6E130F017F5D6E131F013F92C7FC6E5B011F143E6E137E01
0F147C6E13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5BA36E90C8FCA26E5AA26E5A
A26E5AA26E5AA35D14075D000E130FD83F805B387FC01FD8FFE090C9FC5C143E147E5CEB
C1F8387FC3F0387E0FE06CB45A6C5B6C48CAFCEA03F8323B7EA737>I<B912E0A4330480
9A34>123 D E /FE 17 118 df[<0803B500C0EE01F00703B600FEEE03F8077FDBFFE015
070607B800FC150F063F05FF151F4DBA00E0143F050F07F8147F053F07FE14FF94BC5B04
039326F8000FECC003040F4BC86CEBF007043F03C0030F6D5A93B648C900036D5A4B03F0
9339007FFF3F030703C0051F90B5FC4B92CB7E033F02FC18034B02F08492B648844A0380
193F4A92CD7E4A4A864A4A864A02F0864A4A864A8991B65A494B874992CF7E4C885B494A
885E498B494A88A2495C8D90B65A8D5A5E48217FA24892D1FC223FA25A5DA248211FA348
5CFA0FF09FC7FCA25AA45DA3B6FCB27EA381A47EA46C80FA07F0FA0FF87EA2817EA36C6F
1D1F23F07E827E223F6D6E1EE0A26D6E1D7F23C06D6E1DFF7F705213806D806D55130070
646D6F646D6F515A6E6E1B1F6E6E515A6E6E515A6E6E1BFF6E6E505B6E6E505B6E6F4F5B
6E03E04F90C7FC6F6EF13FFE6F02FC4F5A030F02FF4E485A6F03C005075B030103F0051F
5B6F03FE057F1380043FDAFFE00303B5C8FC040F03FE033F13FC0403DBFFF80107B55A04
0093B812E0053F1A80050F4FC9FC050119F8DD003F18C0060795CAFCDE007F16F0070393
CBFCDF000314C0>141 146 115 271 168 67 D[<C21280A421C0A5C7000303C0C81201
F40007F5007F0C1F14E01E071E01787E8B8B8B8B7913F0A28B8BA2207FA3203F21F8201F
A4200FA321FC2007A4F47FC0A3F803FEA49DC7FCA31CFFA463A263A26363631B7F50B5FC
1A1F95B8FCA99538C0001F1A01747E1B1F878787A287A287A41C7FAA99CBFCB3AFBC12F8
A9>127 141 120 268 146 70 D[<BC12F8A9C7000303C0CEFCB3B3B3B3A5F8FF80A467
2100A667A368A21F07A41F0FA3555AA21F3FA21F7FA21FFFA2666668666666666653B5FC
65650B1F5C1D7F0A03B6FC1C1F0903B7FCC1FCA468A5>121 142
120 269 140 76 D[<000FC312F8A6488EA304C0C7001F4AC7120103F8C8F0000F03C01C
0192C9737E02FC1E1F4A1E0702E08A4A8A4A8A4890CA757EA249203F49201FA349200FA2
492007A4492003007F8EA4498CA848487A1380A6CC99C7FCB3B3B3B3AA030FBD12FCA9>
145 140 120 267 162 84 D<93B512FC037FECFFF00207B8FC023F17E091B912F84918
FE0107727E499126C0007F14E04901E0C7000F80496D020380496D020014FE6F6F7F90B5
70806F6F8085486E6F807380A27380A28885886C5CA26D4982886D5B6D5B010713C00101
90CAFC90CCFCA90603B7FC050FB8FC0403B9FC167F0307BAFC153F4AB7EA807F020FEDE0
00023F02FCC7FC91B612E0010392C8FC4914FC011F14F04914C0495C90B548C9FC485C48
5C485C485C5A5D485CA24891CAFCA3B6FC5CA397B6FCA461806C60F107EF6C6E150F6F16
CF6C183F6FDB7F8F806C6EDBFF0F14E06C02FCDA03FE15FE6C6E91260FFC0791B5FC6C6E
6CD93FF817806C923AF803FFF003013F91B6487E010FEF8000010394C77E010004FC141F
021F03F0140702010380DA007F1400DA000701F8CDFC695F79DD71>97
D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B296383FFFC00607B512FE063FECFFE0
4DB712F8050716FF051F17C0057F17F094B5D8C00F8004F301FCC714FE04F701E0023F7F
93B50080020F804DC86C14E005F80301804D6F804D707F05808294CA804C717F4C7180A2
4C71808BA27680A28B88A28BA28BA3888BA52080B02000A56764A267A3676467A2525CA2
67647062704D91C7FC704D5BA2714C5B7193B55A05F04B5CDCBFF84B5CDC1FFC030F5C4B
6CB44B91C8FC7001C0027F5B4B6C01F00103B55A4BC601FF013F14F04B6D90B712C04B01
1F94C9FC4B6D16FC4B010316F092C86C15804A030F02F8CAFC90CB49CBFC>113
144 121 270 129 I<94387FFFC0040FB6FC93B712E0030716FC031F16FF037F17C04AB9
12F00207DAF80380021F912680003F13FE4A49C7000F7F4A01F802038049B5486E804902
C06E6C7F494A6F7F4991C9FC49727F4949707F4B84498490B548707F5A4B198048855D48
1CC086481CE05D5A871DF05AA25D5AA21DF887A2B6FCA392BBFCA51DF00380CDFCA77EA4
817EA37EA2817EA26CF307F06FF00FF87E816C1B1F6F19F06C1B3F6D6DF07FE06D7FF4FF
C06D6E4C13806D6E5E6D02F04C13006D6EEE1FFE6D6E4C5A6D6C01FFEEFFF86E02E00203
5B6E02FC021F5B02079126FFC003B55A6E92B7C7FC020060033F17F8030F17E003011780
DB003F03FCC8FC040315C0DC000F01F8C9FC5D5F7ADD6A>101 D[<95383FFF80050FB512
F094B612FE040781041F16C0047F824BB87E0307DAF8077F031FDAC00F7F4B49C6487F4B
495B92B500F0814A4A5B4A5C4A93B612805F4A91C7FC5C5E5C5E5C731400A24C6E5B91B5
6F5BA2735B070313E00700138097C8FCB3A4BA12F8A9C702FCCBFCB3B3B3B3A2003FB9FC
A9>81 144 121 271 71 I<F5FFC093260FFFFC030F13F04BB600E0027F7F031F03FE49
B512FE037F9226FF8007800203B8EAF01F020FDDFC3F15804A7148133F027FDA003F90B5
00F014C091B500F80107ED807F4902E00101ECFC00010702806D6C5B93C87E49496F7F49
496F7F49496F6D6D1380491A8077130090B5486F6E6C5AF503F84875C8FCA2484A6F80A4
4887AB6C63A46C6E4B5CA26C63A26D6D4B5CA26D97C9FC6D6D4B5B6D6D4B5B6D6D4B5B70
5C010102E049B512E06D02F801075C4902FF013F5C4992B648CAFC496002F317F090260F
E07F1680031F4BCBFC90261FC00115E0DB000F01FCCCFC013F91CFFCA3137FA280A380A2
8080806E7E15F092B812F06DF0FFE01BFEF3FFC06D1AF81CFE767E6D1BE06D87896D1BFE
6D877F6E878A0103BD7E130F013F8890BEFC4802E0C9003F814891CBFC4801FC180F4849
0601804849727E484985884849737F88A2B55A88A66E616C65A26E616C6D4F5B6C656E61
6C6D4F5B6C6D96B55A6C6D6C05035C6F5FC602F0051F49C7FC6D01FC057F5B6DD9FF8003
03B55A010F02F8033F14E06DDAFFE0010FB65A010192B9C8FCD9003F19F8020F19E00201
96C9FCDA001F17F0030194CAFCDB000192CBFC6A887ADD74>I[<EC3FC0ECFFF0010313FC
497F497F498049804980A290B67EA24881A86C5DA26D5CA26D5C6D5C6D91C8FC6D5B6D5B
010013F0EC3FC091CAFCB3A3ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B0B91280
A9>49 144 119 271 65 105 D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B3B3
B3ACB912C0A9>50 143 119 270 65 108 D<DB3FE0913803FFFC017FB5033FEBFFE0B7
92B612F8060715FE061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF8
80D8003FDB1FE08201074B486E804D5A6D03FEC881DCE1FC815F04E385EEE7F04D81EEEF
C0A2DCFF8084A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9725D77DC81>110
D<94381FFFF00407B612C0047F15FC0303B87E030F17E0037F17FC4ABAFC4A9126FC007F
80020F02C0010714E04A49C880027F01F8033F13FC91B5486F7F4902C003077F494A6F80
4991C96C80494970804949717F49874949717FA290B548717F48884B83481D80A2481DC0
4B83481DE0A2481DF0A3484A7114F8A4481DFCA5B61BFEAF6C1DFCA56C6E4D14F8A36C1D
F0A36C1DE06F5F6C1DC0A26C6E4D1480A26C1D006F5F6C646D6D4D5B6F94B5FC6D636D6D
4C5C6D6E4B5C6D6E4B5C6D02F0031F5C6D6E4B91C7FC6D6C01FE92B512FC6ED9FFC00107
5C6E02FC017F5C020791B812C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9
FC040715C0DC001F01F0CAFC675F7ADD74>I<DB7FC049B47E90B6021F13F8B7027F13FE
4DB67E4D15E04D814D814D01077F94263FF00F7F94387FC01F4D48487FD8003F16000107
DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F16DF4D6D1400A204FFC76C5BA2735B4C6E5B
735B070013C04C92C8FCA45EA65EB3B3AAB912FCA9515D79DC5F>114
D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F010317FF130F013F9038F800
1F4990C8FCD9FFF8153F4801E0150F484915034849814890CAFC197F4848173F191F485A
A2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14FF15F06CECFF8016FCEEFF
F06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C856D84011F846D84130301
0084023F83140F020183EC001FDB007F16801603DC000F15C01700183F060F14E0007F17
03486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B006E5E6E5F6E163F6E4C5A
02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F991B7C7FCD9F07F16FCD9E0
1F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349C9FC4B5F78DD5C>I[<ED03
FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA25C5C5C5C91B5FC13035B13
1F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1616E17FE82A219076E17FC
836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF0313C06E92B512806E170003
3F5D6F5D03075D030015E0041F1480040001FCC7FC>72 132 124
258 90 I<DB0FF8F01FF0017FB594B6FCB74BB7FCA9D8003F94C77E0107190FA26D85B3
B3B063A463A263A27F6398B6FCA26DF001FB7015036EEF07F3E00FE3806E6D151FE07FC3
14FF6E6D6CDAFF83EDFFC06E6E010313036E02FCEB3FFE6E91B612FC020017F86F16E003
1F16800303EDFE00DB007F14F8040102C093C8FC725E77DC81>I
E /FF 2 112 df<D8FFFC91387FFFC07F7F0001923807FC006E6D5A6E6D5AD9DFE06D5A
A2EBCFF0EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7E
ED7F80A2ED3FC0ED1FE0ED0FF0A2ED07F8ED03FCA2ED01FEED00FF167FA2163F161F160F
487E486C1407486C1403B56C1301A21600322F7DAE38>110 D<EC1FF891B5FC903907F0
0FE090390FC003F0013FC712FC017E147E49804848EC1F804848EC0FC04848EC07E0000F
16F0491403001F16F8491401003F16FCA2007F16FE90C9FCA34816FFAA6C6CEC01FEA300
3F16FCA26D1403001F16F86C6CEC07F0A26C6CEC0FE0000316C06C6CEC1F806C6CEC3F00
017E147E6D5C90390FC003F0903907F00FE00100B5C7FCEC1FF830317BAF3A>I
E /FG 63 123 df<EC07F8EC3FFF9138FC0F80903903F003E090270FC001F01370D91F80
6D13F0017FC714E001FE804848147E000316014916C04848143F000FEE03805B001F1607
003F1700495D170E007F161E49151C173C5F00FF167090C813F05F5F5FA294C7FC7EA25E
6C5D4B7F6C6C9039079F81C0ED0F1F6C6C90383C0F836C6C01F014803C01F80FC007C700
3B007FFF0003FED91FF0EB00F834297DA73A>11 D<EE1FE0EEFFFC923803F03E92390F80
0F8092381E0007033814C003F0EB03E04A5A4A5A4A4814F092C7FC140E141E021C14074A
15E01478147002F0140F4A15C013014AEC1F80EF3F0013034A147E5F010790381FF9F091
39007FFFE09238700FC092387FFFE04990381FF1F0010E90380001F8707E83011E157E01
1C157FA3133C1338A301785D1370A301F05C5F5BA200014B5AA25F1607486C5D4C5A161F
6D5DD807B84A5A011C4AC7FC011E14FC6D495A3A0F078007E03A0E01F01F809026007FFE
C8FCEC0FF0001E90CAFC121CA3123C1238A312781270A312F05AA434527EBF33>I<EC01
C0EC0FFF023F13E0027913F0ECE03F903801C00FEC8007ED01E0010390C7FCA280130180
A280A26D7E80A2147E147F6E7EA26E7E81140FEC7FF0903801F7F8EB07C790381F83FCEB
3E03EB7C0101F87F12013803F000485AA24848137E485AA2123F90C7FCA25A127EA300FE
147C5A15FCA25D1401A25D007C13035DA26C495A4A5A6C91C7FC6C131E6C6C5A3803E078
3800FFE0EB3F8024427CC028>14 D<15FCEC03FF91380F87C091383E03E0EC7C0102F813
F01301903903F000F8495A010F14FC5C495A133F91C7FC4914FE13FEA212015B12034913
011207A25B000F15FC1503121F5BA21507003F15F890B6FCA33A7FC0000FF05BA2151F16
E048C7FCA2ED3FC0A2481580157F1600A215FEA24A5AA24A5A007E5C14075D4A5A003E5C
141F4AC7FC6C137E5C380F81F03807C3E03801FF80D8007EC8FC27417DBF2B>18
D<133F14E0EB07F0EB03FC13016D7EA3147FA26E7EA36E7EA36E7EA36E7EA36E7EA26E7E
A36E7EA3157FA36F7E157F15FF4A7F5C913807CFE0EC0F8FEC1F0F91383E07F0147C14FC
49486C7EEB03F0EB07E049486C7EEB1F80EB3F00496D7E13FE4848147F485A485A4848EC
3F80485A123F4848EC1FC048C8FC4816E048150F48ED07F0007015032C407BBE35>21
D<EB01C0496C14E00107EC03F0A3010F1407A24A14E0A2011F140FA24A14C0A2013F141F
A291C71380A249143FA2017E1500A201FE5CA249147EA2000115FE17074914FCA2150100
03160F923803F80EA200070207131E030F131C6D131F033C1338486C1370903AFF81E07C
70903AC7FF803FE0903AC1FE000F80D81FC0C9FCA25BA2123FA290CAFCA25AA2127EA212
FEA25AA35A1270303C7EA737>I<017FEC01C0D83FFFEC03E016075B1200160F17C05B16
1F00011680163F491500A20003157EA2495C150100075D4B5A49495AA2000F4A5A4B5A49
49C7FC157E001F147C5D49485AEC07E0003F495A4AC8FCEB003E14F848485AEB07C0D87E
1FC9FC13FCEAFFE0138000F8CAFC2B287CA72D>I<011FB612FE017F15FF48B8FC5A4816
FE3B0FC03801C000EA1F00003E1403003C01785B4813705AECF0075AC712E0010191C7FC
A25DEB03C0A313071480A2010F5BA2EB1F0082A2133EA2137E825B150F0001815B120315
075BC648EB038030287DA634>25 D<020FB512FE027F14FF49B7FC1307011F15FE903A3F
E03FE00090387F000F01FE6D7E4848130348488048481301485A5B121F5B123F90C7FC5A
127EA2150300FE5D5AA24B5AA2150F5E4B5AA2007C4AC7FC157E157C6C5C001E495A001F
EB07E0390F800F802603E07EC8FC3800FFF8EB3FC030287DA634>27
D<011FB612C090B7FC5A5A481680260FC007C8FC48C65A123E003C130E48131E5A5AA2C7
5AA3147CA2147814F8A4495AA31303A25CA21307A3495AA3131FA25C6DC9FC2A287DA628
>I<1678A21670A216F0A25EA21501A25EA21503A25EA21507A293C7FCA25DA2150EEDFF
C0020F13FC91383F9E3F903A01F81C0FC0D903E0EB03E0903A0FC03C01F0D91F00EB00F8
017E0138137C5B48480178133E485A48480170133F120F4901F0131F485A5D48C7FC0201
143F5A007E5CA20203147F00FE167E485C17FE020714FC1601007C020013F8EE03F0007E
49EB07E0A2003E010EEB0FC0003FED1F806C011EEB3F00D80F80147C3A07C01C01F8D803
E0EB03E03A01F03C1F80D8007E01FEC7FC90381FFFF801011380D90078C8FCA21470A214
F0A25CA21301A25CA21303A25CA21307A230527CBE36>30 D<EE01C0A21603A25FA21607
A294C7FCA25EA2160EA2161EA2161CA2163CA21638A21678017C167048B491387001FC26
03C7C0EC03FED8070314F0000F7F000E15E0121C010701011301003816004C137ED8780F
163E0070EBC003181ED8F01F5C0280151C00001407133F020090C7123C1838495B137E03
0E147801FE167049011E14F018E0031C13010001EE03C049013C148017070338EB0F006C
6C151E03785B5F017E01705B4C5A6D9038F003C0D91F80010FC7FC90390FE0E03E903903
FCE1F89039007FFFE0020790C8FCEC01C0A21403A25DA21407A292C9FCA25CA2140EA214
1EA2141CA237527EBE3B>32 D<18E00130ED03F80170ED07FC13F0485A5B120349150300
07160148CAFC187C120E121E001C173C003C021C14380038147EA20078177803FE147000
705CA218F04A4814E000F01601A24BEB03C0A24BEB07800203140F6C0107EC1F00173E6C
D91FF0137E007C013F5C007E90397FF803F83B7F83FFFE1FF0263FFFFCB5FC4A14C06C49
6C5B6C01C091C7FC6C9038001FFCD801FCEB07E036297FA739>I<121EEA7F80A2EAFFC0
A4EA7F80A2EA1E000A0A798919>58 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200
A413E013C0A312011380120313005A120E5A1218123812300B1C798919>I<1806181F18
7FEF01FFEF07FCEF1FF0EF7FC0933801FF00EE07FCEE3FF0EEFFC0030390C7FCED0FFCED
3FE0EDFF80DA03FEC8FCEC0FF8EC7FE0903801FF80D907FEC9FCEB1FF8EB7FC04848CAFC
EA07FCEA1FF0EA7FC048CBFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF8EB07FE90
3801FF809038007FE0EC0FF8EC03FE913800FF80ED3FE0ED0FFCED03FF030013C0EE3FF0
EE07FCEE01FF9338007FC0EF1FF0EF07FCEF01FFEF007F181F1806383679B147>I<ED01
80ED03C01507A21680150FA216005DA2151E153EA2153C157CA2157815F8A25D1401A25D
1403A25D1407A25D140FA24AC7FCA2141E143EA2143C147CA2147814F8A25C1301A25C13
03A25C1307A25C130FA291C8FC5BA2131E133EA25BA2137813F8A25B1201A25B1203A25B
1207A25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A1260225B7BC32D>
I<126012F812FE6C7EEA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FFCEB03FF010013C0EC3F
F0EC07FCEC01FF9138007FC0ED1FF0ED07FE923801FF809238007FE0EE1FF8EE03FE9338
00FF80EF3FE0EF0FF8EF03FEEF00FFA2EF03FEEF0FF8EF3FE0EFFF80933803FE00EE1FF8
EE7FE0923801FF80DB07FEC7FCED1FF0ED7FC04A48C8FCEC07FCEC3FF0ECFFC0010390C9
FCEB0FFCEB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC12F81260383679B147
>I<17075F84171FA2173F177FA217FFA25E5EA24C6C7EA2EE0E3F161E161C1638A21670
A216E0ED01C084ED0380171FED07005D150E5DA25D157815705D844A5A170F4A5A4AC7FC
92B6FC5CA2021CC7120F143C14384A81A24A140713015C495AA249C8FC5B130E131E4982
137C13FED807FFED1FFEB500F00107B512FCA219F83E417DC044>65
D<49B712F818FF19E090260001FEC7EA3FF0F007F84B6E7E727E850203815D1A80A20207
167F4B15FFA3020F17004B5C611803021F5E4B4A5A180FF01FE0023F4B5A4B4A5ADD01FE
C7FCEF07F8027FEC7FE092B6C8FC18E092C7EA07F84AEC01FE4A6E7E727E727E13014A82
181FA213034A82A301075F4A153FA261010F167F4A5E18FF4D90C7FC011F5E4A14034D5A
013FED1FF04D5A4AECFFC0017F020790C8FCB812FC17F094C9FC413E7DBD45>I<DC1FF8
1307923801FFFE030F9038FF800E923A7FF007E01E4A48C7EAF03EDA03FCEC787EDA0FF0
EC3CFCDA3FC0141F4A48140F4AC8FC4948ED07F8EB07F849481503131F4A16F049481501
495A13FF4890C913E05B1203485A19C0485AA2485A95C7FC123F5BA2127F5BA312FF5BA5
90CCFC183CA21838A21878187018F06C6C5E17014D5A003F5F6D15074DC7FC001F161E6C
6C5D6D5D6C6C5D00034B5AD801FEEC07C06C6C4AC8FCD97FC0137E90391FF803F80107B5
12E0010114809026001FF8C9FC40427BBF41>I<49B712F818FF19C0D9000190C7EA3FF0
F00FF84BEC03FCF000FE197F0203EE3F805DF11FC0A20207EE0FE05D1AF0A2020F16075D
A21AF8141F5DA2190F143F5DA21AF0147F4B151FA302FF17E092C9123FA21AC049177F5C
1A8019FF010318005C4E5A61010716034A5E4E5A180F010F4C5A4A5E4E5A4EC7FC011F16
FE4A4A5AEF07F8013FED0FE0EF3FC04A49B4C8FC017FEC0FFCB812F017C004FCC9FC453E
7DBD4B>I<49B912C0A3D9000190C71201F0003F4B151F190F1A80020316075DA314075D
1A00A2140F4BEB0380A205075B021FED000E4B92C7FC5FA2023F141E5D173EEE01FE4AB5
5AA3ED800102FF6D5A92C71278A34915705C191C05F0133C01034B13384A167894C71270
A2010717F04A5E180161010F16034A4B5AA2180F011F4CC7FC4A5D187E013F16FE4D5A4A
140F017F15FFB95AA260423E7DBD43>I<49B9FCA3D9000190C7120718004B157F193F19
1E14035DA314075D191CA2140F5D17074D133C021F020E13384B1500A2171E023F141C4B
133C177C17FC027FEB03F892B5FCA39139FF8003F0ED00011600A2495D5CA2160101035D
5CA293C9FC13075CA3130F5CA3131F5CA2133FA25C497EB612F8A3403E7DBD3A>I<DC3F
F0130E923803FFFE031F9038FF801C923A7FF00FC03C913B01FF0001E07CDA07FC903800
F0FCDA0FF0EC79F8DA3FC0143F4A48141F4AC8120FD903FC16F0495A49481507495A013F
17E04A1503495A49C9FC4818C05B1203485A1980485AA2485A95C7FC123F5BA2127F5BA3
12FF5BA3043FB512E0A290C8FC9339001FF800170F60A2171FA260A26C6C153FA2606C7E
177F121F6D5E6C6C15FF00075D6C6C5C6C6CDA07BFC7FC6CB4EC1F1FD97FC0EB7E0F9039
1FF803F80107B5EAE00601010280C8FC9026001FF8C9FC3F427BBF48>I<49B6D8C03FB5
12F81BF01780D900010180C7383FF00093C85B4B5EA2197F14034B5EA219FF14074B93C7
FCA260140F4B5DA21803141F4B5DA21807143F4B5DA2180F4AB7FC61A20380C7121F14FF
92C85BA2183F5B4A5EA2187F13034A5EA218FF13074A93C8FCA25F130F4A5DA21703131F
4A5DA2013F1507A24A5D496C4A7EB6D8E01FB512FCA2614D3E7DBD4C>I<49B612C05BA2
D90001EB800093C7FC5DA314035DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314
FF92C8FCA35B5CA313035CA313075CA3130F5CA3131F5CA2133FA25CEBFFE0B612E0A32A
3E7DBD28>I<49B600C090387FFFF896B5FC5FD900010180C7000F130093C813F84B16E0
1A804FC7FC0203163C4B15F84E5AF003C002074B5A4B021FC8FC183E1878020F5D4BEB03
E0EF07804DC9FC021F143E4B5B17F04C5A023F1307EDC00F4C7E163F027FEBFFF8ED81EF
ED83CF92388F87FC9138FF9F0792383C03FE15784B6C7E4913E0158092C77F5C01036F7E
5C717EA213074A6E7EA2717E130F4A6E7EA284011F15035C717E133F855C496C4A13E0B6
00E0017F13FFA34D3E7DBD4D>75 D<49B56C93383FFFF05113E098B5FCD90001F1E00070
4B5B03DF933803BF80A2F2077F1403039F040E90C7FC1A1CDB8FE05E02075F030F4C5AA2
1AE1020FEE01C1020E606F6CEC03811A83021EEE0703021C040E5BA2F11C07023C163802
38606F6C1470F1E00F14780270DB01C05BA2953803801F02F0ED07004A6C6C5E180E4E13
3F130102C04B5C601A7F01036D6C5B4A95C8FC4D5A4D485B130791C749C75A170E047F14
01495D010E4B5CA24D1303131E011C4B5C5F013C023F1407017C5D01FE92C75BD803FF4D
7EB500FC013E011FB512F8163C041C5E5C3E7DBD58>77 D<49B56C49B512F81BF0A290C7
6D9039000FFE004AEE03F0705D735A03DF150302037F038F5E82190791380787FC030793
C7FC1503705C140F91260E01FF140EA26F151E021E80021C017F141C83193C023C6D7E02
381638161F711378147802706D6C1370A2040714F002F0804A01035C8318010101EC01FF
4A5E82188313034A91387FC380A2EF3FC7010716E791C8001F90C8FC18F718FF4981010E
5E1707A2131E011C6F5AA2013C1501137C01FE6F5AEA03FFB512FC187818704D3E7DBD49
>I<EE3FF00303B5FC92391FC03FC092397E0007E0DA01F8EB01F8DA07E06D7E4A48147E
023FC87E027EED1F804A16C0D903F8150F494816E0495A4948ED07F0A2494816F849C9FC
5B48481603A2484817FCA2485A000F17075B121FA25B123F19F84848160FA44848EE1FF0
A3F03FE0A390CAEA7FC0A2F0FF80A219004D5A1703604D5A6C7E4D5A4D5A003F5F4D5A6C
6C4BC7FC17FE6C6C4A5A4C5A6C6CEC07E06C6CEC1FC06C6C4A5A6C6C02FEC8FC90393F80
03F890390FE01FE00103B5C9FC9038007FF03E427BBF45>I<49B712F018FF19C0D90001
90C76C7EF00FF84BEC03FC1801020382727E5DA214071A805DA2140F4E13005DA2021F5E
18034B5D1807023F5E4E5A4B4A5A4E5A027F4B5A06FEC7FC4BEB03FCEF3FF091B712C005
FCC8FC92CBFCA25BA25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25C49
7EB612E0A3413E7DBD3A>I<EE3FF00303B5FC92391FC03FC092397E0007E0DA01F8EB01
F8DA07E06D7E4A48147EDA3F8080027EC813804AED1FC0EB03F84948ED0FE0130F494816
F04A1507494816F8137F49C9FC485AA2484817FCA2485A120FA2485AA25B123F19F84848
160FA44848EE1FF0A3F03FE0A290CAFCF07FC0A2198018FF19004D5AA24D5A606C16074D
5A6D01F85C003FD903FE495ADA0F07495A271FC01C0349C7FC9139380180FE260FE030EB
81FCEEC3F82607F070EBC7E03B03F86000CFC0D801FCECFF80D800FE4AC8FC90393FF003
F890270FF81FE0130C0103B5FC9026007FF1141CDA00011418183882607013F017039338
FC0FE093B5FC6060A26F91C7FC5F705AEE3FF0EE0FC03E527BBF48>I<49B77E18F818FF
D90001D900017F9438003FE04BEC0FF0727E727E14034B6E7EA30207825DA3020F4B5A5D
A24E5A141F4B4A5A614E5A023F4B5A4B4A5A06FEC7FCEF03FC027FEC0FF04BEBFF8092B5
00FCC8FC5F9139FF8001FE92C7EA7F80EF1FC084496F7E4A1407A28413035CA2170F1307
5C60171F130F5CA3011F033F5B4AEE038018E0013F17071A004A021F5B496C160EB600E0
90380FF01E05075B716C5ACBEAFFE0F03F8041407DBD45>I<DB07FC131C92383FFF8092
B5EAE038913A03F803F078913A0FE000F8F8DA1F80133D4AC7EA1FF0027E140F5C494814
074A15E0130349481403A2010F16C05CA3011F1680A38094C7FC808014FE90380FFFC015
FC6DEBFFC016F86D14FE6D806D81023F800207801400030F7F1500163F707E160F1607A2
160312075A5F120EA2001E15075FA24C5A123E003F4B5AA26D4AC7FC007F157E6D5C6D49
5AD87DF0495AD8F8FCEB0FE090393F803F8027F01FFFFEC8FCD8E00713F839C0007FC036
427BBF38>I<48B912FCA25A913A0003FE000F01F84A1301D807E0EE00F8491307491778
000F5D90C7FC001E140FA2001C4B1470123C0038141FA200785D1270033F15F000F018E0
485DC81600157FA25EA215FFA293C9FCA25CA25DA21403A25DA21407A25DA2140FA25DA2
141FA25DA2143FA25DA2147FA214FF497F001FB612FCA25E3E3D7FBC35>I<B6020FB5FC
A219FE000301C0020013E06C90C9EA7F00183E183C6C5F187060A24D5A17036E5D4DC7FC
017F5D170E5FA25F17786E14705F133F4C5A4C5AA24CC8FC5E6E130E5EA2011F5C167816
705E15015E6E485AA2010F49C9FC5D150E5DA25D6E5AA201075B14F95DECFB80A202FFCA
FC5CA25C13035C5CA25CA25C40407BBD35>86 D<EC1F80ECFFE0903903F0707090390FC0
39F890381F801D90383F000F017E5C5B00011407485A48485CA2485A001F140F5E485AA2
151F007F5D5BA2153F00FF92C7FC90C7FCA25D92387E03805AA215FEEDFC07007E010114
0014035E6C0107130E140E3A1F801C7C1C000F13783A07C1F03E383A01FFC01FF03A007F
0007C029297DA730>97 D<EB1FC0EA0FFF5CA2EA003FA291C8FCA25BA2137EA213FEA25B
A21201A25BA21203A25BEC3F800007EBFFE09038F3C1F849C67E01FE137E4848133E4913
3F5B491480001F141F5B5BED3FC0123FA290C7FCA248147F1680127EA215FF00FE15005A
A24A5AA25D1403485C1407007C5C4A5A5D003C495A003E49C7FC001E137E6C13F8380783
F03803FFC0C648C8FC22407CBE27>I<EC07F0EC7FFE903801FC0F903907E0038090390F
C001C0D93F8013E090387F000701FE131F485A485A16C0485A000F15804990C7FC121F48
5AA3127F5BA312FF90C9FCA6007E1560007F15E01501ED03C06CEC07806DEB0F00001F14
1E6C6C137C3907E001F03901F01FC06CB5C7FCEB1FF023297DA727>I<EE07F0ED03FF17
E0A2ED000FA217C0A2161FA21780A2163FA21700A25EA2167EA216FEA25EEC1F80ECFFE1
903803F07190390FC039F890381F801D90383F000F137E495C00011407485A485A5E485A
001F140FA248485CA2151F127F495CA2153F12FF90C790C7FCA25DEE038048147EA215FE
1607007ED901FC130014035E6C0107130E140E3A1F801C7C1C000F13783A07C1F03E383A
01FFC01FF03A007F0007C02C407DBE2F>I<EC1FE0ECFFFC903803F01E90380FC00F9039
3F800780D97E0013C0491303EA03F8120749130748481480121F49130F003FEC1F00153E
397F8001FCEC1FF0B6128002F8C7FC90C9FCA45AA616C01501007E1403ED07806CEC0F00
151E6C5C6C6C13F83907C003E03903E03F802600FFFEC7FCEB3FE022297CA72A>I<163E
EEFFC0923803E1E0923807C0F0ED0F811687ED1F8F160F153FA217E092387E038093C7FC
A45DA514015DA30103B512FCA390260003F0C7FCA314075DA4140F5DA5141F5DA4143F92
C8FCA45C147EA414FE5CA413015CA4495AA35CEA1E07127F5C12FF495AA200FE90C9FCEA
F81EEA703EEA7878EA1FF0EA07C02C537CBF2D>I<EC01F8EC0FFE91383F07879139FC03
DF80903801F801903903F000FFEB0FE04948EB7F005C133F49C7FC49147E5B000115FEA2
48485CA215011207495CA21503120F495CA21507A25E5B0007140FA24B5A6D133F000314
7F000114FF6D485B0000EB03DF90387E0F3FEB1FFCD907F090C7FC90C7FC5DA2157EA215
FEA25D001C1301007F5C4813035D4A5A4A5A48495A00F8017EC8FC387E01FC381FFFE000
0390C9FC293B7FA72B>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA2
5CA2133FA291C9FC15FE90397F07FFC091381F03E090397E3801F09138F000F8EBFFE04A
7F5C91C7FC485AA25BA2484813015E5BA2000714035E5B1507120F5E49130F5E121F031F
1370491480A2003F023F13F0EE00E090C7FC160148023E13C01603007E1680EE070000FE
5DED1F1E48EC0FF80038EC03E02C407CBE34>I<143C14FEA21301A314FCEB00701400AD
137E3801FF803803C7C0EA0703000F13E0120E121C13071238A2EA780F007013C0A2EAF0
1F14801200133F14005B137EA213FE5BA212015B0003130E13F0A20007131EEBE01CA214
3CEBC0381478147014E013C13803E3C03801FF00EA007C173E7EBC1F>I<ED01C0ED07F0
A2150FA316E0ED038092C7FCADEC03E0EC0FF8EC3C3EEC701EECE01FEB01C001031480EB
0780140049133F010E1400131E131C013C5BA290C7127EA215FEA25DA21401A25DA21403
A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA25C147EA2001C13FE007F5B
EAFF015C495A495A48485A38F81F80D8783EC8FCEA3FF8EA0FE0245081BC25>I<EB01FC
13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C9FC16FC49EB03FE
92380F0780017EEB3C0FED703F01FE13E0913801C07F9038FC0380EC07000001010E1400
4A131C494890C7FC5C00035BEBF9C0495A01FFC9FC5A14F0EBE3FE9038E07F80000FEB1F
C06E7EEBC00781001F1303160E1380A2003F151E0207131C010013E0A2485DA2007E0103
1378167000FE01015B15F1489038007F800038023EC7FC29407CBE2F>I<EB07F0EA03FF
14E0A2EA000FA214C0A2131FA21480A2133FA21400A25BA2137EA213FEA25BA21201A25B
A21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AEB0380127EA212
FE130700FC1300A25B130EA2EA7C1C133CEA3E38EA1FF0EA07C014407DBE1B>I<D801F0
D90FF0EB03F8D807FCD93FFEEB1FFFD80F1FD9F01F90387C0F80000E903C03C00F80E007
C0271E0F87009039C3C003E0001C018E903807C780003C01DCDAEF007F003801F814EE4A
14FCD8781F5D00705B4A5CA200F04949481307013F60000090C75BA2041F140F4960017E
5D191F043F5D13FE4992C7123F97C7FC5E000195387F01C049027E147EA204FEECFE0300
0306FC1380495C1A07030103F81300000761494A150E620303163C000FF07C78494AEC3F
E0D80380D900E0EC0F804A297EA750>I<D801F0EB0FF0D807FCEB3FFED80F1FEBF01F00
0E903903C00F80271E0F87007F001C018E1307003C01DC80003813F85CEA781F00705B5C
A200F049130F013F5D000090C7FCA2161F495D137E163F94C7FC13FE495C167EA2000192
38FE03804914FCA203011307000303F813005B5FEEF00E0007161E49151C5F1778000F6E
6C5A49EC7FC0D80380021FC7FC31297EA737>I<EC07F8EC7FFE903901FC0F80903907E0
07E090390FC003F090393F8001F8EB7F0001FEEB00FC485A484814FEA2485A120F5B001F
15FF485AA2ED01FE127F5BA2150300FF15FC90C7FCA2ED07F8A2ED0FF0A2007E15E0007F
EC1FC0ED3F80A26CEC7F006C6C13FC4A5A6C6C485A3907E00FC02601F03FC7FC3800FFFC
EB1FE028297DA72C>I<D907C013FE903A0FF003FF80903A1C7C0F07E0903A383C1C03F0
903A783E7801F80170EBF0009026F03FE013FC01E05B4B13FE0001017F147E01C090C7FC
147E17FF000313FEA2C75AA201015C17FE5CA20103140317FC5CA20107EC07F8A24A14F0
160F010F15E0161F17C0EE3F80011F15006E137E5E9138B801F890393FBC03E091389E0F
C0DA07FFC7FCEC01F849C9FCA2137EA213FEA25BA21201A25BA21203A2B512E0A3303A84
A72E>I<91381F800C9138FFE01C903903F0707C90390FC0387890391F801CF890383F00
0F137E4914F000011407485A485A16E0485A121F150F484814C0A3007F141F491480A300
FF143F90C71300A35D48147EA315FE007E495A1403A26C13074A5A381F801D000F137938
07C1F33901FFC3F038007F03130014075DA3140F5DA3141F5DA2143F147F90381FFFFE5B
A2263A7DA729>I<D801F0EB3F80D807FCEBFFE03A0F1F03C0F0000E90380F00F8391E0F
9E03001C13BC003CEBF807003813F0A226781FE013F000709038C001C092C7FC5C12F013
3F000090C8FCA35B137EA313FE5BA312015BA312035BA312075BA3120F5BEA038025297E
A729>I<EC1FC0ECFFF8903803E03C903807800E90381E0007168049130F49131F153FA2
01F81400A2151C6D90C7FC7FEBFFE014FE90387FFFC06D7F6D13F86D7F13039038001FFE
14031400157E000C143E123F487EA248C7123CA25D12FC00F05C0070495A0078495A6C49
5A260F803EC7FC3803FFF838007FC021297CA72B>I<147014FC1301A25CA21303A25CA2
1307A25CA2130FA25CA2007FB512F0B6FC15E039001F8000133FA291C7FCA25BA2137EA2
13FEA25BA21201A25BA21203A25BA21207EC01C013E01403000F1480A2EBC0071500140E
141E5C000713385C3803E1E03801FF80D8003EC7FC1C3A7EB821>I<137C48B4EC038026
03C7C0EB0FC0EA0703000F7F000E151F121C010715801238163FEA780F0070491400A2D8
F01F5C5C0000157E133F91C712FEA2495C137E150113FE495CA215030001161C4914F0A2
1507173CEEE038150F031F1378000016706D133F017C017313F0017E01E313E0903A3F03
C1F1C0903A0FFF007F80D901FCEB1F002E297EA734>I<017E147848B4EB01FC2603C7C0
13FED807031303000F13E0120E121C0107130100381400167ED8780F143E00705B161EEA
F01F4A131C1200133F91C7123C16385B137E167801FE14705B16F016E0120149EB01C0A2
ED0380A2ED0700A20000140E5D6D133C017C5B6D5B90381F03C0903807FF80D901FCC7FC
27297EA72C>I<017CEE038048B40207EB0FE02603C7C090391F801FF0EA0703000F7F00
0E153F001C16000107160F003817074C1303D8780F027E130100705B1800D8F01F14FE4A
4914E01200133FDA000114014C14C05B137E0303140301FE4A14805BA2F0070000011407
494A5B180EA260A2030F5C12006D011F5C017C496C5B017E0139495A6D903870F8039028
1F81E07C0FC7FC903A07FFC01FFE010090380007F03C297EA741>I<D901F8133FD907FE
EBFFE0903A1E0F83C0F0903A3807C780F890397003CF0301E013FED801C0EBFC07120301
8013F8D8070015F0EE01C0000E4AC7FCA2001E1307A2C75BA2140F5DA3141F5DA3143F92
380001C0A34A1303001E1680003F017E1307267F80FE14005ED8FF81141ED901DF131CD8
FE035C3A7C078F80F03A3C0F07C1E03A1FFC03FF802707F0007EC7FC2D297EA734>I<13
7C48B4EC03802603C7C0EB0FC0EA0703000F7F000E151F001C168013071238163FD8780F
150000705BA2D8F01F5C4A137E1200133F91C712FE5E5B137E150113FE495CA215030001
5D5BA215075EA2150F151F00005D6D133F017C137F017E13FF90393F03DF8090380FFF1F
EB01FC90C7123F93C7FCA25DD80380137ED80FE013FE001F5C4A5AA24848485A4A5A6CC6
485A001C495A001E49C8FC000E137C380781F03803FFC0C648C9FC2A3B7EA72D>I<02F8
130ED903FE131ED90FFF131C49EB803C49EBC0784914F090397E07F1E09038F800FF49EB
1FC049EB07800001EC0F006C48131E90C75A5D5D4A5A4A5A4A5A4AC7FC143E14785C495A
495A495A49C8FC011E14E05B5B4913014848EB03C0485AD807F8EB078048B4131F3A1F87
E07F00391E03FFFE486C5B00785CD870005B00F0EB7FC048011FC7FC27297DA72A>I
E /FH 95 128 df<16E04B7EA24B7EA24B7EA24B7EA2ED1DFFA203387FA29238787FC015
709238F03FE015E002016D7E15C002036D7E158002076D7E15004A6D7E140E021E6D7E14
1C023C6D7F143802786E7E147002F06E7E5C01016F7E5C01036F7E5C01076F7E91C8FC49
6F7E130E011E6F7E131C013C6F7F13380178707E137001F0707E5B0001717E5B0003717E
5B0007717E90CAFC48717E120E001E717E001FBAFC481980A24819C0A2BB12E0A243417C
C04C>1 D<B912F8A3D87FE0C71201EE001F6C6CED07FC6C6C150117006C7E6C6C167C00
03173C7F6C7F6C6D151CA26D7E6D6C151E180E6D7E6D7EA26D6C15006D7EA26D7F6D7F6E
7EA26E7E6E7EA2140F6E5AA26E5A5D4A5A4AC9FC141E5C4A150E14F85C495A4948151E49
48151C49C9FC131E013E163C133C5B49167C484816FC485A48481501000F160748C9EA1F
F8001EED01FF003FB8FC5AB9FCA2373E7BBD42>6 D<0103B612F8A390C701E0C8FCED3F
80A8B4EF0FF001C0163FD81FE0EE7F80000F18006D5E00075FA26D150100035FAB00014C
5A7FA3606C6C1507A2017E4B5A137FD93F804A5A011F5E02C04AC7FCD90FE0147ED907F0
5CD901F8EB81F8D900FEEB87E091393FBFBF8091260FFFFEC8FC020013E0ED3F80A8EDFF
E00103B612F8A33C3E7BBD47>9 D<913801FFC0021F13FC9139FF007F80D903F8EB0FE0
D90FF0EB07F8D91FC0EB01FCD97F806DB4FC49C86C7E48486F7E00038348486F7E000F83
49150F001F83491507003F83A348486F7EAA6C6C4B5AA3001F5FA26C6C4B5AA200075F6D
151F00035FA26C6C4B5A00005FA2017F4BC7FC6D157EA26D6C5C010F5DA26D6C495A00E0
EF0380010315E0D870019238C007006E130301001580A36C0160EC000E003C017049131E
263FFFF0ECFFFEA36C5FA339407CBF42>I<4AB4EB0FE0021F9038E03FFC913A7F00F8FC
1ED901FC90383FF03FD907F090397FE07F80494801FF13FF4948485BD93F805C137F0200
ED7F00EF003E01FE6D91C7FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF
80A339407FBF35>I<4AB4FC021F13C091387F01F0903901FC0078D907F0131C4948133E
494813FF49485A137F1400A213FE6F5A163893C7FCAA167FB8FCA33900FE00018182B3AC
486CECFF80007FD9FC3F13FEA32F407FBF33>I<4AB47E021F13F791387F00FFEB01F890
3807F001EB0FE0EB1FC0EB3F80137F14008101FE80AEB8FCA3C648C77EB3AE486CECFF80
007FD9FC3F13FEA32F407FBF33>I<4AB4ECFF80021FD9C00F13E0913B7F01F03F80F890
3C01F80078FE003CD907F0D93FF8130E49484948131F49484948EB7F804948484913FF13
7F02005CA201FE92C7FC6FED7F0070141C96C7FCAAF13F80BBFCA3C648C76CC7FC197F19
3FB3AC486C4A6CEB7FC0007FD9FC3FD9FE1FB5FCA348407FBF4C>I<133E133F137F13FF
A2EA01FEEA03FCEA07F813F0EA0FE0EA1FC01380EA3E005A5A1270122010116EBE2D>19
D<006013060078131E00FC133F003F13FC381F81F8380FE7F03803FFC06C13806C130013
3C1318180B76B92D>I<B7FCA320037AB52D>22 D<121EEA7F80EAFFC0A9EA7F80ACEA3F
00AC121EAB120CC7FCA8121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A4179C019>33
D<001E130F397F803FC000FF137F01C013E0A201E013F0A3007F133F391E600F30000013
00A401E01370491360A3000114E04913C00003130101001380481303000EEB070048130E
0018130C0038131C003013181C1C7DBE2D>I<013F4C7ED9FFC04B7E2601E0E015072607
C070150F48486C4B5A023E4BC7FC48486C5D48D90FC0EB01FE003ED90EF0EB07FCDA0F3F
133E007E903A070FFFF8F8007C0200EBC1F0EE000300FC6D6C495A604D5A171F95C8FC17
3E177E177C5F16015F007C4948485A1607007E5E003E49495A020E131F003F93C9FC6C49
133E260F803C137E0238137C6C6C485B3901E0E0016CB448485AD93F0049133F90C74848
EBFFC0030F903801E0E093398007C0704B4848487E4B153C033E90381F001C4B497F03FC
133E4B150F4A48017E7F0203147C5D4A4801FCEB0380140F5D4AC7FC5C143E5C14FC5C49
5A13034948027CEB07005C4948147E011F033E5B91C8140E013E153F017E6F5B017C9238
0F803C4917380001706C5A49923801E0E0496FB45A6C48043FC7FC41497BC34C>37
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C79BE19>39 D<1430147014E0EB01C0EB03801307EB0F00131E
133E133C5B13F85B12015B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA6127C
12FCB2127C127EA6123E123FA37EA27F120FA27F1207A26C7EA212017F12007F13787F13
3E131E7FEB07801303EB01C0EB00E014701430145A77C323>I<12C07E12707E7E121E7E
6C7E7F12036C7E7F12007F1378137CA27FA2133F7FA21480130FA214C0A3130714E0A613
0314F0B214E01307A614C0130FA31480A2131F1400A25B133EA25BA2137813F85B12015B
485A12075B48C7FC121E121C5A5A5A5A145A7BC323>I<1506150FB3A9007FB912E0BA12
F0A26C18E0C8000FC9FCB3A915063C3C7BB447>43 D<121EEA7F8012FF13C0A213E0A312
7FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B1C798919>
I<B512FEA617067F961E>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<ED
0180ED03C01507A21680150FA216005DA2151E153EA2153C157CA2157815F8A25D1401A2
5D1403A25D1407A25D140FA24AC7FCA2141E143EA2143C147CA2147814F8A25C1301A25C
1303A25C1307A25C130FA291C8FC5BA2131E133EA25BA2137813F8A25B1201A25B1203A2
5B1207A25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A1260225B7BC32D
>I<EB01FE90380FFFC090383F03F090387C00F849137C48487F48487F4848EB0F80A200
0F15C04848EB07E0A3003F15F0A290C712034815F8A64815FCB3A26C15F8A56C6CEB07F0
A3001F15E0A36C6CEB0FC0A26C6CEB1F80000315006C6C133E6C6C5B017C5B90383F03F0
90380FFFC0D901FEC7FC263F7DBC2D>I<EB01C013031307131F137FEA07FFB5FC139FEA
F81F1200B3B3ACEB7FF0B612F8A31D3D78BC2D>I<EB07FC90383FFF8090B512E03903F0
1FF83907C007FC390F0001FE001E6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1F
F07FA56C5A6CC7FC120CC813E0153FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A
4A5A4AC7FC147E147C5C495A495A495A495A49C71270133E133C5B4914E0485A485A485A
48C7120148B6FCA25A4815C0B7FCA3243D7CBC2D>I<EB07FC90383FFF809038F80FE039
01E003F839078001FCD80F007F000E6D7E001E1580D81F80137F486C14C07FA27F5BA212
1F6C5AC8138015FF1600A24A5AA24A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000F
E0EC07F86E7E6E7E6E7E1680ED7FC0A216E0153FA216F0A2120C123F487E487EA316E0A2
49137F6CC713C01278EDFF807E6C4913006C495A3907C007FC3903F80FF0C6B55A013F13
80D907F8C7FC243F7CBC2D>I<150E151E153EA2157EA215FE1401A21403EC077E140614
0E141CA214381470A214E0EB01C0A2EB0380EB0700A2130E5BA25B5BA25B5B1201485A90
C7FC5A120E120C121C5AA25A5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<0006
1403D80780131F01F813FE90B5FC5D5D5D15C092C7FC14FCEB3FE090C9FCACEB01FE9038
0FFF8090383E03E090387001F8496C7E49137E497F90C713800006141FC813C0A216E015
0FA316F0A3120C127F7F12FFA416E090C7121F12FC007015C012780038EC3F80123C6CEC
7F00001F14FE6C6C485A6C6C485A3903F80FE0C6B55A013F90C7FCEB07F8243F7CBC2D>
I<EC1FE0ECFFF8903803F03E90380FC00F90391F000780133E017EEB1FC049133F484813
7F12035B12074848EB3F80ED1F00001F91C7FC5BA2123FA3485AA214FE903887FF8039FF
8F07E090389C01F09038B800FC01B0137E13F0497F16804914C0A2ED1FE0A34914F0A512
7FA6123F6D14E0A2121FED3FC0A26C6C1480A20007EC7F006C6C137E6C6C5B6C6C485A90
387E07F06DB45A010F1380D903FCC7FC243F7CBC2D>I<1238123C123F90B612FCA316F8
5A16F016E00078C712010070EC03C0ED078016005D48141E151C153C5DC8127015F04A5A
5D14034A5A92C7FC5C141EA25CA2147C147814F8A213015C1303A31307A3130F5CA2131F
A6133FAA6D5A0107C8FC26407BBD2D>I<EB03FC90381FFF8090387C07E09038F001F839
01E0007C48487F48487F48C7FCED0F80121E16C0003E1407A4123FA26DEB0F807F6C6C13
1F6D140001FC133E6C6C5B9038FF80786C6D5A6CEBF3E06CEBFF806C91C7FC133F6D13C0
6D7F013F13F801787F48486C7E3903E01FFF48486C1380260F800313C048487E48903800
7FE0003E143F007E141F007CEC0FF01507481403A31501A46C15E0007C1403A2007E15C0
6C14076CEC0F806DEB1F006C6C133ED807F05B3901FC03F86CB512E0011F1380D903FCC7
FC243F7CBC2D>I<EB03FCEB1FFF90387E07C09038FC03F048486C7E48486C7E4848137C
000F147E4848137F81003F15805B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7E
A2001F147F120F6C6C13FF6D13DF000313013900F8039F90387E0F1FD91FFE13E0EB07F0
90C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA24A5A5D49485AEB8007391E00
0FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D>I<121EEA7F80A2
EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2779A619
>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121E127FEAFF80A213C0A4127F12
1E1200A412011380A3120313005A1206120E120C121C5A1230A20A3979A619>I<007FB9
12E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C167BA147>61
D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A291380381FEA34AC6
7EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FCA24981913880
0001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA2017882170F13
FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044>65 D<B712FCEEFF8017F000
01903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171F
A318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07
FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707A218FEA718FC170FA2EF
1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A17E094C7FC373E7DBD40
>I<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007E03E9139FF8000F8D903
FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A91C81201484815001203
4848167E5B000F173EA24848161EA2123F5B180E127FA349160012FFAC127F7F180EA212
3FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117706C6C16F06EEC01E06D
6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600FF8013F891393FF007F0
020FB512C0020391C7FC9138003FF037427BBF42>I<B712FCEEFF8017E000019039C000
1FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E170184717EA21980187F19C0A3
F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5AA24D5A6017074D5A4D5AEF7FC0
4DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7DBD45>I<B912E0A300019038C0
00016C6C48EB001FEF0FF01703A217011700A31870A41838161CA41800A2163CA2167C16
FC150391B5FCA3EC80031500167C163CA2161CA21807A3180E93C7FCA4181E181CA2183C
A2187CA218F8170117031707171F48486CEB01FFB912F0A3383E7DBD3E>I<B91280A300
019038C000036C6C48EB007FEF1FC0170F1707A21703A31701A4EF00E0A21638A31800A3
1678A216F81501150791B5FCA3EC8007150115001678A21638A693C8FCAF3801FFE0B612
F0A3333E7DBD3B>I<DB3FE0130C912603FFFE131C021F9038FF803C913A7FF00FC07C91
39FF0001F0D903FC90380078FC4948143DD91FE0141F4948140F4948140701FF15034890
C8FC491501485A000716005B000F177C5B001F173CA2485AA2181C127FA25B95C7FC12FF
AB041FB512F0127FA26D9139000FFE00EF03FC123FA27F121FA26C7EA212077F12036C7E
7F6C7F6D6C14076D7E6D6C140FD907F8141ED903FEEC3C7C902600FF80EBF83C913A7FF0
07F01C021FB5EAC00C020391C8FC9138003FF03C427BBF47>I<B6D8C01FB512F8A30001
01E0C7383FFC0026007F80EC0FF0B3A691B7FCA30280C7120FB3A92601FFE0EC3FFCB6D8
C01FB512F8A33D3E7DBD44>I<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E
7EBD21>I<011FB512FCA3D9000713006E5A1401B3B3A6123FEA7F80EAFFC0A44A5A1380
D87F005B007C130700385C003C495A6C495A6C495A2603E07EC7FC3800FFF8EB3FC02640
7CBD2F>I<B600C090387FFFFCA3000101E0C7000F138026007F80913807FE0018F818E0
604D5A4DC7FC173E5F5F4C5A4C5A4C5A4C5A4CC8FC163E5E5E4B5A4B5AED07804B7E151F
4B7E4B7E15FF913881EFF8913883C7FCEC878791388F03FE91389E01FF14BCDAF8007F4A
6D7E5C4A6D7E4A6D7EA2707E707EA2707E707EA2707F717E84173F717E717EA2717E8484
19802601FFE04A13C0B600C090B6FCA3403E7DBD47>I<B612F8A3000101E0C9FC38007F
80B3B0EF0380A517071800A45FA35FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39
>I<B500C093383FFFF0A300016D93387FF800D8007F18E0D977F016EFA3D973F8ED01CF
A2D971FCED038FA3D970FEED070FA26E150E80A26E6C141CA36E6C1438A26E6C1470A36E
6C14E0A26E6CEB01C0A36E6CEB0380A36E6CEB0700A2037F130EA36F6C5AA26F6C5AA36F
6C5AA25FED07F0A2923803F9C0A36FB45AA26F90C7FCA213F8486C147ED807FFEF3FF8B5
00F8013C011FB512F0A34C3E7DBD53>I<B56C91B512F88080D8007F030713006EEC01FC
6E6E5A1870EB77FCEB73FEA2EB71FF01707FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E
6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0F
F8A2EE07FCEE03FEA2EE01FF7013F0A2177F173FA2171F170FA2170701F81503487ED807
FF1501B500F81400A218703D3E7DBD44>I<ED7FE0913807FFFE91391FC03F8091397E00
07E04948EB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E01FE6F7E000183
49150300038348486F7EA248486F7EA2001F188049167F003F18C0A3007F18E049163FA3
00FF18F0AC007F18E06D167FA4003F18C0A26C6CEEFF80A36C6C4B1300A26C6C4B5A0003
5F6D150700015F6C6C4B5A6D5E6D6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED901FCEB03F8
D9007FEB0FE091391FC03F80912607FFFEC8FC9138007FE03C427BBF47>I<B712F8EEFF
8017E000019039C0003FF86C6C48EB07FCEE01FE707EEF7F80EF3FC018E0A2EF1FF0A218
F8A818F0A2EF3FE0A218C0EF7F80EFFF004C5AEE07FCEE3FF091B612C04CC7FC0280C9FC
B3A73801FFE0B612C0A3353E7DBD3E>I<ED7FE0913807FFFE91391FC03F8091397F000F
E0D901FCEB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E498248486F7E49
150300038348486F7EA2000F834981001F1880A24848EE7FC0A3007F18E0A249163FA200
FF18F0AC007F18E0A26D167FA3003F18C0A26C6CEEFF80A3000F18006D5D0007DA0F805B
6C6C90393FE003FCED70706C6C496C485A6C6C48486C485A017FD9800E5BD93F81903806
1FC0D91FC19038073F80D90FE14AC7FCD907F1EB03FE902601FDC013F8903A007EE007E0
91271FF03FC013180207B5FC9139007FE1E0DB0001143883711378A2706C13F0EFFF0318
FFA27113E0A37113C0711380711300715AEF01F83D527BBF47>I<B712C016FCEEFF8000
01D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717EA284A760177F606017FF
95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F091388001FCED003FEE1FC0707E
707E83160383160183A383A484A4F0C004190EA28218E0057F131E2601FFE0161CB600C0
EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD43>I<D907FC130C9039
1FFF801C017FEBF03C3901FC03F83A03F0007E7CD807C0EB1FFC4848130F001F140748C7
1203003E1401007E1400A2007C157C12FCA2163CA36C151CA27EA26C6C14007F7FEA3FF8
EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0010714F0EB007F020713
F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163FA27EA3163E7E167E6C15
7C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF07F803F8090391FFFFE00
D8E00713F839C0007FC028427BBF33>I<003FB91280A3903AF0007FE001018090393FC0
003F48C7ED1FC0007E1707127C00781703A300701701A548EF00E0A5C81600B3B14B7E4B
7E0107B612FEA33B3D7DBC42>I<B600C090B512F8A3000101E0C70007130026007F80EC
01FC715A1870B3B3A4013F16F06E5DA21701011F5E80010F15036E4A5A010793C7FC6D6C
5C6D6C141E6D6C5C027F14F86E6C485A91390FF00FE00203B51280020049C8FCED1FF03D
407DBD44>I<B691380FFFFEA3000301E0020113E06C01809138007F806CEF3F00017F16
3E181C6E153C013F1638A26E1578011F1670A26D6C5DA26E140101075EA26E140301035E
A26D6C4AC7FCA2806D150EA26F131E027F141CA26F133C023F1438A26E6C5BA26F13F002
0F5CA2EDF80102075CA26E6C485AA2EDFE07020191C8FCA26F5A6E130EA2ED7F9CA216DC
ED3FF8A36F5AA36F5AA26F5AA36F5A3F407EBD44>I<B500FE017FB5D88007B5FCA30003
01C0010101E0C713F86C90C849EC3FE07148EC0F807E7215006E143F017F190E84A26D6C
60A24D7E6D6C60A2EFE7F86D6C60A2933801C3FC6E18F001076104037F6E028114010103
6104077F17006D6C4D5AA2040EEB7F806D6C4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE0
03C0161E023F171C047814F0DBE070010F133C021F173804F014F84C1307DA0FF05EA2DB
F1C0EB03FCDA07F95EA2DBFB80EB01FEDA03FF6F5AA293C8FCA26E5FA24B157F020094C8
FCA24B81037C153EA20378151E0338151C58407EBD5D>I<007FB5D8C003B512E0A3C649
C7EBFC00D93FF8EC3FE06D48EC1F806D6C92C7FC171E6D6C141C6D6C143C5F6D6C14706D
6D13F04C5ADA7FC05B023F13036F485ADA1FF090C8FC020F5BEDF81E913807FC1C163C6E
6C5A913801FF7016F06E5B6F5AA26F7E6F7EA28282153FED3BFEED71FF15F103E07F9138
01C07F0203804B6C7EEC07004A6D7E020E6D7E5C023C6D7E02386D7E14784A6D7E4A6D7F
130149486E7E4A6E7E130749C86C7E496F7E497ED9FFC04A7E00076DEC7FFFB500FC0103
B512FEA33F3E7EBD44>I<B66C0103B51280A3000101F0C8EBF8006C6C48ED3FC0725A01
3F041EC7FC6D7E606D6C15386D6C1578606D6C5D6E14016D5E6D6D1303606E6C49C8FC6E
6C5B170E6E6C131E171C6E6C5B6E6C137817706E6C13F06F5B6E13016EEB83C05FED7FC7
DB3FE7C9FC16EFED1FFE5E150F6F5AB3A4ED1FFC020FB512FCA3413E7FBD44>I<003FB7
12F8A391C7EA1FF013F801E0EC3FE00180EC7FC090C8FC003EEDFF80A2003C4A1300007C
4A5A12784B5A4B5AA200704A5AA24B5A4B5AA2C8485A4A90C7FCA24A5A4A5AA24A5AA24A
5A4A5AA24A5A4A5AA24990C8FCA2495A4948141CA2495A495AA2495A495A173C495AA248
90C8FC485A1778485A484815F8A24848140116034848140F4848143FED01FFB8FCA32E3E
7BBD38>I<EAFFFCA4EAF000B3B3B3B3ABEAFFFCA40E5B77C319>I<486C13C00003130101
001380481303000EEB070048130E0018130C0038131C003013180070133800601330A300
E01370481360A400CFEB678039FFC07FE001E013F0A3007F133FA2003F131F01C013E039
0F0007801C1C73BE2D>I<EAFFFCA4EA003CB3B3B3B3ABEAFFFCA40E5B7FC319>I<131813
3C137E13FF3801E7803803C3C0380781E0380F00F0001E137848133C48131E48130F0060
1306180D76BD2D>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A79BD19>I<EB0FF8EB
FFFE3903F01F8039078007E0000F6D7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8
FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE
038012FEA315FFA3007F5BEC03BF3B3F80071F8700261FC00E13CF3A07F03C0FFE3A01FF
F807FC3A003FC001F0292A7DA82D>97 D<EA01FC12FFA3120712031201B1EC03FC91381F
FF8091387C07E09039FDE001F09039FFC000FC4A137E91C77E49158049141F17C0EE0FE0
A217F0A2160717F8AA17F0A2160FA217E0161F17C06D1580EE3F006D5C6E13FE9039F3C0
01F89039F1E003F09039E0780FC09026C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC01
0F13E090383F00F8017C131E4848131F4848137F0007ECFF80485A5B121FA24848EB7F00
151C007F91C7FCA290C9FC5AAB6C7EA3003FEC01C07F001F140316806C6C13076C6C1400
0003140E6C6C131E6C6C137890383F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01
FC15FFA3150715031501B114FF010713E190381F80F990387E003D49131FD803F8130748
5A49130348481301121F123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F00
0714076C6C497E6C6C497ED8007C017913F890383F01F190380FFFC1903A01FE01FC002D
407DBE33>I<EB01FE90380FFFC090383F03F09038FC01F848486C7E4848137E48487F00
0F158049131F001F15C04848130FA2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F
123F16E06C7E1501000F15C06C6C13036DEB07806C6C1400C66C131E017E5B90381F80F8
903807FFE0010090C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C903807E07E90380F
C0FFEB1FC1EB3F811401137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13
FFA320407EBF1C>I<167C903903F801FF903A1FFF078F8090397E0FDE1F9038F803F838
03F001A23B07E000FC0600000F6EC7FC49137E001F147FA8000F147E6D13FE00075C6C6C
485AA23901F803E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB5
12E015FE6C6E7E6C15E06C810003813A0FC0001FFC48C7EA01FE003E140048157E825A82
A46C5D007C153E007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC9038
3FFFFC010313C0293D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE913807FFC091
381E07E091387803F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C49
7EB5D8F87F13FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01
FC127FA3120712031201B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB
01FEA2EB00781400AC147FEB7FFFA313017F147FB3B3A5123E127F38FF807E14FEA214FC
EB81F8EA7F01387C03F0381E07C0380FFF803801FC00185185BD1C>I<EA01FC12FFA312
0712031201B292B51280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8
FC143E147F4A7E13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F
7E151F826F7EA282486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FFA312071203
1201B3B3B1487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E091
3B1E07E00F03F0913B7803F03C01F80007903BE001F87000FC2603F9C06D487F00010180
5C01FBD900FF147F91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F
13FEA347287DA74C>I<3901F801FE00FF903807FFC091381E07E091387803F000079038
E001F82603F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FC
A32E287DA733>I<14FF010713E090381F81F890387E007E01F8131F4848EB0F804848EB
07C04848EB03E0000F15F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C
6CEB01FCA3001F15F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E00
90383F81FC90380FFFF0010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF809138
7C0FE09039FDE003F03A03FFC001FC6C496C7E91C7127F49EC3F805BEE1FC017E0A2EE0F
F0A3EE07F8AAEE0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE0
07F09039FC780FC0DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<02FF13
1C0107EBC03C90381F80F090397F00387C01FC131CD803F8130E4848EB0FFC1507484813
03121F485A1501485AA448C7FCAA6C7EA36C7EA2001F14036C7E15076C6C130F6C7E6C6C
133DD8007E137990383F81F190380FFFC1903801FE0190C7FCAD4B7E92B512F8A32D3A7D
A730>I<3901F807E000FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC
01FF1330491300A35BB3A5487EB512FEA31F287EA724>I<90383FC0603901FFF8E03807
C03F381F000F003E1307003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFF
C06C13F86C13FE6C7F6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A2
14017E1400A27E15F07E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01F
E01D2A7DA824>I<131CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801
FCC7FCB3A215E0A912009038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B39
7EB723>I<D801FC14FE00FF147FA3000714030003140100011400B3A51501A315031200
15076DEB06FF017E010E13806D4913FC90381FC078903807FFE00100903880FE002E297D
A733>I<B539E00FFFE0A32707FE000313006C48EB00FC5E00015D7F00005DA26D13016D
5CA26D6C485AA2ECC007011F91C7FCA290380FE00EA2ECF01E0107131CA26D6C5AA2ECFC
7801011370A2ECFEF001005BA2EC7FC0A36E5AA26EC8FCA3140E2B287EA630>I<B53BC3
FFFE03FFF8A3290FFE003FE00013C06C486D48EB3F806C4817006D010F141E00016F131C
15076D163C00004A6C1338A2017F5E4B7E151DD93F805DED3DFC1538D91FC04A5AED78FE
9238707E03D90FE0017F5BEDE03F02F0140701070387C7FC9138F1C01F02F9148F010315
CE9138FB800F02FF14DE6D15FCED00076D5DA24A1303027E5CA2027C1301023C5C023813
003D287EA642>I<B539F01FFFE0A30003D9C00F1300C690388007F8D97F0013E002805B
D93FC05B011F49C7FC90380FE00EECF01E6D6C5A01035B6D6C5A6E5AEB00FF6E5A6E5A81
141F814A7E81147BECF1FC903801E1FEECC0FF01037F49486C7ED90F007F011E6D7E013E
130F496D7E01FC80486C80000F4A7EB539803FFFF8A32D277FA630>I<B539E00FFFE0A3
2707FE000313006C48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C
48C7FCA26E5A010F130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7F
C0A36E5AA36EC8FCA2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248
485AD87E07C9FCEA780EEA3C3CEA1FF8EA07E02B3A7EA630>I<001FB61280A2EBE00001
80140049485A001E495A121C4A5A003C495A141F00385C4A5A147F5D4AC7FCC6485AA249
5A495A130F5C495A90393FC00380A2EB7F80EBFF005A5B484813071207491400485A4848
5BA248485B4848137F00FF495A90B6FCA221277EA628>I<B812F0A22C0280982D>I<01F0
1308D803FC131C48B4133848EB8070391F3FF3E0393807FFC0486C138048C61300004013
3C1E0979BC2D>126 D<001C130E007FEB3F8039FF807FC0A5397F003F80001CEB0E001A
0977BD2D>I E /FI 1 14 df<943807FFF094B67E040715F0043F15FE93B87E03039026
FC001F13E0030F0180010013F8DB3FFCC8EA1FFEDBFFE0923803FF804A018003007F4A48
CAEA3FE0DA0FF8EF0FF8DA1FE0EF03FC4A48717E4A48717E02FECCEA3F804948737E4948
737E4948737E4948737E4A19014948737E49CE127EA2017E8749757EA24848757E491B07
000389491B03000789491B01000F89491B00A2001F8990D0127CA2481D7E003E1D3EA200
7E1D3F007C89A500FC1E80481D0FAE6C1D1F007C1E00A5007E65003E1D3EA2003F1D7E6C
1D7CA26D1CFC000F65A26D1B010007656D1B030003656D1B070001656D1B0F6C6C515AA2
017E51C7FC6D1B7EA26D6C626D6C4F5A6E19036D6C4F5A6D6C4F5A6D6C4F5A6D6C4F5ADA
7F8006FFC8FC6E6C4D5A6E6C4D5ADA0FF8EF0FF8DA03FEEF3FE06E6C6CEEFFC06E01E003
035BDB3FFCDB1FFEC9FC92260FFF80ECFFF8030301FC011F13E0030090B71280043F4BCA
FC040715F004001580050701F0CBFC697079D578>13 D E /FJ 23
122 df<15E01401EC03C0EC0780EC0F00141E5C147C5C495A13035C495A130F5C131F91
C7FC133E137EA25BA2485AA25B1203A2485AA3120F5BA2121FA25BA2123FA290C8FCA35A
A5127EA312FEB3A3127EA3127FA57EA37FA2121FA27FA2120FA27F1207A36C7EA212017F
A26C7EA2137EA2133E7F80130F8013076D7E8013016D7E147C143C8080EC0780EC03C0EC
01E014001B7974D92E>40 D<12E07E12787E7E7E6C7E7F6C7E6C7E7F1200137C137E133E
133F7F6D7E80A26D7EA26D7EA2130180A26D7EA380147EA2147FA280A21580A2141FA315
C0A5140FA315E0B3A315C0A3141FA51580A3143FA21500A25CA2147EA214FE5CA3495AA2
5C1303A2495AA2495AA25C49C7FC5B133E137E137C5B12015B485A485A5B48C8FC121E5A
5A5A5A1B797AD92E>I<14075C5C147F5C1307133F000FB5FCB6FC13F913C1EAF0011200
B3B3B3A7497F010F13E0B712FEA4274F75CE3B>49 D<EC1FF891B5FC010314C090390FF0
0FE090391FC003F890397F8001FC01FEC77E0001157F4848EC3F805B0007ED1FC0484815
E0001F150F4915F0123F1607007F16F85BA217FC12FFA2160317FEA617FFA35E127FA37F
003F5DA2121F6D5C000F151B0007153B7F6C6C1473000115E36C6C1301017FEB03C3903A
3FC00F83FE010FB51203010313FC010013F091C7FC160717FCA317F8A2160F17F0A2161F
D803C015E0EA0FF0486CEC3FC01780167F170016FE150149495AD80FC0495A90C7485A6C
6C495A01E0495A2703FC01FFC7FC6CB55A6C6C13F8011F13E0010390C8FC30517BCE3B>
57 D<EE03804C7EA34C7EA34C7EA34C7EA34C7EA24C7E16E7A203017F16C3A203038016
81A2DB07017F82A2030E80177FA24B80173FA24B6D7EA20378800370130FA203F0804B13
07A20201814B7FA24A488183A24AC78083A2020E82187FA24A6F7E021FB7FC4A82A30278
C8EA1FFC0270150FA202F0824A1507A249488284A249488384A249CA7FA24984010E177F
A2011E84193F133E017F8448486C4C7E000F01E04B487EB500FE037FEBFFFEA44F557CD4
58>65 D<B7FCA439007FFE006D5A6D5AB3B3B3B0497E497EB7FCA420527BD12A>73
D<B812C017FEEFFFC018F026007FFCC713FC6D48EC0FFF011F03017F9438007FE0727E72
7E727E180785727EA28684A286A762A26097C7FCA24E5A614E5A4E5A4E5AF0FFC04D90C8
FCEF0FFEEFFFF891B712C04DC9FC839126F8000113C09338003FF0EF0FFC717EEF01FF85
717F727EA2727EA2727EA985A81B0785180FA21B0F0607140E496C82496C6F141EB76EEB
801C72EBC03C96387FE0F896381FFFF0CC000713E09638007F8050547BD156>82
D<B600FE0303B512F8A4C60280DB007F1300013F90CAEA1FF86DF00FE06D616D616D6D94
C7FC6F161E6D181C6F163C6D18386E6C16786F5E023F5F6F1501021F5F6E6C15036F4B5A
6E94C8FC6E6D5C70140E6E161E705C6E16386F6C1478701470033F15F070495A6F6C5C03
0F1403705C6F14076F6D48C9FCEFC00E6F141EEFE01C6F143C706C5AEFF870043F13F071
5AEE1FFF705B60827090CAFCB3AA5E4C13C0031FB612E0A455527FD158>89
D<ECFFC0010F13F8013F13FE9039FF00FF80D801F0EB3FE0D803C0EB0FF0486C6D7E01F8
6D7E000F816D13016F7EA3707E6C5AEA01E0C9FCA6ED3FFF020FB5FC9138FFFC7F010713
00EB1FF0EB7FC04848C7FCEA03FC485A485A485A123F5B485A187012FF90C8FCA216FFA3
5D6D14BF007F14036DEB073F6C6C90390F1FC0E06C6C131E6C6C90393C0FE1C02707FE01
F013FF0001B5486C13806C6C90398003FE00D907FCC712F834367BB43B>97
D<EC0FFE91387FFFE049B512F8903907F801FE90391FE0001FD93F80EB078049C7EA0FC0
01FE143F484815E00003157F485A485AA2485AEE3FC0003FED0F004991C7FCA2127FA35B
12FFAB127F7FA3123F6D1570121F6D15F0000F16E06D140112076C6CEC03C06D15806C6C
14076C6DEB0F00D93FC0131E6D6C137C903907FC03F06DB55AD9007F1380DA0FF8C7FC2C
367CB434>99 D<17FF4BB5FCA4ED0007160182B3A6EC0FF8EC7FFF49B512E0903907FC03
F090391FE0007C49487F49C7120F01FE80484880485A000781484880A2485AA2485AA212
7FA35B12FFAB127FA27FA2123FA27F121FA26C6C5C00075D7F6C6C5C6C6C5C6C6C021E7F
6D6C017C13E0D91FC049EBFF8090390FF807E00103B512800100495ADA1FF091C7FC3954
7CD241>I<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49C77E
4848EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8A25B
160312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716F06D
15E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01F801
01B512E06D6C1380DA07FCC7FC2D367DB434>I<EF1FC0DA3FE0EBFFE0902701FFFC0313
F001079039FF07E1F8903A1FE03FCF01903A3F800FFC03903A7F0007F80101FE010314F0
4848903901FC004000036F1300491300000781A24980000F82A8000793C7FC6D5CA20003
5D6D130100015D6C6C495A017F495A6E485A9039FFE03FC0D801C7B5C8FC01C113FC3903
803FE091CAFCA57FA27F7F7F6CB612E016FF6C16C017F0013F15FC8390B8FCD803F8C700
1F1380D80FE0020113C04848EC007F4848ED1FE090C9120F127EEF07F012FE481603A56C
1607007E17E0007F160F6C6CED1FC06C6CED3F806C6CED7F006C6C15FED803FCEC03FCC6
B4EC0FF0D93FF0EBFFC0010FB6C7FC010114F8D9001F1380354E7DB43B>103
D<EB7F80B5FCA41203C6FC137FB3A6ED07FC92383FFF8092B512E0913981F00FF8913983
C007FC9139870003FE028E1301029C6D7E14B814B002F06E7E5CA25CA35CB3AD2601FFE0
903801FFE0B600C0B612C0A43A537CD241>I<1378EA01FE487E487FA66C90C7FC6C5AEA
007890C8FCB0EB7F80B5FCA41203C6FC137FB3B3A43801FFE0B61280A419507CCF21>I<
EB7F80B5FCA41203C6FC137FB3B3B3B13801FFE0B612C0A41A537CD221>108
D<01FFD907FEEC03FFB590261FFFC0010F13E0037F01F0013F13F8912701F80FFC9038FC
07FE913D03C003FE01E001FF000390260700019038038000C6010E6D6C48C76C7E6D48DA
7F8E6E7E4A159CA24ADA3FF86E7E02605D14E04A5DA34A5DB3AD2601FFE0DAFFF0EC7FF8
B6D8C07F9026FFE03FB512F0A45C347CB363>I<01FFEB1F80B5EB7FF0913801FFF89138
03E1FC91380783FE0003EB0F07C6131EEB7F1C1438143091387003FC91386000F0160014
E05CA45CB3AA8048487EB612F0A427347DB32E>114 D<D907FE13C090387FFF8148B512
E33907F803FF390FC0007F4848133F48C7121F003E140F007E1407127C00FC1403A31501
7EA27E7F6C6C90C7FC13F013FF6C13F86CEBFF806C14E06C14F86C14FEC680013F148001
0714C0D9003F13E014039138007FF0151F00E0140FED07F8A26C1403A215017EA36C15F0
A26C14036C15E015076DEB0FC06DEB1F80D8FDF0EB3F0039F8FC01FE39F07FFFF8D8E01F
13E0D8C00390C7FC25367CB42E>I<EB01C0A71303A41307A3130FA2131FA2133F137F13
FF5A5A001F90B512E0B7FCA326003FC0C7FCB3A71638AC6E1378011F1470A26D6C13F016
E0903807F801903903FC03C0903901FE07806DB51200EC3FFCEC07F0254B7EC92E>I<D9
7F80EC7F80B591B5FCA400031503C61500017F157FB3AC17FFA35EA3013F5C6EEB077FA2
011F020E7F6D6C011C13F06E0178EBFFC0903903FC01F06DB512E06D6C1380912607FC00
EB80003A357CB341>I<B60103B51280A4000301F09039007FF800C601C0EC3FE0017FED
1F8095C7FC133F171E6D7E171C6E143C010F1538A26E1478010715708001035DA26E1301
01015D806D4A5AA2ED8007027F91C8FC15C0023F130EA2EDE01E021F131CA26E6C5AA2ED
F87802071370A26E6C5AA215FF6E5BA26E5BA36FC9FCA2153EA3151C39347EB23E>I<B6
0103B51280A4000301F09039007FF800C601C0EC3FE0017FED1F8095C7FC133F6E141E13
1F171C6E143C010F15388001075DA26E14F001035D8001014A5AA26E13036D5D1580027F
49C8FCA26F5A023F130E15E0021F5BA2EDF03C020F133815F802075BA2EDFCF002035B15
FE6E6C5AA36E5BA26FC9FCA3153EA2151CA2153C153815781570A215F05D14015DA2003E
495A127F486C48CAFCA2140E141E495A6C5B007C5B383F03E06CB45A00075BD801FCCBFC
394B7EB23E>121 D E /FK 45 127 df<4AB4FC020F13E091387F80F8903901FC001C49
487FD907E0130F4948137F011FECFF80495A49C7FCA25B49EC7F00163E93C7FCACEE3F80
B8FCA3C648C7FC167F163FB3B0486CEC7FC0007FD9FC1FB5FCA330467EC536>12
D<131F1480133F137FA2EBFF00485A485A5B485A485A138048C7FC123E123C5A12E01240
11126CC431>19 D<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B13
F85B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127CA3
127EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780
EB03C01301EB00E014701438141C140C166476CA26>40 D<12C07E12707E7E7E120F6C7E
6C7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0A2
1301A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80A3
EB1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A16647B
CA26>I<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3
204278C131>49 D<14FF010713E0011F13F890387F80FC9038FC007E48487F4848EB1F80
4848EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FCA25AA216FE1500A516
FFA46C5CA36C7E5D121F7F000F5C6C6C1306150E6C6C5B6C6C5BD8007C5B90383F01E090
390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F801307486C14E0486C13
0F16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A3907E01FE06CB51280C6
49C7FCEB1FF028447CC131>57 D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FFA2
03707FED607FA203E07FEDC03FA2020180ED801FA2DA03007F160FA20206801607A24A6D
7EA34A6D7EA34A6D7EA20270810260147FA202E08191B7FCA249820280C7121FA249C87F
170FA20106821707A2496F7EA3496F7EA3496F7EA201788313F8486C83D80FFF03037FB5
00E0027FEBFFC0A342477DC649>65 D<B8FC17E017FC00019039C00003FF6C6C4801007F
EF3FC0717E717E717E84170384170184A760A21703601707604D5A4D5AEF7FC04DC7FCEE
03FEEE3FF091B65A17FC0280C7B47EEF1FC0EF0FF0717E717E717E717E1980187F19C0A2
183F19E0A8F07FC0A2198018FF4D1300A24D5AEF0FFC4D5AEF7FE048486C903803FFC0B9
C7FC17FC17C03B447CC345>I<DB0FFE146092B500C013E0020314F0913A0FFC01FC0191
393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E74948EC00FF4948157F4948153F49
48151F49C9120F485A491607120348481603A248481601A248481600A2123FA249176012
7FA31900485AAE6C7EA21960A2123F7FA2001F18E07F000F18C0A26C6C160119806C6C16
0312016DEE07006C6C16066D6C150E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC
0780DA3FC0011FC7FCDA0FFC13FC0203B512F0020014C0DB0FFEC8FC3B487BC546>I<B8
FC17F017FC00019039C00007FF6C499038007FC0017FED1FE0EF07F0EF03FC717E717E84
727E727E727EA2727E85180385A2180185A38584A31A80AD1A00A36061A3611803611807
61180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FFED7FC0486DD907FFC8FCB812
FC17F094C9FC41447CC34B>I<B912F8A3000101C0C7127F6C6C48EC07FC17011700187C
183C181CA284A31806A4180704067FA395C7FCA4160EA2161E163E16FE91B5FCA3EC8000
163E161E160EA21606A319C0A3F0018093C7FCA41803A21900A260A260A2181EA2183E18
7EEF01FE170748486C147FB95AA33A447CC342>I<DB0FFE146092B500C013E0020314F0
913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E74948EC00FF49
48157F4948153F4948151F49C9120F485A491607120348481603A248481601A248481600
A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA293C7387FF000725A003F171F7F
A2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F6D7E6D6C157F6D6C15E7D903FE
EC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203B500F81360020002E090C7FCDB
0FFEC9FC42487BC54D>71 D<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E497EB612F0A3
1C447DC323>73 D<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF
01C0A217031707A2170F173F177FEE01FF48486C011F1380B9FCA334447CC33D>76
D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3
D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C
1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F
6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB5
00F0011C0107B512FCA34E447BC359>I<B56C020FB5FC8080C6040013F06D6CED1F80D9
6FF8ED0F00A2D967FC1506EB63FEA2EB61FF01607FA26E7E6E7EA26E7E6E7EA26E7E6E7E
A26E7E6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1F
F0EE0FF8A2EE07FCEE03FEA2EE01FF701386A2EF7FC6EF3FE6A2EF1FF6EF0FFEA2170717
03A217011700A201F0167E183E487ED80FFF161EB500F0150EA2180640447CC349>I<ED
1FFC4AB512C0913907F007F091391F8000FC027EC7123FD901F8EC0FC049486E7E49486E
7E49486E7E49486E7E49C9127E017E8201FE834848707E4848707EA24848707EA2000F84
491603001F84A24848707EA3007F84A24982A300FF1980AD6C6C4C1300A4003F606D1603
A2001F60A26C6C4C5AA26C6C4C5AA20003606D161F6C6C4C5A000060017F4CC7FC6E5D01
3F5E6D6C4A5AD907E0EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8FCDA1F8013FC913907
F007F00201B512C09126001FFCC9FC41487BC54C>I<B712FCEEFFC017F800019039C000
0FFC6C6C48EB01FF9338007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718
FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F0178002
80C9FCB3AA3801FFE0B612C0A338447CC342>I<B712E016FF17C000019039C0003FF86C
6C48EB03FCEE00FF717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D5A
4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE03FC707E1600
83717EA2717EA784A71A6084171FA21AE0716C13C02601FFE002071301B600C016809438
01FC03943900FE0700CBEA3FFEF007F843467CC348>82 D<49B41303010FEBE007013F13
F89039FE00FE0FD801F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E8112
7E82127C00FC81A282A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEB
FFE06C14FC6C14FF6C15C0013F14F0010F80010180D9001F7F14019138001FFF03031380
816F13C0167F163F161F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C1600
6C5D6D147ED8FBC05CD8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC
39C0003FF02B487BC536>I<003FB912F8A3903BF0001FF8001F01806D481303003EC715
0048187C0078183CA20070181CA30060180CA5481806A5C81600B3B3A54B7EED7FFE49B7
7EA33F447DC346>I<B600C0010FB5FCA3000101E0C813F026007F80ED1F80F00F00A218
06B3B3A7180E6D6C150CA2181C131F6E1518010F163818306D6C1570606D6C14016D6C5D
6D6CEC0780027F4AC7FC6E6C131EDA1FE0137C913907FC03F00201B55A6E6C1380DB07FC
C8FC40467CC349>I<B692383FFFF0A3000301E003071300C649ED01FC4A5E017F705A6E
5E133F616E1501011F5FA26D6C4BC7FCA28001071606A26E150E0103160CA26D6C5DA280
6D5EA26F1470027F156081023F5DA281021F4A5AA26F1303020F92C8FC8102071406A26F
130E0203140CA26E6C5BA2816E5CA2EE8070037F1360A26F6C5AA216E092381FE180A216
F3030F90C9FC16FBED07FEA36F5AA36F5AA26F5AA3166044467EC349>I<B66C91380FFF
FCA3000101F8C8000313C026007FE0923800FE0061013F17F06D6C5E80010F5F6D6C4B5A
18036D6C93C7FC6E15066D160E6D6D140C181C6E6C14186E6C5C18706E6C146018E06E6C
5C6E6C495A17036E6C91C8FC5F6E6C13066E6D5A171C92387FC0185FED3FE06F6C5A17E0
6F6C5AEEF980ED07FF6F90C9FCA26F5AB3A6923807FF800203B6FCA346447FC349>89
D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<EC7F809038
03FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB1FE049133F12
0F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C
6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381FC078903807FF
F001001380242E7DAC2B>I<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C
90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5A
AB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F01
1C13FE90380FC0F8903803FFE09026007F0013002F467DC436>I<EB01FE903807FFC090
381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E015
07A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F1560
6D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE001
0090C7FC242E7DAC2B>I<EC0FE0EC7FF8903801F81E903803F03F90390FE07F8090381F
C0FF5C133F495AA2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA3
21467EC51E>I<EE0F80D901FCEB7FE0903A0FFF81F0F090393F07E3819039FC01FF033A
01F800FE014848017E13E00007027FC7FC497F000F8149131F001F81A9000F5D6D133F00
0792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090380FFF80260701FCC8FC90CAFCA2
5AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B67E3A07C0000FFF48481300003F
C8EA3F80003E151F48ED0FC0A2481507A56C150F007C1680007E151F003E16006C153E6C
6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C427DAC31>
I<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FEC
E000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC4
36>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0
487EB512F8A315437DC21C>I<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315
457DC41C>108 D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C
01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38804A1430
01FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B
2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F0003EB
E0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7D
AB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E
48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F00
3F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7
FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC03FC00FF90380FFF8091
383C07E091387001F83A07FDE000FE00010180137F01FFEC3F8091C7EA1FC04915E04914
0F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D14
3F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE
487EB512F8A32F3F7DAB36>I<91387F8003903903FFE00790380FE07890393F801C0F90
387E000E496D5AD803F8EB039F0007EC01BF4914FF48487F121F5B003F81A2485AA348C8
FCAB6C7EA3123F7F121F6D5C120F6D5B12076C6C5B6C6C497E6C6C130E013F131C90380F
C0F8903803FFE09038007F0091C7FCAEEEFF80033F13FEA32F3F7DAB33>I<3903F803F0
00FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA4
5BB3A748B4FCB512FEA3202C7DAB26>I<90383FE0183901FFFC383907E01F78390F0003
F8001E1301481300007C1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFF
E06C13FC6C13FF6C14C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E
7E153EA27EA36C143C6C147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE00
38C00FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0
B6FCA2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0
E0903801FFC09038007F001E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380
000181B3A85EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90380FC078
903803FFF09026007F8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC
1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F
5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8
EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEA
FE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>121
D<01F81302D803FE13073907FF800E48EBE01C391F1FF8F8393807FFF0D8700113E039E0
007FC00040EB1F00200978C131>126 D E /FL 57 122 df<EEFFFC031FEBFF804AB612
E0020781021F9038C00FF8913A7FFE0003FCDAFFF0EB00FE4949EB03FF4901805B4990C7
487F49485CA2495A4D7F013F6F5B5CA37190C7FC715AEF01F894C9FCA90403B512C0BAFC
A526003FFCC7120783B3B3A6003FB5D8FC03B612C0A542547DD34B>12
D<D807F0147FD81FF8903801FF80D83FFE4913E0486C4913F0A2B56C4813F802C014FCA3
02E014FEA36C80A26C80D81FFD6D13DED807F19038007F1ED800011400A20103153E4A14
3CA30107157C4A1478010F15F8A249C7EA01F0A2013EEC03E0013C15C0017C140749EC0F
804848EC1F0000035D4848147E48485C4848495A90C75B000CEC00C02F287CD245>34
D<EA07F0EA1FF8EA3FFE487EA2B5128014C0A314E0A37EA27EEA1FFDEA07F1EA0001A213
0314C0A313071480130FA214005B133EA25B5B485A1203485A485A485A90C7FC120C1328
76D225>39 D<151E153E157E15FCEC01F8EC07F0EC0FE0EC1FC01580143FEC7F0014FE13
01495A5C1307495AA2495A133F5C137FA2495AA24890C7FCA25A5BA21207A2485AA3121F
5BA3123FA25BA3127FA55B12FFB3A3127F7FA5123FA37FA2121FA37F120FA36C7EA21203
A27F7EA26C7FA26D7EA2133F80131F6D7EA26D7E1303806D7E1300147FEC3F80141F15C0
EC0FE0EC07F0EC01F8EC00FC157E153E151E1F7973D934>I<127012F8127C127E7EEA1F
C06C7E6C7E12037F6C7E6C7E7F6D7E133F806D7EA26D7E80130780A26D7EA26D7EA21580
7FA215C0A2EC7FE0A315F0143FA315F8A2141FA315FCA5140F15FEB3A315FC141FA515F8
A3143FA215F0A3147F15E0A3ECFFC0A21580A25B1500A2495AA2495AA25C130F5C495AA2
495A5C137F49C7FC5B485A485A5B1207485A485A48C8FC127E127C5A12701F7979D934>
I<B712F0AB240B7F9F2D>45 D<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C
5A6C5A1111769025>I<EF01E01703EF07F0A2170FA2EF1FE0A218C0173FA2EF7F80A218
005FA24C5AA25F1603A24C5AA25F160FA24C5AA25F163FA24C5AA294C7FC5EA24B5AA25E
1503A24B5AA25E150FA24B5AA25E153FA24B5AA293C8FC5DA24A5AA25D1403A25D1407A2
4A5AA25D141FA24A5AA25D147FA24AC9FCA25C1301A2495AA25C1307A2495AA25C131FA2
495AA25C137FA249CAFCA25B1201A2485AA25B1207A2485AA25B121FA2485AA25B127FA2
48CBFCA25AA2127CA2347879D943>I<157815FC14031407141F14FF130F0007B5FCB6FC
A2147F13F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43>49
D<EC3FFE0103B512E0010F14FC013F14FF90B712C048D9C07F7F2703FE000F13F8D807F8
01037FD80FE06D7F48486D7F48488001F01680486C6E13C07F486C6E13E07FA27013F0A5
6C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B
4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC
02FEEC03E0495A495A495A495AD91F80140749C8FC013E150F017FB7FC90B812C05A5A5A
5A5A5A5AB9FC1880A4344E79CD43>I<91380FFFC091B512FC0107ECFF80011F15E09026
3FF8077F9026FF800113FC4848C76C7ED803F86E7E491680D807FC8048B416C080486D15
E0A4805CA36C17C06C5B6C90C75AD801FC1680C9FC4C13005FA24C5A4B5B4B5B4B13C04B
5BDBFFFEC7FC91B512F816E016FCEEFF80DA000713E0030113F89238007FFE707E701380
7013C018E07013F0A218F8A27013FCA218FEA2EA03E0EA0FF8487E487E487EB57EA318FC
A25E18F891C7FC6C17F0495C6C4816E001F04A13C06C484A1380D80FF84A13006CB44A5A
6CD9F0075BC690B612F06D5D011F1580010302FCC7FCD9001F1380374F7ACD43>I<177C
17FEA2160116031607160FA2161F163F167FA216FF5D5DA25D5DED1FBFED3F3F153E157C
15FCEC01F815F0EC03E01407EC0FC01580EC1F005C147E147C5C1301495A495A5C495A13
1F49C7FC133E5B13FC485A5B485A1207485A485A90C8FC123E127E5ABA12C0A5C96C48C7
FCAF020FB712C0A53A4F7CCE43>I<D80380150ED807E0157E01FEEC03FED9FFF0137F91
B65A5F5F5F5F5F94C7FC5E5E16F016C093C8FC15F801E190C9FC01E0CAFCABEC0FFF027F
13F001E3B512FE01E76E7E9026FFF8077FDAC0017F49C713F8496E7E49143F4981496E7E
6C481680C9FC18C08218E0A418F0A3EA0FE0487E487E487E487EA418E0A35B6C484A13C0
5B491680003EC85A003F17006C6C4A5A6D5D6C6C4A5AD807F8495BD803FE01075B2701FF
C03F5B6C90B65A013F4AC7FC6D14F8010314C09026007FF8C8FC344F79CD43>I<ED0FFF
92B512E0020780021F14FC91397FFE03FE903A01FFF0007F4901C0EB3F804990C7121F49
48EC7FC0494814FF49484913E049485B01FF5C485BA2485B5AA2486F13C04A6D1380486F
1300177E94C7FC5AA291CAFC5AA21508913801FFF8020713FFB54814C04A14F04AC66C7E
023C6D7E4A6D7E4A6D7E7013804A15C0A24A15E07013F05C18F8A491C714FCA37EA67EA4
6C17F880A27E18F06C5D18E06C6D15C07E6E4913806C6D15006D6C495A6D6CEB7FFC6DB4
48485A6D90B55A010315C0010092C7FC023F13FC020713C0364F7ACD43>I<121F7F7FEB
FF8091B81280A45A1900606060A2606060485F0180C86CC7FC007EC95A4C5A007C4B5A5F
4C5A160F4C5A484B5A4C5A94C8FC16FEC812014B5A5E4B5A150F4B5AA24B5AA24B5A15FF
A24A90C9FCA25C5D1407A2140FA25D141FA2143FA4147F5DA314FFA55BAC6D5BA2EC3FC0
6E5A395279D043>I<913807FFC0027F13FC0103B67E010F15E090261FFC0113F8903A3F
E0003FFCD97F80EB0FFE49C76C7E48488048486E1380000717C04980120F18E0177FA212
1F7FA27F7F6E14FF02E015C014F802FE4913806C7FDBC00313009238F007FE6C02F85B92
38FE1FF86C9138FFBFF06CEDFFE017806C4BC7FC6D806D81010F15E06D81010115FC0107
81011F81491680EBFFE748018115C048D9007F14E04848011F14F048487F484813030300
14F8484880161F4848020713FC1601824848157F173FA2171FA2170FA218F8A27F007F17
F06D151FA26C6CED3FE0001F17C06D157F6C6CEDFF806C6C6C010313006C01E0EB0FFE6C
01FCEBFFFC6C6CB612F06D5D010F1580010102FCC7FCD9000F13C0364F7ACD43>I<9138
0FFF8091B512F8010314FE010F6E7E4901037F90267FF8007F4948EB3FF048496D7E4849
80486F7E484980824817805A91C714C05A7013E0A218F0B5FCA318F8A618FCA46C5DA37E
A25E6C7F6C5DA26C5D6C7F6C6D137B6C6D13F390387FF803011FB512E36D14C301030283
13F89039007FFE03EC00401500A218F05EA3D801F816E0487E486C16C0487E486D491380
A218005E5F4C5A91C7FC6C484A5A494A5A49495B6C48495BD803FC010F5B9027FF807FFE
C7FC6C90B55A6C6C14F06D14C0010F49C8FC010013F0364F7ACD43>I<EA07F0487E487E
487E487EB51280A76C13006C5A6C5A6C5A6C5AC8FCB3EA07F0487E487E487E487EB51280
A76C13006C5A6C5A6C5A6C5A113576B425>I<171F4D7E4D7EA24D7EA34C7FA24C7FA34C
7FA34C7FA24C7FA34C8083047F80167E8304FE804C7E03018116F8830303814C7E030781
16E083030F814C7E031F81168083033F8293C77E4B82157E8403FE824B800201835D8402
03834B800207835D844AB87EA24A83A3DA3F80C88092C97E4A84A2027E8202FE844A8201
0185A24A820103854A82010785A24A82010F855C011F717FEBFFFCB600F8020FB712E0A5
5B547BD366>65 D<BA12C019FEF1FFC01AF01AFCD8000701F0C7000313FFDE007F7F737F
070F7F737F878587858785A287A84F5BA263616361634F5B4F5B077F90C7FC4E485A0607
13F892B812E097C8FC861AF003F0C7000313FE9539003FFF80070F13E0737F07017F8773
7F747E1C807413C0A27413E0A31CF0A386A362A31CE0A2621CC0A250138097B5FC1C004F
5B19074F5B073F13F04EB55ABC128098C7FC1AF81AC007F8C8FC54527CD160>I<932601
FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EB
C07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F8824949
824949824949824949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3
485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D1980A26C1A
1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C
5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE001FFF002
0091B612C0033F93C8FC030715FCDB007F14E0040101FCC9FC525479D261>I<BA7E19FC
F1FF801AF01AFCD8000701F0C7000F13FF060014C0071F7F070713F807017F737F747E74
7F747F86747F747F8886888688A2757EA31D8087A21DC0A51DE0A387A963A31DC0A51D80
A2631D00A3515AA2646264505B6264505B505B5090C7FCF2FFFE4F5B07075B071F5B96B5
12C0060F91C8FCBB5A1AF01AC007FCC9FC19805B527CD167>I<BC1280A5D8000701F8C7
000114C0F0001F19071901851A7F1A3F1A1FA2F20FE0A21A07A31A03A318F81BF01A01A4
97C7FC1701A317031707170F177F92B6FCA59238F8007F170F170717031701A317001B3E
A31B7CA395C8FCA21BFCA21BF8A21A01A31A031BF01A071A0FA21A1F1A3FF27FE0F101FF
1907191F0603B5FCBCFCA21BC0A34F517CD058>I<BB12FEA5D8000701F8C700077FF000
7F191F190785858586861B80A21A1FA31A0FA41BC006F81307A497C7FCA31701A3170317
07170F177F92B6FCA59238F8007F170F170717031701A31700A795C9FCB3B812F8A54A51
7CD055>I<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>73
D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF03CFA202
E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C17F0A26F
6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3706C5DA2
706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D5BA2716C
5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715BA2725AA2
725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>77 D<B600FC93B7FC8181A2
82D800076E9239003FFC0070EE07E08282A28202EF7F02E77F02E380A202E18002E0806F
7F6F7F6F7FA26F7F6F7F6F806F80A26F80707F707F707F707FA2707F7080708070808583
717F717F717F717FA27114807114C07114E07213F07213F8A27213FC7213FE7213FF7214
87A27214C77214E77313F77313FF85A285858585A28586868686A286868686A2D93FFC18
7FB7173F1B1F1B0F1B07755A60527CD169>I<93380FFFC00303B6FC031F15E092B712FC
0203D9FC0013FF020F01C0010F13C0023F90C7000313F0DA7FFC02007F494848ED7FFE49
01E0ED1FFF49496F7F49496F7F4990C96C7F49854948707F4948707FA24849717E48864A
83481B804A83481BC0A2481BE04A83A2481BF0A348497113F8A5B51AFCAF6C1BF86E5FA4
6C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D4D1380A26C1B006C6D4D5A6E5E6C626D6C4C
5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A6D01FF02035B023F01
E0011F13F0020F01FC90B512C0020390B7C8FC020016FC031F15E0030392C9FCDB001F13
E0565479D265>I<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026
FFFC006D5A4801E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F49
81007F82A28412FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC
6CEDFFC017F06C16FC6C16FF6C17C06C836C836D826D82010F821303010082021F168014
00030F15C0ED007F040714E01600173F050F13F08383A200788200F882A3187FA27EA219
E07EA26CEFFFC0A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF090
3B1FFFC003FFE0486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C
5479D24B>83 D<003FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E0
8449197F49193F90C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3
AC91B912F0A553517BD05E>I<B800C00103B612FCA5D8000701F8CAEBF000F31F80B3B3
B11B3FA26D97C7FC81637F1B7E6D6D17FE505A6E7E505A6E6D15076E4D5A6E6D4B5A6E6D
4B5A6E01F84B5A6E6DDA03FFC8FC6E6CB46CEB0FFE6F9039F001FFF8030F90B65A030316
C0DB007F92C9FC040F14F8DC007F13805E537CD167>I<B8030FB61280A5D8000F01FCCA
003F90C7FC6FEF07F86D6D606D4F5A826D6E4C5A6D4F5A826E6D4CC8FC6E18FE826E6D4B
5A6E4D5A826E6D4B5A6E4D5A836E6E4A5A6E4D5A836F6D4AC9FC6F5E715C6F6D495A6F15
03715C6F6D495A6F150F06805B6F6E485A6F153F06E05B706D48CAFC705C725A70EBFDFC
7013FF61705C82705C6182715B96CBFCB3AA030FB712F8A561527ED166>89
D<01061560011FEC01F0491403017EEC07E049EC0FC04848EC1F804915004848143E4848
5C491478000F15F848C7485AA2003E4A5AA2003C5D007C140700785DA300F8140F4892C7
FCA2D8F1FCEC1FC0D8F7FFEC7FF0B50080EBFFF802C014FCA202E014FEA36C80A36C806C
496C13FCA26C496C13F8000390C7EA3FF0D801FCEC1FC02F286FD245>92
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEBFFC092B612F002F301017F
913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A824A6E7FA2727EA285A285
84A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B6F495BDACFC04990C7FCDA
87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01FCC8FC90C7000313C04154
7BD24B>I<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001
FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A48
92C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC
3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC
020113E033387CB63C>I<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91
B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980
485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C
6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9
003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901
817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191
C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01
F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE
903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<ED3FFC02
03B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A49
5AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB5
12FEA52E547CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90
267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813
E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A
6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFC
A2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848
C700031480D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18
006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F
03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF0B5FCA51203C6FCB3A4EE1F
FC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1E081ECF3
C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>I<137F497E
000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3
A6B612E0A51B547BD325>I<EB3FF0B5FCA51203C6FCB3A54CB512F8A59339003FFE00EF
1FF0EF3FC04D5A4DC7FCEE03FEEE07F84C5A4C5AEE7FC04CC8FC4B5A4B5AED0FF8ED1FE0
4B7E4B7EECF1FF02F37F02F77F91B6FC83159F030F7F02FE80DAF8077F4A7E6F7F6F7F83
707E82707F84707F707F82707F84707F177F717E4D13C0B6D8F003B6FCA540537CD247>
107 D<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>I<D93FF0D91FFCEDFFE0
B591B500C0010713FE030302F0011F6D7E030F6E017F8092271FE07FFCD9FF037F922A3F
001FFE01F8007F0003027C9126FF03E080C602F06DD90780137FDAF1E0038FC77FDAF3C0
159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB5
12FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC9239
3F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3AC
B6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B612C0010315F0010F9038
807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48834890C8
6C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA2
6C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF80
7FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<903A3FF001FFE0B5010F
13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F
92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A0060A36118FFA2615F61
6E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F14
80031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<912601FFE0EB0780021F
01F8130F91B500FE131F0103ECFF80010F9039F03FC03F499039800FE07F903A7FFE0003
F04948903801F8FF4849EB00FD4849147F4A805A4849805A4A805AA291C87E5AA35B12FF
AC6C7EA37EA2806C5EA26C6D5CA26C6D5C6C6D5C6C93B5FC6C6D5B6D6C5B6DB4EB0FEF01
0F9038C07FCF6D90B5120F010114FED9003F13F80203138091C8FCB1040FB61280A5414D
7CB547>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC00
03D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA5
5CB3AAB612FCA52F367CB537>I<903903FFF00F013FEBFE1F90B7FC120348EB003FD80F
F81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C
13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC00
3F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F80
01F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C
387CB635>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6
FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0
FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA5
0003ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EB
FFC0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<
B600F00107B5FCA5000101F8C8EA7FE06C6DED3F00A2017F163E6E157E013F167C6E15FC
6D5E6F13016D5E8117036D5E6F13076D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E17
7E023F147C6F13FC6E5C16816E5C16C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F
5AA36F5AA26F5AA26F5AA26F5A6F5A40367DB447>I<B6D8E07FB5D8C003B512C0A50001
01F0C701F0C7381FF8006E027FED07E06C715DA26E023F150F017F705DA26E181F013F4B
6C92C7FC6E606D70143E94B5FC6F177E6D4A6E137C03C001F315FC6D715B160303E001E1
14016D020702E05B03F013C06D71485A160F03F8D9807F13076D05F85B93381F003F03FC
160F027F4902FC5BDBFE3E011F131F023F04FE90C8FC167EDBFF7C010F5B6E01FCECFF3E
4C6D137E6E5FA24C7F6E5F4C7F6E5FA24C7F6E5F4C147FA26E5F93C8123F6F5EA2033E6F
C9FC5A367DB461>I<007FB500F090387FFFFEA5C66C48C7000F90C7FC6D6CEC07F86D6D
5C6D6D495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B91387FFE014C5A6E6C485A6EEB
8FE06EEBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F834B7F4B7F92B5FCDA01
FD7F03F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A486C7F02FE6D7F4A6D7F49
5A49486D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B612C0A542357EB447>I<B6
00F00107B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E013F167C6E15FC6D5E6F13
016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E023F
147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F5AA2
6F5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E486C137E486C137C48
6C13FC5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81FE6CB45A6C13F000035B
C690CBFC404D7DB447>I E /FM 52 122 df<01FFEE7F80000301E0913801FFF0486D4A
7F001F01FC020F13FE486D4A7F6E1780485E6F16C0B66C4914E0A36F16F0A36F16F8A36C
82A26C82A26C82000701F3020313F96C01E36E13F1C601839138007FC1D90003ED000102
071603A24B16F0A3020F1607A24B16E0021F160FA24A48ED1FC0A2027F163F92C913804A
167F4A170001015F49484B5A4A5E0107160349484B5A49484B5A013F161F49484B5A4948
4B5A4890C9485A48484B90C7FC48484B5A48484B5A495E6C486F5AD80180ED00C0453A7A
F764>34 D<13FF000313E0487F001F13FC487F805A1580B612C0A315E0A315F0A37EA27E
A27E000713F36C13E3C61383EB00031407A215E0A3140FA215C0141FA2EC3F80A2147F15
005C5C1301495A5C1307495A495A133F495A495A4890C7FC485A485A485A5B6C5AEA0180
1C3A72F736>39 D<B912E0B033107EAE41>45 D[<1A1EF23F801A7FF2FFC0A261A21B80
61A24F1300A262190FA24F5AA262193FA24F5AA26219FFA26260A24E5BA297C7FC60A24E
5AA261181FA24E5AA261187FA24E5AA2615FA24D5BA296C8FC5FA24D5AA260171FA24D5A
A260177FA24D5AA2605EA2605EA24C90C9FCA25F160FA24C5AA25F163FA24C5AA25F16FF
A24B5BA25F5DA24B90CAFCA25E150FA24B5AA25E153FA24B5AA25E15FFA25E5CA24A5BA2
93CBFC5CA24A5AA25D141FA24A5AA25D147FA24A5AA25D5BA2495BA292CCFC5BA2495AA2
5C131FA2495AA25C137FA2495AA25C5AA25C5AA24890CDFCA25B120FA2485AA25B123FA2
485AA25B12FFA25BA26C5AA2001ECEFC>74 172 117 256 97 47
D<EE01F0EE07F8160F163F167FED01FF150F153F4AB5FC143F010FB6FCB8FCA54A7E14C0
EBF000C8FCB3B3B3B3AE007FBA12F0A8447171F061>49 D<92380FFFE04AB67E020F15F0
027F15FE49B87E4917E0010F17F8013F8349D9C01F14FF9027FFFC0001814801E06D6C80
480180021F804890C86C8048486F8048486F8001FF6F804801C06E8002F081486D18806E
816E18C0B5821BE06E81A37214F0A56C5BA36C5B6C5B6C5B000313C0C690C9FC90CA15E0
60A34E14C0A21B80601B0060626295B55A5F624D5C624D5C4D91C7FC614D5B4D13F04D5B
6194B55A4C49C8FC4C5B4C5B4C13E04C5B604C90C9FCEE7FFC4C5A4B5B4B5B4B0180EC0F
F04B90C8FC4B5A4B5A4B48ED1FE0EDFFE04A5B4A5B4A90C9FC4A48163F4A5ADA3FF017C0
5D4A48167F4A5A4990CA12FFD903FC160749BAFC5B4919805B5B90BBFC5A5A5A5A481A00
5A5ABCFCA462A44C7176F061>I<923801FFFE033FEBFFF84AB7FC020F16E0023F16F84A
16FE49B97E49DA003F80010F01F0010714F04901800101804948C880D97FF86F7F02E081
496C834801FC6F148014FF486E6E14C08181481AE081A96C5C1BC06C4A5C6C5C6D90C815
806D5AD90FF85D90CA150062606295B55A4D5C624D5C4D5C4D91C7FC4D13FC4D5B4CB512
E0047F1480037FB548C8FC92B612F818C018F8F0FF806F15F092C7003F13FC050713FF05
0114C071807213F8727F727F867214801BC07214E01BF0A27214F81BFCA37214FEA31BFF
EBFF80000313E0487F001F13FC487FA2487FA2B67EA31BFEA3601BFCA292C8FC6C1AF84A
5D4A18F06C494B14E05C6C01C04B14C06C90C915804E14006C6D4B5B6C01F092B55A6C01
FC4A5C27007FFFC001075C6D01FE013F14C0010F90B85A6D4DC7FC010117F8D9003F16E0
020F93C8FC020015F0030749C9FC507378F061>I<F10FF04F7E193FA2197F19FF60A260
606060A2606095B5FCA25F5F5FA25F5F5F5F18BFEFFF3F5EEE03FE17FCEE07F8160FEE1F
F0EE3FE017C0167FEEFF804B13005E4B5A15074B5A4B5A5E153F4B5A4B5A93C7FC4A5A14
034A5A5D4A5A141F4A5A4A5A5D4AC8FC5B495A5C495A130F495A495A5C137F495A4890C9
FC5B485A1207485A485A5B123F485A485A90BC12FCA8CB02F8C7FCB3A20307B912FCA856
727BF161>I<0170187001FEEF01F86D6C160F02F8167FDAFF80EC07FF03FE49B5FC92B8
5A6262A26297C7FC61616119E061614EC8FC18F86018C095C9FC17F817C0020701F8CAFC
91CDFCB0923801FFFC031FEBFFE092B612FC020315FF020F16C04A16F0027FD9003F7FDA
FFF0010F13FE038001037F4AC76C8002F86E804A6F7F4A6F7F4A834A6F7F91C980137E01
7C707F90CAFC1B80A21BC0A2841BE0A51BF0A313FE3803FF80000F7F4813F0487F5A80B5
FCA41BE0A44E14C05C7E4A18805C4A5D6C90C9150001E0606C6C5E6D606C6C4C5B7F0007
94B55A6C6C6C4A5C6C6D4A5C6E4A5C26007FF8021F49C7FC6DB4027F5B6DD9F007B55A6D
90B712E0010317806D4CC8FC6D6C15F8021F15C002034AC9FCDA003F13804C7376F061>
I<94381FFF800403B512F8043F14FE4BB77E030782031F16F0037F8292B5D8FC017F0203
9139C0001FFE4A49C7EA07FF021F01F8804A496E13804A01C0140F91B548023F13C04991
C85A494992B5FC49494A14E0495B495E5D5B495BA290B55A5A5D487114C0A24891C91480
731300735A48F00FF896C8FC485BA45AA44849903807FFE0041F13FE047FEBFFC04BB612
F84B81030F15FFB590261FF8038092273FC0007F13E04C011F7F037EC76C7F4B6E7F02FD
6F7F4B6E7FDAFFF017804B6E14C01BE05D7313F05D1BF8A292C914FC85A24A18FEA41BFF
A26C5BA87EA4807EA21BFE7EA37E1BFC6E5E6C1AF8A27E6F17F06C95B512E06D7F1BC06D
6D4A14806D4C1400816D6D4A5B6D6D4A5B6D01FF4A13F001006E017F5B6ED9F007B55A6E
90B7C7FC020F5E020316F86E16E0DA003F1580030702FCC8FCDB007F1380507378F061>
I<F103F84F7E4F7EA24F7EA34F7FA24F7FA396B57EA24E80A34E80A24E80A34E80A24E80
A34E81A24E81A219BFDEFF9F80191F4D6D80A218FE05036D8018FC05076D80A218F8050F
6D8018F0051F6D80A260053F6E8060057F6E80A26005FF6E8095C7FC4C6F80A25F04036F
805F04076F80A25F040F6F805F041F6F80A25F043F70805F047F7080A25F04FF708094C9
FC4B7180A25E030371805E4BBB7EA34B86A24B86A3DB3FE0CA6C805E037F7280A25E03FF
7280A24A90CB6C80A25D02037380A24A487280A25D020F7380A24B84021F885D023F7480
A24B85027F895D902607FFFC7380B86C031FB912E0A8837979F892>65
D<BDFC1CFEF4FFC01DF81DFF1EC01EF08AC7003F49C9000F14FE090180756C800A1F8076
80768076807680A27680A2777FA2208089A320C0A289A565A22080A4531400A29AB55AA2
525C6764525C525C525C525C5249C7FC51B55A090714F0093F14C00807B6C8FC93BA12F8
1DC0651DFCF5FF801EF04CCA14FC0A3F13FF0A0F800A0314E076807614FC777F777F2080
897714C020E0A27714F0A220F88920FCA47714FEA96520FCA45314F8A26520F06520E053
14C0659AB61280521500525C1C0F5214F899B65A09075DC05A9CC7FC1EFC1EF01EC053C8
FC1DE00AF8C9FC777679F58A>I<96267FFFE01670063FB6ED01F80503B700F01403053F
04FC14074CB96C130F040706E0131F043F72133F93BA00FC137F0303DC00076D13FF030F
03C09039003FFF814B02FCC8000713C3037F02E0030113F792B600806F6CB5FC02034ACA
121F4A02F8834A02E0834A4A1701027F4A8391B548CC7E494A85495C4C854988494A8549
4A85495C8A4991CDFC90B54886A2484A1B7FA2481E3F5D481E1F5D5A1F0FA2485CA3481E
075DA2F703F0489BC7FCA45DA2B6FCB27EA281A47EA2F703F06FF307F87EA36C80A21F0F
7E6F1CF07E6F1B1F7E20E06C6E1B3F816DF57FC06D80F7FF806D806D6E4F13006D6E616D
525A826D6E4F5A6D6E4F5A6E6D6C4E5A021F6EF0FFE06E6E4D5B6E02F84D5B6E02FE050F
90C7FC02006E6CEE3FFE6F02F0EEFFFC031F02FE03035B6FDAFFC0021F13E0030303FF01
03B55A030093B7C8FC043F18FC040718F0040118C0DC003F94C9FC050316F8DD003F1580
DE007F01F0CAFC757A75F78C>I<BDFC1CFCF4FFC01DF81DFF1EC01EF88AC7003F91C96C
14FF090315C0E1007F800A0F14F80A03800A00800B3F7F7780778077800B018077808C8A
787F787FA278808D8A8D8A8D8A8DA28D8AA28DA28BA28DA42280A38BA322C0B22280A367
A32200A4699CB5FCA269A3545CA2696669666966695491C7FC6668545B9BB55A65535C53
5C535C0B3F5C9AB6C8FC5214FC0A0F5C0A3F5C0903B612C0097F5DBF48C9FC1EF81EE01E
800BFCCAFC1DE052CBFC99CCFC82767AF594>I<C0FCA48BA4C7003F0280C8120FF3007F
1C0F1C030A00801D3F8989898989A2898B1E7FA21E3FA31E1FA28BA21E0FF207F8A5787E
A4080F92C8FCA31A1FA21A3FA21A7FF101FF1907193F94B7FCA8943880003F19071901F1
007F1A3FA21A1FA21A0FA2F71FE01A07A2F73FC0A61F7F97CA1380A41FFFA3541300A366
A266671E0FA21E1FA21E3F1E7F545A65651D0F1D3F9AB5FC1C030A3F5C0907B6FCC0FCA5
67A373757AF47F>I<BF12FCA48AA4C7003F0280C8123F1B01F3003F1C07767F1C008989
898989A2891F8089A289A31E7FA21FC0A21E3FA3F20FF0A3F61FE0A49BC7FCA21A1FA31A
3FA21A7FA21AFF1903190F197F94B7FCA8943880007F190F190319001A7FA21A3FA21A1F
A31A0FA997CBFCB3A9BBFCA86B757AF47A>I<96267FFFE01670063FB6ED01F80503B700
F01403053F04FC14074CB96C130F040706E0131F043F72133F93BA00FC137F0303DC0007
6D13FF030F03C09039003FFF814B02FCC8000713C3037F02E0030113F792B600806F6CB5
FC02034ACA121F4A02F8834A02E0834A4A1701027F4A8391B548CC7E494A85495C4C8549
88494A85494A85495C8A4991CDFC90B54886A2484A1B7FA2481E3F5D481E1F5D5A1F0FA2
485CA3481E075DA2795A489BC9FCA45DA2B6FCB27EA26F0403BA12C0A47EA3816C96C800
0302F8C7FCA36C80A36C80A27E817E817E817F6D80827F6D806D806D80826D6E606D806E
80021F6E5F6E02F05F6E806E02FE5F0200DAFFC05E6F02F04BB6FC031F02FE030713CF6F
DAFFE0021F138703039226FF8003B51201030093B6EAFC00043F4E133F040706E0131F04
014E1307DC003F4CC71201050304F8EC0070DD003F038092C8FCDE007F01F0CCFC827A75
F798>I<BA00E049BA12C0A8C7003F0280CB6C91C8FCB3B3A994BDFCA80580CB7EB3B3AD
BA00E049BA12C0A88A767AF597>I<BA12F8A8C7001F02C0C7FCB3B3B3B3B3ACBA12F8A8
3D767BF548>I<BA00E0031FB712FCA8C7003F0280CB000F0280C7FC0C0001F0C8FC545B
545B0C0F5B5490C9FCF63FFC545A545A535B0B075B535B5348CAFC535A535A535A0A035B
525B5290CBFC525A525A525A51485A515B5113805190CCFC515A515AF3FFF8505B5013C0
505B5090CDFC505AF27FFC505A4F13E04F5B4F7F4F7F073F7F6196B57E4E804E80604E81
063F814E8195B7FC058182058301DF800587018F80059F1307DDBFFC819426FFF803804E
6C814E7E4E824E6D804DC76C804D804D834D6E804D6E804D804D8374817481878A758075
80878A75807580878B75818876808B76808876808B7680888C76817780898C7780778089
8C77807781890B0315E0BA00E0021FB91280A889767AF598>75 D<BBFCA8C7003F0280CC
FCB3B3B3A9F507F8A41D0F1EF0A61D1FA31EE01D3FA31D7FA31DFFA25213C0A26464A264
64646499B5FC09031480631B1F1B7F0803B6FC1A7FBFFCA31E00A565767AF574>I<B800
C051B8128071637163A37163A27163C7003F57C8FC71F33FBFA203EF6DF37F3FA303E76E
1AFEA203E36EF101FCA203E16EF103F8A203E06EF107F0A3706DF10FE0A2706DF11FC0A2
706DF13F80A2706DF17F00A3706E18FEA2706E4D5AA2706E4D5AA3706E4D5AA2716D4D5A
A2716D4D5AA2716D4D5AA3716D4DC7FCA2716E16FEA2716E4B5AA2716E4B5AA3716E4B5A
A2726D4B5AA2726D4B5AA3726D4B5AA2726D4BC8FCA2726E14FEA2726E495AA3726E495A
A2726E495AA2736D495AA2736D495AA3736D495AA2736D49C9FCA273EC80FEA2F481FC73
14C1A273ECE3F8A273ECF7F0A274EBFFE0A3745CA2745CA27491CAFCA2745BA3745BA290
2603FFFE705BB800F897BA1280745BA2755AA3755A755AA97679F5B8>I<B800C00507B8
12C083838383A28383C7003F6F93C7001F01F0C7FC72060190C8FC84A284848403EF8015
E703E3808503E18103E08170808270808570807080708182867081718071808371808671
807181718183728087728072807280848772817281728185738088738073807380857381
89738174807480868974807480741580867415C01EE07514F07514F87514FC877514FE1E
FF7515817515C1877614E11FF17614F97614FD7691B5FC8888A28888898989A289898989
A2898A8A8A8AA28A8A8A8A8B903803FFFEB800F8858B8B8BA28B8B795A8A767AF597>I<
BC7E1BFF1CF01CFF1DC01DF81DFE777EC7003F91C8000715E0E0003F80090714FC090180
756C7F7680768076807680A276808B888BA37680A38CAA9DC8FCA3525CA267A2525C6764
67525C525C5291C9FC99B512FC515C090F5C097F14C0080FB6CAFC94B912FC1DE09ACBFC
1CF81CFE767E94C8003F14E0080780080114FC746C7F757F7580758075807580A275808A
87A28A888AA78BA78BA779147E22FFA288A28B765E22FE76802103766E14FCBA00C06E6E
1307766EEB0FF876ED801F779138E07FF00B1F91B512E00B0716C00B011680E3003FECFE
00D1000714F8E4000F13E088787AF590>82 D<922603FFF8150E037FD9FFC0143F0203B6
00FC5C021F03FF5C027FEEC00149B8EAF00349EFFC07010FDA000F13FE4901F09039007F
FF8F4901C0020F13DF4990C8000390B5FC494815004801F8163F48844A8248498248844A
8248844A834885A291CB7E5A86A286B5FC8680A28680A280A26E8380806E187E6E95C7FC
6C8015E015FCEDFFC06C15FCEEFFE06C16FF18F06CEFFF8019F06C18FE737E6C856C19F0
6C19FC6D846D846D856D856D850101856D85023F846E841407020084031F18801500040F
17C0EE007F050716E0EF003F1803DE007F14F0191F8585070114F8A28586007E85B4FC86
A286A37F86A36D1AF0A37F1CE06D60A26D1AC06D607F6D1A806E5F6E4D13006E606E17FF
02FC4C5B02FF4C5B03E04B5B03FC031F5B01FBD9FF80027F5B01F102FE0107B55AD9E07F
90B8C7FC6E17FCD9C00F5FD9800317E090C76C168048020F4BC8FC48020015F000700303
49C9FC557A75F76C>I<001FC012F8A7481FFC03F0C76C91C7120F92C8EF007F02F81B1F
02E01B0702801B0191C984491D7F491D3F491D1FA2491D0FA2491D07007F1FFEA2491D03
A4491D01A700FF1FFF90CA85A6CB1A00B3B3B3AD4ABC12C0A8787479F387>I<BA00E003
0FB8FCA8C7003F0280CC003FEBC000E503FCC7FCB3B3B3B3A46E1C0768A2836E1C0F68A2
6E1C1F7162A26E1C3F714F5A806E525A71606F6D97C8FC6F505A7118076F6D4E5A6F6EEF
3FF86F6E4D5A6F6EEE01FF6F02F84C5B6F02FE041F5B043F6D6C037F90C9FC7002F09138
07FFFE0407DAFF8090B55A040192B712F07061051F188005074DCAFC050017F0061F16C0
060103FCCBFCDE000391CCFC88787AF595>I<0218160C027E163F02FFEE7F804917FF49
484B130049484B5A49484B5A49484B5A49484B5A49484B5A4A5E49C9485A48484CC7FC49
5E0003160148484B5A495E000F1607495E001F160F495EA248484B5AA290C95B48163FA2
007E94C8FCA300FE5EA248167ED91FF0ED0FF8D97FFCED3FFE496C4B7EB66C017FB512C0
6F16E0A26F16F0A26F16F8A36C82A36C82A36C4A6D14F06C824B16E06C826C4A6D14C0C6
49C86C13006D486F5AD90FF0ED07F8453A68F764>92 D<92383FFFF80207B612E0027F15
FC49B87E010717E0011F83499026F0007F13FC4948C7000F7F90B502036D7E486E6D806F
6D80727F486E6E7F8486727FA28684A26C5C72806C5C6D90C8FC6D5AEB0FF8EB03E090CA
FCA70507B6FC041FB7FC0303B8FC157F0203B9FC021FECFE0391B612800103ECF800010F
14C04991C7FC017F13FC90B512F04814C0485C4891C8FC485B5A485B5C5A5CA2B5FC5CA3
60A36E5DA26C5F6E5D187E6C6D846E4A48806C6D4A4814FC6C6ED90FF0ECFFFC6C02E090
263FE07F14FE00019139FC03FFC06C91B6487E013F4B487E010F4B1307010303F01301D9
003F0280D9003F13FC020101F8CBFC57507ACE5E>97 D<903801FFFCB6FCA8C67E131F7F
B3ADF0FFFC050FEBFFE0057F14FE0403B77E040F16E0043F16F84CD9007F13FE9226FDFF
F001077F92B500C001018094C86C13E004FC6F7F4C6F7F04E06F7F4C6F7F5E747F93C915
804B7014C0A27414E0A21DF087A21DF8A31DFC87A41DFEAF1DFCA4631DF8A31DF098B5FC
1DE0A25014C0A26F1980501400705D705F704B5B505B704B5B04FC4B5BDBE7FE92B55A92
26C3FF8001035C038101E0011F49C7FC9226807FFC90B55A4B6CB712F04A010F16C04A01
0393C8FC4A010015F84A023F14C090C9000301F0C9FC5F797AF76C>I<93383FFFF00307
B612C0033F15F84AB712FE0207707E021F17E0027F8391B526FC001F7F010302C001037F
4991C7487F49495C495B4901F04A7F5B90B55A485CA2485C4891C8FCA248715B5C48715B
725B4A6F5B489438007FC0071FC7FC96C8FC5AA25CA3B5FCAF7E80A47E80A27E806CF11F
80F23FC06C6E167FA26C6EEEFF80816C606C6E17006D6D4B5A6D6D15076D6D4B5A6D6D6C
4A5A6D02E0EC7FF06D02F849485A01009126FF801F5B6E91B6C7FC021F5E020716F80201
16E06E6C1580030702FCC8FCDB003F13804A507ACE56>I<97380FFFE00607B6FCA8F000
03190086B3AD93383FFF800307B512F8033F14FF4AB712C0020716F0021F16FC027F9039
FE007FFE91B500F0EB0FFF01030280010190B5FC4949C87E494981494981494981494981
90B548814884484A8192CAFC5AA2485BA25A5C5AA35A5CA4B5FCAF7EA4807EA37EA2807E
A26C7F616C6E5D6C606C80616D6D5D6D6D5D6D6D92B67E6D6D4A15FC010301FF0207EDFF
FE6D02C0EB3FFE6D6C9039FC01FFF86E90B65A020F16C002031600DA007F14FC030F14E0
9226007FFEC749C7FC5F797AF76C>I<93387FFF80030FB512FC037FECFF804AB712E002
0716F8021F16FE027FD9F8077F49B5D8C000804991C7003F13E04901FC020F7F49496E7F
49498049496E7F49496E7F90B55A48727E92C914804884485B1BC048841BE0485BA27313
F05AA25C5AA21BF885A2B5FCA391BAFCA41BF002F8CCFCA67EA3807EA47E806CF103F0F2
07F86C7F1A0F6C6E17F06C191F6F17E06C6E163F6D6DEE7FC06D6D16FF6D6D4B13806D6D
4B13006D6D6CEC0FFE6D02E0EC3FFC6D02F8ECFFF86D9126FFC00F5B023F91B65A020F17
8002034CC7FC020016F8031F15E0030392C8FCDB000F13E04D507BCE58>I<EF7FFE040F
B512C093B612F0030715FC031F814B8192B5D8F01F13800203DA803F13C04A9026FC007F
13E04A4990B5FC4A5B4A494814F04A13C091B51280A2491400A2495BA27114E05B4B6E13
C0721380721300F007FC95C8FCB3B912C0A8D8000749CAFCB3B3B3A7007FB712FCA84479
7AF83B>I<F37F80922607FFFC913807FFE092B600E0011F13F8020703FC017F13FC021F
DBFF01B512FE027F16C349B800F7EBBFFF49DA803F9038FFF83F010F9026FC000714C049
01F00101EC007F49496D148049496E6D7E90B517E04B6E15FE48F1F01F4891C86C9038F8
0FFCF307F098C7FC48496F7FA34885AB6C61A36C6D4B5BA36C6E4A5B6C616F5C6D606D6D
91B55A6D6D4991C8FC6D01FC01075B9226FF803F13F893B65A4917C0D93F1F93C9FC0207
15FCD97E0015E0030701FCCAFC01FE90CDFCA412017FA280A280808014FE6C90B812C019
FF1AF01AFC6DF0FF801BE06D851BFC6D856D856D1A806D1AC05B011F1AE0137F48BC12F0
000701FCC9FC4801E0040314F84849EE007F4849171F91CB1207487313FC5B00FF855B86
A56D60007F1BF86D60A26C6D4D13F06E5F6C6D4D13E06C6D4D13C06C01FC94B512806C01
FF04031400C602C0030F13FC6D01F8037F5B011FD9FFE0011FB512E0010791B812800101
4EC7FC6D6C17F8020F17C0DA007F03F8C8FC03014AC9FC58727BCE61>I<903801FFFCB6
FCA8C67E131F7FB3AD95380FFFE095B512FE05036E7E050F15E0053F15F84D81932701FF
F01F7F4CD900077FDC07FC6D80DC0FF06D80DC1FC07F4C48824CC8FC047E6F7F5EEDFDF8
5E03FF707F5EA25EA25EA293C9FCA45DB3B3A6B8D8E003B81280A8617879F76C>I<EB01
FCEB07FF011F13C0497F497F90B57EA24880A24880A76C5CA26C5CA26D5B6D5B6D5B0107
90C8FCEB01FC90CAFCB2903801FFFC007FB5FCA8C67E131F7FB3B3B3A5B81280A8297979
F835>I<903801FFFCB6FCA8C67E131F7FB3AE0603B612FEA8DE001F01F8C7FC07071380
4F90C8FCF13FFE4F5AF1FFF04E5B4E5B4E5B061F90C9FC4E5AF07FF84E5A4D5B05075B4D
5B4D48CAFC4D5A4D5A4D5A04035B4C7F4C7F5E4C7F4C7F03FDB6FC92B7FC858585A204F9
8004E0804C804C7E4C6C7F4B6D7F4B824B7F7180718086837180727F8684727F72808784
728072808784737F737F87854F14C0B8D88007B712F0A85C787AF766>107
D<903801FFFCB6FCA8C67E131F7FB3B3B3B3B3ABB812C0A82A7879F735>I<902601FFF8
91260FFFE093383FFF80B692B500FE0303B512F805036E6C020F14FE050F03E0023F6E7E
053F03F891B712E04D6F4982932701FFF01F6D0107D9C07F7F4CD900076D90270FFC001F
7FDC07FC6D9126801FF06D7FC66CDA0FF06D9126C03FC06D7F011FDA1FC06D4BC77E6D4A
48DCE0FE834CC8ECE1FC047E6FD9F1F86E804CEFF3F0DBF9F8EFF7E04C6003FB7001FF6F
804C6015FF4C95C9FCA24C5FA293C95CA44B60B3B3A6B8D8E003B8D8800FB712FEA8974E
79CDA2>I<902601FFF891380FFFE0B692B512FE05036E7E050F15E0053F15F84D819327
01FFF01F7F4CD900077FDC07FC6D80C66CDA0FF06D80011FDA1FC07F6D4A48824CC8FC04
7E6F7F5EEDF9F85E03FB707F5E15FF5EA25EA293C9FCA45DB3B3A6B8D8E003B81280A861
4E79CD6C>I<93381FFFE00303B6FC031F15E092B712FC020316FF020F17C0023FD9FC00
14F091B500C0010F13FC4991C700037F4901FC02007F010F496F13C049496F7F49496F7F
4B8149496F7F90B5C96C7F4886A24849707F481B80A248497014C0A2481BE0A348497113
F0A3481BF8A5B51AFCAE6C1BF8A46C1BF06E94B5FCA36C1BE0A26C6D4C14C0A26C1B806E
5E6C1B006C6E4B5BA26C6E4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D92B55A6D01FF02035C
6D02C0010F91C7FC010002FC90B512FC6E90B75A021F17E00207178002014CC8FCDA003F
15F0030392C9FCDB001F13E056507BCE61>I<902601FFFCEC7FFEB6020FB512F0057F14
FE4CB712C0040716F0041F82047F16FE93B5C66C7F92B500F0010F14C0C66C0380010380
011F4AC76C806D4A6E8004F06F7F4C6F7F4C6F7F4C8193C915804B7014C0861DE0A27414
F0A27414F8A47513FCA57513FEAF5113FCA598B512F8A31DF0621DE0621DC0621D806F5E
701800704B5B505B704B5B7092B55A04FC4A5C704A5C706C010F5C05E0013F49C7FC9227
FE7FFC01B55A70B712F0040F16C0040393C8FC040015F8053F14C0050301F0C9FC94CCFC
B3A6B812E0A85F6F7ACD6C>I<DC3FFEED1FC00307B500E0143F037F02F8147F4AB612FE
02076F6C13FF021F82027FEEF00191B6C66D5A010302F0EB1FFC4902C0903807FE07494A
EB03FF4949C76C138F49496E13DF49496FB5FC90B548814884484A815D48845D488492C9
FC4884A2485B85A2485BA5B55AAF6C7FA57E80A27E80A26C606F5D7E6F5D7E6C6E5D6C60
6F5D6D6D5D6D6D92B6FC6D6D5C6D6D5C01036EEB0FFD6D02E0EB3FF96D9139FC03FFF102
3F90B612C1020F16810203EDFE01020015F8030F14C09239007FFC0093C8FCB3A6061FB7
12FCA85E6F7ACD66>I<902601FFF8EB07FEB691383FFFC094B512F00403804C14FE4C80
93261FFC3F138093263FE07F13C0DC7F80B5FCC66C5D011FDAFE0114E06DEBF9FC16F815
FB16F016E015FF16C07114C05E72138095381FFE0093C76C5AF001E095C8FCA25DA65DB3
B3A2B812F8A8434E7ACD4F>I<912603FFFCEB0780027F9039FFE00FC00103B6EAF83F01
0FEDFEFF013F92B5FC49EB000F2601FFF01300480180143F4890C8120F48488148488149
81123F83485A187FA212FF6D163FA37F7F6DEE1F8002C092C7FC14F014FEECFFF06CECFF
8016FEEEFFE06C16FC6C16FF18C06C836C17F86C836C836C83013F17806D17C0010717E0
010117F0EB003F020716F8EC001F030015FC1607EE007F051F13FE1707007E82B482836D
167FA2183F7F181FA27F19FC7FA26D163F6D17F86D167F19F06D16FF6E4A13E002E04A13
C06E4A138002FE023F1300913AFFC003FFFE01E790B65A01C316F0018016C026FE003F92
C7FC48010714F80070D9007F90C8FC3F507ACE4C>I<15FFA75CA55CA45CA25CA25CA25C
A25C91B5FCA25B5B5B131F5B90B9FC120FBAFCA6D8000791C9FCB3B3A3F01FE0AE183F70
14C07F187F7014806D16FF826D4B13006E6D485AEEFE0F6E90B55A020F5D6E5D020115C0
6E6C5C031F49C7FC030113F03B6E7CEC4B>I<DAFFFE933803FFF8B60303B6FCA8C66CEE
0001011F717E6D84B3B3A862A497B5FCA261A2616D5F1ADF6F150F6DEF1F9F073F806D6E
DA7F1F13FF6D6ED901FEEDFF8070EB07FC023F01FEEB3FF86E90B612F06E16C002031680
0200EDFE00031F14F80300028003C0C7FC614F79CD6C>I<B892B612F8A8D8001F49C900
03EBF0006D6D04001380A26D6E94C7FC626D61701503A26D6E4B5AA26D6E5E1A0F6E6D5E
1A1F80704B5AA26E6D4B5AA26E6D5E1AFF6E6E92C8FC61A26E6E495AA26E6E495AA26E6E
5C190F6F6D5C191FA26F6D495AA26F6D495AA26F6D5C19FF6F6E90C9FC1881A26FECC3FE
A26FECE7FCA26FECF7F818FF705CA3705CA2705CA2705CA27091CAFCA3705BA2705BA270
5BA2715AA2715A715A5D4E7CCC66>I<B7D8FE01B700F00103B612E0A8D8003F01FCC800
3F01E0C80007EBE0006D0B0090C7FC6F6F6D5DA26D666F6F6D15036D66701A07737F6D66
7070150F6D4D60701A1F876D4D607071143F6E4C60701A7F886E4C607003BF6D14FF6E04
FF95C8FC6670031F7F6E4B60704A6C6D130318036E640580496C6D13076E03076005C018
0F4F6C7F6E030F6005E0496C6D131F6E031F6005F0183F4F6C14806F023F6005F8496DEB
C07F6F027F6005FC18FF4F6D7F6F02FF95C9FC7190C76C13F16F90B55F1DF34E6E13FB6F
624E6E13FFA26F624E806F62A24E806F624E807061A24E8170614E817096CAFCA295C97E
70604D160F0407604D16077048705A834E7CCC8C>I<007FB7023FB612F0A8D8000302C0
020191C7FC6D6E9138007FF0705E6D4E5A6E6D4A5B6E6D4A90C8FC6E6D5C704A5A6E4C5A
6E6E5C6E6E495A6E6E495A7113FF6E6E485B6F4A5B6F6D4890C9FC6F01FE5B71485A6FEC
9FF86F14BF6FECFFF06F5D616F5D7091CAFC705B828470808270807080854C805E4C8085
4C804C81EE7FE7DCFFE3804B01C1804B0180804D804B487F4B486D7F031F6E7F4B486D7F
4B48824B487F4C6D804A496D804A90C8804A844A48814A486F7F4A486F7F4B6F7F4A4884
4A486F80010F01F881B76C91B712FEA85F4D7DCC66>I<B892B612F8A8D8001F49C90003
EBF0006D6D04001380A26D6E94C7FC626D6E5E1A03A26D6E4B5AA26D6E4B5AA26E6D5E1A
1F6E6D5E1A3F6E6070157FA26E6D4B5AA26E6E4990C8FCA26E6E5C19036E6E5C1907A26E
6E495AA26F6D495AA26F6D5C193F6F6D5C197F6F5E7113FFA26F028190C9FCA26FECC3FE
A26FECE3FC18E76FECF7F818FFA2705CA2705CA2705CA2705CA37091CAFCA2705BA2705B
A2705BA2715AA3715AA24D5AA26017FF95CBFC5EA24C5AEA03F8D80FFE4A5A487E486D49
5A487F5FB56C131F5F163F4C5AA24C5A4B90CCFC6C49485A4B5AEC800F6C9038003FF849
EBFFF0261FFC0713C06CB65A6C92CDFC6C14FCC614F0013F13C0D907FCCEFC5D6F7CCC66
>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 491 1058 a FM(Sim)-5 b(ulation)65 b(of)g(Switc)-5
b(hed-Capacitor)65 b(and)920 1385 y(Switc)-5 b(hed-Curren)g(t)63
b(Net)-5 b(w)g(orks)468 1713 y(Under)64 b(Instan)-5 b(t)65
b(Settling)h(Appro)-5 b(ximation)1784 2520 y FL(Ily)l(a)46
b(Y)-11 b(usim)1291 3386 y FK(Submitted)32 b(in)g(partial)e
(ful\014llmen)m(t)g(of)i(the)1460 3562 y(requiremen)m(ts)i(for)e(the)h
(degree)g(of)1647 3738 y(Do)s(ctor)f(of)g(Philosoph)m(y)1153
3915 y(in)g(the)h(Graduate)f(Sc)m(ho)s(ol)g(of)g(Arts)h(and)g(Sciences)
1497 4331 y(COLUMBIA)h(UNIVERSITY)2002 4575 y(1999)p
eop
%%Page: 1 2
1 1 bop 1957 3253 a FJ(c)1923 3257 y FI(\015)p FJ(1999)1825
3607 y(Ily)m(a)38 b(Y)-10 b(usim)1591 3956 y(All)37 b(Righ)m(ts)h
(Reserv)m(ed)p eop
%%Page: 2 3
2 2 bop 1557 125 a FM(ABSTRA)-5 b(CT)983 595 y FL(Sim)l(ulation)46
b(of)f(Switc)l(hed-Capacitor)h(and)1280 854 y(Switc)l(hed-Curren)l(t)g
(Net)l(w)l(orks)967 1113 y(Under)f(Instan)l(t)g(Settling)h(Appro)l
(ximation)1825 1463 y FJ(Ily)m(a)38 b(Y)-10 b(usim)536
1812 y FH(Algorithms)23 b(for)g(analyzing)h(switc)m(hed-capacitor)g
(and)f(switc)m(hed-curren)m(t)h(net)m(w)m(orks)g(under)f(the)300
1982 y(instan)m(t)29 b(settling)f(appro)m(ximation)g(are)i(presen)m
(ted.)40 b(By)30 b(making)e(this)g(appro)m(ximation,)h(the)g(transien)m
(t)300 2151 y(analysis)36 b(of)i(non-linear)f(net)m(w)m(orks)h(reduces)
g(to)g(solving)f(a)h(set)h(of)f(non-linear)e(algebraic)h(equations)300
2320 y(p)s(er)29 b(switc)m(hing)f(in)m(terv)-5 b(al.)39
b(With)29 b(additional)f(assumptions)g(of)h(small-signal)f(op)s
(eration)h(and)g(p)s(erio)s(dic)300 2490 y(switc)m(hing,)37
b(the)f(frequency)g(resp)s(onse)g(can)g(b)s(e)g(obtained)g(b)m(y)g
(running)e(only)h(one)i(transien)m(t)f(sim)m(ula-)300
2659 y(tion)e(to)h(extract)h(the)e(bias)g(p)s(oin)m(t)f(for)h(eac)m(h)i
(switc)m(hing)d(phase)h(and)g(then)g(p)s(erforming)e(the)j(standard)300
2828 y(frequency-domain)22 b(analysis)f(for)i(linear)f(p)s(erio)s
(dically)d(switc)m(hed)k(net)m(w)m(orks.)39 b(The)22
b(net)m(w)m(ork)i(equations)300 2998 y(are)33 b(compatible)f(with)g
(existing)g(device)h(mo)s(dels,)f(making)g(it)h(p)s(ossible)d(to)k
(describ)s(e)d(the)i(net)m(w)m(ork)h(at)300 3167 y(the)f(transistor)e
(lev)m(el.)47 b(The)32 b(algorithms)g(are)h(implemen)m(ted)e(in)g(a)i
(sim)m(ulator)e(SWITCAP3)h(in)f(whic)m(h)300 3336 y(BSIM3v3)j(is)f
(fully)e(implemen)m(ted)h(as)h(a)h(MOSFET)f(mo)s(del.)48
b(An)33 b(SI)g(\014lter)f(and)h(a)h(sigma-delta)f(A/D)300
3506 y(con)m(v)m(erter)f(are)f(used)e(to)i(demonstrate)g(the)g(sim)m
(ulator.)536 3675 y(Noise)d(analysis)f(for)h(\\ideal")f(switc)m
(hed-capacitor)i(net)m(w)m(orks)g(\(SCN's\))f(is)f(also)h(presen)m
(ted.)40 b(Ex-)300 3845 y(plicit)e(expressions)g(for)i(output)f(noise)g
(p)s(o)m(w)m(er)h(sp)s(ectral)f(densit)m(y)g(\(PSD\))i(are)f(deriv)m
(ed)f(in)f(terms)i(of)300 4014 y(parameters)e(of)f(ideal)f(SCN's)h(and)
g(the)g(parameters)h(of)f(the)h(noise)e(sources.)62 b(There)37
b(is)f(no)h(need)g(to)300 4183 y(compute)28 b(eigen)m(v)-5
b(alues)28 b(or)g(matrix)g(exp)s(onen)m(tials,)f(or)h(to)h(solv)m(e)g
(bilateral)d(matrix)h(equations.)40 b(F)-8 b(orm)m(u-)300
4353 y(las)29 b(ha)m(v)m(e)h(b)s(een)f(deriv)m(ed)f(for)h(the)h(cases)g
(of)f(white)f(and)h(1)p FG(=f)39 b FH(noise)29 b(inputs.)38
b(It)30 b(is)e(also)h(sho)m(wn)g(that)h(the)300 4522
y(results)35 b(are)h(a)h(go)s(o)s(d)f(appro)m(ximation)f(to)i(the)f
(output)g(noise)f(PSD)h(of)g(real)g(SCN's)f(that)i(satisfy)f(the)300
4691 y(fast)g(c)m(harge)h(transfer)f(assumption.)55 b(Noise)36
b(sources)g(considered)e(w)m(ere)j(MOS)e(switc)m(hes)g(with)g(\014nite)
300 4861 y FF(on)p FH(-resistances)f(and)g(input-referred)e(noise)h
(PSD's)h(of)h(op)s(erational)e(ampli\014ers)f(\(opamps\).)53
b(Exp)s(er-)300 5030 y(imen)m(ts)36 b(are)g(carried)f(out)i(to)f
(demonstrate)h(the)f(v)-5 b(alidit)m(y)35 b(of)h(the)g(form)m(ulation)f
(for)h(b)s(oth)f(white)h(and)300 5199 y(1)p FG(=f)41
b FH(input)28 b(noise.)p eop
%%Page: 1 4
1 3 bop 300 763 a FE(Con)-6 b(ten)g(ts)300 1299 y FD(1)84
b(In)m(tro)s(duction)2836 b(1)436 1468 y FH(1.1)94 b(SC)30
b(and)g(SI)f(circuits)g(\(motiv)-5 b(ation\))51 b FG(:)46
b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)184 b FH(1)436 1637 y(1.2)94
b(De\014nition)29 b(of)i(SC)e(and)h(SI)g(net)m(w)m(orks.)35
b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)184 b FH(2)436 1807 y(1.3)94
b(Sim)m(ulation)29 b(of)h(SC)g(and)f(SI)h(net)m(w)m(orks)c
FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)184 b FH(4)645 1976 y(1.3.1)106
b(Con)m(tin)m(uous-time)30 b(sim)m(ulation)52 b FG(:)46
b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)184 b FH(4)645 2145 y(1.3.2)106 b(Time-domain)29
b(sim)m(ulation)f(with)h(discon)m(tin)m(uities)82 b FG(:)46
b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)184 b
FH(5)645 2315 y(1.3.3)106 b(F)-8 b(requency-domain)30
b(sim)m(ulation)f(with)g(discon)m(tin)m(uities)c FG(:)46
b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)184 b FH(6)645
2484 y(1.3.4)106 b(Sim)m(ulation)28 b(under)h(instan)m(t)h(settling)g
(appro)m(ximation)81 b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
184 b FH(7)645 2654 y(1.3.5)137 b(Noise)30 b(analysis)f(of)i(SCN's)45
b FG(:)h(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)184 b FH(9)436 2823 y(1.4)94
b(Thesis)29 b(o)m(v)m(erview)41 b FG(:)k(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(11)300 3027 y
FD(2)84 b(Time-domain)33 b(form)m(ulation)i(for)g(SC)f(and)h(SI)g(net)m
(w)m(orks)1079 b(13)436 3196 y FH(2.1)94 b(Net)m(w)m(ork)32
b(de\014nitions)h FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)
f(:)h(:)138 b FH(14)436 3365 y(2.2)94 b(Ov)m(erview)30
b(of)h(CS/MNA)f(concepts)49 b FG(:)d(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(19)645 3535 y(2.2.1)106 b(Charge)31 b(redistribution)26
b(b)s(et)m(w)m(een)31 b(capacitors)85 b FG(:)46 b(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(19)645 3704
y(2.2.2)106 b(Curren)m(t-conducting)29 b(resistor)58
b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(24)436 3874 y(2.3)94
b(Mo)s(di\014ed)29 b(no)s(dal)g(analysis)g(\(MNA\))44
b FG(:)i(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(27)645 4043
y(2.3.1)106 b(Device)32 b(stamps)85 b FG(:)46 b(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)
h(:)g(:)g(:)f(:)h(:)138 b FH(29)645 4212 y(2.3.2)106
b(V)-8 b(ector)32 b(notation)f(for)f(MNA)h(equations)90
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)138 b FH(31)436 4382 y(2.4)94 b(Charge)31 b(conserv)-5
b(ation)30 b(equations)90 b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(31)645 4551 y(2.4.1)106 b(A)31 b(c)m(harge)g(surface)g(and)f(its)f
(c)m(harge)j(conserv)-5 b(ation)30 b(equation)71 b FG(:)46
b(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(32)645 4720 y(2.4.2)106
b(Linearly)29 b(indep)s(enden)m(t)f(c)m(harge)k(conserv)-5
b(ation)30 b(equations)85 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(34)645 4890 y(2.4.3)106 b(Lo)s(cating)31 b(linearly)d(indep)s
(enden)m(t)g(c)m(harge)k(surfaces)44 b FG(:)i(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)138 b FH(36)645 5059 y(2.4.4)106
b(Device)32 b FC(stamp)g FH(for)e(c)m(harge)h(conserv)-5
b(ation)31 b(equations)47 b FG(:)f(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)138 b FH(39)436 5228 y(2.5)94 b(Charge)31 b(Surface)f(/Mo)s
(di\014ed)f(No)s(dal)h(Analysis)e(\(CS/MNA\))81 b FG(:)46
b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(40)645
5398 y(2.5.1)106 b(CS/MNA)31 b(equations)83 b FG(:)45
b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(40)2087 5656
y(i)p eop
%%Page: 2 5
2 4 bop 645 99 a FH(2.5.2)106 b(Device)32 b FC(stamps)g
FH(for)e(CS/MNA)g(equations)55 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(42)436 268
y(2.6)94 b(CS/MNA)31 b(under)e(instan)m(t)h(settling)g(appro)m
(ximation)63 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)138 b FH(45)645 437 y(2.6.1)106 b(Net)m(w)m(ork)32
b(restrictions)66 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(45)645 607 y(2.6.2)106 b(Settling)30 b(state)h(equations)75
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(46)645 776
y(2.6.3)106 b(Instan)m(t)31 b(settling)f(appro)m(ximation)81
b FG(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)138 b FH(47)645 945 y(2.6.4)106 b(MOS)30
b(transistor)g(as)g(a)h(switc)m(h)70 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(48)645 1115 y(2.6.5)106 b(MOS)30 b(transistor)g(as)g(a)h(curren)m
(t-conducting)f(switc)m(h)67 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)138 b FH(51)436 1284 y(2.7)94 b(F)-8 b(ast)32
b(transien)m(t)e(analysis)56 b FG(:)46 b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)138 b FH(52)645 1453 y(2.7.1)106 b(Implemen)m(tation)37
b(considerations)f(and)h(e\016tien)m(t)h(algorithm)f(for)g(fast)h
(tran-)936 1623 y(sien)m(t)31 b(analysis)60 b FG(:)45
b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(53)436 1792 y(2.8)94 b(Conclusion)89 b FG(:)46 b(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)
f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(57)300 1996 y FD(3)84 b(F)-9 b(requency)36 b(Resp)s(onse)2428
b(59)436 2165 y FH(3.1)94 b(Net)m(w)m(ork)32 b(de\014nitions)h
FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(60)436 2335 y(3.2)94 b(Small-signal)28 b(analysis)56
b FG(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(63)645 2504 y(3.2.1)106 b(Op)s(erating)29 b(p)s(oin)m(ts)54
b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(63)645 2673 y(3.2.2)106 b(Small-signal)28 b(net)m(w)m(ork)j
(equations)62 b FG(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(66)436 2843
y(3.3)94 b(State)32 b(c)m(harge)f(v)-5 b(ariable)30 b(form)m(ulation)49
b FG(:)c(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(69)436 3012 y(3.4)94
b(F)-8 b(requency-domain)31 b(analysis.)65 b FG(:)45
b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(71)436 3182
y(3.5)94 b(Conclusion)89 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(75)300 3385
y FD(4)84 b(Sim)m(ulation)35 b(examples)2416 b(76)436
3555 y FH(4.1)94 b(Clo)s(c)m(k)31 b(w)m(a)m(v)m(eforms)g(and)f(switc)m
(hes)h FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(77)436
3724 y(4.2)94 b(Time-domain)29 b(sim)m(ulation)f(of)j(SI)f(in)m
(tegrator)45 b FG(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(79)436 3893 y(4.3)94
b(SI)30 b(\014fth-order)f(elliptic)f(lo)m(w-pass)j(\014lter)50
b FG(:)c(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)
f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(82)645 4063 y(4.3.1)106
b(Small-signal,)28 b(frequency-domain)h(sim)m(ulation)35
b FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(84)645 4232 y(4.3.2)f(Sim)m(ulating)28 b(frequency)i(resp)s(onse)f
(using)g(transien)m(t/FFT)i(metho)s(d)80 b FG(:)46 b(:)f(:)h(:)138
b FH(85)645 4402 y(4.3.3)106 b(Distortion)30 b(sim)m(ulation)24
b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(88)436
4571 y(4.4)94 b(SI)30 b(Sigma-Delta)h(Mo)s(dulator)39
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b
FH(92)436 4740 y(4.5)94 b(Conclusion)89 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)
h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b
FH(95)300 4944 y FD(5)84 b(Noise)35 b(Analysis)h(of)f(Ideal)f(Switc)m
(hed-Capacitor)h(Net)m(w)m(orks)914 b(96)436 5113 y FH(5.1)94
b(In)m(tro)s(duction)27 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(96)436 5283
y(5.2)94 b(Net)m(w)m(ork)32 b(de\014nitions)h FG(:)46
b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(97)2075 5656 y(ii)p eop
%%Page: 3 6
3 5 bop 436 99 a FH(5.3)94 b(Basic)31 b(principles)43
b FG(:)i(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(101)436 268 y(5.4)h(Noise)31 b(analysis:)39 b(white)30
b(noise)f(input)63 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(103)645 437 y(5.4.1)106 b(Using)30 b(the)g(ideal)g(net)m(w)m(ork)h
(represen)m(tation)39 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(103)645 607 y(5.4.2)106
b(SCN)30 b(with)f(one)i(lossy)e(elemen)m(t)40 b FG(:)46
b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)93 b FH(104)645 776 y(5.4.3)106 b(Deriv)-5
b(ation)30 b(of)1501 753 y(~)1486 776 y FG(S)1542 790
y FB(y)1583 776 y FH(\()p FG(!)s FH(\))h(b)m(y)f(ev)-5
b(aluating)30 b(a)h(limit)84 b FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)
f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(107)436 945 y(5.5)h(Noise)31
b(analysis)e(for)h(\\real")h(SCN's)63 b FG(:)46 b(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)93 b FH(109)436 1115 y(5.6)h(Examples)71 b FG(:)46
b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)93 b FH(111)436 1284 y(5.7)h(Noise)31 b(analysis:)39
b(1)p FG(=f)i FH(noise)29 b(input)64 b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)
g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)93 b FH(119)645 1453 y(5.7.1)106 b(Example)29 b FG(:)45
b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(122)436 1623 y(5.8)h(Multiple)29 b(Noisy)h(elemen)m(ts)60
b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(123)645 1792 y(5.8.1)106 b(Net)m(w)m(ork)32 b(de\014nitions)c(for)
i(e\016cien)m(t)h(noise)f(analysis)41 b FG(:)46 b(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(123)645 1962 y(5.8.2)106
b(Large)31 b(c)m(hange)h(sensitivit)m(y)54 b FG(:)46
b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(127)645 2131 y(5.8.3)106
b(Alternativ)m(e)31 b(expression)e(for)h FG(S)2047 2145
y FB(y)2088 2131 y FH(\()p FG(!)s FH(\))84 b FG(:)46
b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)93 b FH(130)645 2300 y(5.8.4)106 b(Computation)30
b(of)1617 2277 y(\023)1595 2300 y FG(D)1670 2315 y FB(k)1737
2300 y FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)
f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(132)645 2470 y(5.8.5)137 b(Computation)29 b(of)i
FG(C)1691 2485 y FB(in;k)1878 2470 y FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)93 b FH(133)645 2639 y(5.8.6)106 b(Algorithm)29 b(for)i(e\016cien)m
(t)f(noise)g(analysis)55 b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(134)436 2808
y(5.9)h(Conclusion)89 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(136)300 3012
y FD(6)84 b(Conclusions)2767 b(137)300 3216 y(A)57 b(Relationship)35
b(b)s(et)m(w)m(een)f(c)m(harge)h(conserv)-6 b(ation)35
b(equations)g(and)f(K)m(CL)g(equations)5 b(149)300 3420
y(B)62 b(Deriv)-6 b(ation)36 b(of)f(H)1153 3434 y FB(n)1199
3420 y FH(\()p FG(!)s FH(\))2414 b FD(152)436 3589 y
FH(B.1)75 b(Deriving)30 b FG(h)p FH(\()p FG(t;)15 b(\034)10
b FH(\))52 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)93 b FH(153)436 3759 y(B.2)75 b(Deriving)30
b FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))64 b
FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(157)436 3928 y(B.3)75 b(Deriving)30 b FG(H)1092
3942 y FB(n)1138 3928 y FH(\()p FG(!)s FH(\))45 b FG(:)g(:)h(:)g(:)f(:)
h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(159)300
4132 y FD(C)60 b(Deriv)-6 b(ation)36 b(of)f FG(S)1127
4146 y FB(y)1168 4132 y FH(\()p FG(!)s FH(\))2445 b FD(161)436
4301 y FH(C.1)73 b(Stationary)31 b(white)e(noise)h(input)c
FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(161)436
4470 y(C.2)73 b(Stationary)31 b FC(non)p FH(-white)f(noise)g(input)59
b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(162)300 4674 y
FD(D)56 b(Lossy)36 b(net)m(w)m(ork)f(prop)s(erties)2153
b(163)300 4878 y(E)67 b(Deriv)-6 b(ation)36 b(of)f FG(S)1127
4893 y FB(k)r(;m)1251 4878 y FH(\()p FG(!)s FH(\))2362
b FD(166)436 5047 y FH(E.1)77 b(Deriv)-5 b(ation)30 b(of)h
FG(S)1251 5062 y FB(k)r(;m;r)1429 5047 y FH(\()p FG(!)s
FH(\))36 b FG(:)46 b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(168)2062 5656 y(iii)p eop
%%Page: 4 7
4 6 bop 300 99 a FD(F)70 b(CS/MNA)35 b(for)g(\\ideal")g(SCN's)2018
b(170)436 268 y FH(F.1)80 b(Net)m(w)m(ork)32 b(equations)e(for)h(ideal)
e(SCN's)71 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(170)436
437 y(F.2)80 b(Stamps)30 b(for)g(ideal)g(SCN)f(equations)j
FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(174)300 641
y FD(G)54 b(Rank-1-up)s(date)35 b(v)m(ectors)2268 b(177)2063
5656 y FH(iv)p eop
%%Page: 5 8
5 7 bop 300 763 a FE(List)77 b(of)g(Figures)436 1264
y FH(1.1)94 b(a\))32 b(SC)d(or)h(SI)g(net)m(w)m(ork.)42
b(b\))30 b(External)f(clo)s(c)m(k)i(w)m(a)m(v)m(eform.)d
FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)184
b FH(3)436 1433 y(1.2)94 b(Ideal)30 b(clo)s(c)m(k)h(w)m(a)m(v)m(eform.)
95 b FG(:)46 b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)184
b FH(5)436 1686 y(2.1)94 b(Net)m(w)m(ork)32 b(elemen)m(ts.)79
b FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(15)436 1855 y(2.2)94 b(Switc)m(hing)29 b(instan)m(ts)h(and)g
(switc)m(hing)f(in)m(terv)-5 b(als.)101 b FG(:)46 b(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b
FH(16)436 2025 y(2.3)94 b(Latc)m(hed)32 b(Comparator.)97
b FG(:)46 b(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(17)436 2194 y(2.4)94 b(a\))24 b(Circuit)d(with)g(c)m(harge)j
(redistribution.)35 b(b\))23 b(P)m(ossible)e(w)m(a)m(v)m(eform)k(for)d
(no)s(de)g(v)m(oltages.)645 2363 y(c\))32 b(Charge)e(surface.)88
b FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(20)436 2533 y(2.5)94 b(a\))32 b(Circuit)c(with)h(curren)m
(t-conducting)h(resistor.)40 b(b\))30 b(W)-8 b(a)m(v)m(eforms)32
b(for)f(no)s(de)e(v)m(oltages.)119 b(25)436 2702 y(2.6)94
b(Instan)m(t)31 b(settling)f(appro)m(ximation)f(for)h(net)m(w)m(ork)h
(of)g(Fig.)g(2.5\(a\).)91 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)138 b FH(26)436 2871 y(2.7)94 b(Structure)30 b(of)h(MNA)g(equations)
f(and)f(unkno)m(wns.)107 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(29)436 3041 y(2.8)94
b(Net)m(w)m(ork)32 b(with)d(c)m(harge)j(surfaces.)39
b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(33)436
3210 y(2.9)94 b(CS-graph)30 b(for)g(net)m(w)m(ork)h(in)e(Fig.)41
b(2.8)31 b(.)82 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(33)436
3380 y(2.10)49 b(CS-graph)30 b(table)g(for)g(Fig.)41
b(2.9.)126 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(33)436 3549 y(2.11)49 b(Charge)31 b(conserv)-5 b(ation)30
b(equations)g(for)h(CS-graph)e(in)g(Fig.)41 b(2.9.)135
b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(33)436
3718 y(2.12)49 b(Charge)31 b(surface)f(com)m(binations.)64
b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(35)436
3888 y(2.13)49 b(Set)31 b(of)g(CS/MNA)f(equations.)89
b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(41)436
4057 y(2.14)49 b(a\))28 b(MOS)f(transistor's)f(sym)m(b)s(ol.)38
b(b\))27 b(Conductiv)m(e)g(branc)m(hes.)39 b(c\))28 b(Capacitiv)m(e)f
(branc)m(hes.)89 b(44)436 4226 y(2.15)49 b(CS-graph)30
b(for)g(the)g(MOS)g(transistor.)k FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(44)436 4396 y(2.16)49 b(Con)m(tin)m(uous-time)30
b(in)m(tegrator.)129 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)
h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(46)436 4565 y(2.17)49 b(MOS)30 b(switc)m(h)g(holding)e(a)j(c)m
(harge.)110 b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b
FH(48)436 4734 y(2.18)49 b(Charge)31 b(leak)-5 b(age)31
b(in)f(an)g(MOS)g(switc)m(h.)72 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(48)436 4904 y(2.19)49 b(Appro)m(ximate)31 b(mo)s(del)e(for)h(the)h
(MOS)e(switc)m(h.)103 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(49)436 5073
y(2.20)49 b(Clo)s(c)m(k)31 b(feed-through)f(e\013ect.)70
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b
FH(50)436 5243 y(2.21)49 b(Channel)29 b(c)m(harge)j(redistribution.)89
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(50)2076 5656
y(v)p eop
%%Page: 6 9
6 8 bop 436 99 a FH(2.22)49 b(MOS)30 b(switc)m(h)g(in)f(curren)m(t)h
(path.)88 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(51)436 351 y(3.1)94 b(Net)m(w)m(ork)32 b(elemen)m(ts)f(for)f
(frequency-domain)f(form)m(ulation.)127 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)138 b FH(61)436 520 y(3.2)94 b(Switc)m(hing)27
b(instan)m(ts)i(and)f(switc)m(hing)f(in)m(terv)-5 b(als)28
b(in)f(a)i(p)s(erio)s(dically)c(switc)m(hed)j(net)m(w)m(ork.)91
b(62)436 690 y(3.3)j(Step)31 b(resp)s(onse)e(of)h(the)h(bias)e(net)m(w)
m(ork)j(to)f(the)f(bias)g(input)44 b FG(:)h(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)138 b FH(66)436 942 y(4.1)94 b(Non-sampling)29
b(CMOS)h(switc)m(h.)77 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(78)436 1111 y(4.2)94 b(Sampling)28 b(CMOS)i(switc)m(h.)116
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b
FH(78)436 1281 y(4.3)94 b(Clo)s(c)m(k)31 b(w)m(a)m(v)m(eforms.)117
b FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(78)436 1450 y(4.4)94 b(Simple)28 b(SI)i(in)m(tegrator)77
b FG(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(80)436 1619 y(4.5)94 b(T)-8 b(ransien)m(t)30 b(resp)s(onse)g(of)g
(the)h(SI)e(in)m(tegrator)j(in)d(Fig.)h(4.4)36 b FG(:)46
b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(81)436 1789 y(4.6)94 b(HSPICE)30 b(options)f(and)h(CPU)g(time)g
(comparison)119 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)138 b FH(81)436 1958 y(4.7)94 b(Casco)s(de)31
b(transconductor)67 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
138 b FH(83)436 2128 y(4.8)94 b(Bilinear,)29 b(double)g(sampling)f
(summer/in)m(tegrator)74 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(83)436 2297 y(4.9)94
b(Fifth-order)30 b(Elliptic)d(lo)m(w-pass)j(\014lter)109
b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(83)436 2466 y(4.10)49
b(T)-8 b(ransien)m(t)30 b(sim)m(ulation)f(with)g(bias)g(inputs)f(only)
38 b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)138 b FH(86)436 2636 y(4.11)49 b(Filter)30
b(frequency)g(resp)s(onse)90 b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)
h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)138 b FH(86)436 2805 y(4.12)49 b(Sim)m(ulating)29
b(frequency)g(resp)s(onse)h(using)f(transien)m(t/FFT)d
FG(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(87)436 2974 y(4.13)49 b(T)-8 b(ransien)m(t)30 b(sim)m(ulation)f
(with)g(160)i(kHz)g(input)e(sin)m(usoid)41 b FG(:)46
b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(89)436 3144 y(4.14)49 b(HSPICE)30 b(options)f(and)h(CPU)g(time)g
(comparison)119 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h
(:)g(:)g(:)f(:)h(:)138 b FH(89)436 3313 y(4.15)49 b(Sp)s(ectrum)29
b(of)i(the)f(output)g(w)m(a)m(v)m(eform)i(from)e(HSPICE)f(sim)m
(ulation)58 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(90)436 3482 y(4.16)49 b(Sp)s(ectrum)29 b(of)i(the)f(output)g(w)m
(a)m(v)m(eform)i(from)e(SWITCAP3)g(sim)m(ulation)57 b
FG(:)45 b(:)h(:)g(:)g(:)f(:)h(:)138 b FH(90)436 3652
y(4.17)49 b(SI)30 b(second-order)g(\006\001)g(mo)s(dulator)74
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(93)436 3821
y(4.18)49 b(F)-8 b(ully)30 b(balanced)f(transconductor)97
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(93)436 3991
y(4.19)49 b(D/A)32 b(con)m(v)m(erter)89 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)
g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(93)436
4160 y(4.20)49 b(Sp)s(ectrum)29 b(of)i(the)f(comparator)i(output)90
b FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)138 b FH(94)436 4412 y(5.1)94
b(De\014nition)29 b(of)i(elemen)m(ts)g(considered)e(in)g(the)i(noise)e
(form)m(ulation)70 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)138
b FH(99)436 4582 y(5.2)94 b(De\014nition)29 b(of)i(noise)f(sources)g
(considered)f(in)g(the)i(noise)f(form)m(ulation)40 b
FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)138 b FH(99)436 4751
y(5.3)94 b(Ideal)30 b(SCN)g(with)f(net)m(w)m(ork)i(equations)f(\(5.4\))
i(and)e(\(5.3\))103 b FG(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g
(:)f(:)h(:)93 b FH(100)436 4920 y(5.4)h(An)30 b(ideal)g(SCN)f(with)g
(one)i(lossy)f(elemen)m(t)h(and)e(the)i(noise)f(source)114
b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(105)436
5090 y(5.5)h(Mo)s(di\014ed)29 b(SCN)h(for)g(noise)g(form)m(ulation)94
b FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)93 b FH(107)436 5259 y(5.6)h(Mo)s(deling)29
b(the)i(\014nite)e(bandwidth)f(of)i(the)h(noise)f(generator.)94
b FG(:)46 b(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(112)2063 5656 y(vi)p eop
%%Page: 7 10
7 9 bop 436 99 a FH(5.7)94 b(First)30 b(order)g(highpass)f(\014lter.)49
b FG(:)d(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)
g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(114)436
268 y(5.8)h(The)30 b(ideal)f(SCN)h(part)g(of)h(the)f(circuit)g(in)f
(Fig.)40 b(5.7.)69 b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f
(:)h(:)g(:)g(:)f(:)h(:)93 b FH(114)436 437 y(5.9)h(Input)31
b(\(white\))g(and)g(output)g(noise)g(PSD)h(of)g(the)f(circuit)g(sho)m
(wn)g(in)f(Fig.)45 b(5.7)32 b(due)f(to)645 607 y(the)g(switc)m(h)f
FG(S)1139 621 y FA(2)1178 607 y FH(.)41 b(The)30 b(input)e(noise)i(PSD)
g(is)f(set)i(to)g Fz(\000)p FH(61)p FG(:)p FH(5)h(dB.)79
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(114)436 776 y(5.10)49 b Fy(Lossy)27 b(SC)e(in)n(tegrator.)50
b FG(:)c(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(116)436 945 y(5.11)49 b(Input)38 b(and)g(output)h(noise)f(PSD)h
(of)g(the)g(circuit)e(sho)m(wn)i(in)e(Fig.)67 b(5.10)40
b(due)e(to)i(the)645 1115 y(opamp.)h(The)30 b(input)e(noise)i(PSD)g(is)
f(set)i(to)g(-61.5)i(dB.)101 b FG(:)46 b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)
f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(116)436 1284 y(5.12)49
b(Lossy)31 b(SC)e(in)m(tegrator)i(with)e(output)h(sampling.)92
b FG(:)46 b(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f
(:)h(:)93 b FH(118)436 1453 y(5.13)49 b FG(S)701 1467
y FB(y)743 1453 y FH(\()p FG(!)s FH(\))30 b(for)h(the)f(circuit)f(in)g
(Fig.)41 b(5.12.)h(The)30 b(input)f(noise)g(PSD)h(is)g(set)h(to)g
(-61.5)h(dB.)59 b FG(:)93 b FH(118)436 1623 y(5.14)49
b(Output)30 b(noise)f(PSD)i(of)f(the)h(circuit)e(in)g(Fig.)41
b(5.12)31 b(due)f(to)h(1)p FG(=f)41 b FH(noise)30 b(input.)63
b FG(:)46 b(:)f(:)h(:)93 b FH(118)436 1792 y(5.15)49
b(SCN)30 b(de\014nitions.)86 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)
g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g
(:)f(:)h(:)g(:)g(:)f(:)h(:)93 b FH(125)436 1962 y(5.16)49
b(T)-8 b(op)s(ology)31 b(transformations)e(from)h(original)f(SCN)h(to)h
(noisy)e(SCN)93 b FG(:)46 b(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(128)436 2131 y(5.17)49 b(De\014nitions)29 b(for)h(computation)h
(of)f FG(C)1942 2146 y FB(in;l)2161 2131 y FG(:)46 b(:)f(:)h(:)g(:)g(:)
f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)93
b FH(133)436 2383 y(B.1)75 b(Illustration)28 b(of)j FG(h)1274
2398 y FB(k)1317 2383 y FH(\()p FG(t;)15 b(\034)10 b
FH(\))31 b(and)f(its)g(decomp)s(osition)f(according)h(to)h(\(B.5\).)99
b FG(:)46 b(:)g(:)g(:)f(:)h(:)93 b FH(154)436 2636 y(F.1)80
b(CS/MNA)31 b(equations)f(for)g(ideal)f(SCN's.)70 b FG(:)46
b(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)93 b FH(172)2051 5656 y(vii)p eop
%%Page: 8 11
8 10 bop 300 763 a FE(List)77 b(of)g(T)-19 b(ables)436
1264 y FH(4.1)94 b(Comparison)29 b(of)i(CPU)f(time)g(for)g(transien)m
(t)g(sim)m(ulation.)79 b FG(:)45 b(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g
(:)g(:)f(:)h(:)138 b FH(88)436 1433 y(4.2)94 b(V)-8 b(alues)31
b(for)f(the)h(p)s(eaks)f(in)f(Fig.)h(4.15)i(and)e(Fig.)h(4.16)26
b FG(:)45 b(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h(:)g(:)f(:)h(:)g(:)g(:)f(:)h
(:)138 b FH(91)2038 5656 y(viii)p eop
%%Page: 9 12
9 11 bop 1341 127 a FM(Ac)-5 b(kno)g(wledgmen)g(ts)536
596 y FH(I)35 b(extend)h(m)m(y)f(deep)s(est)g(gratitude)h(to)g(Dr.)f
(Ken)g(Suy)m(ama,)i(m)m(y)f(advisor,)f(for)h(his)d(guidance)i(in)300
765 y(tec)m(hnical)25 b(and)f(p)s(ersonal)f(matters)j(throughout)e
(this)g(long)g(and)h(di\016cult)d(pro)s(cess.)39 b(I)24
b(am)h(also)g(grateful)300 935 y(to)k(Dr.)f(L\023)-45
b(aszl\023)g(o)28 b(T\023)-45 b(oth)28 b(who)g(w)m(as)g(sim)m
(ultaneously)e(a)i(partner)g(and)f(tec)m(hnical)h(adviser)f(for)h(a)g
(large)g(part)300 1104 y(of)j(the)f(w)m(ork.)41 b(He)31
b(taugh)m(t)g(me)g(a)f(great)i(deal.)536 1274 y(A)f(sp)s(ecial)e
(thanks)i(is)e(due)h(to)i(Gregory)f(Ionis,)f(who)g(sp)s(en)m(t)h(coun)m
(tless)f(tedious)g(hours,)g(helping)300 1443 y(with)h(the)h(crucial)f
(task)i(of)f(implemen)m(ting)e(the)i(transistor)f(device)h(mo)s(del.)45
b(Similarly)-8 b(,)29 b(the)j(practical)300 1612 y(implemen)m(tation)41
b(of)i(the)f(sim)m(ulator)g(w)m(ould)f(not)i(b)s(e)f(p)s(ossible)e
(without)h(the)i(generous)f(help)f(from)300 1782 y(Dr.)c(Da)m(vid)f
(Long)h(and)f(Dr.)h(P)m(eter)g(F)-8 b(eldman)37 b(from)f(Lucen)m(t)h(T)
-8 b(ec)m(hnologies.)59 b(I)37 b(am)f(also)h(grateful)f(to)300
1951 y(Dr.)31 b(Da)m(vid)f(V)-8 b(allancourt)30 b(from)g(Lucen)m(t)h(T)
-8 b(ec)m(hnologies,)31 b(for)f(his)f(stim)m(ulating)g(discussions.)536
2120 y(I)41 b(w)m(ould)g(lik)m(e)f(to)j(thank)e(m)m(y)h(colleagues)f
(at)i(the)e(Micro)s(electronics)g(Circuits)e(and)i(Systems)300
2290 y(Lab)s(oratory)-8 b(,)35 b(Aleksander)e(Dec,)j(Rub)m(\023)-43
b(en)34 b(Herrera,)h(Nagendra)f(Krishnapura,)e(Dandan)i(Li,)f(Shan)m
(thi)300 2459 y(P)m(a)m(v)-5 b(an)27 b(and)f(Hai)g(T)-8
b(ao,)28 b(and)e(Professors)g(Y)-8 b(annis)25 b(Tsividis)e(and)j(John)f
(Khoury)-8 b(.)39 b(Their)24 b(commen)m(ts)k(and)300
2629 y(kind)h(help)g(w)m(as)h(essen)m(tial)g(for)h(the)f(completion)g
(of)g(m)m(y)h(w)m(ork.)536 2798 y(My)42 b(wife)f(Irene)h(has)f
(demonstrated)h(extraordinary)f(endurance)g(and)h(pro)m(vided)e
(emotional)300 2967 y(supp)s(ort)26 b(at)i(the)g(most)g(di\016cult)d
(times.)40 b(W)-8 b(ords)27 b(alone)h(are)g(not)g(enough)f(to)h
(express)f(m)m(y)h(gratitude)f(to)300 3137 y(her.)40
b(My)31 b(sister)e(has)i(also)f(b)s(een)g(a)g(source)h(of)f(supp)s(ort)
f(and)h(advice)g(for)g(whic)m(h)f(I)h(am)h(grateful.)536
3306 y(Most)38 b(imp)s(ortan)m(t,)f(I)f(w)m(ould)f(lik)m(e)h(to)h
(thank)f(m)m(y)h(paren)m(ts)f(who)g(dedicated)h(their)e(liv)m(es)h(to)h
(m)m(y)300 3475 y(success.)2063 5656 y(ix)p eop
%%Page: 10 13
10 12 bop 2336 2133 a FH(T)-8 b(o)31 b(m)m(y)g(paren)m(ts)2336
2358 y(Y)-8 b(e\014m)31 b(and)f(Mira)2076 5656 y(x)p
eop
%%Page: 1 14
1 13 bop 3855 -200 a FH(1)300 721 y FM(Chapter)65 b(1)300
1095 y(In)-5 b(tro)5 b(duction)300 1576 y FL(1.1)135
b(SC)45 b(and)g(SI)f(circuits)h(\(motiv)-7 b(ation\))300
1892 y FH(Switc)m(hed-capacitor)34 b(net)m(w)m(orks)g(\(SCN's\))g(are)g
(a)h(p)s(opular)c(c)m(hoice)k(for)e(implemen)m(ting)f(analog)i(signal)
300 2118 y(pro)s(cessing)44 b(functions)f([1)q(,)i(2,)g(3)q(,)g(4].)84
b(Their)44 b(p)s(opularit)m(y)e(is)i(driv)m(en)g(b)m(y)g(the)h(fact)h
(that)g(they)f(can)300 2344 y(b)s(e)c(in)m(tegrated)i(in)e(a)h(metal-o)
m(xide-semiconductor)g(\(MOS\))h(tec)m(hnology)g(whic)m(h)d(is)h(also)h
(the)h(most)300 2570 y(p)s(opular)25 b(tec)m(hnology)j(for)f(digital)e
(V)-8 b(ery)28 b(Large)g(Scale)f(In)m(tegration)g(\(VLSI\))h(circuits)d
({)j(th)m(us,)f(allo)m(wing)300 2795 y(fabrication)43
b(of)i(b)s(oth)f(analog)h(and)f(digital)e(systems)j(on)f(one)h(c)m
(hip.)82 b(The)44 b(SCN's)g(con)m(tain)h(linear)300 3021
y(capacitors)36 b(whic)m(h)d(are)i(realized)g(b)m(y)f(the)h(t)m(w)m(o)i
(p)s(olysilicon)31 b(la)m(y)m(ers)k(and)g(they)g(con)m(tain)g(switc)m
(hes)g(and)300 3247 y(op)s(erational)23 b(or)g(transconductance)h
(ampli\014ers)d(whic)m(h)h(are)i(constructed)g(with)e(the)i(MOS)f
(transistors.)300 3473 y(The)31 b(critical)g(parameters)h(in)f(SCN's)g
(are)i(the)f(capacitor)g(ratios)g(whic)m(h)f(can)h(b)s(e)f(matc)m(hed)i
(to)f(within)300 3699 y(0.1)f(p)s(ercen)m(t)g([1)q(,)f(2)q(,)g(3)q(].)
536 3925 y(Switc)m(hed-curren)m(t)40 b(\(SI\))g(net)m(w)m(orks)h(ha)m
(v)m(e)g(b)s(een)f(recen)m(tly)g(in)m(tro)s(duced)f(as)h(an)h
(alternativ)m(e)f(to)300 4150 y(SCN's)33 b(for)g(implemen)m(ting)e
(analog)j(functions)e(in)g(a)i(digital)d(tec)m(hnology)k([5)q(,)e(6)q
(,)g(7)q(,)g(8)q(,)g(9)q(].)49 b(They)33 b(con-)300 4376
y(tain)d(nonlinear)f(capacitors,)i(switc)m(hes)g(and)f
(transconductors.)41 b(So)31 b(far,)g(their)e(p)s(erformance)h(has)h
(not)300 4602 y(matc)m(hed)43 b(that)f(of)g(SCN's)f([10)r(].)75
b(Ho)m(w)m(ev)m(er,)47 b(they)42 b(ha)m(v)m(e)h(t)m(w)m(o)g(prop)s
(erties)d(that)j(ma)m(y)f(lea)m(v)m(e)i(the)e(SI)300
4828 y(net)m(w)m(orks)37 b(as)g(the)f(only)g(alternativ)m(e)g(for)h
(mixed)e(signal)g(pro)s(cessing.)57 b(First,)38 b(the)e(absence)h(of)g
(linear)300 5054 y(capacitors)f(eliminates)e(the)h(need)g(for)g(a)h
(second)f(p)s(olysilicon)d(la)m(y)m(er)j(and)g(mak)m(es)h(it)f(p)s
(ossible)e(to)j(im-)300 5279 y(plemen)m(t)30 b(SI)f(net)m(w)m(orks)i
(on)f(a)h(lo)m(w-cost)g(Complemen)m(tary)f(MOS)g(\(CMOS\))g(digital)f
(pro)s(cess.)40 b(Second,)p eop
%%Page: 2 15
2 14 bop 3855 -200 a FH(2)300 99 y(is)31 b(the)h(lo)m(w)f(v)m(oltage)i
(swing.)44 b(F)-8 b(or)32 b(SCN's)f(the)h(no)s(de)f(v)m(oltage)i(swing)
e(is)f(directly)h(prop)s(ortional)e(to)k(the)300 324
y(signal.)63 b(In)37 b(SI)h(net)m(w)m(orks,)j(the)d(pro)s(cessing)f(is)
g(p)s(erformed)g(in)f(the)j(curren)m(t)f(domain)f(and)g(the)i(no)s(de)
300 550 y(v)m(oltage)34 b(swing)d(is)h(prop)s(ortional)e(to)j(the)g
(square)f(ro)s(ot)g(of)h(the)f(signal.)46 b(Consequen)m(tly)-8
b(,)33 b(as)f(the)h(p)s(o)m(w)m(er)300 776 y(supply)e(v)m(oltage)k(is)e
(reduced)f(for)h(the)h(digital)e(circuits,)h(the)g(dynamic)g(range)g
(of)h(SCN's)f(is)f(degraded)300 1002 y(m)m(uc)m(h)e(more)h(than)f(that)
h(of)g(the)f(SI)g(net)m(w)m(ork.)300 1288 y FL(1.2)135
b(De\014nition)46 b(of)f(SC)g(and)g(SI)f(net)l(w)l(orks.)300
1604 y FH(The)f(general)h(structure)g(of)g(SC)f(and)g(SI)g(net)m(w)m
(orks)i(is)e(summarized)f(in)h(Fig.)h(1.1\(a\).)83 b(The)44
b(basic)300 1830 y(elemen)m(ts)d(are)f(the)h(MOS)e(transistors,)j
(capacitors)f(and)f(resistors.)70 b(These)40 b(elemen)m(ts)g(are)h
(used)e(to)300 2056 y(construct)h(more)h(complex)e(structures)h(suc)m
(h)g(as)g(op)s(erational)f(and)g(transconductance)i(ampli\014ers,)300
2282 y(latc)m(hed)28 b(comparators)g(and)f(logic)g(gates.)41
b(The)27 b(MOS)g(transistors)f(are)i(also)f(used)g(as)h(switc)m(hes.)39
b(In)27 b(SC)300 2507 y(net)m(w)m(orks)k(a)g(linear)f(capacitor)h(is)f
(used)g(for)g(c)m(harge)i(storage,)h(while)28 b(in)i(SC)f(net)m(w)m
(orks)j(the)f(non-linear)300 2733 y(MOS)36 b(capacitor)g(ma)m(y)h(b)s
(e)f(used.)57 b(There)35 b(are)i(t)m(w)m(o)g(t)m(yp)s(es)f(of)g(inputs)
e(to)j(the)f(net)m(w)m(ork.)59 b(The)36 b(\014rst)f(is)300
2959 y(the)c(signal)e(input,)g(whic)m(h)h(is)f(to)j(b)s(e)e(pro)s
(cessed)g(b)m(y)g(the)h(net)m(w)m(ork.)43 b(The)30 b(second)h(t)m(yp)s
(e)f(is)g(the)h(external)300 3185 y(clo)s(c)m(k)k(signal.)54
b(The)34 b(clo)s(c)m(k)i(signals)d(are)i(pro)s(cessed)g(b)m(y)g(the)g
(logic)g(gates)h(whic)m(h)e(in)f(turn)h(con)m(trol)i(the)300
3411 y(switc)m(hes.)53 b(A)35 b(t)m(ypical)f(clo)s(c)m(k)h(signal)f(is)
f(sho)m(wn)h(in)g(Fig.)53 b(1.1\(b\).)i(It)35 b(is)e(a)j(con)m(tin)m
(uous)e(v)m(oltage)i(signal)300 3636 y(with)31 b(a)h(large)g(swing)f(b)
s(et)m(w)m(een)i(its)e(high)g(and)h(lo)m(w)f(v)-5 b(alues)32
b FG(V)2420 3651 y FB(h)2497 3636 y FH(and)f FG(V)2728
3651 y FB(l)2754 3636 y FH(.)46 b(It)32 b(also)g(has)g(a)g(\014nite)f
(rise)h(and)300 3862 y(fall)d(times)h FG(t)730 3876 y
FB(r)r(iz)s(e)890 3862 y FH(and)g FG(t)1100 3877 y FB(f)7
b(al)q(l)1227 3862 y FH(.)536 4088 y(An)36 b(imp)s(ortan)m(t)f(prop)s
(ert)m(y)h(of)g(b)s(oth)f(SC)h(and)f(SI)g(net)m(w)m(orks)i(is)e(that)i
(after)g(eac)m(h)g(transition)e(of)300 4314 y(the)e(clo)s(c)m(k)h(w)m
(a)m(v)m(eform,)i(the)d(net)m(w)m(ork,)i(after)f(some)g(transien)m(t)f
(resp)s(onse,)g(approac)m(hes)h(a)g(state)g(where)300
4540 y(the)46 b(v)m(oltages)g(and)f(curren)m(ts)g(are)h(constan)m(t.)87
b(This)43 b(prop)s(ert)m(y)i(of)h(the)f(net)m(w)m(ork)h(will)d(b)s(e)i
(referred)300 4766 y(to)39 b(as)g(the)g FC(settling)h(pr)-5
b(op)g(erty)42 b FH(and)c(the)g(state)i(to)f(whic)m(h)f(the)g(net)m(w)m
(ork)i(settles)f(will)d(b)s(e)h(referred)h(to)300 4991
y(as)j(the)h FC(settling)g(state)p FH(.)74 b(Ph)m(ysically)-8
b(,)43 b(the)e(settling)g(pro)s(cess)f(consists)h(of)g(c)m(harging)g
(or)g(disc)m(harging)300 5217 y(of)31 b(capacitors.)45
b(Ideally)-8 b(,)31 b(the)g(net)m(w)m(ork)h(m)m(ust)g(settle)f
(completely)g(b)s(efore)g(the)h(next)f(clo)s(c)m(k)h(transition.)p
eop
%%Page: 3 16
3 15 bop 3855 -200 a FH(3)437 836 y
 26246922 17037476 1052508 32759316 27299430 49796792 startTexFig
 437 836 a
%%BeginDocument: figs/sicnet.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      512 112 moveto
      576 144 lineto
      512 176 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      512 216 moveto
      544 232 lineto
      544 264 lineto
      512 280 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      552 132 moveto
      584 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      552 156 moveto
      584 156 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      544 240 moveto
      568 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      544 256 moveto
      568 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 228 moveto
      488 228 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 264 moveto
      488 264 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 132 moveto
      488 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 156 moveto
      488 156 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      517 260 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      514 138 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      517 153 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      536 157 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      539 133 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      514 240 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      557 262 moveto
      0 26 atan dup cos 8 mul 583 exch sub
      exch sin 8 mul 262 exch sub lineto
   stroke
grestore
gsave
   newpath
      583 262 8 3 26 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      582 233 moveto
      0 -26 atan dup cos 8 mul 556 exch sub
      exch sin 8 mul 233 exch sub lineto
   stroke
grestore
gsave
   newpath
      556 233 8 3 -26 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      283 213 moveto
      230 213 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      230 194 moveto
      230 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      219 194 moveto
      221.00 206.67 221.00 219.33
      219 232 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      221 213 moveto
      174 213 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      194 267 moveto
      203 267 lineto
      206 273 lineto
      211 260 lineto
      214 273 lineto
      219 260 lineto
      224 273 lineto
      227 260 lineto
      233 273 lineto
      236 260 lineto
      239 267 lineto
      248 267 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      248 267 moveto
      280 267 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      194 267 moveto
      175 267 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      172 171 moveto
      209 171 lineto
      209 153 lineto
      247 153 lineto
      247 171 lineto
      283 171 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      209 138 moveto
      247 138 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      228 138 moveto
      228 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      355 294 moveto
      383 294 lineto
      383 281 lineto
      411 281 lineto
      411 294 lineto
      438 294 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      383 270 moveto
      411 270 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      397 270 moveto
      397 256 lineto
   stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      344 248 moveto 448 248 lineto 448 304 lineto 344 304 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      352 239 moveto (switches) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      160 104 moveto 296 104 lineto 296 304 lineto 160 304 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      160 95 moveto (basic elements) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      474 463 moveto (latched) show
      474 493 moveto (comparators) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      371 415 moveto (logic) show
      371 445 moveto (gates) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      352 384 moveto 440 384 lineto 440 464 lineto 352 464 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      528 368 moveto
      480 400 lineto
      528 432 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      504 392 moveto
      512 392 lineto
      512 408 lineto
      520 408 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      500 416 moveto
      24 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      500 440 lineto
   stroke
grestore
gsave
   newpath
      500 416 8 3 0 -24 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      528 388 moveto
      552 388 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      528 412 moveto
      552 412 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      144 344 moveto
      608 344 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      144 328 moveto
      144 64 lineto
      608 64 lineto
      608 328 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      72 439 moveto (clocks) tgifcentertext show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      32 400 moveto 112 400 lineto 112 456 lineto 32 456 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      168 334 moveto (analog) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      168 366 moveto (digital) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      144 328 moveto
      144 520 lineto
      608 520 lineto
      608 328 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      112 424 moveto
      0 240 atan dup cos 8 mul 352 exch sub
      exch sin 8 mul 424 exch sub lineto
   stroke
grestore
gsave
   newpath
      352 424 8 3 240 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      480 400 moveto
      0 -40 atan dup cos 8 mul 440 exch sub
      exch sin 8 mul 400 exch sub lineto
   stroke
grestore
gsave
   newpath
      440 400 8 3 -40 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      400 384 moveto
      -80 0 atan dup cos 8 mul 400 exch sub
      exch sin 8 mul 304 exch sub lineto
   stroke
grestore
gsave
   newpath
      400 304 8 3 0 -80 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      112 256 moveto
      0 32 atan dup cos 8 mul 144 exch sub
      exch sin 8 mul 256 exch sub lineto
   stroke
grestore
gsave
   newpath
      144 256 8 3 32 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      608 256 moveto
      0 32 atan dup cos 8 mul 640 exch sub
      exch sin 8 mul 256 exch sub lineto
   stroke
grestore
gsave
   newpath
      640 256 8 3 32 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      656 247 moveto (signal) show
      656 277 moveto (output) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      640 224 moveto 736 224 lineto 736 288 lineto 640 288 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      43 247 moveto (signal) show
      43 277 moveto (input) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      32 224 moveto 112 224 lineto 112 288 lineto 32 288 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      586 344 moveto
      586 412 lineto
      0 -34 atan dup cos 8 mul 552 exch sub
      exch sin 8 mul 412 exch sub lineto
   stroke
grestore
gsave
   newpath
      552 412 8 3 -34 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      565 344 moveto
      565 388 lineto
      0 -13 atan dup cos 8 mul 552 exch sub
      exch sin 8 mul 388 exch sub lineto
   stroke
grestore
gsave
   newpath
      552 388 8 3 -13 0 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Aug 24 11:42:37 1998
%%EndDocument

 endTexFig
 2042 3220 a FH(\(a\))721 3251 y
 21773763 6972867 131563 42560798 21905326 49533665 startTexFig
 721 3251 a
%%BeginDocument: figs/clock.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      8 139 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      24 146 moveto (high) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      8 199 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      24 205 moveto (low) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 208 moveto
      0 512 atan dup cos 8 mul 576 exch sub
      exch sin 8 mul 208 exch sub lineto
   stroke
grestore
gsave
   newpath
      576 208 8 3 512 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      584 225 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      136 246 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      145 248 moveto (fall) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      272 246 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      281 248 moveto (rize) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 208 moveto
      -114 0 atan dup cos 8 mul 64 exch sub
      exch sin 8 mul 94 exch sub lineto
   stroke
grestore
gsave
   newpath
      64 94 8 3 0 -114 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 130 moveto
      128 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      168 194 moveto
      256 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      296 130 moveto
      368 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      408 194 moveto
      480 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      520 130 moveto
      576 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      127 130 moveto
      129.00 134.67 130.17 138.17 130.50 140.50 curveto
      130.83 142.83 131.17 144.67 131.50 146.00 curveto
      131.83 147.33 132.50 150.17 133.50 154.50 curveto
      134.50 158.83 135.67 162.67 137.00 166.00 curveto
      138.33 169.33 140.17 173.17 142.50 177.50 curveto
      144.83 181.83 146.83 184.50 148.50 185.50 curveto
      150.17 186.50 152.17 187.50 154.50 188.50 curveto
      156.83 189.50 158.33 190.33 159.00 191.00 curveto
      159.67 191.67 160.83 192.17 162.50 192.50 curveto
      164.17 192.83 166.67 193.33
      170 194 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      256 194 moveto
      259.33 184.00 261.50 177.50 262.50 174.50 curveto
      263.50 171.50 264.17 169.50 264.50 168.50 curveto
      264.83 167.50 265.83 165.17 267.50 161.50 curveto
      269.17 157.83 270.33 154.67 271.00 152.00 curveto
      271.67 149.33 273.17 146.17 275.50 142.50 curveto
      277.83 138.83 279.50 136.50 280.50 135.50 curveto
      281.50 134.50 283.17 133.50 285.50 132.50 curveto
      287.83 131.50 291.67 130.67
      297 130 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      367 130 moveto
      369.00 134.67 370.17 138.17 370.50 140.50 curveto
      370.83 142.83 371.17 144.67 371.50 146.00 curveto
      371.83 147.33 372.50 150.17 373.50 154.50 curveto
      374.50 158.83 375.67 162.67 377.00 166.00 curveto
      378.33 169.33 380.17 173.17 382.50 177.50 curveto
      384.83 181.83 386.83 184.50 388.50 185.50 curveto
      390.17 186.50 392.17 187.50 394.50 188.50 curveto
      396.83 189.50 398.33 190.33 399.00 191.00 curveto
      399.67 191.67 400.83 192.17 402.50 192.50 curveto
      404.17 192.83 406.67 193.33
      410 194 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      480 194 moveto
      483.33 184.00 485.50 177.50 486.50 174.50 curveto
      487.50 171.50 488.17 169.50 488.50 168.50 curveto
      488.83 167.50 489.83 165.17 491.50 161.50 curveto
      493.17 157.83 494.33 154.67 495.00 152.00 curveto
      495.67 149.33 497.17 146.17 499.50 142.50 curveto
      501.83 138.83 503.50 136.50 504.50 135.50 curveto
      505.50 134.50 507.17 133.50 509.50 132.50 curveto
      511.83 131.50 515.67 130.67
      521 130 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      128 99 moveto
      128 218 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      168 218 moveto
      168 173 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      256 99 moveto
      256 218 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      296 120 moveto
      296 218 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      192 218 moveto
      0 -16 atan dup cos 8 mul 176 exch sub
      exch sin 8 mul 218 exch sub lineto
   stroke
grestore
gsave
   newpath
      176 218 8 3 -16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      104 218 moveto
      0 16 atan dup cos 8 mul 120 exch sub
      exch sin 8 mul 218 exch sub lineto
   stroke
grestore
gsave
   newpath
      120 218 8 3 16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      320 218 moveto
      0 -16 atan dup cos 8 mul 304 exch sub
      exch sin 8 mul 218 exch sub lineto
   stroke
grestore
gsave
   newpath
      304 218 8 3 -16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      232 218 moveto
      0 16 atan dup cos 8 mul 248 exch sub
      exch sin 8 mul 218 exch sub lineto
   stroke
grestore
gsave
   newpath
      248 218 8 3 16 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      152 90 moveto (switching) show
      152 113 moveto (interval) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      136 120 moveto
      0 112 atan dup cos 8 mul exch sin 8 mul rmoveto
      0 112 atan dup cos 8 mul 248 exch sub
      exch sin 8 mul 120 exch sub lineto
   stroke
grestore
gsave
   newpath
      136 120 8 3 -112 0 tgifarrowtip
   closepath fill
grestore
gsave
   newpath
      248 120 8 3 112 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      40 107 moveto (V) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Nov 12 16:11:08 1998
%%EndDocument

 endTexFig
 2039 4360 a FH(\(b\))873 4556 y(Figure)30 b(1.1:)42
b(a\))31 b(SC)f(or)g(SI)g(net)m(w)m(ork.)41 b(b\))30
b(External)g(clo)s(c)m(k)h(w)m(a)m(v)m(eform.)p eop
%%Page: 4 17
4 16 bop 3855 -200 a FH(4)300 99 y(Ho)m(w)m(ev)m(er,)28
b(b)s(ecause)d(of)g(\014nite)f(time)g(constan)m(ts,)j(the)e(settling)f
(can)h(nev)m(er)g(b)s(e)g(complete.)39 b(It)25 b(is)e(therefore)300
324 y(imp)s(ortan)m(t)i(that)h(the)g(switc)m(hing)e(in)m(terv)-5
b(al)24 b(\(de\014ned)h(in)f(Fig.)39 b(1.1\(b\)\))28
b(m)m(ust)d(b)s(e)g(long)g(compared)g(to)i(the)300 550
y(net)m(w)m(orks)h(time)f(constan)m(ts)i(so)f(that)g(the)f(distortion)f
(due)h(to)h(incomplete)f(settling)g(is)f(b)s(elo)m(w)h(a)g(desired)300
776 y(v)-5 b(alue.)49 b(A)m(t)35 b(the)e(same)h(time,)g(the)f(switc)m
(hing)g(in)m(terv)-5 b(als)32 b(m)m(ust)h(t)m(ypically)f(b)s(e)h(m)m
(uc)m(h)h(shorter)f(than)g(the)300 1002 y(p)s(erio)s(d)28
b(of)j(the)f(input)f(signal.)300 1288 y FL(1.3)135 b(Sim)l(ulation)47
b(of)e(SC)g(and)f(SI)h(net)l(w)l(orks)300 1494 y Fx(1.3.1)112
b(Con)m(tin)m(uous-time)36 b(sim)m(ulation)300 1779 y
FH(One)21 b(w)m(a)m(y)i(to)g(sim)m(ulate)e(a)h(SC)f(or)h(SI)f(net)m(w)m
(ork)i(is)e(to)h(use)g(a)g(con)m(tin)m(uous)g(time)f(sim)m(ulator)g
(lik)m(e)g(SPICE)g([11)q(])300 2005 y(where)33 b(the)h(net)m(w)m(ork)g
(is)f(time)g(in)m(v)-5 b(arian)m(t)33 b(and)g(can)h(b)s(e)f(represen)m
(ted)h(b)m(y)f(a)h(single)e(set)i(of)g(di\013eren)m(tial-)300
2231 y(algebraic)20 b(equations)g(\(D)m(AE's\),)k(whic)m(h)19
b(can)i(b)s(e)e(solv)m(ed)i(using)d(n)m(umerical)h(in)m(tegration)h
(tec)m(hniques)g([12)q(].)300 2456 y(SPICE-lik)m(e)26
b(sim)m(ulators)g(are)i(general,)g FC(i.e.)39 b FH(they)27
b(can)h(sim)m(ulate)e(a)i(wide)e(range)i(of)f(devices,)h(including)300
2682 y(the)f(subset)g(in)e(SC)h(and)h(SI)f(net)m(w)m(orks.)40
b(The)27 b(clo)s(c)m(k)g(signal)f(can)h(b)s(e)g(either)f(implemen)m
(ted)g(b)m(y)h(an)g(actual)300 2908 y(clo)s(c)m(k)k(circuit)e(or)h
(represen)m(ted)h(b)m(y)f(a)h FC(c)-5 b(ontinuous)p FH(,)31
b(piecewise)f(linear)f(v)m(oltage)j(source.)536 3134
y(SPICE-lik)m(e)22 b(sim)m(ulation)g(can)h(pro)s(duce)g(accurate)i
(results)d(\(dep)s(ending)f(on)j(the)f(accuracy)i(of)f(the)300
3360 y(device)j(mo)s(dels)f(and)g(of)i(the)f(n)m(umerical)f(in)m
(tegration)h(algorithm\),)g(ho)m(w)m(ev)m(er,)j(for)d(switc)m(hed)f
(net)m(w)m(orks,)300 3586 y(the)40 b(sim)m(ulation)e(is)g(slo)m(w.)69
b(The)39 b(short)g(rise)g(and)g(fall)g(times)g(of)h(the)g(clo)s(c)m(k)g
(signal)e(force)i(n)m(umerical)300 3811 y(in)m(tegration)29
b(algorithm)f(to)h(tak)m(e)h(small)e(steps)g(and)h(since)f(the)h(clo)s
(c)m(k)g(frequency)f(is)g(m)m(uc)m(h)h(larger)f(than)300
4037 y(the)39 b(signal)f(frequency)-8 b(,)42 b(t)m(ypical)d(sim)m
(ulation)e(m)m(ust)i(pass)g(through)f(a)i(v)m(ery)f(large)g(n)m(um)m(b)
s(er)f(of)i(clo)s(c)m(k)300 4263 y(transitions.)536 4489
y(The)25 b(standard)f(small-signal)f(analysis)h(used)g(to)i(obtain)e
(the)i(frequency)e(resp)s(onse)h(in)e(a)j(SPICE-)300
4715 y(lik)m(e)i(sim)m(ulator)g(is)g(not)h(v)-5 b(alid)27
b(for)i(switc)m(hed)f(net)m(w)m(orks,)i(b)s(ecause)f(the)g(large)g(clo)
s(c)m(k)g(signals)f(violate)h(the)300 4940 y(small-signal)i
(assumption.)48 b(Hence,)35 b(to)g(compute)e(the)h(frequency)f(resp)s
(onse,)g(it)g(is)f(necessary)i(to)g(set)300 5166 y(the)c(input)e(to)j
(a)f(sin)m(usoid)d(with)i(a)h(desired)e(frequency)-8
b(,)30 b(run)f(a)h(transien)m(t)g(analysis)e(un)m(til)g(the)i(net)m(w)m
(ork)300 5392 y(reac)m(hes)39 b(steady)f(state)i(and)d(then)h(tak)m(e)h
(the)f(FFT)g(of)g(the)h(output)e(signal.)62 b(This)36
b(pro)s(cess)i(m)m(ust)g(b)s(e)p eop
%%Page: 5 18
5 17 bop 3855 -200 a FH(5)967 7 y
 17892639 7564903 131563 41968762 18024202 49533665 startTexFig
 967 7 a
%%BeginDocument: figs/clock_ideal.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      8 139 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      24 146 moveto (high) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      8 199 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      24 205 moveto (low) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 208 moveto
      0 408 atan dup cos 8 mul 472 exch sub
      exch sin 8 mul 208 exch sub lineto
   stroke
grestore
gsave
   newpath
      472 208 8 3 408 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      480 225 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 208 moveto
      -114 0 atan dup cos 8 mul 64 exch sub
      exch sin 8 mul 94 exch sub lineto
   stroke
grestore
gsave
   newpath
      64 94 8 3 0 -114 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 130 moveto
      128 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 194 moveto
      296 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      296 130 moveto
      368 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 194 moveto
      440 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      128 99 moveto
      128 218 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      296 99 moveto
      296 218 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      168 242 moveto
      -24 -32 atan dup cos 8 mul 136 exch sub
      exch sin 8 mul 218 exch sub lineto
   stroke
grestore
gsave
   newpath
      136 218 8 3 -32 -24 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      248 242 moveto
      -24 40 atan dup cos 8 mul 288 exch sub
      exch sin 8 mul 218 exch sub lineto
   stroke
grestore
gsave
   newpath
      288 218 8 3 40 -24 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      184 90 moveto (switching) show
      184 113 moveto (interval) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      160 120 moveto
      0 112 atan dup cos 8 mul exch sin 8 mul rmoveto
      0 112 atan dup cos 8 mul 272 exch sub
      exch sin 8 mul 120 exch sub lineto
   stroke
grestore
gsave
   newpath
      160 120 8 3 -112 0 tgifarrowtip
   closepath fill
grestore
gsave
   newpath
      272 120 8 3 112 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      40 107 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      136 266 moveto (switching instants) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      368 99 moveto
      368 218 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 128 moveto
      128 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      296 128 moveto
      296 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 128 moveto
      368 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      280 250 moveto
      -32 80 atan dup cos 8 mul 360 exch sub
      exch sin 8 mul 218 exch sub lineto
   stroke
grestore
gsave
   newpath
      360 218 8 3 80 -32 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Nov 12 14:05:44 1998
%%EndDocument

 endTexFig
 1417 1161 a FH(Figure)30 b(1.2:)42 b(Ideal)30 b(clo)s(c)m(k)h(w)m(a)m
(v)m(eform.)300 1436 y(rep)s(eated)f(for)h(eac)m(h)g(desired)e
(frequency)h(p)s(oin)m(t.)300 1680 y Fx(1.3.2)112 b(Time-domain)36
b(sim)m(ulation)f(with)i(discon)m(tin)m(uities)300 1964
y FH(Sim)m(ulation)c(time)i(can)h(b)s(e)f(reduced)f(b)m(y)h(appro)m
(ximating)g(one)g(or)h(more)f(prop)s(erties)f(of)i(the)f(net)m(w)m(ork)
300 2190 y(with)21 b(ideal)f(prop)s(erties.)37 b(An)21
b(imp)s(ortan)m(t)g(appro)m(ximation)g(that)i(can)f(b)s(e)f(made)h(for)
g(a)g(switc)m(hed)f(net)m(w)m(ork)300 2416 y(is)36 b(that)i(the)f(clo)s
(c)m(k)g(transitions)f(are)h(ideal)f({)h FC(i.e.)60 b
FH(the)37 b(rise)f(and)g(fall)g(times)h(are)g(zero,)j(as)d(sho)m(wn)f
(in)300 2642 y(Fig.)e(1.2.)52 b(The)34 b(time)f(instan)m(ts)g(at)i
(whic)m(h)e(the)h(clo)s(c)m(k)g(transitions)e(o)s(ccur)i(will)d(b)s(e)i
(referred)g(to)i(as)f(the)300 2868 y FC(switching)29
b(instants)p FH(.)40 b(F)-8 b(or)26 b(a)g(general)f(net)m(w)m(ork,)j
(con)m(taining)c(resistors,)i(capacitors,)i(inductors)23
b(and)i(all)300 3094 y(kinds)e(of)j(activ)m(e)g(elemen)m(ts)g(\(activ)m
(e)h(RLC)d(net)m(w)m(orks\),)k(the)d(discon)m(tin)m(uities)e(in)h(the)i
(ideal)e(clo)s(c)m(k)h(signals)300 3319 y(can)i(lead)g(to)h(the)f
(problem)e(kno)m(wn)i(as)g FC(inc)-5 b(onsistent)30 b(initial)h(c)-5
b(onditions)28 b FH([13)r(],)g(where)e(the)h(state)i(of)e(the)300
3545 y(net)m(w)m(ork)33 b(at)g(the)g(clo)s(c)m(k)f(transition)f(is)g
(also)i(discon)m(tin)m(uous)d(and)i(its)g(v)-5 b(alue)31
b(just)h(after)h(the)f(transition)300 3771 y(cannot)f(b)s(e)f(computed)
g(b)m(y)g(the)h(standard)e(algorithms)h(used)f(in)g(a)i(SPICE-lik)m(e)e
(sim)m(ulator.)536 3997 y(A)36 b(similar)d(appro)m(ximation)i(that)i
(can)f(b)s(e)f(made)h(is)f(that)i(the)f(switc)m(hes)f(are)i(ideal.)56
b(An)35 b(ideal)300 4223 y(switc)m(h)i(is)g(con)m(trolled)h(b)m(y)f(a)i
(b)s(o)s(olean)d(signal.)62 b(It)38 b(is)f(an)h(op)s(en)f(circuit)f
(when)h(it)h(is)f(o\013)h(and)f(a)h(short)300 4448 y(circuit)i(when)f
(it)i(is)f(on.)72 b(Ideal)40 b(switc)m(hes)h(in)m(tro)s(duce)f(a)h
(discon)m(tin)m(uit)m(y)e(to)j(the)f(net)m(w)m(ork)h(top)s(ology)-8
b(,)300 4674 y(whic)m(h)25 b(can)h(also)g(lead)f(to)i(the)f
(inconsisten)m(t)f(initial)e(condition)i(problem)f(at)j(the)f(instan)m
(t)f(of)h(the)g(switc)m(h)300 4900 y(transition.)536
5126 y(The)35 b(reason)h(for)f(appro)m(ximating)g(the)g(clo)s(c)m(ks)h
(or)g(the)f(switc)m(hes)g(with)g(their)f(ideal)h(prop)s(erties)300
5352 y(is)k(b)s(ecause)h(it)f(is)g(faster)h(to)g(compute)g(the)g
(initial)d(conditions)h(just)i(after)g(the)g(discon)m(tin)m(uit)m(y)e
(than)p eop
%%Page: 6 19
6 18 bop 3855 -200 a FH(6)300 99 y(to)36 b(p)s(erform)d(the)i(con)m(v)m
(en)m(tional)h(n)m(umerical)d(in)m(tegration)i(through)f(a)h(\014nite)f
(rise)g(or)h(fall)e(time)i(of)g(the)300 324 y(con)m(tin)m(uous)j(clo)s
(c)m(k)i(w)m(a)m(v)m(eform.)67 b(In)38 b(the)h(times)f(b)s(et)m(w)m
(een)h(the)g(switc)m(hing)f(instan)m(ts,)i(the)f(net)m(w)m(ork)h(is)300
550 y(again)30 b(mo)s(deled)g(b)m(y)g(D)m(AE's)h(and)f(n)m(umerical)f
(in)m(tegration)h(is)g(used.)536 776 y(A)j(solution)e(to)i(the)g
(inconsisten)m(t)f(initial)e(conditions)h(problem)g(w)m(as)i(presen)m
(ted)g(in)e([13)q(].)48 b(This)300 1002 y(metho)s(d)42
b(pro)m(vides)f(a)h(v)m(ery)h(general,)i(device-lev)m(el)d(transien)m
(t)g(sim)m(ulation,)h(lik)m(e)f(SPICE,)f(with)g(the)300
1228 y(addition)32 b(of)i(allo)m(wing)e(discon)m(tin)m(uities)f(in)h
(the)i(input)e(signals)g(and/or)i(the)f(net)m(w)m(ork)i(top)s(ology)-8
b(.)51 b(F)-8 b(or)300 1453 y(net)m(w)m(orks)39 b(con)m(taining)f
(linear)f(elemen)m(ts,)j(\(other)f(than)f(ideal)g(switc)m(hes,\))i
(metho)s(ds)e(in)f([14)q(,)h(15)q(,)h(16)q(])300 1679
y(can)31 b(b)s(e)e(used.)300 1923 y Fx(1.3.3)112 b(F)-9
b(requency-domain)39 b(sim)m(ulation)34 b(with)j(discon)m(tin)m(uities)
300 2207 y FH(The)23 b(appro)m(ximation)f(of)h(ideal)f(switc)m(hes)h
(or)g(ideal)f(clo)s(c)m(k)i(signals)d(can)j(increase)f(the)g(sp)s(eed)f
(of)i(the)f(time-)300 2433 y(domain)35 b(sim)m(ulation.)57
b(Ho)m(w)m(ev)m(er,)40 b(the)d(greatest)h(adv)-5 b(an)m(tage)39
b(of)d(in)m(tro)s(ducing)e(the)j(discon)m(tin)m(uities)d(is)300
2659 y(manifested)c(in)f(the)h(frequency-domain)f(sim)m(ulation)g(of)h
(SC)g(or)g(SI)g(\014lters.)536 2885 y(In)35 b(SC)g(and)g(SI)h
(\014lters)e(the)i(switc)m(hing)f(instan)m(ts)g(are)h(p)s(erio)s(dic)e
([17)q(,)i(18)q(,)g(19)q(],)h(and)e(within)f(the)300
3110 y(switc)m(hing)e(in)m(terv)-5 b(al,)32 b(the)i(net)m(w)m(ork)f(is)
f(linear)g(or)g(can)i(b)s(e)e(linearized)f(at)i(some)h(bias)e(p)s(oin)m
(t)f(under)h(the)300 3336 y(small-signal)d(assumption.)42
b(If)31 b(the)g(clo)s(c)m(ks)h(or)f(the)h(switc)m(hes)f(are)g(ideal,)g
(then)g(the)h(net)m(w)m(ork)g(b)s(ecomes)300 3562 y(a)41
b FC(line)-5 b(ar)42 b(p)-5 b(erio)g(dic)g(al)5 b(ly)45
b(switche)-5 b(d)43 b(network)p FH(.)72 b(F)-8 b(or)41
b(suc)m(h)f(net)m(w)m(orks,)j(it)d(is)f(p)s(ossible)f(to)j(compute)g
(the)300 3788 y(frequency)30 b(resp)s(onse)f(directly)g([20)r(,)h(21)q
(],)h(without)e(p)s(erforming)g(the)h(transien)m(t)g(sim)m(ulation)f
(and)h(FFT)300 4014 y(at)h(eac)m(h)h(frequency)e(p)s(oin)m(t.)536
4240 y(The)37 b(frequency-domain)g(form)m(ulations)f(in)g([20)q(,)i(21)
q(])g(require)e(explicit)g(expressions)h(that)h(de-)300
4465 y(scrib)s(e)e(the)h(net)m(w)m(ork)h(at)g(the)g(switc)m(hing)e
(instan)m(ts)g(and)h(within)e(the)i(switc)m(hing)f(in)m(terv)-5
b(al.)61 b(This)35 b(has)300 4691 y(b)s(een)d(done)h(in)f([16)q(,)h(20)
q(,)g(21)q(,)h(22,)g(23)q(,)f(24)q(,)g(25)q(,)g(26)q(,)g(27)q(])g(for)g
(the)g(general)g(activ)m(e)i(RLC)d(net)m(w)m(orks.)49
b(The)300 4917 y(common)29 b(strategy)h(in)d(these)i(metho)s(ds)f(is)g
(to)h(represen)m(t)g(the)g(net)m(w)m(ork)g(within)d(eac)m(h)k(switc)m
(hing)d(in)m(ter-)300 5143 y(v)-5 b(al)33 b(b)m(y)g(a)g(set)h(of)f
(linear)f(D)m(AE's)i(and)e(then)h(obtain)f(an)h(explicit)f(expression)g
(for)h(the)g(solution)e(of)j(the)300 5369 y(D)m(AE's.)46
b(The)32 b(b)s(eha)m(vior)f(at)i(the)f(switc)m(hing)e(instan)m(ts)i(is)
f(represen)m(ted)h(b)m(y)g FC(switching)i(tr)-5 b(ansformation)p
eop
%%Page: 7 20
7 19 bop 3855 -200 a FH(7)300 99 y FC(e)-5 b(quations)p
FH(,)32 b(whic)m(h)d(mo)s(del)g(the)h(inconsisten)m(t)g(initial)e
(conditions.)536 324 y(The)36 b(form)m(ulations)g(in)f([20)q(,)i(21)q
(,)g(22)q(,)g(23])g(require)f(that)h(the)g(D)m(AE's)g(are)g
(transformed)f(to)i(the)300 550 y(state)24 b(space)f(represen)m(tation)
g(\(or)f(the)h(normal)f(form\))g(whic)m(h)f(requires)g(a)i
(considerable)e(computational)300 776 y(e\013ort.)41
b(Once)27 b(this)f(is)h(done,)h(the)g(solution)e(to)i(the)g(D)m(AE's)g
(can)g(b)s(e)f(obtained)f(b)m(y)i(ev)-5 b(aluating)27
b(a)h(matrix)300 1002 y(exp)s(onen)m(tial.)51 b(A)35
b(considerable)e(e\013ort)i(is)e(also)h(required)f(to)i(obtain)e(the)i
(switc)m(hing)e(transformation)300 1228 y(equations)d([14)q(,)h(15)q(,)
f(16)q(].)536 1453 y(In)d([16)r(,)h(24)q(,)g(25)q(,)g(26)q(,)g(27)q(],)
h(the)f(switc)m(hing)f(transformation)g(equations)h(and)f(the)h
(solution)f(to)i(the)300 1679 y(D)m(AE's)g(is)f(obtained)f(through)h(a)
g(n)m(umerical)f(appro)m(ximation.)39 b(In)28 b(this)f(approac)m(h)h
(accuracy)i(b)s(ecomes)300 1905 y(an)k(issue.)52 b(In)33
b([16)q(,)i(26)q(,)f(27)q(],)i(a)f(n)m(umerical)e(appro)m(ximation)g
(to)i(the)g(in)m(v)m(erse)f(Laplace)h(transform)e(has)300
2131 y(b)s(een)d(used.)300 2374 y Fx(1.3.4)112 b(Sim)m(ulation)35
b(under)j(instan)m(t)f(settling)f(appro)m(ximation)300
2659 y FH(The)j(sim)m(ulation)f(time)i(and)f(complexit)m(y)h(can)g(b)s
(e)f(further)g(reduced)g(b)m(y)h(taking)g(adv)-5 b(an)m(tage)42
b(of)e(the)300 2885 y(settling)24 b(prop)s(ert)m(y)g(of)h(the)g(SC)f
(and)g(SI)g(net)m(w)m(orks.)39 b(Sev)m(eral)25 b(suc)m(h)f(form)m
(ulations)g(ha)m(v)m(e)i(b)s(een)e(dev)m(elop)s(ed)300
3110 y(for)j(SCN's)f([28)q(,)h(29)q(,)g(30)q(,)g(31)q(,)g(32)q(,)h(33,)
g(34].)40 b(A)27 b(go)s(o)s(d)g(o)m(v)m(erview)h(of)f(these)g(form)m
(ulations)f(is)g(giv)m(en)h(in)e([35)q(].)536 3336 y(Common)20
b(to)i(all)d(the)i(form)m(ulations)e(is)g(that)i(the)g(set)g(of)g(net)m
(w)m(ork)g(elemen)m(ts)g(is)f(restricted)g(to)h(ideal)300
3562 y(switc)m(hes,)26 b(capacitors)f(and)g(v)m(oltage)h(con)m(trolled)
f(and)f(indep)s(enden)m(t)f(v)m(oltage)j(sources.)39
b(Suc)m(h)24 b(net)m(w)m(orks)300 3788 y(are)33 b(referred)e(to)i(as)g
(\\ideal")f(SCN's.)46 b(Since)31 b(there)i(are)g(no)f(resistors)g
(\(and)g(no)g(inductors\),)g(the)g(time)300 4014 y(constan)m(ts)e(are)f
(zero)h(and)e(the)h(net)m(w)m(orks)g(exhibit)e FC(instant)32
b(settling)p FH(,)e(whic)m(h)d(means)i(that)g(the)g(net)m(w)m(ork)300
4240 y(settles)e(instan)m(taneously)f(righ)m(t)h(after)g(eac)m(h)h
(switc)m(hing)d(transition.)38 b(The)27 b(b)s(eha)m(vior)f(of)h(suc)m
(h)f(net)m(w)m(orks)300 4465 y(within)j(the)i(switc)m(hing)f(in)m(terv)
-5 b(al)30 b(and)h(at)g(the)h(switc)m(hing)e(transitions)f(can)j(b)s(e)
e(mo)s(deled)g(b)m(y)h FC(algebr)-5 b(aic)300 4691 y(e)g(quations)p
FH(.)40 b(The)24 b(computational)h(complexit)m(y)f(to)i(construct)f
(these)g(equations)f(is)g(small)f(compared)i(to)300 4917
y(the)h(e\013ort)h(required)d(to)j(solv)m(e)f(the)g(D)m(AE's)h(and)e
(to)i(obtain)e(the)h(switc)m(hing)f(transformation)g(equations)300
5143 y(for)35 b(the)h(general)f(activ)m(e)i(RLC)d(net)m(w)m(orks.)57
b(This)33 b(leads)i(to)h(a)g(more)f(e\016cien)m(t)h(time-)f(and)g
(frequency-)300 5369 y(domain)29 b(form)m(ulations.)p
eop
%%Page: 8 21
8 20 bop 3855 -200 a FH(8)536 99 y(The)29 b(form)m(ulation)e(for)i
(\\ideal")f(switc)m(hed)h(capacitor)g(net)m(w)m(orks)h(ha)m(v)m(e)g
(pro)m(v)m(en)f(to)h(b)s(e)e(useful)f(for)300 324 y(v)m(eri\014cation)d
(of)h(the)f(ideal)g(transfer)g(function)f(exp)s(ected)i(from)f(the)h
(net)m(w)m(ork)g(top)s(ologies.)39 b(In)23 b(addition,)300
550 y(the)k(e\013ects)h(of)f(non-idealities)e(suc)m(h)h(as)h(parasitic)
f(capacitances)i(and)e(\014nite)g(opamp)g(gain)h(can)g(also)g(b)s(e)300
776 y(sim)m(ulated.)38 b(In)26 b([36)q(],)h(ideal)f(logic)g(elemen)m
(ts)g(and)g(an)g(ideal)f(latc)m(hed)i(comparator)g(ha)m(v)m(e)h(b)s
(een)e(added)f(to)300 1002 y(the)d(set)g(of)g(net)m(w)m(ork)g(elemen)m
(ts,)i(whic)m(h)d(made)g(it)h(p)s(ossible)d(p)s(erform)h(e\016cien)m(t)
i(time-domain)f(sim)m(ulation)300 1228 y(of)26 b(\\ideal")f(switc)m
(hed-capacitor)i(Sigma-Delta)f(mo)s(dulators.)38 b(This)24
b(feature)i(pro)m(v)m(ed)g(to)h(b)s(e)e(extremely)300
1453 y(useful)k(to)i(the)f(circuit)f(designers.)536 1679
y(Switc)m(hed)42 b(curren)m(t)h(net)m(w)m(orks)h(exhibit)d(similar)f
(settling)j(prop)s(erties)e(as)j(SCN's.)78 b(Ho)m(w)m(ev)m(er,)300
1905 y(the)39 b(settling)f(state)j(is)d(dep)s(enden)m(t)g(on)g
(\\resistiv)m(e")h(elemen)m(ts)h(suc)m(h)e(as)h(curren)m(t)g(sources,)i
(resistors,)300 2131 y(and)35 b(transconductors)g(\(or)h(MOS)f
(transistors\).)55 b(The)35 b(limited)f(set)i(of)f(elemen)m(ts)h
(considered)f(in)f(the)300 2357 y(form)m(ulations)j(for)g(ideal)g(SCN)h
(sim)m(ulations)d(is)j(not)g(su\016cien)m(t,)h(therefore,)i(the)d(more)
g(general,)j(less)300 2583 y(e\016cien)m(t)31 b(form)m(ulations)e(for)h
(the)h(activ)m(e)g(RLC)f(net)m(w)m(orks)h(had)f(to)h(b)s(e)f(used.)536
2808 y(In)k(this)f(thesis,)i(a)f(new)g(net)m(w)m(ork)h(analysis)e(is)g
(presen)m(ted,)j(that)f(considers)e(the)h(subset)g(of)h(ele-)300
3034 y(men)m(ts)25 b(found)f(in)f(SI)i(net)m(w)m(orks,)i(and)d(can)h
(still)e(tak)m(e)k(adv)-5 b(an)m(tage)27 b(of)e(their)f(settling)g
(prop)s(erties)f([37)q(,)j(38].)300 3260 y(Just)h(lik)m(e)f(in)g(the)i
(analysis)d(of)j(ideal)e(SCN's,)h(it)g(computes)h(the)f(settling)g
(state)h(of)g(the)f(net)m(w)m(ork)h(within)300 3486 y(eac)m(h)35
b(switc)m(hing)d(in)m(terv)-5 b(al,)33 b(ho)m(w)m(ev)m(er,)j(it)d(do)s
(es)g(so)h(without)e(the)h(need)h(to)g(eliminate)e(the)h(resistiv)m(e)g
(el-)300 3712 y(emen)m(ts)g(from)e(the)h(net)m(w)m(ork.)46
b(The)31 b(net)m(w)m(ork)i(within)c(the)j(switc)m(hing)f(in)m(terv)-5
b(al)30 b(and)i(at)g(the)g(switc)m(hing)300 3937 y(instan)m(ts)38
b(are)g(describ)s(ed)e(b)m(y)i(algebraic)g(equations)g(whic)m(h)f(can)h
(b)s(e)f(used)h(in)f(the)h(same)g(w)m(a)m(y)h(as)g(the)300
4163 y(algebraic)29 b(equations)g(for)g(ideal)g(SCN's)f(to)j(dev)m
(elop)e(e\016cien)m(t)h(time-)f(and)g(frequency-domain)f(form)m(u-)300
4389 y(lations.)40 b(There)30 b(is)f(no)h(need)g(to)i(solv)m(e)e(D)m
(AE's)i(or)e(compute)h(the)f(inconsisten)m(t)g(initial)d(conditions.)
536 4615 y(The)43 b(new)g(analysis)f(is)g(based)h(on)g(the)g(Mo)s
(di\014ed)f(No)s(dal)h(Analysis)e(\(MNA\))k([12)q(],)i(whic)m(h)42
b(is)300 4841 y(t)m(ypically)c(used)g(in)f(SPICE-lik)m(e)g(sim)m
(ulators)h(to)h(obtain)g(the)g(net)m(w)m(ork)g(equations,)i(com)m
(bined)d(with)300 5067 y(the)c(concept)h(of)f(c)m(harge)i(conserv)-5
b(ation)34 b(in)f(a)h FC(char)-5 b(ge)37 b(surfac)-5
b(e)35 b FH([32)q(],)g(whic)m(h)e(has)h(b)s(een)f(used)g(for)h(ideal)
300 5292 y(SCN)i(analysis)f(in)h([32)q(,)h(39)q(,)g(40)q(,)g(41)q(].)60
b(It)37 b(will)d(b)s(e)i(referred)g(to)i(as)f(the)g(Charge)g(Surface)f
(/)i(Mo)s(di\014ed)p eop
%%Page: 9 22
9 21 bop 3855 -200 a FH(9)300 99 y(No)s(dal)30 b(Analysis)e
(\(CS/MNA\).)536 324 y(The)37 b(CS/MNA)h(has)f(t)m(w)m(o)i(imp)s(ortan)
m(t)e(features.)62 b(First,)39 b(is)e(that)h(it)f(is)g(compatible)g
(with)f(the)300 550 y(device)41 b(mo)s(dels)e(that)i(are)g(commonly)g
(used)f(in)f(SPICE-lik)m(e)g(sim)m(ulators.)71 b(Second,)43
b(the)e(standard)300 776 y(small-signal)19 b(analysis)g(tec)m(hnique)i
(can)g(b)s(e)f(applied.)36 b(The)20 b(small)g(signal)g(parameters)h
(can)g(b)s(e)g(extracted)300 1002 y(directly)i(from)h(the)h
(large-signal)f(nonlinear)e(algebraic)i(equations)h(for)f(eac)m(h)i
(switc)m(hing)d(in)m(terv)-5 b(al.)38 b(This)300 1228
y(means)28 b(that,)i(when)d(sim)m(ulating)f(a)j(\014lter,)f(the)h
(designer)e(can)i(sp)s(ecify)d(the)j(net)m(w)m(ork)g(at)g(the)g
(transistor)300 1453 y(lev)m(el)h(and)g(the)g(small-signal)e
(parameters)j(for)f(eac)m(h)i(phase)e(will)e(b)s(e)h(automatically)h
(extracted.)536 1679 y(Finally)-8 b(,)24 b(it)g(is)g(imp)s(ortan)m(t)f
(to)j(note,)g(that)f(the)g(t)m(yp)s(es)f(of)h(elemen)m(ts)f(in)f(SC)h
(net)m(w)m(orks)h(are)g(a)g(subset)300 1905 y(of)33 b(the)g(elemen)m
(ts)g(in)f(the)h(SI)f(net)m(w)m(orks.)49 b(Therefore,)34
b(CS/MNA)f(can)g(also)g(b)s(e)f(used)g(for)h(SC)f(net)m(w)m(ork)300
2131 y(sim)m(ulation.)50 b(F)-8 b(urthermore,)36 b(CS/MNA)e(mak)m(es)i
(it)d(p)s(ossible)f(to)j(sim)m(ulate)f(SCN's)f(at)i(more)g(detailed)300
2357 y(lev)m(el.)k(F)-8 b(or)28 b(example,)f(the)g(opamp)f(ma)m(y)h(b)s
(e)f(describ)s(ed)f(at)i(a)g(transistor)f(lev)m(el)h(as)f(opp)s(osed)g
(to)i(an)e(ideal)300 2583 y(V)m(CVS.)536 2808 y(The)i(form)m(ulations)f
(in)g([42)q(,)h(43)q(])h(also)f(consider)f(the)h(subset)g(of)g(elemen)m
(ts)h(in)e(SI)g(net)m(w)m(ork.)41 b(Ho)m(w-)300 3034
y(ev)m(er,)e(in)d([43)q(])h(it)f(is)f(still)g(necessary)i(to)g(solv)m
(e)g(di\013eren)m(tial)f(equations.)59 b(In)36 b([42)q(],)j(instan)m(t)
d(settling)g(is)300 3260 y(assumed,)29 b(ho)m(w)m(ev)m(er,)i(the)e
(form)m(ulation)f(is)g(based)g(on)h(No)s(dal)g(Analysis)e([12)q(],)j
(whic)m(h)d(is)h(not)i(as)f(general)300 3486 y(as)35
b(MNA)h(and)e(places)h(restrictions)f(on)h(the)g(t)m(yp)s(es)g(of)g
(net)m(w)m(ork)h(elemen)m(ts.)54 b(Both)36 b(form)m(ulations)e(are)300
3712 y(restricted)c(to)h(linear)e(net)m(w)m(orks.)300
3955 y Fx(1.3.5)150 b(Noise)36 b(analysis)i(of)f(SCN's)300
4240 y FH(A)d(general)g(metho)s(d)g(for)g(computing)f(the)h(output)g(p)
s(o)m(w)m(er)g(sp)s(ectral)f(densit)m(y)h(\(PSD\))g(of)h(p)s(erio)s
(dically)300 4465 y(switc)m(hed)30 b(linear)f(systems)h(in)f(terms)i
(of)f(the)h(PSD)f(of)h(the)f(input)f(pro)s(cess)h(w)m(as)g(prop)s(osed)
g(in)f([21)q(])i(and)300 4691 y(later,)40 b(it)d(w)m(as)i(applied)c(to)
k(SCN's)e(in)g([28)q(].)63 b(It)38 b(w)m(as)g(sho)m(wn)g(that,)i(due)d
(to)i(the)f(aliasing)e(e\013ect,)42 b(the)300 4917 y(output)25
b(noise)g(PSD)g(of)h(an)g(\\ideal")f(SCN)g(b)s(ecomes)h(in\014nit)m(y)d
(when)i(the)g(input)f(noise)h(is)g(white.)38 b(Hence,)300
5143 y(in)26 b([35)r(,)i(44,)g(45)q(,)g(46)q(,)g(47)q(,)g(48)q(,)g(49)q
(,)g(50)q(],)g(non-idealities,)f(suc)m(h)g(as)h(\014nite)f
FF(on)p FH(-resistances)g(of)h(the)g(switc)m(hes)300
5369 y(and)g(p)s(oles)g(of)h(the)f(opamps)h(are)g(tak)m(en)g(in)m(to)g
(accoun)m(t)h(to)g(bandlimit)25 b(the)k(input)e(noise)h(sources.)40
b(Once)p eop
%%Page: 10 23
10 22 bop 3809 -200 a FH(10)300 99 y(the)37 b(\\resistiv)m(e")g
(non-idealities)d(are)j(in)m(tro)s(duced,)g(it)f(is)f(necessary)i(to)g
(resort)g(to)g(the)g(more)g(general)300 324 y(net)m(w)m(ork)22
b(analysis)e(metho)s(ds)g(for)h(activ)m(e)i(RLC)d(net)m(w)m(orks,)k
(whic)m(h)c(are)i(computationally)e(complex,)j(and)300
550 y(require)f(solution)f(to)j(D)m(AE's)g(and)e(construction)h(of)g
(switc)m(hing)f(transformation)g(matrices.)38 b(In)22
b([51)r(])h(the)300 776 y(computational)28 b(complexit)m(y)g(w)m(as)h
(reduced)e(b)m(y)i(restricting)e(the)h(noise)g(analysis)f(to)i(in)m
(tegrator-based)300 1002 y(SC)c(\014lters,)i(while)d(in)h([52)q(,)i(53)
q(])f(a)h(general)f(SCN)g(that)h(is)e(not)i(linear)d(within)g(the)j
(switc)m(hing)e(phases)h(w)m(as)300 1228 y(considered,)j(resulting)g
(in)g(an)h(ev)m(en)h(more)g(computationally)e(in)m(tensiv)m(e)h
(algorithm.)536 1453 y(A)k(p)s(opular)e(metho)s(d)i(to)g(sim)m(ulate)g
(noise)f(in)g(SCN's)g(is)g([54)r(],)i(where)f(it)f(is)g(sho)m(wn)h
(that,)h(under)300 1679 y(certain)j(assumptions,)g(an)g(\\equiv)-5
b(alen)m(t")38 b(linear)e(and)h(time-in)m(v)-5 b(arian)m(t)37
b(\(L)-8 b(TI\))38 b(net)m(w)m(ork)h(can)f(b)s(e)f(ex-)300
1905 y(tracted)30 b(from)f(a)h(SCN)f(for)g(the)g(purp)s(ose)f(of)i
(noise)e(analysis)g(with)g(b)s(oth)h(white)g(and)f(1)p
FG(=f)40 b FH(noise)29 b(input.)300 2131 y(This)g(is)g(an)h(appro)m
(ximate)h(tec)m(hnique)f(that)h(can)f(b)s(e)g(incorp)s(orated)g(in)f(a)
h(SPICE-lik)m(e)f(sim)m(ulator.)536 2357 y(In)37 b([55)q(])h(and)f([56)
q(])g(computational)g(task)i(of)e(the)h(form)m(ulation)e(has)h(b)s(een)
g(reduced)g(b)m(y)g(taking)300 2583 y(adv)-5 b(an)m(tage)44
b(of)e(the)g(settling)f(prop)s(erties)g(of)h(SCN's.)74
b(In)42 b([55)q(],)j FC(ful)5 b(l)42 b FH(and)f FC(fast)j(char)-5
b(ge)44 b(tr)-5 b(ansfer)45 b(as-)300 2808 y(sumptions)36
b FH(w)m(ere)g(in)m(tro)s(duced)d(where)i(the)g(transien)m(ts)g(due)f
(to)i(\014nite)d(time)i(constan)m(ts)h(disapp)s(ear)d(in)300
3034 y(a)38 b(\\short)g(time")f(after)h(the)g(switc)m(hing)e(instan)m
(ts.)62 b(In)36 b([56)q(])i(it)f(w)m(as)h(sho)m(wn)f(that)h(if)e(the)i
(losses,)h(suc)m(h)300 3260 y(as)33 b(\014nite)e(resistance)i(of)g
(switc)m(hes,)g(in)e(a)i(\\real")g(SCN)f(are)h(reduced)e(to)j(zero)f(b)
m(y)f(using)f(a)i(limit-v)-5 b(alue)300 3486 y(computation,)33
b(the)f(resulting)f(\\ideal")h(SCN)f(has)h(a)h(w)m(ell-de\014ned)d
(output)i(noise)g(PSD.)g(In)f(b)s(oth)h(for-)300 3712
y(m)m(ulations,)40 b(ho)m(w)m(ev)m(er,)j(it)c(w)m(as)g(still)e
(necessary)j(to)g(ev)-5 b(aluate)40 b(eigen)m(v)-5 b(alues)39
b(or)g(matrix)f(exp)s(onen)m(tials)300 3937 y(and)31
b(to)h(solv)m(e)f(bilateral)f(matrix)h(equations)g(of)h(the)f(form)g
FD(Ax)21 b FH(+)g FD(xB)27 b FH(=)f FD(C)31 b FH(where)g
FD(A)p FH(,)h FD(B)p FH(,)g(and)f FD(C)g FH(are)300 4163
y(constan)m(t)h(matrices)e(and)g FD(x)g FH(is)g(an)g(unkno)m(wn)f(v)m
(ector.)536 4389 y(In)41 b(this)f(thesis,)j(a)e(metho)s(d)g(for)g
(computing)f(the)i(output)e(noise)h(PSD)g(in)f(\\ideal")g(SCN's)h(is)
300 4615 y(presen)m(ted)33 b([57)q(,)g(58)q(].)49 b(It)33
b(is)f(based)h(on)g(the)g(concept)h(in)e([56)q(])h(that)h(if)e(the)h
(losses)g(are)g(reduced)f(to)i(zero)300 4841 y(through)40
b(a)h(limit-v)-5 b(alue)38 b(computation,)44 b(the)d(resulting)e
(\\ideal")h(SCN)g(has)g(a)i(w)m(ell-de\014ned)c(output)300
5067 y(noise)e(PSD.)h(Although)g(it)f(is)g(still)f(necessary)j(to)g
(consider)d(the)j(losses,)g(unlik)m(e)e([56)q(],)j(the)e(prop)s(osed)
300 5292 y(metho)s(d)g(do)s(es)f(not)i(require)e(the)h(ev)-5
b(aluation)37 b(of)g(eigen)m(v)-5 b(alues)37 b(or)g(matrix)g(exp)s
(onen)m(tials.)60 b(The)36 b(need)p eop
%%Page: 11 24
11 23 bop 3809 -200 a FH(11)300 99 y(for)41 b(solving)f(bilateral)f
(matrix)i(equations)g(is)f(also)h(eliminated,)h(and)f(the)g(result)f
(is)h(a)g(closed-form)300 324 y(expression)f(in)f(terms)i(of)g
(matrices)g(used)f(in)f(state)k(v)-5 b(ariable)39 b(equations)i(of)g
(\\ideal")f(SCN's.)72 b(It)41 b(is)300 550 y(further)28
b(sho)m(wn)h(mathematically)g(and)f(exp)s(erimen)m(tally)g(that)h(this)
g(result)f(is)g(a)i(go)s(o)s(d)f(appro)m(ximation)300
776 y(to)e(the)g(output)f(noise)f(PSD)h(in)f(\\real")i(SCN's)f(where)g
(the)g(losses)g(are)h(not)g(zero)g(but)f(are)g(small)f(enough)300
1002 y(to)31 b(satisfy)f(the)h(fast)f(c)m(harge)i(transfer)e
(assumption.)536 1228 y(In)h(addition,)e(explicit)h(analytical)g(form)m
(ulas)h(are)g(deriv)m(ed)f(for)h(the)h(case)g(of)f(1)p
FG(=f)41 b FH(noise)31 b(sources)300 1453 y(in)25 b(SCN's)h(that)h
(satisfy)f(the)g(fast)h(c)m(harge)h(transfer)e(assumption.)38
b(Previously)24 b([55)q(,)j(56)q(],)g(the)g(1)p FG(=f)37
b FH(noise)300 1679 y(w)m(as)f(mo)s(deled)f(b)m(y)h(passing)f(the)i
(white)e(noise)g(through)h(an)g(appropriate)f(L)-8 b(TI)36
b(noise)f(shaping)g(\014lter,)300 1905 y(and)h(the)g(\014lter)g(itself)
f(had)h(to)h(b)s(e)f(included)d(in)i(the)i(lossy)f(SCN)f(to)j(b)s(e)d
(analyzed.)59 b(Ha)m(ving)37 b(explicit)300 2131 y(form)m(ulas)29
b(mak)m(es)j(the)e(1)p FG(=f)41 b FH(noise)30 b(analysis)e(more)j
(accurate)h(and)e(e\016cien)m(t.)536 2357 y(The)g(noise)g(analysis)e
(presen)m(ted)j(here)f(can)g(only)g(b)s(e)f(applied)f(to)j(SCN's.)40
b(Noise)30 b(analysis)f(of)i(SI)300 2583 y(net)m(w)m(orks)d(m)m(ust)f
(still)e(b)s(e)h(p)s(erformed)f(using)h(the)h(more)g(general)g(metho)s
(ds)g(for)f(activ)m(e)j(RLC)d(net)m(w)m(orks.)300 2869
y FL(1.4)135 b(Thesis)45 b(o)l(v)l(erview)300 3185 y
FH(In)27 b(Chapter)g(2,)i(the)f(CS/MNA)f(is)g(presen)m(ted.)40
b(It)28 b(will)d(b)s(e)i(sho)m(wn)g(ho)m(w)g(to)i(obtain)e(a)h(set)g
(of)g(non-linear)300 3411 y(algebraic)35 b(equations)f(that)h(can)g(b)s
(e)g(used)f(to)h(compute)g(the)g(settling)f(p)s(oin)m(t)g(within)e(eac)
m(h)k(switc)m(hing)300 3636 y(in)m(terv)-5 b(al,)43 b(while)d
(retaining)f(the)j(\\resistiv)m(e")f(elemen)m(ts)h(in)e(the)h(net)m(w)m
(ork.)74 b(It)42 b(will)c(then)j(b)s(e)g(sho)m(wn)300
3862 y(ho)m(w)31 b(the)g(algebraic)f(equations)g(can)h(b)s(e)g(used)e
(to)j(dev)m(elop)e(a)i(fast)f(transien)m(t)f(analysis)f(for)i(SC)f(and)
g(SI)300 4088 y(net)m(w)m(orks)h(describ)s(ed)d(at)j(the)g(transistor)f
(lev)m(el.)536 4314 y(Chapter)j(3)g(considers)f(the)h(frequency-domain)
f(sim)m(ulation)f(of)i(SI)g(and)f(SC)g(\014lters)g(under)g(the)300
4540 y(instan)m(t)20 b(settling)g(appro)m(ximation.)36
b(It)21 b(is)f(sho)m(wn)g(ho)m(w)g(the)h(small-signal)d(parameters)j
(can)g(b)s(e)f(extracted)300 4766 y(from)35 b(the)g(CS/MNA)g(equations)
g(of)h(Chapter)e(2)i(and)e(then)h(explicit)f(form)m(ulas)g(are)i(deriv)
m(ed)e(for)h(the)300 4991 y(frequency)30 b(resp)s(onse)f(in)g(terms)i
(of)f(the)h(small-signal)d(parameters.)536 5217 y(The)21
b(time-)f(and)h(frequency-domain)e(form)m(ulations)h(ha)m(v)m(e)i(b)s
(een)e(implemen)m(ted)f(in)h(the)h(sim)m(ulator)p eop
%%Page: 12 25
12 24 bop 3809 -200 a FH(12)300 99 y(SWITCAP3.)38 b(In)25
b(Chapter)f(4,)j(sev)m(eral)e(examples)g(are)g(presen)m(ted)g(that)h
(demonstrate)g(the)f(sim)m(ulation)300 324 y(using)h(SWITCAP3)h(and)f
(compare)i(the)g(results)e(to)i(con)m(tin)m(uous-time)f(sim)m(ulations)
e(in)h(HSPICE)g([59)q(].)536 550 y(Finally)-8 b(,)35
b(in)f(Chapter)h(5,)i(the)e(noise)g(analysis)f(for)h(\\ideal")g(SCN's)f
(is)h(presen)m(ted.)55 b(It)35 b(includes)300 776 y(the)g(form)m
(ulations)f(for)i(white)e(and)h(1)p FG(=f)45 b FH(noise)35
b(sources.)55 b(These)35 b(form)m(ulations)f(ha)m(v)m(e)j(also)e(b)s
(een)g(im-)300 1002 y(plemen)m(ted)e(in)e(SWITCAP3.)49
b(T)-8 b(o)33 b(illustrate)e(the)j(v)-5 b(alidit)m(y)31
b(of)i(the)g(form)m(ulations,)g(sev)m(eral)g(examples)300
1228 y(are)e(presen)m(ted)f(that)h(compare)g(the)g(sim)m(ulation)d(in)h
(SWITCAP3)h(with)f(actual)i(circuits.)p eop
%%Page: 13 26
13 25 bop 3809 -200 a FH(13)300 721 y FM(Chapter)65 b(2)300
1095 y(Time-domain)f(form)-5 b(ulation)65 b(for)g(SC)f(and)g(SI)300
1302 y(net)-5 b(w)g(orks)300 1860 y FH(In)33 b(this)g(c)m(hapter,)i
(the)f(Charge)g(Surface/)g(Mo)s(di\014ed)e(No)s(dal)h(analysis)f
(\(CS/MNA\))j(is)e(presen)m(ted.)51 b(It)300 2086 y(will)31
b(b)s(e)j(sho)m(wn)f(ho)m(w)h(the)g(CS/MNA)h(can)f(b)s(e)f(used)g(to)i
(tak)m(e)h(adv)-5 b(an)m(tage)36 b(of)e(the)g(settling)g(prop)s(erties)
300 2312 y(of)c(SC)f(and)h(SI)f(net)m(w)m(orks)i(to)g(construct)f
(non-linear)f(algebraic)g(net)m(w)m(ork)i(equations)f(whic)m(h)f(can)h
(then)300 2538 y(b)s(e)g(applied)e(to)j(dev)m(elop)f(a)h(form)m
(ulation)e(for)h(a)h(fast)g(transien)m(t)f(sim)m(ulation.)536
2764 y(In)j(Sec.)g(2.1)h(the)g(net)m(w)m(ork)g(elemen)m(ts)f(that)h
(are)f(considered)f(in)g(the)h(form)m(ulation)f(are)i(de\014ned.)300
2989 y(Sec.)45 b(2.2)h(serv)m(es)f(as)g(an)f(o)m(v)m(erview.)84
b(It)45 b(presen)m(ts)g(t)m(w)m(o)h(simple)c(examples)i(that)i
(demonstrate)f(the)300 3215 y(concepts)25 b(of)f(the)g(CS/MNA.)g(The)g
(rest)g(of)g(the)g(sections)g(presen)m(t)g(the)g(same)g(concepts)h
(using)e(a)h(general)300 3441 y(notation.)536 3667 y(The)31
b(CS/MNA)h(is)e(a)i(com)m(bination)f(of)g(the)h(Mo)s(di\014ed)e(No)s
(dal)h(Analysis)e(\(MNA\))k([12)q(])f(and)f(the)300 3893
y(concept)37 b(of)f(c)m(harge)h(conserv)-5 b(ation)37
b(in)d(a)j(c)m(harge)g(surface)f([32)q(].)58 b(In)35
b(Sec.)i(2.3)g(a)g(short)e(review)h(of)g(the)300 4118
y(MNA)d(is)f(giv)m(en,)i(while)d(in)g(Sec.)i(2.4)h(the)f(c)m(harge)h
(surface)f(concept)g(is)f(discussed.)46 b(Then)32 b(in)f(Sec.)j(2.5,)
300 4344 y(the)d(t)m(w)m(o)g(concepts)g(are)g(com)m(bined)f(to)h(dev)m
(elop)f(the)h(CS/MNA.)536 4570 y(In)i(Sec.)i(2.6)g(it)f(is)f(sho)m(wn)g
(that)i(under)d(the)i(instan)m(t)g(settling)f(appro)m(ximation,)h(the)h
(CS/MNA)300 4796 y(equations)c(reduce)g(to)h(algebraic)f(form.)42
b(The)31 b(necessary)h(top)s(ological)f(restrictions)f(and)g(appro)m
(xima-)300 5022 y(tions)g(are)g(also)h(discussed.)39
b(Finally)-8 b(,)29 b(in)g(Sec.)i(2.7)g(the)g(fast)f(transien)m(t)g
(form)m(ulation)g(is)f(presen)m(ted.)p eop
%%Page: 14 27
14 26 bop 3809 -200 a FH(14)300 99 y FL(2.1)135 b(Net)l(w)l(ork)47
b(de\014nitions)300 414 y FH(The)24 b(net)m(w)m(ork)i(considered)e(in)f
(this)h(thesis)g(\(illustrated)f(in)g(Fig.)i(2.1\))i(con)m(tains)e(the)
g(follo)m(wing)e(net)m(w)m(ork)300 640 y(elemen)m(ts:)486
809 y Fz(\017)46 b FH(resistors)486 996 y Fz(\017)g FH(capacitors)486
1184 y Fz(\017)g FH(indep)s(enden)m(t)20 b(v)m(oltage)k(and)e(curren)m
(t)g(sources)486 1372 y Fz(\017)46 b FH(con)m(trolled)30
b(v)m(oltage)i(and)e(curren)m(t)g(sources)486 1559 y
Fz(\017)46 b FH(MOS)30 b(transistor)486 1747 y Fz(\017)46
b FH(MOS)30 b(switc)m(h)2386 847 y Fz(\017)46 b FH(ideal)29
b(switc)m(hes)2386 1035 y Fz(\017)46 b FH(b)s(o)s(olean)29
b(clo)s(c)m(ks)2386 1223 y Fz(\017)46 b FH(b)s(o)s(olean)29
b(logic)h(elemen)m(ts)2386 1410 y Fz(\017)46 b FH(latc)m(hed)30
b(comparators)2386 1598 y Fz(\017)46 b FH(ideal)30 b(digital/analog)i
(con-)2477 1711 y(v)m(erters)300 1918 y(The)g(analog)i(elemen)m(ts)f
(can)g(b)s(e)f(linear)g(or)g(non-linear.)47 b(Belo)m(w,)34
b(the)f(net)m(w)m(ork)h(and)e(its)g(elemen)m(ts)i(are)300
2144 y(discussed)28 b(in)i(more)g(detail.)300 2370 y
FD(MOS)35 b(transistor)p 300 2383 711 4 v 300 2595 a
FH(Note)h(that)e(a)h(device)f(mo)s(del)f(for)h(an)g(MOS)g(transistor)f
(is)h(a)g(com)m(bination)g(of)g(the)g(basic)g(elemen)m(ts)h({)300
2821 y(resistors,)d(capacitors)h(and)f(v)m(oltage)i(con)m(trolled)d
(curren)m(t)h(sources.)47 b(Existing)30 b(mo)s(dels)h(ma)m(y)i(b)s(e)e
(used.)300 3047 y(BSIM3)g(\(v)m(ersion)f(3\)[60)r(])h(w)m(as)f(used)g
(in)f(SWITCAP3)h(implemen)m(tation.)300 3273 y FD(Clo)s(c)m(ks)p
300 3286 300 4 v 300 3499 a FH(The)j(clo)s(c)m(k)i(signals)d(are)j
(ideal.)50 b(Their)32 b(w)m(a)m(v)m(eforms)j(consist)f(of)g(instan)m
(taneous)g(transitions)e(b)s(et)m(w)m(een)300 3725 y(b)s(o)s(olean)i
Fw(ON)f FH(and)h Fw(OFF)g FH(v)-5 b(alues.)53 b(The)34
b(follo)m(wing)f(are)h(some)h(de\014nitions)d(related)j(to)g(the)g(clo)
s(c)m(k)g(w)m(a)m(v)m(e-)300 3950 y(forms.)399 4192 y
FD(De\014nition)c FH(2.1.1:)127 b(A)32 b FC(switching)h(instant)g
FG(t)2056 4207 y FB(k)2129 4192 y FH(\()p FG(k)d FH(=)c(0)p
FG(;)15 b Fz(\006)p FH(1)p FG(;)g Fz(\006)p FH(2)p FG(;)g(:)g(:)g(:)s
FH(\))31 b(is)f(a)i(time)e(instan)m(t)h(at)527 4362 y(whic)m(h)e(at)i
(least)g(one)g(clo)s(c)m(k)g(transition)d(o)s(ccurs.)398
4628 y FD(De\014nition)j FH(2.1.2:)123 b(A)30 b FC(switching)k
(interval)d FG(I)2082 4643 y FB(k)2154 4628 y FH(is)f(an)g(in)m(terv)-5
b(al)29 b(b)s(et)m(w)m(een)i(t)m(w)m(o)h(consecutiv)m(e)527
4798 y(switc)m(hing)d(instan)m(ts)h FG(t)1304 4813 y
FB(k)r Fv(\000)p FA(1)1467 4798 y FH(and)g FG(t)1677
4813 y FB(k)1719 4798 y FH(.)1288 5056 y FG(I)1328 5071
y FB(k)1396 5056 y FH(=)25 b(\()p FG(t)1560 5071 y FB(k)r
Fv(\000)p FA(1)1693 5056 y FG(;)15 b(t)1766 5071 y FB(k)1809
5056 y FH(])273 b(or)182 b FG(t)2403 5071 y FB(k)r Fv(\000)p
FA(1)2561 5056 y FG(<)25 b(t)g Fz(\024)g FG(t)2844 5071
y FB(k)2886 5056 y FG(:)575 b FH(\(2.1\))300 5407 y(Note,)40
b(that)d(time)f FG(t)1002 5422 y FB(k)1081 5407 y FH(is)f(part)h(of)h
(the)g(switc)m(hing)e(in)m(terv)-5 b(al)35 b FG(I)2436
5422 y FB(k)2479 5407 y FH(,)j(while)d(the)h(time)g FG(t)3194
5422 y FB(k)r Fv(\000)p FA(1)3363 5407 y FH(is)g(part)g(of)h(the)p
eop
%%Page: 15 28
15 27 bop 3809 -200 a FH(15)358 117 y
 27496776 39205929 460472 10590863 27957248 49796792 startTexFig
 358 117 a
%%BeginDocument: figs/elements.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      16 243 moveto 135 243 lineto 135 342 lineto 16 342 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 280 moveto
      24 0 atan dup cos 10 mul 105 exch sub
      exch sin 10 mul 304 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      105 304 10 4 0 24 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 105 292 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 271 moveto
      105 247 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 311 moveto
      105 335 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 272 moveto
      48 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 312 moveto
      48 336 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 48 292 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 299 moveto (_) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 294 moveto (+) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      256 319 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      332 183 moveto
      369 183 lineto
      369 165 lineto
      407 165 lineto
      407 183 lineto
      443 183 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      369 150 moveto
      407 150 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      388 150 moveto
      388 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      506 166 moveto
      515 166 lineto
      518 172 lineto
      523 159 lineto
      526 172 lineto
      531 159 lineto
      536 172 lineto
      539 159 lineto
      545 172 lineto
      548 159 lineto
      551 166 lineto
      560 166 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      560 166 moveto
      592 166 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      506 166 moveto
      487 166 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 336 231 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 336 231 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 336 338 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 336 338 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 232 231 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 232 231 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 232 338 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 232 338 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 480 231 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 480 231 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 480 338 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 480 338 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 336 372 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 336 372 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 336 480 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 336 480 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 232 372 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 232 372 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 232 480 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 232 480 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 480 372 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 480 372 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 480 480 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 480 480 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      330 294 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      328 289 moveto (+) show
   grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      336 259 moveto
      320 286 lineto
      336 312 lineto
      352 286 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 259 moveto
      336 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 339 moveto
      336 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 232 moveto
      368 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 339 moveto
      368 339 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      264 373 moveto
      264 480 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      248 296 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 232 moveto
      264 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 339 moveto
      264 339 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      480 259 moveto
      464 286 lineto
      480 312 lineto
      496 286 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 259 moveto
      480 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 339 moveto
      480 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 232 moveto
      512 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 339 moveto
      512 339 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      256 267 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      360 296 moveto ( f\(V\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      512 296 moveto ( f\(V\)) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 277 moveto
      20 0 atan dup cos 10 mul 480 exch sub
      exch sin 10 mul 297 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      480 297 10 4 0 20 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      330 435 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      328 430 moveto (+) show
   grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      336 400 moveto
      320 426 lineto
      336 453 lineto
      352 426 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 400 moveto
      336 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 480 moveto
      336 453 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 373 moveto
      368 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 480 moveto
      368 480 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      280 430 moveto (I) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 373 moveto
      264 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 480 moveto
      264 480 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      480 400 moveto
      464 426 lineto
      480 453 lineto
      496 426 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 400 moveto
      480 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 480 moveto
      480 453 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 373 moveto
      512 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 480 moveto
      512 480 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      360 437 moveto ( f\(I\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      512 437 moveto ( f\(I\)) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 418 moveto
      20 0 atan dup cos 10 mul 480 exch sub
      exch sin 10 mul 438 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      480 438 10 4 0 20 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      264 426 moveto
      272 420 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      264 426 moveto
      256 420 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      168 64 moveto 664 64 lineto 664 688 lineto 168 688 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      291 165 moveto
      238 165 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      238 146 moveto
      238 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      227 146 moveto
      229.00 158.67 229.00 171.33
      227 184 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      229 165 moveto
      182 165 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 230 moveto (input) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      136 288 moveto
      0 32 atan dup cos 10 mul 168 exch sub
      exch sin 10 mul 288 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      168 288 10 4 32 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      664 288 moveto
      0 32 atan dup cos 10 mul 696 exch sub
      exch sin 10 mul 288 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      696 288 10 4 32 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      688 270 moveto (output) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      400 1005 moveto
      -109 0 atan dup cos 10 mul 400 exch sub
      exch sin 10 mul 896 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      400 896 10 4 0 -109 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      348 1036 moveto (boolian clocks) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      256 1006 moveto 560 1006 lineto 560 1118 lineto 256 1118 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      309 1038 moveto
      72 0 atan dup cos 10 mul exch sin 10 mul rmoveto
      309 1110 lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      309 1038 10 4 0 -72 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      295 1094 moveto
      0 241 atan dup cos 10 mul 536 exch sub
      exch sin 10 mul 1094 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      536 1094 10 4 241 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      275 1063 moveto (on) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      309 1062 moveto
      338 1062 lineto
      338 1094 lineto
      366 1094 lineto
      366 1062 lineto
      423 1062 lineto
      423 1094 lineto
      479 1094 lineto
      479 1062 lineto
      508 1062 lineto
      508 1094 lineto
      536 1094 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      273 1094 moveto (off) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      176 816 moveto 448 816 lineto 448 896 lineto 176 896 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      267 866 moveto (boolean logic) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      294 746 moveto (DAC) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      256 704 moveto 384 704 lineto 384 768 lineto 256 768 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      464 548 moveto (ideal switches) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      462 560 moveto 606 560 lineto 606 656 lineto 462 656 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      554 632 moveto
      594 632 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      474 632 moveto
      514 632 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      514 632 moveto
      554 616 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      533 594 moveto
      20 0 atan dup cos 10 mul 533 exch sub
      exch sin 10 mul 614 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      533 614 10 4 0 20 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      192 548 moveto (MOS switches) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      190 560 moveto 334 560 lineto 334 656 lineto 190 656 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      240 578 moveto (Y) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 639 moveto
      241 639 lineto
      241 621 lineto
      279 621 lineto
      279 639 lineto
      315 639 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      241 606 moveto
      279 606 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      260 606 moveto
      260 588 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      268 578 moveto (, V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      285 585 moveto (c) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      176 512 moveto
      672 512 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      368 704 moveto
      -192 0 atan dup cos 10 mul 368 exch sub
      exch sin 10 mul 512 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      368 512 10 4 0 -192 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 816 moveto
      -160 0 atan dup cos 10 mul 224 exch sub
      exch sin 10 mul 656 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      224 656 10 4 0 -160 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      320 816 moveto
      -48 0 atan dup cos 10 mul 320 exch sub
      exch sin 10 mul 768 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      320 768 10 4 0 -48 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      316 102 moveto (Analog Components) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      320 704 moveto
      -48 0 atan dup cos 10 mul 320 exch sub
      exch sin 10 mul 656 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      320 656 10 4 0 -48 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 816 moveto
      416 592 lineto
      0 48 atan dup cos 10 mul 464 exch sub
      exch sin 10 mul 592 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      464 592 10 4 48 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      640 688 moveto
      80 0 atan dup cos 10 mul 640 exch sub
      exch sin 10 mul 768 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      640 768 10 4 0 80 tgifarrowtip
   closepath fill
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      576 848 moveto
      528 880 lineto
      576 912 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      552 872 moveto
      560 872 lineto
      560 888 lineto
      568 888 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      548 896 moveto
      24 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      548 920 lineto
   stroke
grestore
gsave
   newpath
      548 896 8 3 0 -24 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      576 868 moveto
      600 868 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      576 892 moveto
      600 892 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      523 802 moveto (latched) show
      523 831 moveto (comparators) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      544 1008 moveto
      -48 0 atan dup cos 10 mul 544 exch sub
      exch sin 10 mul 960 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      544 960 10 4 0 -48 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 864 moveto
      0 -64 atan dup cos 10 mul 448 exch sub
      exch sin 10 mul 864 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      448 864 10 4 -64 0 tgifarrowtip
   closepath fill
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      512 768 moveto 656 768 lineto 656 960 lineto 512 960 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      253 583 moveto (s) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      525 580 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      538 585 moveto (s) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      192 722 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      205 727 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      288 679 moveto (  V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      305 686 moveto (c) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      421 580 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      434 585 moveto (s) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      461 852 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      474 857 moveto (out) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      413 980 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      426 985 moveto (c) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      557 988 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      570 993 moveto (c) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      541 940 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      554 945 moveto (c) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      301 1028 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      314 1033 moveto (c) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Oct  5 11:23:17 1998
%%EndDocument

 endTexFig
 1480 5280 a FH(Figure)30 b(2.1:)42 b(Net)m(w)m(ork)32
b(elemen)m(ts.)p eop
%%Page: 16 29
16 28 bop 3809 -200 a FH(16)771 7 y
 20984382 8288502 394690 42692362 21379072 50980864 startTexFig
 771 7 a
%%BeginDocument: figs/timing.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 192 moveto
      0 512 atan dup cos 10 mul 576 exch sub
      exch sin 10 mul 192 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      576 192 10 4 512 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      128 208 moveto
      128 32 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      224 208 moveto
      224 32 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      352 208 moveto
      352 32 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      448 208 moveto
      448 32 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      512 208 moveto
      512 32 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      16 214 moveto (switching) show
      16 243 moveto (instants) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      208 231 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      219 237 moveto (k-2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      336 231 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      347 237 moveto (k-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      432 231 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      443 237 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      496 231 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      507 237 moveto (k+1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      160 71 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      171 77 moveto (k-2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      272 71 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      283 77 moveto (k-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      384 71 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      395 77 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      464 71 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      475 77 moveto (k+1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      16 62 moveto (switching) show
      16 91 moveto (intervals) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 127 174 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 223 174 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 223 174 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 175 moveto
      133 175 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 223 150 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 351 150 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 351 150 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      352 151 moveto
      229 151 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 351 126 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 447 126 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 447 126 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      448 127 moveto
      357 127 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 447 102 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 511 102 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 511 102 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 103 moveto
      453 103 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Sep 22 18:41:52 1998
%%EndDocument

 endTexFig
 997 1253 a FH(Figure)30 b(2.2:)42 b(Switc)m(hing)28
b(instan)m(ts)i(and)g(switc)m(hing)f(in)m(terv)-5 b(als.)300
1528 y(switc)m(hing)36 b(in)m(terv)-5 b(al)37 b FG(I)1085
1543 y FB(k)r Fv(\000)p FA(1)1218 1528 y FH(.)63 b(Fig.)38
b(2.2)h(sho)m(ws)e(a)h(general)g(set)g(of)g(switc)m(hing)f(instan)m(ts)
g(and)g(switc)m(hing)300 1754 y(in)m(terv)-5 b(als.)38
b(The)25 b(notation)h FG(t)1272 1716 y FA(+)1272 1782
y FB(k)r Fv(\000)p FA(1)1430 1754 y FH(will)d(b)s(e)i(used)g(to)h
(refer)f(to)h(the)g(time)f(just)g(after)h(the)g(switc)m(hing)e(instan)m
(t)300 1980 y FG(t)333 1995 y FB(k)r Fv(\000)p FA(1)466
1980 y FH(.)40 b(Note)32 b(that)f FG(t)981 1942 y FA(+)981
2008 y FB(k)r Fv(\000)p FA(1)1144 1980 y FH(is)e(part)i(of)f
FG(I)1576 1995 y FB(k)1619 1980 y FH(.)407 2224 y FD(De\014nition)38
b FH(2.1.3:)172 b(A)38 b(clo)s(c)m(k)h(state)h(v)m(ector)g
FG( )2195 2239 y FB(c;k)2326 2224 y FH(=)f([)p FG(c)2500
2239 y FB(k)r(;)p FA(1)2598 2224 y FG(;)15 b(c)2677 2239
y FB(k)r(;)p FA(2)2775 2224 y FG(;)g(:)g(:)g(:)i(;)e(c)3016
2239 y FB(k)r(;n)3118 2247 y Fu(c)3154 2224 y FH(])3179
2191 y FB(t)3247 2224 y FH(is)37 b(a)i(v)m(ector)527
2393 y(whic)m(h)28 b(represen)m(ts)h(the)g(state)i(of)e(all)f(clo)s(c)m
(ks)i(in)e(the)h(net)m(w)m(ork)h(during)d(switc)m(hing)g(in)m(terv)-5
b(al)527 2563 y FG(I)567 2578 y FB(k)640 2563 y FH(where)30
b(en)m(tries)1288 2874 y FG(c)1327 2889 y FB(k)r(;i)1439
2874 y FH(=)1535 2677 y Ft(8)1535 2752 y(>)1535 2777
y(<)1535 2926 y(>)1535 2951 y(:)1651 2801 y FH(1)p FG(;)83
b FH(if)30 b(clo)s(c)m(k)g FG(i)h FH(is)e Fw(ON)h FH(during)e
FG(I)2724 2816 y FB(k)1651 2970 y FH(0)p FG(;)83 b FH(if)30
b(clo)s(c)m(k)g FG(i)h FH(is)e Fw(OFF)h FH(during)e FG(I)2772
2985 y FB(k)527 3188 y FH(The)f(sup)s(erscript)e FG(t)i
FH(represen)m(ts)h(the)f(transp)s(ose)g(op)s(eration)g(and)g
FG(n)2854 3202 y FB(c)2916 3188 y FH(is)f(the)i(total)g(n)m(um)m(b)s
(er)527 3358 y(of)j(clo)s(c)m(ks)f(in)g(the)g(net)m(w)m(ork.)527
3565 y(The)37 b(clo)s(c)m(k)h(state)h(v)m(ector)g(is)e
FC(p)-5 b(erio)g(dic)39 b FH({)f(i.)61 b(e.)h(there)38
b(exists)f(an)h(in)m(teger)g FG(N)47 b FH(suc)m(h)37
b(that)527 3734 y FG( )586 3749 y FB(c;k)705 3734 y FH(=)25
b FG( )860 3749 y FB(c;nN)7 b FA(+)p FB(k)1144 3734 y
FH(for)30 b(all)f FG(n)c FH(=)g(\(0)p FG(;)15 b Fz(\006)p
FH(1)p FG(;)g Fz(\006)p FH(2)g FG(:)g(:)g(:)s FH(\).)300
4034 y FD(Latc)m(hed)35 b(comparator)f([36)q(])p 300
4071 1119 4 v 300 4260 a FH(The)43 b(latc)m(hed)h(comparator)h
(implemen)m(ted)e(here)g(\(Fig.)i(2.3\),)k(is)43 b(the)h(same)g(as)g
(in)e([36)r(].)81 b(It)44 b(is)f(the)300 4486 y(in)m(terface)27
b(b)s(et)m(w)m(een)f(the)h(analog)f(comp)s(onen)m(ts)g(and)g(the)g
(logic)g(comp)s(onen)m(ts.)39 b(It)26 b(measures)g(the)g(analog)300
4712 y(v)-5 b(alues)39 b FG(v)624 4726 y FB(P)683 4712
y FH(\()p FG(t)751 4727 y FB(k)r Fv(\000)p FA(1)884 4712
y FH(\))g(and)g FG(v)1188 4726 y FB(N)1255 4712 y FH(\()p
FG(t)1323 4727 y FB(k)r Fv(\000)p FA(1)1456 4712 y FH(\))h(in)e(the)i
(in)m(terv)-5 b(al)39 b FG(I)2190 4727 y FB(k)r Fv(\000)p
FA(1)2362 4712 y FH(and)g(pro)s(duces)f(a)i(b)s(o)s(olean)e(output)h
FG( )3737 4727 y FB(out;k)300 4938 y FH(during)c(in)m(terv)-5
b(al)36 b FG(I)970 4953 y FB(k)1013 4938 y FH(.)61 b(The)36
b(output)h(is)f(up)s(dated)g(only)g(on)h(the)g(rising)e(edge)j(of)f
(the)g(b)s(o)s(olean)f(enable)p eop
%%Page: 17 30
17 29 bop 3809 -200 a FH(17)1392 7 y
 11182899 5262541 65781 46770831 11248680 52033372 startTexFig
 1392 7 a
%%BeginDocument: figs/comparator.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      52 56 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      7 66 moveto (v  ) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      37 66 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      145 8 moveto
      40 0 atan dup cos 10 mul 145 exch sub
      exch sin 10 mul 48 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      145 48 10 4 0 40 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      16 71 moveto (P ) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      52 112 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      7 122 moveto (v  ) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      37 122 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      16 127 moveto (N ) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 88 moveto
      196 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      88 60 moveto
      56 60 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      177 102 moveto

   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      196 88 moveto
      88 140 lineto
      88 36 lineto
   closepath stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      96 52 moveto 180 rotate (+) tgifrighttext show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      93 109 moveto 180 rotate (-) tgifrighttext show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      88 116 moveto
      56 116 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      164 22 moveto (y) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      172 31 moveto (ENB,k ) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      260 90 moveto (y) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      268 99 moveto (out,k ) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Sep 23 12:26:54 1998
%%EndDocument

 endTexFig
 1419 870 a FH(Figure)30 b(2.3:)42 b(Latc)m(hed)31 b(Comparator.)300
1135 y(signal)e FG( )617 1150 y FB(E)t(N)7 b(B)s(;k)885
1135 y FH(whic)m(h)29 b(m)m(ust)h(b)s(e)g(a)h(clo)s(c)m(k)g(signal.)39
b(The)30 b(comparator)h(function)e(is;)677 1444 y FG(R)q(ising)p
959 1444 28 4 v 36 w(edg)s(e)1163 1459 y FB(k)1233 1444
y FH(=)1328 1247 y Ft(8)1328 1322 y(>)1328 1347 y(<)1328
1496 y(>)1328 1521 y(:)1444 1371 y Fw(TRUE)g FH(if)g
FG( )1807 1386 y FB(E)t(N)7 b(B)s(;k)r Fv(\000)p FA(1)2160
1371 y FH(=)25 b(0)31 b(and)f FG( )2568 1386 y FB(E)t(N)7
b(B)s(;k)2831 1371 y FH(=)24 b(1)1444 1540 y Fw(FALSE)29
b FH(otherwize.)677 1967 y FG( )736 1982 y FB(out;k)924
1967 y FH(=)1020 1696 y Ft(8)1020 1770 y(>)1020 1795
y(>)1020 1820 y(>)1020 1845 y(>)1020 1870 y(<)1020 2019
y(>)1020 2044 y(>)1020 2069 y(>)1020 2094 y(>)1020 2119
y(:)1166 1809 y Fw(ON)269 b FH(if)29 b FG(v)1658 1823
y FB(P)1717 1809 y FH(\()p FG(t)1785 1824 y FB(k)r Fv(\000)p
FA(1)1918 1809 y FH(\))c FG(>)g(v)2118 1823 y FB(N)2186
1809 y FH(\()p FG(t)2254 1824 y FB(k)r Fv(\000)p FA(1)2387
1809 y FH(\))30 b(and)g FG(R)q(ising)p 2911 1809 V 36
w(edg)s(e)3115 1824 y FB(k)3185 1809 y FH(=)24 b Fw(TRUE)1166
1979 y(OFF)221 b FH(if)29 b FG(v)1658 1993 y FB(P)1717
1979 y FH(\()p FG(t)1785 1994 y FB(k)r Fv(\000)p FA(1)1918
1979 y FH(\))c Fz(\024)g FG(v)2118 1993 y FB(N)2186 1979
y FH(\()p FG(t)2254 1994 y FB(k)r Fv(\000)p FA(1)2387
1979 y FH(\))30 b(and)g FG(R)q(ising)p 2911 1979 V 36
w(edg)s(e)3115 1994 y FB(k)3185 1979 y FH(=)24 b Fw(TRUE)1136
2148 y FG( )1195 2163 y FB(out;k)r Fv(\000)p FA(1)1531
2148 y FH(if)29 b FG(R)q(ising)p 1896 2148 V 36 w(edg)s(e)2100
2163 y FB(k)2169 2148 y FH(=)c Fw(FALSE)300 2509 y FD(Logic)36
b(elemen)m(ts)p 300 2540 675 4 v 300 2735 a FH(The)30
b(logic)h(elemen)m(ts)g(implemen)m(t)f(ideal)g(b)s(o)s(olean)f
(functions)h(suc)m(h)h(as)g(AND,)h(OR,)e(X)m(OR,)i FC(etc)p
FH(.)42 b(Com-)300 2961 y(plex)29 b(b)s(o)s(olean)f(op)s(eration)h(ma)m
(y)h(b)s(e)f(de\014ned)f(b)m(y)i(a)g(function)e(written)h(in)f(C)h
(language.)41 b(The)29 b(inputs)e(to)300 3187 y(the)k(logic)f(blo)s(c)m
(k)g(are)g(the)h(clo)s(c)m(k)g(signals)e(and)g(the)i(latc)m(hed)g
(comparator)g(outputs.)40 b(\(See)31 b(Fig.)g(2.1.\))300
3412 y FD(Digital)k(to)g(analog)g(con)m(v)m(erter)g(\(D)m(A)m(C\))p
300 3448 1576 4 v 300 3638 a FH(An)40 b(ideal)f(D)m(A)m(C)j(is)d
(implemen)m(ted)g(b)m(y)h(a)h(v)m(oltage)h(source)f(that)f(is)g(con)m
(trolled)g(b)m(y)g(a)h(b)s(o)s(olean)e(logic)300 3864
y(v)-5 b(alue.)350 3902 y
 8420065 3946906 131563 48086466 8551628 52033372 startTexFig
 350 3902 a
%%BeginDocument: figs/dac.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 32 moveto
      160 8 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 72 moveto
      160 96 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 160 52 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      160 59 moveto (_) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      160 54 moveto (+) tgifcentertext show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      8 24 moveto 72 24 lineto 72 72 lineto 8 72 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 64 moveto
      24 32 lineto
      32 32 lineto
      32 64 lineto
      40 64 lineto
      40 32 lineto
      56 32 lineto
      56 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 64 moveto
      64 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 64 moveto
      16 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      72 48 moveto
      96 48 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 96 moveto
      176 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 96 moveto
      136 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 96 moveto
      152 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      176 96 moveto
      168 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 8 moveto
      200 8 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      88 34 moveto (f) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      212 22 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      221 29 moveto (c) show
   grestore

% OVAL
newpath 95 48 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 95 48 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 199 8 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 199 8 4 4 tgifellipse stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Sep 22 15:41:24 1998
%%EndDocument

 endTexFig
 1762 4190 a FG(V)1815 4204 y FB(c)1875 4190 y FH(=)1971
3992 y Ft(8)1971 4067 y(>)1971 4092 y(<)1971 4242 y(>)1971
4266 y(:)2087 4116 y FG(V)2140 4130 y FB(O)r(N)2262 4116
y FG(;)129 b FH(when)30 b FG(\036)g FH(is)g Fw(ON)2087
4285 y FG(V)2140 4299 y FB(O)r(F)10 b(F)2308 4285 y FG(;)83
b FH(when)30 b FG(\036)g FH(is)g Fw(OFF)300 4504 y FH(where)g
FG(V)616 4518 y FB(O)r(N)769 4504 y FH(and)g FG(V)999
4518 y FB(O)r(F)10 b(F)1198 4504 y FH(are)30 b(analog)h(v)m(oltage)h(v)
-5 b(alues)30 b(that)h(m)m(ust)f(b)s(e)g(sp)s(eci\014ed)f(for)h(eac)m
(h)h(D)m(A)m(C.)300 4730 y FD(Ideal)j(Switc)m(h)p 300
4743 566 4 v 300 4956 a FH(An)i(ideal)f(switc)m(h)h(is)g(con)m(trolled)
g(b)m(y)g(a)h(b)s(o)s(olean)f(logic)g(signal)f(as)i(sho)m(wn)f(if)f
(Fig.)i(2.1.)60 b(It)37 b(is)e(a)i(short)300 5181 y(circuit)28
b(\()p Fw(CLOSED)p FH(\))h(when)f(the)i(con)m(trol)g(signal)e(is)h
Fw(ON)g FH(and)g(an)g(op)s(en)g(circuit)f(\()p Fw(OPEN)p
FH(\))h(when)g(the)g(con)m(trol)300 5407 y(signal)g(is)g
Fw(OFF)p FH(.)p eop
%%Page: 18 31
18 30 bop 3809 -200 a FH(18)536 99 y(Since)33 b(the)h(switc)m(hes)f
(are)h(the)g(only)f(time-v)-5 b(arying)33 b(elemen)m(ts,)i(the)f(state)
h(of)f(the)g(switc)m(hes)g(can)300 324 y(uniquely)29
b(de\014ne)i(the)h(top)s(ology)g(of)g(the)g(net)m(w)m(ork.)46
b(F)-8 b(urthermore,)32 b(since)f(the)h(switc)m(hes)g(c)m(hange)h
(their)300 550 y(state)40 b(instan)m(taneously)f(b)s(et)m(w)m(een)g
(the)h(switc)m(hing)d(in)m(terv)-5 b(als,)41 b(the)e(top)s(ology)g
(within)e(the)i(switc)m(hing)300 776 y(in)m(terv)-5 b(al)33
b(is)g(constan)m(t.)52 b(Consequen)m(tly)-8 b(,)35 b(the)f(top)s(ology)
g(during)d(a)k(switc)m(hing)d(in)m(terv)-5 b(al)33 b(can)h(b)s(e)f
(repre-)300 1002 y(sen)m(ted)e(b)m(y)f(the)h FC(switch)i(state)g(ve)-5
b(ctor)32 b FH(de\014ned)d(b)s(elo)m(w.)403 1237 y FD(De\014nition)35
b FH(2.1.4:)151 b(A)35 b(switc)m(h)f(state)i(v)m(ector)h
FG( )2204 1252 y FB(s;k)2332 1237 y FH(=)32 b([)p FG(s)2503
1252 y FB(k)r(;)p FA(1)2601 1237 y FG(;)15 b(s)2684 1252
y FB(k)r(;)p FA(2)2781 1237 y FG(;)g(:)g(:)g(:)i(;)e(s)3026
1252 y FB(k)r(;n)3128 1260 y Fu(s)3164 1237 y FH(])3189
1204 y FB(t)3254 1237 y FH(is)34 b(a)h(v)m(ector)527
1406 y(whic)m(h)21 b(represen)m(ts)g(the)h(state)h(of)e(all)g(switc)m
(hes)g(in)f(the)i(net)m(w)m(ork)g(during)d(switc)m(hing)h(in)m(terv)-5
b(al)527 1576 y FG(I)567 1591 y FB(k)640 1576 y FH(where)30
b(en)m(tries)1190 1876 y FG(s)1233 1891 y FB(k)r(;i)1344
1876 y FH(=)1440 1679 y Ft(8)1440 1754 y(>)1440 1779
y(<)1440 1928 y(>)1440 1953 y(:)1555 1803 y FH(1)p FG(;)84
b FH(if)29 b(switc)m(h)h FG(i)h FH(is)e Fw(CLOSED)g FH(during)f
FG(I)2871 1818 y FB(k)1555 1972 y FH(0)p FG(;)84 b FH(if)29
b(switc)m(h)h FG(i)h FH(is)e Fw(OPEN)g FH(during)f FG(I)2775
1987 y FB(k)527 2180 y FH(and)i FG(n)759 2194 y FB(s)826
2180 y FH(is)f(the)i(total)g(n)m(um)m(b)s(er)e(of)h(switc)m(hes)h(in)e
(the)h(net)m(w)m(ork.)300 2472 y(Ev)m(en)h(though)g(the)g(clo)s(c)m(k)h
(state)h(v)m(ector)f(\(De\014nition)e(2.1.3\))k(is)c(p)s(erio)s(dic,)f
(the)i(switc)m(h)g(state)h(v)m(ector)h(is)300 2697 y
FC(not)p FH(,)g(b)s(ecause)f(the)g(switc)m(hes)f(ma)m(y)i(also)e(b)s(e)
g(con)m(trolled)h(b)m(y)f(the)h(signals)f(from)g(latc)m(hed)h
(comparators.)300 2923 y(\(See)f(Fig.)f(2.1.\))42 b(Consequen)m(tly)-8
b(,)30 b(the)h(top)s(ology)f(of)h(the)f(net)m(w)m(ork)h(is)e(not)h(p)s
(erio)s(dic.)38 b(\(F)-8 b(or)32 b(the)e(compu-)300 3149
y(tation)g(of)g(the)g(frequency)g(resp)s(onse)f(in)f(c)m(hapter)j(3,)f
(a)g(more)g(strict)g(p)s(erio)s(dicit)m(y)d(requiremen)m(t)i(will)f(b)s
(e)300 3375 y(made.\))300 3601 y FD(MOS)35 b(switc)m(h)p
300 3614 559 4 v 300 3826 a FH(An)c(MOS)h(transistor)f(ma)m(y)h(also)g
(b)s(e)f(used)g(for)h(switc)m(h)f(implemen)m(tation.)44
b(Some)32 b(appro)m(ximation)f(are)300 4052 y(required)h(ho)m(w)m(ev)m
(er)j(and)e(will)e(b)s(e)i(discussed)f(in)g(Sec.)j(2.6.4.)52
b(The)33 b(MOS)g(switc)m(h)h(requires)e(a)i(b)s(o)s(olean)300
4278 y(logic)h(and)g(an)g(analog)h(con)m(trol)g(signal.)54
b(The)35 b(analog)h(con)m(trol)g(signal)e(can)i(b)s(e)f(obtained)f(b)m
(y)i(using)e(a)300 4504 y(D)m(A)m(C,)e(as)e(sho)m(wn)g(in)f(Fig.)i
(2.1.)300 4730 y FD(Settling)k(prop)s(ert)m(y)p 300 4761
789 4 v 300 4956 a FH(It)f(is)e(assumed)h(that,)i(within)c(eac)m(h)j
(switc)m(hing)f(in)m(terv)-5 b(al)32 b(the)i(net)m(w)m(ork)g
FC(appr)-5 b(o)g(aches)37 b FH(a)d FC(settling)i(state)p
FH(,)300 5181 y(where)f(the)g(curren)m(ts)g(and)g(v)m(oltages)i(are)f
(constan)m(t.)57 b(The)35 b(net)m(w)m(ork)h(restrictions)e(that)i(are)g
(required)300 5407 y(to)31 b(satisfy)f(this)f(assumption)g(will)f(b)s
(e)h(discussed)g(in)g(detail)h(in)f(Sec.)h(2.6.1.)p eop
%%Page: 19 32
19 31 bop 3809 -200 a FH(19)300 99 y FL(2.2)135 b(Ov)l(erview)47
b(of)e(CS/MNA)f(concepts)300 414 y FH(In)23 b(this)f(section,)k(t)m(w)m
(o)f(simple)c(examples)i(are)h(presen)m(ted)g(that)g(illustrate)e(the)i
(basic)f(concepts)h(in)m(v)m(olv)m(ed)300 640 y(in)h(the)h(CS/MNA.)g
(The)f(b)s(ene\014t)g(of)h(CS/MNA)g(is)f(that)h(it)g(can)g(tak)m(e)h
(adv)-5 b(an)m(tage)28 b(of)e(the)g(prop)s(ert)m(y)f(that)300
866 y(SC)31 b(and)h(SI)g(net)m(w)m(orks)h(are)g(normally)d(designed)h
(suc)m(h)h(that)h(the)g(signals)e(within)f(the)i(net)m(w)m(ork)h
(settle)300 1092 y(within)27 b(eac)m(h)k(switc)m(hing)e(in)m(terv)-5
b(al.)39 b(There)30 b(are)g(t)m(w)m(o)h(ph)m(ysical)d(pro)s(cesses)i(b)
m(y)g(whic)m(h)e(the)i(net)m(w)m(ork)h(can)300 1318 y(settle.)40
b(The)24 b(\014rst)h(example)f(demonstrates)i(settling)e(b)m(y)h(c)m
(harge)i(redistribution)21 b(b)s(et)m(w)m(een)26 b(capacitors,)300
1543 y(while)h(the)i(second)f(example)h(demonstrates)g(a)g(pro)s(cess)f
(common)h(to)h(SI)e(circuits)f(where)h(the)h(state)h(to)300
1769 y(whic)m(h)f(the)i(net)m(w)m(ork)g(settles)g(is)e(dep)s(enden)m(t)
g(on)i(\\resistiv)m(e")f(elemen)m(ts.)300 2007 y Fx(2.2.1)112
b(Charge)38 b(redistribution)d(b)s(et)m(w)m(een)j(capacitors)300
2291 y FH(Consider)20 b(a)j(simple)d(circuit)h(in)g(Fig.)h(2.4\(a\).)40
b(The)22 b(switc)m(h)g FG(S)27 b FH(has)22 b(just)f(closed)h(at)h(the)f
(switc)m(hing)f(instan)m(t)300 2517 y FG(t)333 2532 y
FB(k)r Fv(\000)p FA(1)466 2517 y FH(.)48 b(Let)34 b FG(V)758
2531 y FA(1)797 2517 y FH(\()p FG(t)p FH(\),)g FG(V)1012
2531 y FA(2)1052 2517 y FH(\()p FG(t)p FH(\))f(and)g
FG(V)1421 2531 y FA(3)1460 2517 y FH(\()p FG(t)p FH(\))h(represen)m(t)f
(the)g(v)m(oltages)h(at)g(no)s(des)e(1)i(and)e(2,)i(resp)s(ectiv)m(ely)
-8 b(.)48 b(Let)300 2743 y FG(I)340 2757 y FB(s)377 2743
y FH(\()p FG(t)p FH(\))36 b(represen)m(t)f(the)h(curren)m(t)f(through)f
(the)i(switc)m(h)f FG(S)5 b FH(,)36 b(and)f Fz(\006)p
FG(q)2608 2757 y FA(1)2647 2743 y FH(\()p FG(V)2735 2757
y FA(1)2775 2743 y FH(\))g(and)g Fz(\006)p FG(q)3139
2757 y FA(2)3178 2743 y FH(\()p FG(V)3266 2757 y FA(2)3306
2743 y FH(\))g(represen)m(t)h(the)300 2969 y(c)m(harges)h(on)f(the)g
(plates)g(of)g(capacitors)h FG(C)1800 2983 y FA(1)1875
2969 y FH(and)f FG(C)2123 2983 y FA(2)2162 2969 y FH(,)i(resp)s(ectiv)m
(ely)-8 b(.)57 b(A)36 b(p)s(ossible)e(w)m(a)m(v)m(eform)j(for)f(the)300
3195 y(no)s(de)27 b(v)m(oltages)j(is)d(sho)m(wn)g(in)g(Fig.)h
(2.4\(b\),)i(where)d FG(V)2117 3209 y FA(1)2157 3195
y FH(\()p FG(t)2225 3210 y FB(k)r Fv(\000)p FA(1)2358
3195 y FH(\))h(and)f FG(V)2648 3209 y FA(2)2688 3195
y FH(\()p FG(t)2756 3210 y FB(k)r Fv(\000)p FA(1)2889
3195 y FH(\))h(are)g(the)g(no)s(de)g(v)m(oltages)h(at)300
3420 y(the)g(time)f(just)g(b)s(efore)g(the)h(switc)m(h)f(closed.)40
b(Note,)31 b(that)e(the)g(no)s(de)f(v)m(oltages)i(and)e(the)h(switc)m
(h)f(curren)m(t)300 3646 y(approac)m(h)38 b(a)g FC(settling)i(state)f
FH(represen)m(ted)e(b)m(y)h FG(V)2026 3613 y FB(s)2006
3669 y FA(1)2063 3646 y FH(,)i FG(V)2201 3613 y FB(s)2181
3669 y FA(2)2238 3646 y FH(,)g FG(V)2376 3613 y FB(s)2356
3669 y FA(3)2450 3646 y FH(and)d FG(I)2681 3613 y FB(s)2674
3669 y(s)2718 3646 y FH(.)63 b(A)m(t)39 b(that)f(state)h(the)f
FC(c)-5 b(ap)g(acitor)300 3872 y(curr)g(ents)33 b(ar)-5
b(e)34 b(zer)-5 b(o)31 b FH(and)f(the)h(no)s(de)e(v)m(oltages)j(are)f
(therefore)g(constan)m(t.)300 4098 y FD(MNA)k(equations)p
300 4129 729 4 v 300 4324 a FH(The)30 b(net)m(w)m(ork,)h(at)g(time)g
FG(t)25 b(>)g(t)1364 4339 y FB(k)r Fv(\000)p FA(1)1496
4324 y FH(,)31 b(can)f(b)s(e)g(represen)m(ted)h(b)m(y)f(a)h(set)f(of)h
(MNA)g(equations;)1016 4566 y Fw(KCL)47 b(eqn.)94 b(at)47
b(node)g(1:)533 b FH(_)-42 b FG(q)2528 4580 y FA(1)2567
4566 y FH(\()p FG(V)2655 4580 y FA(1)2695 4566 y FH(\()p
FG(t)p FH(\)\))21 b(+)f FG(I)2985 4580 y FB(s)3022 4566
y FH(\()p FG(t)p FH(\))26 b(=)82 b(0)1016 4839 y Fw(KCL)47
b(eqn.)94 b(at)47 b(node)g(2:)190 b FH(_)-42 b FG(q)2185
4853 y FA(2)2224 4839 y FH(\()p FG(V)2312 4853 y FA(2)2352
4839 y FH(\()p FG(t)p FH(\)\))21 b Fz(\000)2612 4777
y FG(V)2665 4791 y FA(1)2705 4777 y FH(\()p FG(t)p FH(\))f
Fz(\000)g FG(V)2972 4791 y FA(2)3012 4777 y FH(\()p FG(t)p
FH(\))p 2612 4818 504 4 v 2829 4901 a FG(R)3151 4839
y FH(=)82 b(0)1016 5112 y Fw(KCL)47 b(eqn.)94 b(at)47
b(node)g(3:)269 b Fz(\000)p FG(I)2351 5126 y FB(s)2388
5112 y FH(\()p FG(t)p FH(\))20 b(+)2612 5051 y FG(V)2665
5065 y FA(1)2705 5051 y FH(\()p FG(t)p FH(\))g Fz(\000)g
FG(V)2972 5065 y FA(2)3012 5051 y FH(\()p FG(t)p FH(\))p
2612 5091 V 2829 5174 a FG(R)3151 5112 y FH(=)82 b(0)825
5385 y Fw(Branch)46 b(eqn.)94 b(for)47 b(switch:)650
b FG(V)2675 5399 y FA(1)2715 5385 y FH(\()p FG(t)p FH(\))20
b Fz(\000)g FG(V)2982 5399 y FA(3)3022 5385 y FH(\()p
FG(t)p FH(\))26 b(=)82 b(0)p FG(;)3713 4953 y FH(\(2.2\))p
eop
%%Page: 20 33
20 32 bop 3809 -200 a FH(20)854 1201 y
 19668746 6972867 657817 44797378 20326563 51770245 startTexFig
 854 1201 a
%%BeginDocument: figs/ckt1.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      366 137 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 65 moveto
      160 115 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      135 115 moveto
      186 115 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      135 129 moveto
      151.67 126.33 168.67 126.33
      186 129 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 127 moveto
      160 193 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 87 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      447 90 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      449 158 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      203 64 moveto
      159 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      251 64 moveto
      315 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      203 64 moveto
      251 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 65 moveto
      416 115 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      391 115 moveto
      442 115 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      391 129 moveto
      407.67 126.33 424.67 126.33
      442 129 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 127 moveto
      416 193 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      380 64 moveto
      417 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      380 64 moveto
      367 64 lineto
      363 55 lineto
      357 73 lineto
      353 55 lineto
      346 73 lineto
      340 55 lineto
      335 73 lineto
      328 55 lineto
      323 73 lineto
      319 64 lineto
      308 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 192 moveto
      416 192 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 249 64 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 249 64 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 201 64 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 201 64 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 161 64 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 161 64 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 417 64 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 417 64 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 160 40 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      160 46 moveto (1) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 411 40 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      411 46 moveto (2) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [12 4] 0 setdash
   newpath
      203 64 moveto
      235 40 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      200 40 moveto
      208.67 42.67 214.33 46.17 217.00 50.50 curveto
      219.67 54.83 222.00 64.67
      23 3 atan dup cos 8 mul 224 exch sub
      exch sin 8 mul 80 exch sub curveto
   stroke
grestore
gsave
   newpath
      224 80 8 3 3 23 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      224 95 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      236 105 moveto (k-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      334 50 moveto (R) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      352 131 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      214 137 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      200 131 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      22 89 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      24 158 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      62 97 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      80 87 moveto (\(V  \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      102 97 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      472 87 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      486 97 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      504 87 moveto (\(V  \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      526 97 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 167 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      62 177 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      80 167 moveto (\(V  \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      102 177 moveto (1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      126 87 moveto
      20 19 atan dup cos 8 mul 145 exch sub
      exch sin 8 mul 107 exch sub lineto
   stroke
grestore
gsave
   newpath
      145 107 8 3 19 20 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 157 moveto
      -18 14 atan dup cos 8 mul 142 exch sub
      exch sin 8 mul 139 exch sub lineto
   stroke
grestore
gsave
   newpath
      142 139 8 3 14 -18 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      472 167 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      486 177 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      504 167 moveto (\(V  \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      526 177 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      457 152 moveto
      -17 -28 atan dup cos 8 mul 429 exch sub
      exch sin 8 mul 135 exch sub lineto
   stroke
grestore
gsave
   newpath
      429 135 8 3 -28 -17 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      467 93 moveto
      12 -32 atan dup cos 8 mul 435 exch sub
      exch sin 8 mul 105 exch sub lineto
   stroke
grestore
gsave
   newpath
      435 105 8 3 -32 12 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      206 34 moveto (S) show
   grestore

% OVAL
newpath 289 64 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 289 64 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 291 40 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      291 46 moveto (3) tgifcentertext show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Nov  9 17:32:53 1998
%%EndDocument

 endTexFig
 2042 2310 a FH(\(a\))350 2641 y
 14011515 7762247 394690 43284398 14406205 51046645 startTexFig
 350 2641 a
%%BeginDocument: figs/ckt1b.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      176 223 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      187 229 moveto (k-1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 48 moveto
      144 0 atan dup cos 10 mul exch sin 10 mul rmoveto
      112 192 lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      112 48 10 4 0 -144 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 192 moveto
      0 256 atan dup cos 10 mul 368 exch sub
      exch sin 10 mul 192 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      368 192 10 4 256 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 184 moveto
      186 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 168 moveto
      186 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 88 moveto
      186 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      184 128 moveto
      368 128 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 168 moveto
      202.00 141.33 262.67 128.67
      368 130 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 88 moveto
      202.00 114.67 262.67 127.33
      368 126 curveto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      208 63 moveto (V  \(   \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      219 69 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      248 63 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      296 175 moveto (V  \(   \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      307 181 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      336 175 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      304 103 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      315 109 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      323 93 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      360 103 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      371 109 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      379 93 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      336 103 moveto (=) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      232 72 moveto
      24 -32 atan dup cos 8 mul 200 exch sub
      exch sin 8 mul 96 exch sub lineto
   stroke
grestore
gsave
   newpath
      200 96 8 3 -32 24 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      304 96 moveto
      28 -86 atan dup cos 8 mul 218 exch sub
      exch sin 8 mul 124 exch sub lineto
   stroke
grestore
gsave
   newpath
      218 124 8 3 -86 28 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      296 168 moveto
      -16 -72 atan dup cos 8 mul 224 exch sub
      exch sin 8 mul 152 exch sub lineto
   stroke
grestore
gsave
   newpath
      224 152 8 3 -72 -16 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      368 215 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      96 49 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      16 167 moveto (V  \(        \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      27 173 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      56 167 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      67 173 moveto (k-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      16 95 moveto (V  \(        \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      27 101 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      56 95 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      67 101 moveto (k-1) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Sep 23 14:46:53 1998
%%EndDocument

 endTexFig
 2224 2716 a
 11314462 7170212 526254 44534251 11840716 51704463 startTexFig
 2224 2716 a
%%BeginDocument: figs/ckt1c.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      238 169 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 73 moveto
      64 123 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 123 moveto
      90 123 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 137 moveto
      55.67 134.33 72.67 134.33
      90 137 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 135 moveto
      64 201 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      107 72 moveto
      63 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      155 72 moveto
      203 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      107 72 moveto
      155 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      280 73 moveto
      280 123 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      255 123 moveto
      306 123 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      255 137 moveto
      271.67 134.33 288.67 134.33
      306 137 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      280 135 moveto
      280 201 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      268 72 moveto
      281 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      268 72 moveto
      255 72 lineto
      251 63 lineto
      245 81 lineto
      241 63 lineto
      234 81 lineto
      228 63 lineto
      223 81 lineto
      216 63 lineto
      211 81 lineto
      207 72 lineto
      196 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 200 moveto
      280 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 145 72 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 145 72 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 105 72 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 105 72 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 65 72 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 65 72 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 281 72 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 281 72 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 64 48 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      64 54 moveto (1) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 275 48 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      275 54 moveto (2) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      230 58 moveto (R) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      224 163 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      94 169 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      80 163 moveto (C) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      50 130 moveto
      164.67 130.00 236.17 130.17 264.50 130.50 curveto
      292.83 130.83 306.67 131.00 306.00 131.00 curveto
      305.33 131.00 305.50 130.50 306.50 129.50 curveto
      307.50 128.50 308.83 127.33 310.50 126.00 curveto
      312.17 124.67 313.83 122.17 315.50 118.50 curveto
      317.17 114.83 317.83 111.67 317.50 109.00 curveto
      317.17 106.33 316.83 100.50 316.50 91.50 curveto
      316.17 82.50 315.67 74.67 315.00 68.00 curveto
      314.33 61.33 312.50 53.17 309.50 43.50 curveto
      306.50 33.83 303.83 27.33 301.50 24.00 curveto
      299.17 20.67 291.50 17.83 278.50 15.50 curveto
      265.50 13.17 253.67 12.17 243.00 12.50 curveto
      232.33 12.83 215.50 13.50 192.50 14.50 curveto
      169.50 15.50 151.83 16.17 139.50 16.50 curveto
      127.17 16.83 112.17 17.17 94.50 17.50 curveto
      76.83 17.83 65.17 18.17 59.50 18.50 curveto
      53.83 18.83 47.50 21.50 40.50 26.50 curveto
      33.50 31.50 29.00 36.50 27.00 41.50 curveto
      25.00 46.50 23.17 53.50 21.50 62.50 curveto
      19.83 71.50 18.83 78.00 18.50 82.00 curveto
      18.17 86.00 18.83 91.50 20.50 98.50 curveto
      22.17 105.50 23.83 110.67 25.50 114.00 curveto
      27.17 117.33 29.50 120.83 32.50 124.50 curveto
      35.50 128.17 40.33 130.00
      47 130 curveto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% OVAL
newpath 185 72 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 185 72 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 184 48 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      184 54 moveto (3) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      118 58 moveto (S) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Nov  9 17:38:05 1998
%%EndDocument

 endTexFig
 1177 3850 a FH(\(b\))1588 b(\(c\))600 4078 y(Figure)32
b(2.4:)47 b(a\))34 b(Circuit)c(with)i(c)m(harge)i(redistribution.)45
b(b\))32 b(P)m(ossible)g(w)m(a)m(v)m(eform)i(for)600
4191 y(no)s(de)c(v)m(oltages.)42 b(c\))31 b(Charge)f(surface.)p
eop
%%Page: 21 34
21 33 bop 3809 -200 a FH(21)300 99 y(where)56 b(_)-42
b FG(q)42 b FH(represen)m(ts)d(the)g(deriv)-5 b(ativ)m(e)39
b(of)g FG(q)j FH(with)c(resp)s(ect)h(to)h(time.)67 b(Note,)43
b(that)d(\(2.2\))h(is)d(a)i(set)g(of)300 324 y(di\013eren)m
(tial-algebraic)d(equations)h(\(D)m(AE's\),)k(where)c(the)h(no)s(de)e
(v)m(oltages)j(and)e(the)g(switc)m(h)g(curren)m(t)300
550 y FG(I)340 564 y FB(s)377 550 y FH(\()p FG(t)p FH(\))d(are)g(the)h
(unkno)m(wns.)52 b(In)35 b(order)f(to)i(obtain)e(the)h(no)s(de)f(v)m
(oltage)j(w)m(a)m(v)m(eforms)f(it)f(is)f(necessary)h(to)300
776 y(\014rst)g(compute)h(the)f(initial)e(conditions)h(at)i
FG(t)1885 738 y FA(+)1885 804 y FB(k)r Fv(\000)p FA(1)2053
776 y FH(\(whic)m(h)f(is)g(trivial)e(in)h(this)h(simple)e(case\))k(and)
e(then)300 1002 y(solv)m(e)25 b(the)g(D)m(AE's)h(in)d(\(2.2\).)41
b(In)24 b(general,)i(\014nding)d(the)i(initial)d(conditions)h(is)h(not)
h(trivial)d(and)j(is)e(kno)m(wn)300 1228 y(as)31 b(the)f(inconsisten)m
(t)g(initial)d(conditions)i(problem)g([13)q(].)300 1453
y FD(Charge)34 b(conserv)-6 b(ation)37 b(equations)p
300 1484 1400 4 v 300 1679 a FH(The)27 b(CS/MNA)g(represen)m(tation)g
(of)g(the)h(net)m(w)m(ork)g(is)e(based)h(on)g(the)g(concept)h(of)f(c)m
(harge)i(conserv)-5 b(ation)300 1905 y(in)31 b(a)i FC(char)-5
b(ge)36 b(surfac)-5 b(e)35 b FH([32)r(].)47 b(In)32 b(this)g(example,)h
(a)g(c)m(harge)h(surface)f(is)e(formed)i(b)m(y)f(capacitors)i
FG(C)3682 1919 y FA(1)3754 1905 y FH(and)300 2131 y FG(C)365
2145 y FA(2)435 2131 y FH(and)29 b(is)h(sho)m(wn)g(b)m(y)g(the)g
(dashed)g(line)f(in)g(Fig.)h(2.4\(c\).)536 2357 y(Charge)j(cannot)g(en)
m(ter)g(or)f(lea)m(v)m(e)i(the)e(c)m(harge)i(surface,)f(therefore,)g
(the)g(total)g(c)m(harge)h(inside)c(is)300 2583 y(constan)m(t.)46
b(Since)30 b(c)m(harge)j(can)f(only)f(b)s(e)g(stored)g(on)h(the)g
(plates)f(of)h(the)g(capacitors,)g(the)g(total)h(c)m(harge)300
2808 y(is)1589 3034 y FG(Q)25 b FH(=)g FG(q)1823 3048
y FA(1)1862 3034 y FH(\()p FG(V)1950 3048 y FA(1)1989
3034 y FH(\()p FG(t)p FH(\)\))d(+)d FG(q)2280 3048 y
FA(2)2319 3034 y FH(\()p FG(V)2407 3048 y FA(2)2447 3034
y FH(\()p FG(t)p FH(\)\))p FG(:)1103 b FH(\(2.3\))300
3314 y(The)27 b(actual)h(v)-5 b(alue)27 b(for)g(total)h(c)m(harge)h
(that)f(is)e(trapp)s(ed)g(inside)f(is)i(determined)f(b)m(y)h(the)h(c)m
(harges)g(on)g(the)300 3540 y(capacitor)j(plates)f(at)h(the)g(time)f
(when)f(the)i(surface)f(is)g(formed)g({)g FC(i.e.)40
b FG(t)2804 3555 y FB(k)r Fv(\000)p FA(1)2937 3540 y
FH(.)g(Therefore,)1456 3857 y FG(Q)25 b FH(=)g FG(q)1690
3871 y FA(1)1729 3857 y FH(\()p FG(V)1817 3871 y FA(1)1857
3857 y FH(\()p FG(t)1925 3872 y FB(k)r Fv(\000)p FA(1)2058
3857 y FH(\)\))c(+)e FG(q)2280 3871 y FA(2)2319 3857
y FH(\()p FG(V)2407 3871 y FA(2)2447 3857 y FH(\()p FG(t)2515
3872 y FB(k)r Fv(\000)p FA(1)2648 3857 y FH(\)\))p FG(:)970
b FH(\(2.4\))300 4174 y(Com)m(bining)28 b(\(2.3\))k(and)e(\(2.4\))i
(results)d(in)g(the)i(c)m(harge)h(conserv)-5 b(ation)30
b(equation;)770 4491 y FG(q)811 4505 y FA(1)850 4491
y FH(\()p FG(V)938 4505 y FA(1)978 4491 y FH(\()p FG(t)p
FH(\)\))21 b(+)f FG(q)1269 4505 y FA(2)1308 4491 y FH(\()p
FG(V)1396 4505 y FA(2)1436 4491 y FH(\()p FG(t)p FH(\)\))26
b(=)f FG(q)1737 4505 y FA(1)1776 4491 y FH(\()p FG(V)1864
4505 y FA(1)1904 4491 y FH(\()p FG(t)1972 4506 y FB(k)r
Fv(\000)p FA(1)2105 4491 y FH(\)\))c(+)f FG(q)2328 4505
y FA(2)2367 4491 y FH(\()p FG(V)2455 4505 y FA(2)2494
4491 y FH(\()p FG(t)2562 4506 y FB(k)r Fv(\000)p FA(1)2695
4491 y FH(\)\))274 b(for)30 b FG(t)25 b Fz(2)g FG(I)3362
4506 y FB(k)3405 4491 y FG(:)283 b FH(\(2.5\))300 4808
y FD(Relationship)36 b(b)s(et)m(w)m(een)e(c)m(harge)h(conserv)-6
b(ation)36 b(and)f(K)m(CL)p 300 4839 2370 4 v 300 5034
a FH(The)27 b(c)m(harge)i(conserv)-5 b(ation)28 b(prop)s(ert)m(y)f(of)h
(a)g(c)m(harge)h(surface)e(is)g(really)g(a)h(v)-5 b(ariation)27
b(of)g(the)h(generalized)300 5260 y(K)m(CL)38 b(in)f(the)i(c)m(harge)h
(domain.)63 b(If)38 b(the)h(K)m(CL)f(equations)g(for)h(all)e(of)i(the)f
(no)s(des)g(inside)e(the)j(c)m(harge)p eop
%%Page: 22 35
22 34 bop 3809 -200 a FH(22)300 99 y(surface)30 b(are)h(added)f({)h(in)
e(this)g(case)i(the)g(three)f(K)m(CL)g(equations)g(in)g(\(2.2\))i({)e
(the)h(result)e(is:)1631 416 y(_)-42 b FG(q)1655 430
y FA(1)1694 416 y FH(\()p FG(V)1782 430 y FA(1)1822 416
y FH(\()p FG(t)p FH(\)\))21 b(+)37 b(_)-42 b FG(q)2113
430 y FA(2)2152 416 y FH(\()p FG(V)2240 430 y FA(2)2280
416 y FH(\()p FG(t)p FH(\)\))26 b(=)f(0)1128 b(\(2.6\))300
733 y(This)38 b(is)h(the)i(generalized)e(K)m(CL)h(equation)g(for)f(the)
i(cutset)g(of)f(capacitors)g FG(C)3086 747 y FA(1)3166
733 y FH(and)f FG(C)3417 747 y FA(2)3457 733 y FH(.)69
b(In)m(tegrat-)300 959 y(ing)30 b(\(2.6\))i(with)d(resp)s(ect)h(to)h
(time)f(from)g FG(t)1753 920 y FA(+)1753 987 y FB(k)r
Fv(\000)p FA(1)1916 959 y FH(to)h FG(t)f FH(results)g(in:)1276
1136 y Ft(Z)1359 1163 y FB(t)1322 1325 y(t)1347 1295
y Fs(+)1347 1350 y Fu(k)q Fr(\000)p Fs(1)1484 1132 y
Ft(\024)1562 1190 y FG(d)p 1537 1230 98 4 v 1537 1314
a(d\034)1645 1251 y(q)1686 1265 y FA(1)1725 1251 y FH(\()p
FG(V)1813 1265 y FA(1)1852 1251 y FH(\()p FG(\034)10
b FH(\)\))22 b(+)2155 1190 y FG(d)p 2130 1230 V 2130
1314 a(d\034)2237 1251 y(q)2278 1265 y FA(2)2317 1251
y FH(\()p FG(V)2405 1265 y FA(2)2445 1251 y FH(\()p FG(\034)10
b FH(\)\))26 b(=)f(0)2767 1132 y Ft(\025)2827 1251 y
FG(d\034)2059 1515 y FH(or)1102 1741 y FG(q)1143 1755
y FA(1)1182 1741 y FH(\()p FG(V)1270 1755 y FA(1)1310
1741 y FH(\()p FG(t)p FH(\)\))c(+)f FG(q)1601 1755 y
FA(2)1640 1741 y FH(\()p FG(V)1728 1755 y FA(2)1768 1741
y FH(\()p FG(t)p FH(\)\))26 b(=)f FG(q)2069 1755 y FA(1)2108
1741 y FH(\()p FG(V)2196 1755 y FA(1)2236 1741 y FH(\()p
FG(t)2304 1703 y FA(+)2304 1769 y FB(k)r Fv(\000)p FA(1)2437
1741 y FH(\)\))c(+)e FG(q)2659 1755 y FA(2)2698 1741
y FH(\()p FG(V)2786 1755 y FA(2)2826 1741 y FH(\()p FG(t)2894
1703 y FA(+)2894 1769 y FB(k)r Fv(\000)p FA(1)3027 1741
y FH(\)\))3713 1474 y(\(2.7\))300 1987 y(The)39 b(reason)g(for)g
(starting)g(the)g(in)m(tegration)h(with)e FG(t)2170 1948
y FA(+)2170 2015 y FB(k)r Fv(\000)p FA(1)2341 1987 y
FH(is)h(b)s(ecause)g(\(2.6\))i(is)d(only)g(v)-5 b(alid)38
b(after)i(the)300 2212 y(switc)m(hing)h(instan)m(t)h
FG(t)1065 2227 y FB(k)r Fv(\000)p FA(1)1198 2212 y FH(.)76
b(Ho)m(w)m(ev)m(er,)47 b(b)s(oth)42 b(sides)f(of)h(the)h(equalit)m(y)f
(in)f(\(2.7\))j(represen)m(t)e(the)g FC(total)300 2438
y(char)-5 b(ge)34 b(inside)e(the)h(surfac)-5 b(e)p FH(,)32
b(therefore,)f(\(2.4\))h(can)f(b)s(e)e(used)h(to)h(rewrite)f(\(2.7\))i
(as)1102 2755 y FG(q)1143 2769 y FA(1)1182 2755 y FH(\()p
FG(V)1270 2769 y FA(1)1310 2755 y FH(\()p FG(t)p FH(\)\))21
b(+)f FG(q)1601 2769 y FA(2)1640 2755 y FH(\()p FG(V)1728
2769 y FA(2)1768 2755 y FH(\()p FG(t)p FH(\)\))26 b(=)f
FG(q)2069 2769 y FA(1)2108 2755 y FH(\()p FG(V)2196 2769
y FA(1)2236 2755 y FH(\()p FG(t)2304 2770 y FB(k)r Fv(\000)p
FA(1)2437 2755 y FH(\)\))c(+)e FG(q)2659 2769 y FA(2)2698
2755 y FH(\()p FG(V)2786 2769 y FA(2)2826 2755 y FH(\()p
FG(t)2894 2770 y FB(k)r Fv(\000)p FA(1)3027 2755 y FH(\)\))616
b(\(2.8\))300 3072 y(whic)m(h)29 b(is)h(exactly)h(the)f(c)m(harge)i
(conserv)-5 b(ation)30 b(equation)h(in)e(\(2.5\).)300
3298 y FD(CS/MNA)35 b(equations)p 300 3334 915 4 v 300
3524 a FH(Note,)e(that)e(only)f(summation)g(and)g(in)m(tegration)h(op)s
(erators)g(w)m(ere)g(used)f(to)i(deriv)m(e)e(\(2.8\))j(from)d(\(2.2\).)
300 3750 y(Hence,)35 b FC(the)h(char)-5 b(ge)37 b(c)-5
b(onservation)37 b(e)-5 b(quation)37 b(is)e(a)h(line)-5
b(ar)37 b(c)-5 b(ombination)37 b(of)f(the)g(K)n(CL)f(e)-5
b(quations)36 b(for)300 3976 y(the)i(no)-5 b(des)39 b(inside)e(the)h
(char)-5 b(ge)39 b(surfac)-5 b(e)p FH(.)57 b(If)35 b(an)m(y)h(one)g(of)
g(the)g(K)m(CL)f(equations)h(in)e(\(2.2\))k(is)c(replaced)300
4202 y(b)m(y)i(the)g(c)m(harge)i(conserv)-5 b(ation)36
b(equation)g(\(2.5\),)k(a)c(new)g(set)h(of)f(linearly)e(indep)s(enden)m
(t)g(equations)i(is)300 4427 y(obtained,)d(whic)m(h)f(is)g(a)h(v)-5
b(alid)32 b(represen)m(tation)h(of)g(the)g(net)m(w)m(ork.)50
b(Replacing)32 b(the)h(K)m(CL)f(equation)h(for)300 4653
y(no)s(de)c(1)h(in)e(\(2.2\))k(b)m(y)d(\(2.5\))i(results)e(in)f(the)i
(CS/MNA)g(represen)m(tation)f(of)h(the)g(circuit)e(in)h(Fig.)g
(2.4\(a\):)p eop
%%Page: 23 36
23 35 bop 3809 -200 a FH(23)442 356 y Fw(Charge)46 b(eqn.:)688
b FG(q)1745 370 y FA(1)1784 356 y FH(\()p FG(V)1872 370
y FA(1)1912 356 y FH(\()p FG(t)p FH(\)\))21 b(+)f FG(q)2203
370 y FA(2)2242 356 y FH(\()p FG(V)2330 370 y FA(2)2370
356 y FH(\()p FG(t)p FH(\)\))83 b(=)25 b FG(q)2728 370
y FA(1)2767 356 y FH(\()p FG(V)2855 370 y FA(1)2895 356
y FH(\()p FG(t)2963 371 y FB(k)r Fv(\000)p FA(1)3096
356 y FH(\)\))c(+)f FG(q)3319 370 y FA(2)3358 356 y FH(\()p
FG(V)3446 370 y FA(2)3486 356 y FH(\()p FG(t)3554 371
y FB(k)r Fv(\000)p FA(1)3687 356 y FH(\)\))442 629 y
Fw(KCL)47 b(eqn.)95 b(2:)194 b FH(_)-41 b FG(q)1235 643
y FA(2)1274 629 y FH(\()p FG(V)1362 643 y FA(2)1401 629
y FH(\()p FG(t)p FH(\)\))376 b Fz(\000)1996 568 y FG(V)2049
582 y FA(1)2088 568 y FH(\()p FG(t)p FH(\))21 b Fz(\000)e
FG(V)2355 582 y FA(2)2395 568 y FH(\()p FG(t)p FH(\))p
1996 608 504 4 v 2212 692 a FG(R)2591 629 y FH(=)25 b(0)442
902 y Fw(KCL)47 b(eqn.)95 b(3:)607 b Fz(\000)p FG(I)1734
916 y FB(s)1771 902 y FH(\()p FG(t)p FH(\))20 b(+)1995
841 y FG(V)2048 855 y FA(1)2088 841 y FH(\()p FG(t)p
FH(\))h Fz(\000)e FG(V)2355 855 y FA(2)2395 841 y FH(\()p
FG(t)p FH(\))p 1995 881 V 2212 965 a FG(R)2591 902 y
FH(=)25 b(0)442 1175 y Fw(switch)46 b(eqn.:)989 b FG(V)2058
1189 y FA(1)2098 1175 y FH(\()p FG(t)p FH(\))21 b Fz(\000)e
FG(V)2365 1189 y FA(3)2405 1175 y FH(\()p FG(t)p FH(\))83
b(=)25 b(0)3713 1320 y(\(2.9\))536 1545 y(Note,)34 b(that)e(in)e(the)i
(CS/MNA)g(equations,)g(the)g(elemen)m(ts)g(are)g(mo)s(deled)e(the)i
(same)g(w)m(a)m(y)g(as)g(in)300 1771 y(the)c(MNA)g(equations)f({)h(the)
f(capacitors)h(b)m(y)g(the)f(c)m(harge-v)m(oltage)k(relationship)25
b(and)i(the)g(resistors)g(b)m(y)300 1997 y(the)k(curren)m(t-v)m(oltage)
h(relationship.)300 2223 y FD(Direct)j(computation)g(of)g(the)f
(settling)h(state)p 300 2254 1827 4 v 300 2449 a FH(Just)41
b(lik)m(e)f(with)g(the)i(MNA)g(equations,)i(in)c(order)g(to)j(obtain)d
(the)i(no)s(de)e(v)m(oltage)j(w)m(a)m(v)m(eforms)g(it)e(is)300
2675 y(necessary)31 b(to)g(\014rst)e(compute)i(the)f(initial)e
(conditions)h(at)i FG(t)2368 2636 y FA(+)2368 2703 y
FB(k)r Fv(\000)p FA(1)2531 2675 y FH(and)e(then)h(solv)m(e)h(the)g(D)m
(AE's)g(in)e(\(2.9\).)300 2900 y(The)37 b(adv)-5 b(an)m(tage)39
b(of)f(the)f(CS/MNA)h(represen)m(tation)f(ho)m(w)m(ev)m(er,)k(is)36
b(that)i(it)f(can)h(b)s(e)f(used)f(for)h(direct)300 3126
y(computation)g(of)g(the)h(settling)e(state)j FG(V)1744
3093 y FB(s)1724 3149 y FA(1)1781 3126 y FH(,)g FG(V)1918
3093 y FB(s)1898 3149 y FA(2)1955 3126 y FH(,)g FG(V)2092
3093 y FB(s)2072 3149 y FA(3)2129 3126 y FH(,)f(and)f
FG(I)2423 3093 y FB(s)2416 3149 y(s)2460 3126 y FH(.)61
b(A)37 b(prop)s(ert)m(y)f(of)i(the)f(net)m(w)m(ork)h(at)g(the)300
3352 y(settling)27 b(state)j(is)d(that)i(the)f(capacitor)h(curren)m(ts)
e(are)i(zero.)41 b(Setting)27 b(the)i(capacitor)f(curren)m(ts)g(to)h
(zero,)300 3578 y FC(i.e.)57 b FH(_)-42 b FG(q)507 3592
y FA(2)546 3578 y FH(\()p FG(V)654 3545 y FB(s)634 3601
y FA(2)691 3578 y FH(\))26 b(=)f(0,)31 b(in)e(\(2.9\))j(results)d(in)g
(a)i(set)g(of)f(algebraic)h(equations)862 3859 y Fw(Charge)46
b(eqn.:)172 b FG(q)1649 3873 y FA(1)1689 3859 y FH(\()p
FG(V)1797 3826 y FB(s)1777 3882 y FA(1)1834 3859 y FH(\))20
b(+)g FG(q)2021 3873 y FA(2)2060 3859 y FH(\()p FG(V)2169
3826 y FB(s)2148 3882 y FA(2)2206 3859 y FH(\))83 b(=)25
b FG(q)2461 3873 y FA(1)2500 3859 y FH(\()p FG(V)2588
3873 y FA(1)2628 3859 y FH(\()p FG(t)2696 3820 y Fv(\000)2696
3887 y FB(k)2755 3859 y FH(\)\))c(+)f FG(q)2978 3873
y FA(2)3017 3859 y FH(\()p FG(V)3105 3873 y FA(2)3145
3859 y FH(\()p FG(t)3213 3820 y Fv(\000)3213 3887 y FB(k)3272
3859 y FH(\)\))857 4132 y Fw(KCL)47 b(eqn.)95 b(2:)283
b Fz(\000)1795 4070 y FG(V)1868 4037 y FB(s)1848 4093
y FA(1)1925 4070 y Fz(\000)20 b FG(V)2089 4037 y FB(s)2069
4093 y FA(2)p 1795 4111 332 4 v 1925 4194 a FG(R)2324
4132 y FH(=)25 b(0)857 4405 y Fw(KCL)47 b(eqn.)95 b(3:)185
b Fz(\000)p FG(I)1734 4372 y FB(s)1727 4427 y(s)1791
4405 y FH(+)1892 4343 y FG(V)1965 4310 y FB(s)1945 4366
y FA(1)2022 4343 y Fz(\000)20 b FG(V)2186 4310 y FB(s)2166
4366 y FA(2)p 1892 4384 V 2023 4467 a FG(R)2324 4405
y FH(=)25 b(0)857 4678 y Fw(switch)46 b(eqn.:)328 b FG(V)1832
4645 y FB(s)1812 4701 y FA(1)1889 4678 y Fz(\000)20 b
FG(V)2054 4645 y FB(s)2033 4701 y FA(3)2324 4678 y FH(=)25
b(0)3668 4246 y(\(2.10\))300 4913 y(The)h(set)h(of)f(equations)h(in)e
(\(2.10\))j(ma)m(y)f(b)s(e)f(solv)m(ed)g(b)m(y)h(Newton)g(iteration.)39
b(There)25 b(is)h(no)g(need)g(to)i(solv)m(e)300 5139
y(di\013eren)m(tial)h(equations)h(or)g(compute)h(initial)d(conditions)g
(at)k FG(t)2484 5101 y FA(+)2484 5167 y FB(k)r Fv(\000)p
FA(1)2616 5139 y FH(.)536 5365 y(Note,)44 b(that)d(setting)f(the)g
(capacitor)h(curren)m(ts)e(to)i(zero)g(in)e(the)h(MNA)g(equations)g
(\(2.2\),)45 b FC(i.e.)p eop
%%Page: 24 37
24 36 bop 3809 -200 a FH(24)317 99 y(_)-42 b FG(q)341
113 y FA(1)380 99 y FH(\()p FG(V)489 66 y FB(s)468 122
y FA(1)525 99 y FH(\))35 b(=)f(0)j(and)52 b(_)-42 b FG(q)1005
113 y FA(2)1044 99 y FH(\()p FG(V)1152 66 y FB(s)1132
122 y FA(2)1189 99 y FH(\))35 b(=)f(0,)k(results)d(in)f(an)i
(incomplete)f(description)f(of)i(the)g(net)m(w)m(ork)h(\(linearly)300
324 y(dep)s(enden)m(t)25 b(equations\))h(and)f(the)h(settling)f(state)j
(cannot)e(b)s(e)f(obtained.)39 b(In)25 b(the)h(CS/MNA)g(equations)300
550 y(ho)m(w)m(ev)m(er,)j(the)e(c)m(harge)h(conserv)-5
b(ation)27 b(equation)f(pro)m(vides)g(the)h(information)e(ab)s(out)h
(the)h(c)m(harge)h(redis-)300 776 y(tribution)e(b)s(et)m(w)m(een)j(the)
f(capacitors)h(whic)m(h)d(mak)m(es)j(it)f(p)s(ossible)e(to)j(determine)
e(the)h(no)s(de)f(v)m(oltages)j(at)300 1002 y(the)h(settling)e(state.)
536 1228 y(Also,)41 b(note)e(from)g(\(2.10\),)k(that)c(the)g(settling)f
(state)i(is)e(indep)s(enden)m(t)e(of)j(the)g(resistor)f(v)-5
b(alue,)300 1453 y(since)31 b(at)h(that)g(state,)i(the)d(curren)m(t)h
(through)f(the)g(resistor)g(is)g(zero.)45 b(The)31 b(settling)g(state)i
(of)e(this)g(t)m(yp)s(e)300 1679 y(of)k(net)m(w)m(ork)i(can)e(also)g(b)
s(e)g(obtained)g(b)m(y)g(omitting)g(the)g(resistor)g(from)g(the)g(net)m
(w)m(ork)h(and)f(using)f(the)300 1905 y(form)m(ulation)40
b(in)f([36)q(,)i(39)q(,)g(40)q(,)g(41)q(],)i(where)d(the)h(net)m(w)m
(ork)h(elemen)m(ts)f(are)g(restricted)g(to)g(capacitors,)300
2131 y(switc)m(hes,)29 b(V)m(CVS's)g(and)f(indep)s(enden)m(t)e(v)m
(oltage)31 b(sources.)40 b(Ho)m(w)m(ev)m(er,)31 b(the)e(CS/MNA)g(can)g
(b)s(e)f(applied)300 2357 y(to)d(a)f(more)g(general)h(top)s(ology)f
(where)g(the)g(settling)f(state)j(is)d(dep)s(enden)m(t)g(on)h(the)g
(\\resistiv)m(e")g(elemen)m(ts.)300 2583 y(This)29 b(case)i(will)d(b)s
(e)h(illustrated)g(in)g(the)h(next)h(example.)300 2826
y Fx(2.2.2)112 b(Curren)m(t-conducting)37 b(resistor)300
3110 y FH(The)42 b(second)g(t)m(yp)s(e)g(of)g(pro)s(cess)g(b)m(y)g
(whic)m(h)f(a)h(net)m(w)m(ork)h(settles)g(is)e(illustrated)f(b)m(y)i
(the)g(net)m(w)m(ork)h(in)300 3336 y(Fig.)32 b(2.5\(a\).)49
b(The)32 b(switc)m(h)g(closes)g(at)h(the)f(switc)m(hing)f(instan)m(t)h
FG(t)2534 3351 y FB(k)r Fv(\000)p FA(1)2667 3336 y FH(.)46
b(Let)33 b FG(V)2956 3350 y FA(1)2995 3336 y FH(\()p
FG(t)p FH(\))g(and)f FG(V)3363 3350 y FA(2)3402 3336
y FH(\()p FG(t)p FH(\))h(represen)m(t)300 3562 y(the)d(no)s(de)g(v)m
(oltages)i(at)f(no)s(de)e(1)i(and)e(2)i(resp)s(ectiv)m(ely)-8
b(,)30 b(and)f Fz(\006)p FG(q)s FH(\()p FG(V)2575 3576
y FA(2)2615 3562 y FH(\))h(b)s(e)g(the)g(c)m(harges)h(on)f(the)h
(plates)f(of)300 3788 y(capacitor)h FG(C)7 b FH(.)40
b(The)30 b(w)m(a)m(v)m(eforms)i(for)e(the)h(no)s(de)e(v)m(oltages)j
(are)f(sho)m(wn)f(in)f(Fig.)h(2.5\(b\).)536 4014 y(Let)38
b FG(V)759 4028 y FA(2)798 4014 y FH(\()p FG(t)866 4029
y FB(k)r Fv(\000)p FA(1)999 4014 y FH(\))f(=)g(2V,)h
FG(I)1395 4028 y FB(sr)r(c)1532 4014 y FH(=)f(3A)h(and)e
FG(R)h FH(=)g(1\012.)61 b(This)35 b(mak)m(es)j FG(V)2932
4028 y FA(1)2972 4014 y FH(\()p FG(t)3040 4029 y FB(k)r
Fv(\000)p FA(1)3173 4014 y FH(\))26 b(=)f(3V.)61 b(After)38
b(the)300 4240 y(switc)m(h)30 b(closes,)h FG(V)913 4254
y FA(1)953 4240 y FH(\()p FG(t)p FH(\))26 b(=)g FG(V)1232
4254 y FA(2)1272 4240 y FH(\()p FG(t)p FH(\))31 b(and)f
FG(V)1636 4254 y FA(1)1675 4240 y FH(\()p FG(t)1743 4201
y FA(+)1743 4268 y FB(k)r Fv(\000)p FA(1)1876 4240 y
FH(\))d(=)e FG(V)2087 4254 y FA(2)2127 4240 y FH(\()p
FG(t)2195 4201 y FA(+)2195 4268 y FB(k)r Fv(\000)p FA(1)2328
4240 y FH(\))h(=)g(2V.)31 b(Note)h(that)g FG(V)3126 4254
y FA(1)3165 4240 y FH(\()p FG(t)p FH(\))f(is)f(di\013eren)m(t)h(just)
300 4465 y(b)s(efore)f(and)g(just)g(after)g(the)h(switc)m(hing)e
(instan)m(t.)536 4691 y(Some)36 b(time)e(after)i(the)g(switc)m(hing)e
(instan)m(t,)i(the)f(net)m(w)m(ork)i(approac)m(hes)e(a)h(settling)f
(state)h(rep-)300 4917 y(resen)m(ted)c(b)m(y)f FG(V)859
4884 y FB(s)838 4940 y FA(1)927 4917 y FH(and)g FG(V)1178
4884 y FB(s)1158 4940 y FA(2)1215 4917 y FH(.)44 b(Just)31
b(lik)m(e)g(in)f(the)i(previous)e(example,)i(the)g(capacitor)g(curren)m
(t)f(is)g(zero)h(at)300 5143 y(the)f(settling)e(state)j(and)e(the)g
(curren)m(ts)g(and)g(v)m(oltages)i(are)f(constan)m(t.)p
eop
%%Page: 25 38
25 37 bop 3809 -200 a FH(25)350 7 y
 11446026 8551629 526254 43350179 11972280 51901808 startTexFig
 350 7 a
%%BeginDocument: figs/ckt2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 105 moveto
      112 155 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      87 155 moveto
      138 155 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      87 169 moveto
      103.67 166.33 120.67 166.33
      138 169 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 167 moveto
      112 233 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      32 137 moveto (q) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      155 104 moveto
      111 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      155 104 moveto
      203 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 232 moveto
      224 232 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 201 104 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 201 104 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 153 104 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 153 104 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 113 104 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 113 104 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 225 104 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 225 104 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 256 104 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      256 110 moveto (1) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 99 88 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      99 94 moveto (2) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [12 4] 0 setdash
   newpath
      155 104 moveto
      187 80 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      152 80 moveto
      160.67 82.67 166.33 86.17 169.00 90.50 curveto
      171.67 94.83 174.00 104.67
      23 3 atan dup cos 8 mul 176 exch sub
      exch sin 8 mul 120 exch sub curveto
   stroke
grestore
gsave
   newpath
      176 120 8 3 3 23 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      176 135 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      184 142 moveto (k-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      246 164 moveto (R=1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      144 171 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      19 136 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      22 186 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      48 137 moveto (\(V  \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      64 142 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 104 moveto
      224 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 101 moveto
      224 125 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 198 moveto
      224 233 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 198 moveto
      224 185 lineto
      233 181 lineto
      215 175 lineto
      233 171 lineto
      215 164 lineto
      233 158 lineto
      215 153 lineto
      233 146 lineto
      215 141 lineto
      224 137 lineto
      224 123 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 224 56 16 16 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 48 moveto
      16 0 atan dup cos 10 mul 224 exch sub
      exch sin 10 mul 64 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      224 64 10 4 0 16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 104 moveto
      224 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 40 moveto
      224 8 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 8 moveto
      232 8 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      285 165 moveto (W) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      254 60 moveto (I      =3) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      307 61 moveto (A) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      20 53 moveto (V  \(       \) = 2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      31 62 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      47 53 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      54 58 moveto (k-1) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      117 54 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      262 66 moveto (src) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      32 193 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      48 193 moveto (\(V  \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      64 198 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      83 132 moveto
      12 14 atan dup cos 8 mul 97 exch sub
      exch sin 8 mul 144 exch sub lineto
   stroke
grestore
gsave
   newpath
      97 144 8 3 14 12 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      81 188 moveto
      -15 17 atan dup cos 8 mul 98 exch sub
      exch sin 8 mul 173 exch sub lineto
   stroke
grestore
gsave
   newpath
      98 173 8 3 17 -15 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Nov 13 11:32:22 1998
%%EndDocument

 endTexFig
 1899 174 a
 14077297 7235994 65781 44731596 14143078 51967590 startTexFig
 1899 174 a
%%BeginDocument: figs/ckt2b.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      151 186 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      161 190 moveto (k-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      191 25 moveto (V  \(   \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      201 29 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      219 25 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      87 105 moveto (V  \(   \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      97 109 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      116 105 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      295 33 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      305 37 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      311 21 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      351 33 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      361 37 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      367 21 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      327 33 moveto (=) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      191 32 moveto
      24 -24 atan dup cos 8 mul 167 exch sub
      exch sin 8 mul 56 exch sub lineto
   stroke
grestore
gsave
   newpath
      167 56 8 3 -24 24 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      295 40 moveto
      20 -22 atan dup cos 8 mul 273 exch sub
      exch sin 8 mul 60 exch sub lineto
   stroke
grestore
gsave
   newpath
      273 60 8 3 -22 20 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      87 120 moveto
      16 -16 atan dup cos 8 mul 71 exch sub
      exch sin 8 mul 136 exch sub lineto
   stroke
grestore
gsave
   newpath
      71 136 8 3 -16 16 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      367 185 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      23 31 moveto (V) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      6 66 moveto (3V) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      6 146 moveto (2V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 24 moveto
      144 0 atan dup cos 10 mul exch sin 10 mul rmoveto
      39 168 lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      39 24 10 4 0 -144 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 168 moveto
      0 341 atan dup cos 10 mul 380 exch sub
      exch sin 10 mul 168 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      380 168 10 4 341 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      162 160 moveto
      162 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 144 moveto
      162 144 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 64 moveto
      162 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      234 64 moveto
      380 64 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      162 144 moveto
      162.00 90.67 231.00 64.67
      369 66 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      161 64 moveto
      161 144 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Oct  1 11:39:47 1998
%%EndDocument

 endTexFig
 1017 1316 a FH(\(a\))1599 b(\(b\))615 1544 y(Figure)37
b(2.5:)54 b(a\))38 b(Circuit)d(with)h(curren)m(t-conducting)g
(resistor.)60 b(b\))36 b(W)-8 b(a)m(v)m(eforms)39 b(for)615
1656 y(no)s(de)30 b(v)m(oltages.)536 1932 y(The)g(MNA)h(represen)m
(tation)g(of)f(the)h(net)m(w)m(ork)g(for)f FG(t)25 b(>)g(t)2500
1947 y FB(k)r Fv(\000)p FA(1)2663 1932 y FH(is)1104 2211
y(K)m(CL)30 b(eqn.)40 b(at)31 b(no)s(de)f(1)h(and)f(2:)100
b(_)-42 b FG(q)s FH(\()p FG(V)2398 2225 y FA(2)2438 2211
y FH(\()p FG(t)p FH(\)\))21 b(+)2698 2167 y FB(V)2739
2176 y Fs(1)2774 2167 y FA(\()p FB(t)p FA(\))p 2698 2190
157 4 v 2749 2242 a FB(R)2889 2211 y FH(=)k FG(I)3025
2225 y FB(sr)r(c)1203 2437 y FH(Closed)k(switc)m(h)h(equation:)123
b FG(V)2319 2451 y FA(1)2359 2437 y FH(\()p FG(t)p FH(\))21
b Fz(\000)f FG(V)2627 2451 y FA(2)2666 2437 y FH(\()p
FG(t)p FH(\))26 b(=)f(0)p FG(;)3668 2301 y FH(\(2.11\))300
2667 y(where)34 b(the)h(K)m(CL)f(equations)g(for)g(no)s(de)g(1)h(and)f
(2)h(ha)m(v)m(e)g(b)s(een)f(com)m(bined)g(in)m(to)g(one)h(equation.)53
b(Since)300 2893 y(there)27 b(are)h(no)f(c)m(harge)h(surfaces)f(in)f
(the)h(net)m(w)m(ork,)i(there)e(are)g(no)g(c)m(harge)i(conserv)-5
b(ation)27 b(equations)g(and)300 3119 y(the)32 b(CS/MNA)g(equations)g
(are)g(iden)m(tical)f(the)h(MNA)g(equations)g(in)e(\(2.11\).)48
b(T)-8 b(o)32 b(obtain)g(the)g(settling)300 3345 y(state,)47
b(the)c(capacitor)g(curren)m(t)g(is)e(set)j(to)f(zero,)k
FC(i.)75 b(e.)94 b FH(_)-42 b FG(q)s FH(\()p FG(V)2511
3312 y FB(s)2491 3368 y FA(2)2548 3345 y FH(\))46 b(=)f(0)e(in)e
(\(2.11\))k(and)d(the)h(net)m(w)m(ork)300 3571 y(equations)30
b(b)s(ecome)1488 3755 y(K)m(CL)g(eqn.)41 b(at)31 b(no)s(de)e(1:)2408
3705 y FB(V)2465 3682 y Fu(s)2449 3727 y Fs(1)p 2408
3734 91 4 v 2426 3786 a FB(R)2533 3755 y FH(=)c FG(I)2669
3769 y FB(sr)r(c)1334 3980 y FH(Closed)30 b(switc)m(h)g(equation:)123
b FG(V)2471 3947 y FB(s)2451 4004 y FA(1)2528 3980 y
Fz(\000)20 b FG(V)2693 3947 y FB(s)2672 4004 y FA(2)2755
3980 y FH(=)25 b(0)3668 3845 y(\(2.12\))300 4179 y(The)k(settling)g
(state)h(is)f(obtained)g(b)m(y)g(solving)f(\(2.12\))k(with)c(Newton)h
(iteration.)40 b(There)29 b(is)g(no)g(need)g(to)300 4404
y(compute)e(the)f(initial)e(conditions)g(at)j FG(t)1646
4366 y FA(+)1646 4433 y FB(k)r Fv(\000)p FA(1)1779 4404
y FH(,)g(nor)f(solv)m(e)h(D)m(AE's.)40 b(Note,)29 b(that)e(in)e(this)g
(case,)j(the)f(settling)300 4630 y(state)32 b(is)d(dep)s(enden)m(t)h
(on)g(the)g(resistor)g(v)-5 b(alue)30 b FG(R)q FH(,)g(while)f(it)g(is)h
(indep)s(enden)m(t)e(of)j(the)f(capacitor)h(v)-5 b(alue.)300
4856 y FD(Instan)m(t)34 b(settling)h(appro)m(ximation)p
300 4887 1397 4 v 300 5082 a FH(Under)j(the)i(instan)m(t)f(settling)g
(appro)m(ximation,)i(the)e(state)i(of)e(the)h(net)m(w)m(ork)g(within)d
(the)i(switc)m(hing)p eop
%%Page: 26 39
26 38 bop 3809 -200 a FH(26)1342 7 y
 11972281 7235994 65781 44731596 12038062 51967590 startTexFig
 1342 7 a
%%BeginDocument: figs/ckt2c.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      151 186 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      161 190 moveto (k-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      111 25 moveto (V  \(   \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      121 29 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      139 25 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      215 105 moveto (V  \(   \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      225 109 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      244 105 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      239 33 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      249 37 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      255 21 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      295 33 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      305 37 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      311 21 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      271 33 moveto (=) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      111 32 moveto
      24 -24 atan dup cos 8 mul 87 exch sub
      exch sin 8 mul 56 exch sub lineto
   stroke
grestore
gsave
   newpath
      87 56 8 3 -24 24 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      239 40 moveto
      20 -22 atan dup cos 8 mul 217 exch sub
      exch sin 8 mul 60 exch sub lineto
   stroke
grestore
gsave
   newpath
      217 60 8 3 -22 20 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      207 104 moveto
      0 -32 atan dup cos 8 mul 175 exch sub
      exch sin 8 mul 104 exch sub lineto
   stroke
grestore
gsave
   newpath
      175 104 8 3 -32 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      311 185 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      23 31 moveto (V) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      6 66 moveto (3V) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      6 146 moveto (2V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 24 moveto
      144 0 atan dup cos 10 mul exch sin 10 mul rmoveto
      39 168 lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      39 24 10 4 0 -144 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 168 moveto
      0 285 atan dup cos 10 mul 324 exch sub
      exch sin 10 mul 168 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      324 168 10 4 285 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      162 160 moveto
      162 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 144 moveto
      162 144 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      39 64 moveto
      162 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      161 64 moveto
      161 144 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 64 moveto
      320 64 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Oct  1 11:20:07 1998
%%EndDocument

 endTexFig
 708 1120 a FH(Figure)29 b(2.6:)42 b(Instan)m(t)31 b(settling)f(appro)m
(ximation)f(for)h(net)m(w)m(ork)h(of)g(Fig.)f(2.5\(a\).)300
1374 y(in)m(terv)-5 b(al)30 b(is)f(appro)m(ximated)h(b)m(y)g(the)h
(settling)f(state.)42 b(F)-8 b(or)31 b(this)e(example,)h(it)g(means)h
(that)1002 1652 y FG(V)1055 1666 y FA(1)1094 1652 y FH(\()p
FG(t)p FH(\))26 b(=)f FG(V)1392 1614 y FB(s)1372 1674
y FA(1)1550 1652 y FH(and)121 b FG(V)1871 1666 y FA(2)1910
1652 y FH(\()p FG(t)p FH(\))26 b(=)f FG(V)2208 1614 y
FB(s)2188 1674 y FA(2)2518 1652 y FH(for)30 b FG(t)2690
1667 y FB(k)r Fv(\000)p FA(1)2848 1652 y FG(<)25 b(t)g
Fz(\024)g FG(t)3131 1667 y FB(k)3173 1652 y FG(:)470
b FH(\(2.13\))300 1930 y(The)28 b(condition)f(in)g(\(2.13\))k(simply)26
b(means)i(that)h(the)g(net)m(w)m(ork)g(settles)g(instan)m(tly)f(after)h
(the)f(switc)m(hing)300 2155 y(instan)m(t)i FG(t)639
2170 y FB(k)r Fv(\000)p FA(1)772 2155 y FH(,)g(as)h(illustrated)d(in)h
(Fig.)i(2.6.)536 2381 y(Note,)47 b(that)c(the)f(input)f(in)g(this)g
(example)h(is)f(constan)m(t,)47 b(ho)m(w)m(ev)m(er,)g(under)41
b(the)h(instan)m(t)g(set-)300 2607 y(tling)35 b(appro)m(ximation,)i
(the)f(net)m(w)m(ork)h(also)f(resp)s(onds)f(\\instan)m(taneously")h(to)
h(a)g(v)-5 b(arying)35 b(input)f(sig-)300 2833 y(nal.)50
b(F)-8 b(or)35 b(example,)g(let)f(the)g(curren)m(t)f(source)h(of)g(the)
g(net)m(w)m(ork)h(in)e(Fig.)h(2.5\(a\))i(b)s(e)d(time)h(v)-5
b(arying,)34 b(or)300 3059 y FG(I)340 3073 y FB(sr)r(c)466
3059 y Fz(!)26 b FG(I)623 3073 y FB(sr)r(c)724 3059 y
FH(\()p FG(t)p FH(\).)49 b(Under)32 b(the)i(instan)m(t)e(settling)h
(appro)m(ximation,)g(the)g(capacitor)h(curren)m(ts)f(are)h(set)f(to)300
3285 y(zero)e(for)f(all)g(time)g FG(t)g FH(during)e(the)i(switc)m(hing)
f(in)m(terv)-5 b(al)30 b FG(I)2243 3300 y FB(k)2316 3285
y FH(or)1401 3563 y(_)-41 b FG(q)r FH(\()p FG(V)1516
3577 y FA(2)1556 3563 y FH(\()p FG(t)p FH(\)\))26 b(=)f(0)274
b(for)30 b FG(t)2307 3578 y FB(k)r Fv(\000)p FA(1)2465
3563 y FG(<)25 b(t)g Fz(\024)g FG(t)2748 3578 y FB(k)2790
3563 y FG(:)853 b FH(\(2.14\))300 3840 y(Applying)28
b(\(2.14\))33 b(to)e(the)f(net)m(w)m(ork)h(equations)g(in)e(\(2.11\))j
(results)d(in)1402 4082 y(K)m(CL)h(eqn.)41 b(at)31 b(no)s(de)e(1:)2322
4037 y FB(V)2363 4046 y Fs(1)2398 4037 y FA(\()p FB(t)p
FA(\))p 2322 4061 157 4 v 2373 4113 a FB(R)2513 4082
y FH(=)c FG(I)2649 4096 y FB(sr)r(c)2750 4082 y FH(\()p
FG(t)p FH(\))1248 4308 y(Closed)30 b(switc)m(h)g(equation:)123
b FG(V)2365 4322 y FA(1)2405 4308 y FH(\()p FG(t)p FH(\))20
b Fz(\000)g FG(V)2672 4322 y FA(2)2712 4308 y FH(\()p
FG(t)p FH(\))26 b(=)f(0)3668 4172 y(\(2.15\))300 4504
y(The)k(solution)f(for)i FG(V)1021 4518 y FA(1)1060 4504
y FH(\()p FG(t)p FH(\))g(and)f FG(V)1422 4518 y FA(2)1461
4504 y FH(\()p FG(t)p FH(\))h(in)f(\(2.15\))j(is)c(the)i(instan)m(t)f
(settling)g(appro)m(ximation)g(to)h(the)g(state)300 4730
y(of)d(the)f(net)m(w)m(ork)h(when)f(the)g(input)f(is)g(time)h(v)-5
b(arying.)39 b(This)24 b(can)j(b)s(e)e(view)m(ed)h(as)h(obtaining)e
(the)i(settling)300 4956 y(state)32 b(for)e(eac)m(h)h(v)-5
b(alue)30 b(of)h FG(I)1245 4970 y FB(sr)r(c)1346 4956
y FH(\()p FG(t)p FH(\),)g(for)f(eac)m(h)i(time)e FG(t)g
FH(within)e(the)i(switc)m(hing)f(in)m(terv)-5 b(al.)536
5181 y(The)23 b(appro)m(ximation)f(in)g(\(2.14\))j(has)e(the)h
(e\013ect)g(of)g(setting)f(the)g(time)g(constan)m(ts)h(of)g(the)f(net)m
(w)m(ork)300 5407 y(to)h(zero,)i(without)d(the)h(need)f(to)h(eliminate)
e(the)i(\\resistiv)m(e")g(elemen)m(ts)g(from)f(the)h(net)m(w)m(ork)g
(as)g(w)m(as)g(done)p eop
%%Page: 27 40
27 39 bop 3809 -200 a FH(27)300 99 y(in)30 b([36)q(,)i(39)q(,)g(40)q(,)
f(41)q(].)44 b(The)31 b(algebraic)h(equations)f(in)f(\(2.15\))k(can)e
(b)s(e)f(used)f(to)j(dev)m(elop)e(e\016cien)m(t)h(time-)300
324 y(and)e(frequency-domain)f(form)m(ulations.)536 550
y(In)34 b(the)g(remaining)f(sections)h(of)g(this)g(c)m(hapter,)i(the)e
(concepts)h(illustrated)d(b)m(y)j(the)f(simple)e(ex-)300
776 y(amples)e(will)d(b)s(e)j(presen)m(ted)g(using)f(a)i(general)f
(notation.)300 1062 y FL(2.3)135 b(Mo)t(di\014ed)45 b(no)t(dal)g
(analysis)h(\(MNA\))300 1378 y FH(As)29 b(illustrated)d(in)i(the)h
(simple)e(examples,)i(the)g(MNA)h([61)q(])f(is)f(an)h(imp)s(ortan)m(t)f
(part)g(of)h(the)g(CS/MNA.)300 1604 y(In)38 b(this)g(section,)j(the)e
(concepts)g(of)g(the)g(MNA)h(are)f(b)s(e)f(review)m(ed)g(and)g(the)h
(notation)g(that)g(will)e(b)s(e)300 1830 y(used)32 b(throughout)g(the)h
(thesis)f(is)g(in)m(tro)s(duced.)46 b(This)31 b(notation)i(re\015ects)g
(the)g(algorithm)e(used)h(in)g(the)300 2056 y(SWITCAP3)e(implemen)m
(tation.)536 2282 y(In)25 b(eac)m(h)i(in)m(terv)-5 b(al)24
b FG(I)1208 2297 y FB(k)1251 2282 y FH(,)j(the)e(MNA)h(ma)m(y)g(b)s(e)f
(used)g(to)h(construct)g(a)g(set)g(of)g(non-linear)d(di\013eren)m
(tial-)300 2507 y(algebraic)j(equations)g(\(D)m(AE's\))j(that)e
(describ)s(e)d(the)j(net)m(w)m(ork.)40 b(The)26 b(follo)m(wing)f
(notation)i(will)d(b)s(e)i(used)300 2733 y(to)41 b(describ)s(e)e(the)h
(MNA)h(equations.)70 b(F)-8 b(or)41 b(simplicit)m(y)-8
b(,)41 b(the)f(index)f FG(k)s FH(,)k(represen)m(ting)d(the)g(switc)m
(hing)300 2959 y(in)m(terv)-5 b(al)30 b(will)d(b)s(e)j(omitted)g(from)g
(the)h(notation.)41 b(\(It)31 b(will)c(b)s(e)j(rein)m(tro)s(duced)f(in)
g(later)h(sections.\))398 3284 y FD(De\014nition)h FH(2.3.1:)1105
3293 y
 3504844 4736286 131563 43744870 5130977 50454609 startTexFig
 1105 3293 a
%%BeginDocument: figs/branch.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      96 104 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      111 113 moveto (b,i) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      85 76 moveto
      30 0 atan dup cos 10 mul 85 exch sub
      exch sin 10 mul 106 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      85 106 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      85 202 moveto
      -30 0 atan dup cos 10 mul 85 exch sub
      exch sin 10 mul 172 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      85 172 10 4 0 -30 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      96 192 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      111 201 moveto (b,j) show
   grestore

% OVAL
newpath 69 203 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 69 203 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      48 78 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      40 214 moveto ( j) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      69 76 moveto
      69 142 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      69 138 moveto
      69 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 69 75 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 69 75 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      61 131 moveto
      69 139 lineto
      77 131 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      8 136 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      23 145 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 121 moveto
      30 0 atan dup cos 10 mul 48 exch sub
      exch sin 10 mul 151 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      48 151 10 4 0 30 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 20 14:07:50 1998
%%EndDocument

 endTexFig
 2177 3609 a FG(I)2217 3624 y FB(b)2276 3609 y FH(=)25
b FG(I)2412 3624 y FB(b;i)2515 3609 y FH(=)g Fz(\000)p
FG(I)2722 3624 y FB(b;j)527 4145 y FD(\()p FG(N)641 4159
y FB(n)708 4145 y FH(+)20 b(1)p FD(\))35 b({)46 b FH(The)39
b(n)m(um)m(b)s(er)g(of)h(no)s(des)f(in)g(the)h(net)m(w)m(ork.)70
b(\(1)41 b(reference)f(no)s(de)f(and)h FG(N)3626 4159
y FB(n)727 4314 y FH(non-reference)31 b(no)s(des.\))527
4517 y FG(V)580 4531 y FB(i)643 4517 y FD({)46 b FH(The)30
b(v)m(oltage)i(at)f(no)s(de)f FG(i)g FH(with)g(resp)s(ect)g(to)h(the)g
(v)m(oltage)h(at)f(the)f(reference)h(no)s(de.)527 4720
y FG(I)567 4735 y FB(b)636 4720 y FD({)46 b FH(The)30
b(curren)m(t)g(through)g(branc)m(h)g FG(b)g FH(\(from)g(p)s(ositiv)m(e)
g(to)h(negativ)m(e)g(no)s(de.\))527 4922 y FG(I)567 4937
y FB(b;i)680 4922 y FD({)46 b FH(The)30 b(curren)m(t)g(through)f(branc)
m(h)h FG(b)h FH(lea)m(ving)f(no)s(de)f FG(i)p FH(.)527
5125 y Fz(B)587 5139 y FB(i)650 5125 y FD({)46 b FH(The)30
b FC(set)63 b FH(of)30 b(branc)m(hes)g(attac)m(hed)i(to)g(no)s(de)d
FG(i)p FH(.)p eop
%%Page: 28 41
28 40 bop 3809 -200 a FH(28)300 99 y(The)40 b(K)m(CL)f(states)i(that)g
(the)f(sum)g(of)g(the)g(curren)m(ts)g(lea)m(ving)g(a)g(no)s(de)f(is)g
(zero.)71 b(Using)39 b(the)i(De\014ni-)300 324 y(tions)30
b(2.3.1,)i(the)f(K)m(CL)f(equation)g(for)g(no)s(de)g
FG(i)g FH(can)h(b)s(e)f(written)f(as)1890 534 y Ft(X)1875
718 y FB(b)p Fv(2B)1998 728 y Fu(i)2040 614 y FG(I)2080
629 y FB(b;i)2183 614 y FH(=)c(0)1344 b(\(2.16\))300
905 y(The)30 b(MNA)h(con)m(tains)f FG(N)1166 919 y FB(n)1244
905 y FH(K)m(CL)g(equations)g(\(one)h(for)f(eac)m(h)h(non-reference)g
(no)s(de\);)1057 1158 y Fw(KCL)47 b(eqn.)94 b(node)47
b(1:)2570 1077 y Ft(X)2551 1262 y FB(b)p Fv(2B)2674 1271
y Fs(1)2724 1158 y FG(I)2764 1173 y FB(b;)p FA(1)2879
1158 y FH(=)24 b(0)1057 1437 y Fw(KCL)47 b(eqn.)94 b(node)47
b(2:)2570 1356 y Ft(X)2551 1541 y FB(b)p Fv(2B)2674 1550
y Fs(2)2724 1437 y FG(I)2764 1452 y FB(b;)p FA(2)2879
1437 y FH(=)24 b(0)1238 1650 y(.)1238 1683 y(.)1238 1716
y(.)2733 1650 y(.)2733 1683 y(.)2733 1716 y(.)1057 1942
y Fw(KCL)47 b(eqn.)94 b(node)47 b FG(N)1846 1956 y FB(n)1893
1942 y Fw(:)2600 1861 y Ft(X)2551 2046 y FB(b)p Fv(2B)2674
2057 y Fu(N)2722 2065 y(n)2784 1942 y FG(I)2824 1957
y FB(b;N)2930 1965 y Fu(n)3002 1942 y FH(=)25 b(0)3668
1559 y(\(2.17\))536 2214 y(Another)f(set)g(of)g(equations)f(used)g(in)f
(MNA)i(are)g(the)g(Branc)m(h)f(Constitutiv)m(e)g(Relations)g(\(BCR's\))
300 2440 y([61)q(,)29 b(62)q(].)41 b(They)28 b(mo)s(del)g(the)h(prop)s
(erties)e(of)i(the)g(actual)h(elemen)m(t)f(in)f(the)h(branc)m(h.)39
b(F)-8 b(or)30 b(elemen)m(ts)f(suc)m(h)300 2666 y(as)36
b(resistors,)h(capacitors)g(and)e(curren)m(t)h(sources,)i(the)e(branc)m
(h)f(curren)m(ts)h(can)g(usually)e(b)s(e)h(explicitly)300
2892 y(expressed)30 b(in)f(terms)h(of)h(no)s(de)e(v)m(oltages.)43
b(The)30 b(general)g(form)g(of)g(BCR's)h(for)f(suc)m(h)g(elemen)m(ts)h
(is:)1648 3182 y FG(I)1688 3197 y FB(b)1748 3182 y FH(=)25
b FG(f)10 b FH(\()p FG(V)1987 3196 y FA(1)2026 3182 y
FG(;)15 b(V)2119 3196 y FA(2)2159 3182 y FG(;)g(:)g(:)g(:)h(;)f(V)2413
3196 y FB(N)2469 3204 y Fu(n)2516 3182 y FH(\))1117 b(\(2.18\))300
3472 y(The)39 b(BCR's)h(of)g(the)f(form)h(in)e(\(2.18\))k(can)e(b)s(e)f
(directly)f(substituted)g(in)m(to)i(the)g(K)m(CL)f(equations)g(in)300
3698 y(\(2.17\).)53 b(Consequen)m(tly)-8 b(,)35 b(\(2.17\))h(b)s
(ecomes)d(a)i(system)e(of)h FG(N)2388 3712 y FB(n)2469
3698 y FH(equations)f(and)h FG(N)3133 3712 y FB(n)3213
3698 y FH(unkno)m(wns,)f(where)300 3924 y(the)e(unkno)m(wns)d(are)j
(the)g(no)s(de)e(v)m(oltages.)536 4150 y(Other)35 b(elemen)m(ts)h(suc)m
(h)g(as)g(v)m(oltage)h(sources)f(and)f(closed)g(switc)m(hes)h(do)f(not)
h(ha)m(v)m(e)h(an)f(explicit)300 4375 y(branc)m(h)28
b(curren)m(t)f(to)i(no)s(de)f(v)m(oltage)i(relation.)39
b(The)28 b(BCR's)g(for)g(suc)m(h)g(elemen)m(ts)g(ha)m(v)m(e)h(a)g
(general)f(form:)1605 4665 y FG(f)10 b FH(\()p FG(I)1735
4680 y FB(b)1769 4665 y FG(;)15 b(V)1862 4679 y FA(1)1902
4665 y FG(;)g(V)1995 4679 y FA(2)2035 4665 y FG(;)g(:)g(:)g(:)i(;)e(V)
2290 4679 y FB(N)2346 4687 y Fu(n)2393 4665 y FH(\))25
b(=)g(0)1074 b(\(2.19\))300 4956 y(The)39 b(BCR's)h(of)g(this)f(form)g
(cannot)i(b)s(e)e(directly)g(substituted)f(in)m(to)i(\(2.17\).)71
b(Instead,)42 b(the)f(branc)m(h)300 5181 y(curren)m(t)33
b(is)g(de\014ned)f(as)i(an)g(additional)d(unkno)m(wn)h(that)i(can)g(b)s
(e)f(used)g(in)f(\(2.17\),)37 b(while)32 b(the)h(BCR)h(is)300
5407 y(app)s(ended)29 b(to)i(the)f(set)h(of)g(the)f(K)m(CL)g(equations)
g(as)h(an)f(additional)f(equation.)p eop
%%Page: 29 42
29 41 bop 3809 -200 a FH(29)992 7 y
 17497948 7367557 1052508 43679088 18550456 51046645 startTexFig
 992 7 a
%%BeginDocument: figs/mna.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   newpath
      64 64 moveto 96 64 lineto 96 144 lineto 64 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      72 134 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      84 138 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      79 78 moveto (1) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      108 101 moveto (KCL equations) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      108 173 moveto (Implicid BCR equations ) show
   grestore

% OVAL
newpath 79 109 1 1 tgifellipse fill
gsave
   newpath 79 109 1 1 tgifellipse stroke
grestore

% OVAL
newpath 79 101 1 1 tgifellipse fill
gsave
   newpath 79 101 1 1 tgifellipse stroke
grestore

% OVAL
newpath 79 93 1 1 tgifellipse fill
gsave
   newpath 79 93 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      64 144 moveto 96 144 lineto 96 224 lineto 64 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      72 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      84 218 moveto (b) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      79 158 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 79 189 1 1 tgifellipse fill
gsave
   newpath 79 189 1 1 tgifellipse stroke
grestore

% OVAL
newpath 79 181 1 1 tgifellipse fill
gsave
   newpath 79 181 1 1 tgifellipse stroke
grestore

% OVAL
newpath 79 173 1 1 tgifellipse fill
gsave
   newpath 79 173 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      96 64 moveto 292 64 lineto 292 144 lineto 96 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      96 144 moveto 292 144 lineto 292 224 lineto 96 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      32 64 moveto 64 64 lineto 64 224 lineto 32 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      40 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      52 218 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      47 86 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 47 153 1 1 tgifellipse fill
gsave
   newpath 47 153 1 1 tgifellipse stroke
grestore

% OVAL
newpath 47 145 1 1 tgifellipse fill
gsave
   newpath 47 145 1 1 tgifellipse stroke
grestore

% OVAL
newpath 47 137 1 1 tgifellipse fill
gsave
   newpath 47 137 1 1 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      88 49 moveto (Equations) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      384 64 moveto 416 64 lineto 416 144 lineto 384 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      392 134 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      404 138 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      399 78 moveto (1) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      428 109 moveto (node) show
      428 131 moveto (voltages) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      428 185 moveto (branch) show
      428 207 moveto (currents ) show
   grestore

% OVAL
newpath 399 109 1 1 tgifellipse fill
gsave
   newpath 399 109 1 1 tgifellipse stroke
grestore

% OVAL
newpath 399 101 1 1 tgifellipse fill
gsave
   newpath 399 101 1 1 tgifellipse stroke
grestore

% OVAL
newpath 399 93 1 1 tgifellipse fill
gsave
   newpath 399 93 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      384 144 moveto 416 144 lineto 416 224 lineto 384 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      392 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      404 218 moveto (b) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      399 158 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 399 189 1 1 tgifellipse fill
gsave
   newpath 399 189 1 1 tgifellipse stroke
grestore

% OVAL
newpath 399 181 1 1 tgifellipse fill
gsave
   newpath 399 181 1 1 tgifellipse stroke
grestore

% OVAL
newpath 399 173 1 1 tgifellipse fill
gsave
   newpath 399 173 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      416 64 moveto 500 64 lineto 500 144 lineto 416 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      416 144 moveto 500 144 lineto 500 224 lineto 416 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      352 64 moveto 384 64 lineto 384 224 lineto 352 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      360 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      372 218 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      367 86 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 367 153 1 1 tgifellipse fill
gsave
   newpath 367 153 1 1 tgifellipse stroke
grestore

% OVAL
newpath 367 145 1 1 tgifellipse fill
gsave
   newpath 367 145 1 1 tgifellipse stroke
grestore

% OVAL
newpath 367 137 1 1 tgifellipse fill
gsave
   newpath 367 137 1 1 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      392 49 moveto (Unknowns) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      168 129 moveto (\(2.17\)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      172 201 moveto (\(2.19\)) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Dec  2 19:49:01 1998
%%EndDocument

 endTexFig
 965 1136 a FH(Figure)30 b(2.7:)41 b(Structure)30 b(of)g(MNA)h
(equations)f(and)g(unkno)m(wns.)536 1406 y(Let)46 b FG(N)787
1421 y FB(b)866 1406 y FH(b)s(e)e(the)i(n)m(um)m(b)s(er)d(of)j(branc)m
(hes)e(with)g(implicit)e(BCR's)j(as)g(in)f(\(2.19\).)87
b(Then,)48 b(the)300 1632 y(complete)30 b(MNA)g(represen)m(tation)f(of)
h(the)g(net)m(w)m(ork)g(will)d(con)m(tain)i FG(N)2692
1646 y FB(n)2758 1632 y FH(+)18 b FG(N)2920 1647 y FB(b)2983
1632 y FH(equations)30 b(and)e FG(N)3638 1646 y FB(n)3704
1632 y FH(+)18 b FG(N)3866 1647 y FB(b)300 1858 y FH(unkno)m(wns)29
b(as)h(sho)m(wn)g(in)f(Fig.)i(2.7)g(where)f FG(N)1886
1872 y FB(x)1955 1858 y FH(=)25 b FG(N)2124 1872 y FB(n)2191
1858 y FH(+)20 b FG(N)2355 1873 y FB(b)2390 1858 y FH(.)300
2100 y Fx(2.3.1)112 b(Device)37 b(stamps)300 2385 y FH(A)29
b(con)m(v)m(enien)m(t)h(metho)s(d)f(to)h(implemen)m(t)d(the)j(MNA)f(in)
f(a)i(computer)f(algorithm)f(is)g(to)i(de\014ne)e(a)h
FC(stamp)300 2611 y FH(for)35 b(eac)m(h)i(elemen)m(t.)56
b(The)35 b(stamp)h(represen)m(ts)f(the)h(con)m(tribution)e(of)i(the)f
(elemen)m(t)h(to)g(the)g(set)g(of)g(the)300 2836 y(MNA)31
b(equations)f(and)g(unkno)m(wns)f(in)g(Fig)h(2.7.)42
b(The)30 b(follo)m(wing)f(are)h(examples)g(of)h(stamps.)300
3062 y FD(Example)e FH(2.3.1:)83 b(Linear)29 b(resistor)h(connected)h
(b)s(et)m(w)m(een)g(no)s(des)f FG(i)h FH(and)e FG(j)5
b FH(.)1272 3088 y
 2889130 4736286 131563 44928942 4407377 51901808 startTexFig
 1272 3088 a
%%BeginDocument: figs/resistor.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 72 32 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 72 32 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      8 112 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      23 121 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 89 moveto
      30 0 atan dup cos 10 mul 48 exch sub
      exch sin 10 mul 119 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      48 119 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      72 64 moveto
      72 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      72 136 moveto
      72 168 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      96 110 moveto (R) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      22 40 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      24 166 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      88 38 moveto (i) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      72 136 moveto
      72 123 lineto
      81 119 lineto
      63 113 lineto
      81 109 lineto
      63 102 lineto
      81 96 lineto
      63 91 lineto
      81 84 lineto
      63 79 lineto
      72 75 lineto
      72 64 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      80 182 moveto ( j) show
   grestore

% OVAL
newpath 72 168 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 72 168 4 5 tgifellipse stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Sep 24 16:16:00 1998
%%EndDocument

 endTexFig
 1789 3409 a FH(BCR)30 b(is)g FG(I)2148 3424 y FB(b)2207
3409 y FH(=)25 b(1)p FG(=R)q FH(\()p FG(V)2551 3423 y
FB(i)2601 3409 y Fz(\000)20 b FG(V)2745 3423 y FB(j)2781
3409 y FH(\))300 3885 y(The)29 b(BCR)h(has)g(an)g(explicit)e(form)h
(and)h(can)g(b)s(e)f(inserted)g(directly)f(in)m(to)i(the)g(K)m(CL)g
(equations)f(\(2.17\).)300 4111 y(The)h(stamp)g(is:)947
4347 y Fw(KCL)47 b(eqn.)94 b(node)47 b FG(i)p Fw(:)185
b Fz(\001)15 b(\001)g(\001)21 b FH(+)f(1)p FG(=R)32 b
FH(\()p FG(V)2423 4361 y FB(i)2472 4347 y Fz(\000)20
b FG(V)2616 4361 y FB(j)2652 4347 y FH(\))112 b(+)f Fz(\001)15
b(\001)g(\001)26 b FH(=)f(0)947 4516 y Fw(KCL)47 b(eqn.)94
b(node)47 b FG(j)5 b Fw(:)174 b Fz(\001)15 b(\001)g(\001)21
b(\000)f FH(1)p FG(=R)32 b FH(\()p FG(V)2423 4530 y FB(i)2472
4516 y Fz(\000)20 b FG(V)2616 4530 y FB(j)2652 4516 y
FH(\))112 b(+)f Fz(\001)15 b(\001)g(\001)26 b FH(=)f(0)3668
4420 y(\(2.20\))p 1200 4709 1800 4 v 300 5181 a FD(Example)42
b FH(2.3.2:)132 b(Capacitor)43 b(connected)h(b)s(et)m(w)m(een)f(no)s
(des)f FG(i)h FH(and)f FG(j)49 b FH(with)41 b(the)i(c)m(harge)h(v)m
(oltage)300 5407 y(relationship)28 b FG(q)s FH(\()p FG(V)928
5421 y FB(i)956 5407 y FG(;)15 b(V)1049 5421 y FB(j)1086
5407 y FH(\))31 b(where)f FG(V)1468 5421 y FB(i)1526
5407 y FH(and)g FG(V)1756 5421 y FB(j)1823 5407 y FH(are)g(no)s(de)g(v)
m(oltages.)p eop
%%Page: 30 43
30 42 bop 3809 -200 a FH(30)514 7 y
 5778266 4736286 65781 45257850 8222720 51901808 startTexFig
 514 7 a
%%BeginDocument: figs/capacitor.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      192 104 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      207 113 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      176 81 moveto
      30 0 atan dup cos 10 mul 176 exch sub
      exch sin 10 mul 111 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      176 111 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 136 160 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 136 160 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      152 38 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      144 174 moveto ( j) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      136 33 moveto
      136 83 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      111 83 moveto
      162 83 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      111 97 moveto
      127.67 94.33 144.67 94.33
      162 97 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      136 95 moveto
      136 157 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      7 61 moveto (+q\(V ,V \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      56 69 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      77 69 moveto ( j) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      10 127 moveto (-q\(V ,V \)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      57 135 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      78 135 moveto ( j) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      106 120 moveto
      -16 16 atan dup cos 8 mul 122 exch sub
      exch sin 8 mul 104 exch sub lineto
   stroke
grestore
gsave
   newpath
      122 104 8 3 16 -16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      107 57 moveto
      16 16 atan dup cos 8 mul 123 exch sub
      exch sin 8 mul 73 exch sub lineto
   stroke
grestore
gsave
   newpath
      123 73 8 3 16 16 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 136 32 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 136 32 5 5 tgifellipse stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Sep 24 16:31:57 1998
%%EndDocument

 endTexFig
 1346 220 a FH(BCR)30 b(is)g FG(I)1705 235 y FB(b)1764
220 y FH(=)42 b(_)-42 b FG(q)s FH(\()p FG(V)1992 234
y FB(i)2021 220 y FG(;)15 b(V)2114 234 y FB(j)2151 220
y FH(\))1346 445 y(Where)48 b(_)-42 b FG(q)33 b FH(represen)m(ts)d(the)
h(deriv)-5 b(ativ)m(e)30 b(of)g FG(q)j FH(with)c(resp)s(ect)i(to)g
(time.)300 804 y(The)f(BCR)g(can)h(b)s(e)f(used)f(directly)g(in)g(the)i
(K)m(CL)f(equations)g(\(2.17\).)43 b(The)30 b(stamp)g(is:)1056
1047 y Fw(KCL)47 b(eqn.)94 b(node)47 b FG(i)p Fw(:)185
b Fz(\001)15 b(\001)g(\001)21 b FH(+)37 b(_)-42 b FG(q)s
FH(\()p FG(V)2385 1061 y FB(i)2413 1047 y FG(;)15 b(V)2506
1061 y FB(j)2543 1047 y FH(\))112 b(+)f Fz(\001)15 b(\001)g(\001)26
b FH(=)f(0)1056 1217 y Fw(KCL)47 b(eqn.)94 b(node)47
b FG(j)5 b Fw(:)174 b Fz(\001)15 b(\001)g(\001)21 b(\000)37
b FH(_)-42 b FG(q)s FH(\()p FG(V)2385 1231 y FB(i)2413
1217 y FG(;)15 b(V)2506 1231 y FB(j)2543 1217 y FH(\))112
b(+)f Fz(\001)15 b(\001)g(\001)26 b FH(=)f(0)3668 1121
y(\(2.21\))p 1200 1417 1800 4 v 300 1664 a FD(Example)k
FH(2.3.3:)83 b(Indep)s(enden)m(t)29 b(v)m(oltage)j(source)e(of)h(v)-5
b(alue)30 b FG(E)5 b FH(\()p FG(t)p FH(\))31 b(b)s(et)m(w)m(een)g(no)s
(des)f FG(i)g FH(and)g FG(j)5 b FH(.)1183 1695 y
 4452100 4736286 131563 44928942 6709739 51901808 startTexFig
 1183
1695 a
%%BeginDocument: figs/vsource.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 96 95 23 24 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   2 setlinewidth
   newpath 96 95 23 24 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 96 32 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 96 32 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      152 112 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      167 121 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      136 89 moveto
      30 0 atan dup cos 10 mul 136 exch sub
      exch sin 10 mul 119 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      136 119 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 72 moveto
      96 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 120 moveto
      96 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 96 168 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 96 168 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      8 110 moveto (E\(t\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      112 38 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      104 182 moveto ( j) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      85 96 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      88 104 moveto (_) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Sep 24 16:43:49 1998
%%EndDocument

 endTexFig
 1847 2016 a FH(BCR)30 b(is)g FG(V)2219 2030 y FB(i)2267
2016 y Fz(\000)20 b FG(V)2411 2030 y FB(j)2468 2016 y
Fz(\000)g FG(E)5 b FH(\()p FG(t)p FH(\))26 b(=)f(0)300
2371 y(This)f(BCR)i(is)f(implicit.)36 b(It)26 b(is)f(app)s(ended)g(to)h
(the)h(K)m(CL)e(equations)h(\(2.17\))i(as)e(an)g(additional)e(equation)
300 2597 y(and)30 b(the)g(branc)m(h)g(curren)m(t)g FG(I)1290
2612 y FB(b)1355 2597 y FH(b)s(ecomes)g(the)h(additional)d(unkno)m(wn.)
40 b(The)29 b(stamp)i(is:)1193 2833 y Fw(KCL)47 b(eqn.)94
b(node)47 b FG(i)p Fw(:)174 b Fz(\001)15 b(\001)g(\001)21
b FH(+)f FG(I)2419 2848 y FB(b)2564 2833 y FH(+)111 b
Fz(\001)15 b(\001)g(\001)26 b FH(=)f(0)1181 3002 y Fw(KCL)47
b(eqn.)95 b(node)46 b FG(j)5 b Fw(:)175 b Fz(\001)15
b(\001)g(\001)21 b(\000)f FG(I)2419 3017 y FB(b)2564
3002 y FH(+)111 b Fz(\001)15 b(\001)g(\001)26 b FH(=)f(0)1224
3172 y Fw(Additional)45 b(BCR)i(:)83 b FG(V)2124 3186
y FB(i)2172 3172 y Fz(\000)20 b FG(V)2316 3186 y FB(j)2378
3172 y FH(=)25 b FG(E)5 b FH(\()p FG(t)p FH(\))3668 2991
y(\(2.22\))p 1200 3325 1800 4 v 300 3572 a FD(Example)29
b FH(2.3.4:)83 b(Ideal)30 b(switc)m(h)g(connected)h(b)s(et)m(w)m(een)g
(no)s(des)e FG(i)i FH(and)f FG(j)5 b FH(.)385 3717 y(When)30
b(the)h(switc)m(h)f(is)f(op)s(en:)385 3768 y
 2841768 4736286 723599 44928942 4933632 51901808 startTexFig
 385 3768
a
%%BeginDocument: figs/sw_open.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 48 32 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 48 32 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      104 104 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      119 113 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      88 81 moveto
      30 0 atan dup cos 10 mul 88 exch sub
      exch sin 10 mul 111 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      88 111 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 72 moveto
      48 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 120 moveto
      48 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 48 168 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 48 168 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      64 38 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      56 182 moveto ( j) show
   grestore

% OVAL
newpath 48 72 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 48 72 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 48 120 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 48 120 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 72 moveto
      24 112 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Sep 24 17:03:02 1998
%%EndDocument

 endTexFig
 845 3974 a FH(BCR)h(is:)40 b FG(I)1239 3989 y FB(b)1299
3974 y FH(=)25 b(0)845 4200 y(There)30 b(is)f(no)i(con)m(tribution)d
(to)k(the)e(MNA)h(equations.)41 b(\(empt)m(y)31 b(stamp\))300
4439 y(When)f(the)h(switc)m(h)f(is)f(closed:)350 4447
y
 2368140 4736286 3552215 43744870 7038648 50717736 startTexFig
 350 4447 a
%%BeginDocument: figs/sw_closed.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 104 64 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 64 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      160 136 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      175 145 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 113 moveto
      30 0 atan dup cos 10 mul 144 exch sub
      exch sin 10 mul 143 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      144 143 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 104 moveto
      104 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 152 moveto
      104 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 104 200 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 200 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      120 70 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      112 214 moveto ( j) show
   grestore

% OVAL
newpath 104 104 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 104 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 104 152 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 152 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 104 moveto
      104 152 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Sep 24 17:21:09 1998
%%EndDocument

 endTexFig
 749 4765 a FH(BCR)i(is:)39 b FG(V)1156 4779 y FB(i)1205
4765 y Fz(\000)20 b FG(V)1349 4779 y FB(j)1411 4765 y
FH(=)25 b(0)300 5119 y(Similar)20 b(to)j(v)m(oltage)h(source,)h(this)d
(BCR)g(is)g(implicit.)35 b(The)22 b(branc)m(h)g(curren)m(t)h
FG(I)2972 5134 y FB(b)3029 5119 y FH(b)s(ecomes)f(an)h(additional)p
eop
%%Page: 31 44
31 43 bop 3809 -200 a FH(31)300 99 y(unkno)m(wn.)39 b(The)30
b(stamp)g(is:)1193 330 y Fw(KCL)47 b(eqn.)94 b(node)47
b FG(i)p Fw(:)174 b Fz(\001)15 b(\001)g(\001)21 b FH(+)f
FG(I)2419 345 y FB(b)2564 330 y FH(+)111 b Fz(\001)15
b(\001)g(\001)26 b FH(=)f(0)1181 499 y Fw(KCL)47 b(eqn.)95
b(node)46 b FG(j)5 b Fw(:)175 b Fz(\001)15 b(\001)g(\001)21
b(\000)f FG(I)2419 514 y FB(b)2564 499 y FH(+)111 b Fz(\001)15
b(\001)g(\001)26 b FH(=)f(0)1224 669 y Fw(Additional)45
b(BCR)i(:)83 b FG(V)2124 683 y FB(i)2172 669 y Fz(\000)20
b FG(V)2316 683 y FB(j)2378 669 y FH(=)25 b(0)3668 488
y(\(2.23\))p 1200 818 1800 4 v 300 1082 a Fx(2.3.2)112
b(V)-9 b(ector)36 b(notation)h(for)h(MNA)f(equations)300
1367 y FH(It)23 b(is)g(con)m(v)m(enien)m(t)h(to)g(represen)m(t)f(the)g
(system)h(of)f(MNA)h(equations)f(in)f(Fig.)h(2.7)h(b)m(y)f(v)m(ectors)i
(of)e(equations)300 1592 y(of)31 b(the)f(form)1438 1817
y(_)1423 1818 y FD(q)1478 1832 y FB(M)7 b(N)g(A)1674
1818 y FH(\()p FD(x)p FH(\))21 b(+)f FD(g)1963 1832 y
FB(M)7 b(N)g(A)2158 1818 y FH(\()p FD(x)p FH(\))26 b(=)f
FD(e)2453 1832 y FB(M)7 b(N)g(A)2648 1818 y FH(\()p FG(t)p
FH(\))p FG(:)892 b FH(\(2.24\))300 2096 y(where)570 2095
y(_)555 2096 y FD(q)610 2110 y FB(M)7 b(N)g(A)805 2096
y FH(\()p FD(x)p FH(\),)26 b FD(g)1033 2110 y FB(M)7
b(N)g(A)1228 2096 y FH(\()p FD(x)p FH(\),)25 b(and)e
FD(e)1621 2110 y FB(M)7 b(N)g(A)1816 2096 y FH(\()p FG(t)p
FH(\))23 b(are)g FG(N)2159 2110 y FB(x)2226 2096 y FH(column)e(v)m
(ectors)k(of)e(equations)f(and)h FD(x)f FH(is)g(an)h
FG(N)3856 2110 y FB(x)300 2322 y FH(column)30 b(v)m(ector)j(of)f(unkno)
m(wns.)42 b(Eac)m(h)32 b(ro)m(w)f(in)f(\(2.24\))k(corresp)s(onds)c(to)i
(a)g(separate)g(MNA)g(equation.)300 2547 y(The)e(elemen)m(ts)g(of)g
(the)g(v)m(ectors)i(are)e(determined)f(b)m(y)h(the)g(devices)g
(according)g(to)h(the)f(device)g(stamps.)536 2773 y(The)f(v)m(ector)
1008 2772 y(_)993 2773 y FD(q)1048 2787 y FB(M)7 b(N)g(A)1243
2773 y FH(\()p FD(x)p FH(\))30 b(con)m(tains)f(the)g(device)g(con)m
(tributions)e(that)j(in)m(v)m(olv)m(e)f(a)g(time)f(deriv)-5
b(ativ)m(e)300 2999 y(suc)m(h)41 b(as)g(the)h(capacitor)g(curren)m(ts)f
(in)e(the)j(capacitor)g(stamp)f(as)g(in)f(Example)h(2.3.2.)75
b(The)40 b(v)m(ector)300 3225 y FD(e)348 3239 y FB(M)7
b(N)g(A)543 3225 y FH(\()p FG(t)p FH(\))41 b(con)m(tains)g(the)g
(signal)f(w)m(a)m(v)m(eform)i(con)m(tributions)e(of)h(the)g(indep)s
(enden)m(t)d(sources)j(suc)m(h)g(as)300 3451 y FG(E)5
b FH(\()p FG(t)p FH(\))36 b(in)d(Example)h(2.3.3.)56
b(The)34 b(v)m(ector)j FD(g)1790 3465 y FB(M)7 b(N)g(A)1985
3451 y FH(\()p FD(x)p FH(\))36 b(con)m(tains)f(the)g(remaining)e
(device)i(con)m(tributions)300 3676 y(to)c(the)g(MNA)g(equations.)300
3962 y FL(2.4)135 b(Charge)46 b(conserv)-7 b(ation)45
b(equations)300 4278 y FH(The)30 b(second)g(concept)h(in)m(v)m(olv)m
(ed)e(in)g(the)h(CS/MNA)g(is)g(the)g(c)m(harge)h(conserv)-5
b(ation)30 b(in)f(c)m(harge)i(surfaces)300 4504 y([32)q(].)45
b(It)32 b(has)g(b)s(een)f(applied)f(to)i(analysis)e(of)i(\\ideal")g(SC)
f(net)m(w)m(orks)h(in)f([32)q(,)h(39)q(].)45 b(In)31
b(this)g(section,)i(its)300 4730 y(application)c(is)g(extended)h(to)i
(the)e(more)h(general)f(set)h(of)g(elemen)m(ts)f(considered)f(in)g
(this)h(c)m(hapter.)536 4956 y(In)37 b(Sec.)g(2.4.1,)k(the)d(prop)s
(erties)e(of)h(c)m(harge)h(surfaces)f(are)h(review)m(ed)f(and)g(the)g
(notation)h(for)f(a)300 5181 y(c)m(harge)d(conserv)-5
b(ation)32 b(equations)h(is)e(in)m(tro)s(duced.)46 b(Sec.)33
b(2.4.2)i(de\014nes)c(the)i(set)g(of)g(linearly)d(indep)s(en-)300
5407 y(den)m(t)h(c)m(harge)h(surfaces)e(that)i(m)m(ust)e(b)s(e)g(lo)s
(cated)h(to)h(in)d(order)h(to)i(construct)f(the)g(c)m(harge)h(conserv)
-5 b(ation)p eop
%%Page: 32 45
32 44 bop 3809 -200 a FH(32)300 99 y(equations)28 b(used)f(in)f(the)i
(CS/MNA.)h(Sec.)f(2.4.3)i(and)d(Sec.)h(2.4.4)i(discuss)c(the)i
(implemen)m(tation)e(issues)300 324 y(in)m(v)m(olv)m(ed)f(in)f(lo)s
(cating)g(the)i(c)m(harge)g(surfaces)f(and)f(constructing)h(the)g(c)m
(harge)i(conserv)-5 b(ation)25 b(equations.)300 565 y
Fx(2.4.1)112 b(A)37 b(c)m(harge)h(surface)h(and)f(its)e(c)m(harge)i
(conserv)-6 b(ation)37 b(equation)300 850 y FH(A)26 b(sample)g(net)m(w)
m(ork)h(that)g(con)m(tains)f(c)m(harge)h(surfaces)g(is)e(sho)m(wn)g(in)
g(Fig.)i(2.8.)40 b(The)26 b(shaded)f(rectangles)300 1076
y(represen)m(t)35 b(the)h(branc)m(hes)f(that)h(are)f(not)h(capacitors)g
(or)f(op)s(en)g(switc)m(hes.)55 b(The)35 b(c)m(harge)h(surfaces)g(are)
300 1302 y(outlined)29 b(b)m(y)h(the)g(dashed)g(lines.)300
1527 y FD(Prop)s(erties)35 b(of)h(a)e(c)m(harge)i(surface)f([32)q(]:)p
300 1563 1594 4 v 411 1748 a FH(1.)46 b(A)31 b FC(char)-5
b(ge)33 b(surfac)-5 b(e)31 b FH(is)f(formed)g(b)m(y)g(a)h(cutset)g(of)f
(capacitors)h(and)f(ideal)f FC(op)-5 b(en)32 b FH(switc)m(hes.)411
1976 y(2.)46 b(Charge)34 b(cannot)h(en)m(ter)g(or)f(lea)m(v)m(e)i(the)e
(c)m(harge)i(surface,)f(therefore,)h(the)e(total)h(c)m(harge)h(inside)c
(a)527 2134 y(c)m(harge)g(surface)e(is)g(constan)m(t.)411
2362 y(3.)46 b(Since)29 b(c)m(harge)i(can)f(only)f(b)s(e)g(stored)h(on)
f(capacitor)i(plates,)f(the)g(total)g(c)m(harge)h(of)f(the)g(surface)g
(is)527 2520 y(the)h(sum)e(of)i(the)f(c)m(harges)i(on)e(the)h
(capacitor)g(plates)f(that)h(are)g(inside)d(the)i(c)m(harge)i(surface.)
411 2748 y(4.)46 b(The)41 b(total)i(c)m(harge)f(inside)e(the)h(surface)
h(is)e(determined)g(b)m(y)i(the)f(c)m(harges)i(on)e(the)h(capacitor)527
2906 y(plates)33 b(at)h(the)g(time)f(when)f(the)h(surface)g(is)g
(formed.)49 b(This)31 b(is)h(the)i(time)f FG(t)3137 2921
y FB(k)r Fv(\000)p FA(1)3303 2906 y FH(whic)m(h)e(is)i(at)h(the)527
3064 y(end)c(of)h(the)f(previous)f(switc)m(hing)g(in)m(terv)-5
b(al.)536 3352 y(The)32 b(prop)s(erties)e(of)i(the)g(c)m(harge)h
(surface)f(can)g(b)s(e)g(mo)s(deled)e(b)m(y)i(a)g(c)m(harge)h(conserv)
-5 b(ation)32 b(equa-)300 3578 y(tion.)83 b(In)43 b(the)i(follo)m(wing)
e(de\014nition,)j(the)f(notation)f(for)h(the)f(c)m(harge)i(conserv)-5
b(ation)45 b(equations)f(is)300 3804 y(in)m(tro)s(duced.)39
b(This)29 b(notation)h(re\015ects)h(the)g(algorithm)e(used)h(in)f
(SWITCAP3)h(implemen)m(tation.)398 4025 y FD(De\014nition)h
FH(2.4.1:)1151 4033 y
 8551628 5328322 2170798 44665815 10722426 49994137 startTexFig
 1151 4033 a
%%BeginDocument: figs/cs_capacitor.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 160 192 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 160 192 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 65 moveto
      160 115 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      135 115 moveto
      186 115 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      135 129 moveto
      151.67 126.33 168.67 126.33
      186 129 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 127 moveto
      160 189 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      66 93 moveto ( q ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      88 101 moveto (c,A) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      130 152 moveto
      -16 16 atan dup cos 8 mul 146 exch sub
      exch sin 8 mul 136 exch sub lineto
   stroke
grestore
gsave
   newpath
      146 136 8 3 16 -16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      131 89 moveto
      16 16 atan dup cos 8 mul 147 exch sub
      exch sin 8 mul 105 exch sub lineto
   stroke
grestore
gsave
   newpath
      147 105 8 3 16 16 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 160 64 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 160 64 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      71 157 moveto (q ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      88 165 moveto (c,B) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      61 107 moveto
      71 116 lineto
      84 121 lineto
      101 122 lineto
      113 120 lineto
      129 122 lineto
      151 122 lineto
      170 122 lineto
      202 121 lineto
      219 118 lineto
      232 114 lineto
      246 112 lineto
      255 110 lineto
      264 108 lineto
      280 108 lineto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      185 89 moveto (Surface) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      262 89 moveto ( A) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      204 113 moveto
      -17 0 atan dup cos 8 mul 204 exch sub
      exch sin 8 mul 96 exch sub lineto
   stroke
grestore
gsave
   newpath
      204 96 8 3 0 -17 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      204 131 moveto
      18 0 atan dup cos 8 mul 204 exch sub
      exch sin 8 mul 149 exch sub lineto
   stroke
grestore
gsave
   newpath
      204 149 8 3 0 18 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      185 177 moveto (Surface) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      262 177 moveto ( B) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      264 64 moveto 288 64 lineto 288 96 lineto 264 96 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      264 152 moveto 288 152 lineto 288 184 lineto 264 184 lineto
   closepath stroke
   1 setmiterlimit
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Nov 13 16:54:01 1998
%%EndDocument

 endTexFig
 2334 4383 a FG(q)2375 4397 y FB(c;B)2511 4383 y FH(=)25
b Fz(\000)p FG(q)2719 4397 y FB(c;A)527 4876 y FG(q)568
4890 y FB(c;A)710 4876 y FD({)46 b FH(the)30 b(c)m(harge)i(of)e(the)h
(capacitor)g FG(c)g FH(on)f(the)h(plate)f(that)h(is)e(inside)f(the)j
(surface)p 3493 4789 125 4 v 3493 4901 4 112 v 58 w FG(A)p
3614 4901 V 3493 4904 125 4 v 29 w FH(.)527 5063 y Fz(C)575
5077 y FB(A)667 5063 y FD({)46 b FC(surfac)-5 b(e)31
b(c)-5 b(ap)g(acitors)31 b FH(of)p 1597 4976 V 1597 5088
4 112 v 57 w FG(A)p 1718 5088 V 1597 5091 125 4 v 28
w FH(.)40 b(The)28 b FC(set)h FH(of)f(capacitors)i(that)f(are)f(part)h
(of)f(the)h(cutset)727 5221 y(forming)g(the)i(c)m(harge)h(surface)p
1812 5134 V 1812 5246 4 112 v 58 w FG(A)p 1933 5246 V
1812 5249 125 4 v 29 w FH(.)527 5407 y FG(Q)599 5421
y FB(A)691 5407 y FD({)46 b FH(the)30 b(total)h(c)m(harge)h(inside)c
(the)j(surface)p 2169 5320 V 2169 5432 4 112 v 58 w FG(A)p
2290 5432 V 2169 5435 125 4 v 29 w FH(.)p eop
%%Page: 33 46
33 45 bop 3809 -200 a FH(33)300 246 y
 26049576 11722303 394690 37429821 30851645 51309772 startTexFig
 300 246 a
%%BeginDocument: figs/network.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      776 185 moveto
      776 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      776 245 moveto
      776 305 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      776 185 moveto
      807 224 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 136 moveto
      56 199 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 224 moveto
      56 291 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      199 135 moveto
      133 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      113 135 moveto
      59 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      233 135 moveto
      203 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      329 135 moveto
      299 135 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   pat8 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      233 125 moveto 299 125 lineto 299 145 lineto 233 145 lineto
   closepath fill
grestore
gsave
   1.415 setmiterlimit
   newpath
      233 125 moveto 299 125 lineto 299 145 lineto 233 145 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 135 moveto
      200 205 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 135 moveto
      328 205 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      329 205 moveto
      278 205 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      257 205 moveto
      199 205 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 135 moveto
      392 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      425 135 moveto
      395 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      521 135 moveto
      491 135 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   pat8 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      425 125 moveto 491 125 lineto 491 145 lineto 425 145 lineto
   closepath fill
grestore
gsave
   1.415 setmiterlimit
   newpath
      425 125 moveto 491 125 lineto 491 145 lineto 425 145 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      392 185 moveto
      392 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      392 245 moveto
      392 305 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      392 185 moveto
      424 227 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      519 135 moveto
      564 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      585 135 moveto
      649 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      681 135 moveto
      651 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      777 135 moveto
      747 135 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   pat8 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      681 125 moveto 747 125 lineto 747 145 lineto 681 145 lineto
   closepath fill
grestore
gsave
   1.415 setmiterlimit
   newpath
      681 125 moveto 747 125 lineto 747 145 lineto 681 145 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      657 305 moveto
      606 305 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      586 305 moveto
      527 305 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      656 305 moveto
      776 305 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      392 305 moveto
      528 305 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      392 305 moveto
      56 305 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 285 moveto
      56 305 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      31 199 moveto
      82 199 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      31 225 moveto
      47.67 221.67 64.67 221.67
      82 225 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      114 167 moveto
      114 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      135 167 moveto
      132.33 146.33 132.33 125.33
      135 104 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      258 237 moveto
      258 174 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      279 237 moveto
      276.33 216.33 276.33 195.33
      279 174 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      565 167 moveto
      565 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      586 167 moveto
      583.33 146.33 583.33 125.33
      586 104 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      606 274 moveto
      606 337 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      585 274 moveto
      587.67 294.67 587.67 315.67
      585 337 curveto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      64 254 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      79 262 moveto (1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      373 201 moveto
      388 203 lineto
      401 213 lineto
      412 227 lineto
      425 237 lineto
      465 231 lineto
      495 229 lineto
      516 229 lineto
      525 229 lineto
      526 229 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [16 16] 0 setdash
   newpath
      467 234 moveto
      467 233 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      568 88 moveto
      570 98 lineto
      571 127 lineto
      571 161 lineto
      571 180 lineto
      569 198 lineto
      560 215 lineto
      544 224 lineto
      528 229 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      290 77 moveto
      315 74 lineto
      344 73 lineto
      390 72 lineto
      442 68 lineto
      479 72 lineto
      504 77 lineto
      548 82 lineto
      567 86 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      287 76 moveto
      258 75 lineto
      218 76 lineto
      187 78 lineto
      167 81 lineto
      147 87 lineto
      135 93 lineto
      128 104 lineto
      128 116 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      128 118 moveto
      128 129 lineto
      128 162 lineto
      136 180 lineto
      156 198 lineto
      173 214 lineto
      183 226 lineto
      200 235 lineto
      223 238 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      226 238 moveto
      257 245 lineto
      266 236 lineto
      272 238 lineto
      279 248 lineto
      311 238 lineto
      347 212 lineto
      372 202 lineto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      225 187 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      240 199 moveto (3) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      145 164 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      160 172 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      532 168 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      547 176 moveto (4) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      619 288 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      634 296 moveto (5) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      32 191 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      32 231 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      88 127 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      146 115 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      232 231 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      290 219 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      536 127 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      594 115 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      634 327 moveto (+) tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      576 315 moveto (_) tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      260 107 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      275 115 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      441 108 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      456 116 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      696 106 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      711 114 moveto (3) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      416 195 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      431 203 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      793 188 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      808 196 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      17 249 moveto
      17 235 lineto
      20 222 lineto
      38 216 lineto
      65 216 lineto
      88 219 lineto
      94 224 lineto
      102 241 lineto
      105 266 lineto
      115 285 lineto
      132 290 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      17 250 moveto
      21 265 lineto
      24 283 lineto
      27 296 lineto
      30 308 lineto
      36 320 lineto
      48 327 lineto
      59 336 lineto
      86 339 lineto
      124 343 lineto
      179 348 lineto
      274 352 lineto
      322 351 lineto
      373 351 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      376 351 moveto
      411 349 lineto
      460 348 lineto
      494 349 lineto
      530 349 lineto
      562 349 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      136 293 moveto
      214 293 lineto
      297 293 lineto
      331 294 lineto
      360 290 lineto
      375 281 lineto
      376 257 lineto
      381 235 lineto
      399 232 lineto
      413 245 lineto
      436 260 lineto
      450 270 lineto
      467 283 lineto
      490 294 lineto
      529 296 lineto
      560 288 lineto
      572 268 lineto
      586 262 lineto
      593 268 lineto
      593 305 lineto
      593 338 lineto
      589 349 lineto
      574 351 lineto
      560 350 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      607 345 moveto
      625 348 lineto
      645 343 lineto
      683 337 lineto
      731 331 lineto
      768 328 lineto
      790 319 lineto
      793 293 lineto
      793 262 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      602 345 moveto
      600 326 lineto
      600 274 lineto
      607 255 lineto
      628 251 lineto
      663 251 lineto
      683 253 lineto
      703 249 lineto
      722 246 lineto
      746 239 lineto
      765 232 lineto
      782 235 lineto
      792 258 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      578 135 moveto
      580 175 lineto
      611 182 lineto
      663 180 lineto
      724 181 lineto
      760 197 lineto
      779 212 lineto
      798 231 lineto
      820 227 lineto
      832 191 lineto
      821 147 lineto
      811 106 lineto
      798 82 lineto
      762 74 lineto
      727 74 lineto
      678 73 lineto
      632 71 lineto
      595 76 lineto
      579 93 lineto
      578 131 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      59 208 moveto
      83 208 lineto
      110 197 lineto
      119 175 lineto
      119 138 lineto
      120 102 lineto
      110 87 lineto
      66 85 lineto
      30 87 lineto
      15 110 lineto
      14 182 lineto
      27 207 lineto
      54 208 lineto
   stroke
   [] 0 setdash
grestore

% OVAL
newpath 56 137 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 56 137 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 56 305 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 56 305 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 392 305 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 392 305 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 392 249 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 392 249 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 392 185 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 392 185 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 392 135 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 392 135 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 328 135 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 328 135 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 200 135 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 200 135 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 520 135 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 520 135 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 648 135 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 648 135 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 776 135 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 776 135 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 776 183 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 776 183 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 776 247 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 776 247 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 776 305 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 776 305 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      88 48 moveto (A) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      77 60 moveto
      24 -13 atan dup cos 8 mul 64 exch sub
      exch sin 8 mul 84 exch sub lineto
   stroke
grestore
gsave
   newpath
      64 84 8 3 -13 24 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      248 48 moveto (B) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 42 moveto
      25 35 atan dup cos 8 mul 307 exch sub
      exch sin 8 mul 67 exch sub lineto
   stroke
grestore
gsave
   newpath
      307 67 8 3 35 25 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      608 48 moveto (C) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      634 40 moveto
      28 41 atan dup cos 8 mul 675 exch sub
      exch sin 8 mul 68 exch sub lineto
   stroke
grestore
gsave
   newpath
      675 68 8 3 41 28 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      776 376 moveto (D) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      754 370 moveto
      -27 -45 atan dup cos 8 mul 709 exch sub
      exch sin 8 mul 343 exch sub lineto
   stroke
grestore
gsave
   newpath
      709 343 8 3 -45 -27 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      504 384 moveto (E) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      470 372 moveto
      -18 -27 atan dup cos 8 mul 443 exch sub
      exch sin 8 mul 354 exch sub lineto
   stroke
grestore
gsave
   newpath
      443 354 8 3 -27 -18 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      366 323 moveto
      416 323 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      366 323 moveto
      360 339 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      391 323 moveto
      385 339 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 323 moveto
      410 339 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      392 307 moveto
      392 323 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 422 279 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      422 285 moveto (0) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 57 111 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      57 117 moveto (1) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 196 111 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      196 117 moveto (2) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 388 111 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      388 117 moveto (3) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 516 107 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      516 113 moveto (4) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 644 105 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      644 111 moveto (5) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 776 106 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      776 112 moveto (6) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 748 283 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      748 289 moveto (7) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      380 292 moveto
      404 316 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      380 316 moveto
      404 292 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      44 125 moveto
      68 149 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      44 149 moveto
      68 125 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      188 124 moveto
      212 148 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      188 148 moveto
      212 124 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      764 123 moveto
      788 147 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      764 147 moveto
      788 123 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      764 291 moveto
      788 315 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      764 315 moveto
      788 291 lineto
   stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      72 24 moveto 104 24 lineto 104 56 lineto 72 56 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      232 24 moveto 264 24 lineto 264 56 lineto 232 56 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      592 24 moveto 624 24 lineto 624 56 lineto 592 56 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      488 360 moveto 520 360 lineto 520 392 lineto 488 392 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      760 352 moveto 792 352 lineto 792 384 lineto 760 384 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Sep 25 10:54:06 1998
%%EndDocument

 endTexFig
 1269 1927 a FH(Figure)30 b(2.8:)41 b(Net)m(w)m(ork)32
b(with)d(c)m(harge)j(surfaces.)460 2142 y
 17997903 10258803 2368143 38021857 23944560 50520391 startTexFig
 460 2142 a
%%BeginDocument: figs/csgraph.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      604 222 moveto
      604 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      604 282 moveto
      604 342 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      604 222 moveto
      635 261 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      121 173 moveto
      121 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      121 261 moveto
      121 328 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      264 172 moveto
      198 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      178 172 moveto
      124 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      262 172 moveto
      326 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      414 172 moveto
      329 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      326 222 moveto
      326 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      326 282 moveto
      326 342 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      326 222 moveto
      358 264 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      414 172 moveto
      459 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 172 moveto
      544 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      605 172 moveto
      542 172 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      539 342 moveto
      488 342 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      468 342 moveto
      409 342 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      539 342 moveto
      604 342 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      410 342 moveto
      122 342 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      121 322 moveto
      121 342 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 236 moveto
      147 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 262 moveto
      112.67 258.67 129.67 258.67
      147 262 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      179 204 moveto
      179 141 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 204 moveto
      197.33 183.33 197.33 162.33
      200 141 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      317 114 moveto
      317 51 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      338 114 moveto
      335.33 93.33 335.33 72.33
      338 51 curveto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      460 204 moveto
      460 141 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      481 204 moveto
      478.33 183.33 478.33 162.33
      481 141 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      488 311 moveto
      488 374 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      467 311 moveto
      469.67 331.67 469.67 352.67
      467 374 curveto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      69 287 moveto (-q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      98 296 moveto (1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [16 16] 0 setdash
   newpath
      533 325 moveto
      533 324 lineto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      350 115 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      365 127 moveto (3) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      183 229 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      198 237 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      459 233 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      474 241 moveto (4) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      465 295 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      480 303 moveto (5) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      350 232 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      365 240 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      621 225 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      636 233 moveto (2) show
   grestore

% OVAL
newpath 121 174 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 121 174 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 121 342 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 121 342 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 326 342 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 326 342 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 326 286 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 326 286 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 326 222 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 326 222 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 326 172 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 326 172 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 604 172 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 604 172 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 604 220 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 604 220 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 604 284 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 604 284 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 604 342 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 604 342 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      99 152 moveto (A) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      300 360 moveto
      350 360 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      300 360 moveto
      294 376 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      325 360 moveto
      319 376 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      350 360 moveto
      344 376 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      326 344 moveto
      326 360 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      91 127 moveto 119 127 lineto 119 158 lineto 91 158 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      71 221 moveto (+q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      100 230 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      155 261 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      170 269 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      132 155 moveto (+q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      161 164 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      205 156 moveto (-q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      234 165 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      320 154 moveto (B) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      312 129 moveto 340 129 lineto 340 160 lineto 312 160 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      269 68 moveto (+q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      298 77 moveto (3) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      342 69 moveto (-q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      371 78 moveto (3) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      317 82 moveto
      304 84 lineto
      298 84 lineto
      290 85 lineto
      283 86 lineto
      278 87 lineto
      273 89 lineto
      269 91 lineto
      266 93 lineto
      264 97 lineto
      263 101 lineto
      263 105 lineto
      263 108 lineto
      263 113 lineto
      263 117 lineto
      264 121 lineto
      265 125 lineto
      268 133 lineto
      271 139 lineto
      276 146 lineto
      283 153 lineto
      292 160 lineto
      302 165 lineto
      313 169 lineto
      323 171 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      337 82 moveto
      350 84 lineto
      356 84 lineto
      364 85 lineto
      371 86 lineto
      376 87 lineto
      381 89 lineto
      385 91 lineto
      388 93 lineto
      390 97 lineto
      391 101 lineto
      391 105 lineto
      391 108 lineto
      391 113 lineto
      391 117 lineto
      390 121 lineto
      389 125 lineto
      386 133 lineto
      383 139 lineto
      378 146 lineto
      371 153 lineto
      362 160 lineto
      352 165 lineto
      341 169 lineto
      331 171 lineto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      413 159 moveto (+q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      442 168 moveto (4) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      486 160 moveto (-q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      515 169 moveto (4) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      423 326 moveto (-q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      452 335 moveto (5) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      495 327 moveto (+q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      525 336 moveto (5) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      596 154 moveto (C) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      588 129 moveto 616 129 lineto 616 160 lineto 588 160 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      623 328 moveto (D) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      615 303 moveto 643 303 lineto 643 334 lineto 615 334 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      293 325 moveto (E) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      285 300 moveto 313 300 lineto 313 331 lineto 285 331 lineto
   closepath stroke
   1 setmiterlimit
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Aug 19 10:46:09 1998
%%EndDocument

 endTexFig
 2840 2076 923 4 v 2838 2362 4 286 v 2890 2187 a FH(cs-graph)2890
2300 y(no)s(de)p 3265 2362 V 3314 2187 a(net)m(w)m(ork)3314
2300 y(no)s(des)p 3761 2362 V 2840 2366 923 4 v 2838
2591 4 226 v 2890 2524 a(A)265 b Fz( f)30 b FH(1)p 3389
2537 46 4 v 1 w Fz(g)p 3761 2591 4 226 v 2840 2595 923
4 v 2838 2821 4 226 v 2890 2753 a FH(B)269 b Fz( f)30
b FH(2)p 3389 2766 46 4 v 1 w(,)g(3,)h(4)g Fz(g)p 3761
2821 4 226 v 2840 2824 923 4 v 2838 3050 4 226 v 2890
2982 a FH(C)267 b Fz( f)30 b FH(5)p 3389 2995 46 4 v
1 w(,)g(6)h Fz(g)p 3761 3050 4 226 v 2840 3053 923 4
v 2838 3279 4 226 v 2890 3211 a FH(D)264 b Fz( f)30 b
FH(7)p 3389 3224 46 4 v 31 w Fz(g)p 3761 3279 4 226 v
2840 3282 923 4 v 2838 3508 4 226 v 2890 3440 a FH(E)271
b Fz( f)30 b FH(0)p 3389 3453 46 4 v 31 w Fz(g)p 3761
3508 4 226 v 2840 3511 923 4 v 700 3666 a FH(Figure)i(2.9:)47
b(CS-graph)32 b(for)g(net)m(w)m(ork)i(in)d(Fig.)48 b(2.8)700
3779 y(.)2840 3657 y(Figure)34 b(2.10:)50 b(CS-graph)2840
3770 y(table)30 b(for)g(Fig.)41 b(2.9.)p 468 4040 3265
4 v 468 4993 4 954 v 569 4223 a(CS-graph)29 b(no)s(de)p
1193 4136 125 4 v 1193 4248 4 112 v 58 w(A)p 1314 4248
V 1193 4251 125 4 v 29 w(:)154 b FG(q)1538 4237 y FA(1)1577
4223 y FH(\()p FG(V)1665 4237 y FA(1)1705 4223 y FG(;)15
b(V)1798 4237 y FA(0)1837 4223 y FH(\))21 b(+)f FG(q)2025
4237 y FA(2)2064 4223 y FH(\()p FG(V)2152 4237 y FA(1)2192
4223 y FG(;)15 b(V)2285 4237 y FA(2)2325 4223 y FH(\))25
b(=)83 b FG(q)2580 4237 y FA(1)2619 4223 y FH(\()p FG(V)2728
4184 y Fv(\000)2707 4247 y FA(1)2787 4223 y FG(;)15 b(V)2900
4184 y Fv(\000)2880 4247 y FA(0)2959 4223 y FH(\))21
b(+)f FG(q)3147 4237 y FA(2)3186 4223 y FH(\()p FG(V)3294
4184 y Fv(\000)3274 4247 y FA(1)3353 4223 y FG(;)15 b(V)3467
4184 y Fv(\000)3446 4247 y FA(2)3526 4223 y FH(\))573
4448 y(CS-graph)29 b(no)s(de)p 1197 4361 121 4 v 1197
4473 4 112 v 58 w(B)p 1314 4473 V 1197 4476 121 4 v 29
w(:)83 b Fz(\000)p FG(q)1538 4462 y FA(2)1577 4448 y
FH(\()p FG(V)1665 4462 y FA(1)1705 4448 y FG(;)15 b(V)1798
4462 y FA(2)1837 4448 y FH(\))21 b(+)f FG(q)2025 4462
y FA(4)2064 4448 y FH(\()p FG(V)2152 4462 y FA(4)2192
4448 y FG(;)15 b(V)2285 4462 y FA(5)2325 4448 y FH(\))25
b(=)83 b Fz(\000)p FG(q)2651 4462 y FA(2)2690 4448 y
FH(\()p FG(V)2798 4410 y Fv(\000)2778 4473 y FA(1)2857
4448 y FG(;)15 b(V)2971 4410 y Fv(\000)2950 4473 y FA(2)3030
4448 y FH(\))21 b(+)e FG(q)3217 4462 y FA(4)3256 4448
y FH(\()p FG(V)3365 4410 y Fv(\000)3344 4473 y FA(4)3424
4448 y FG(;)c(V)3538 4410 y Fv(\000)3517 4473 y FA(5)3597
4448 y FH(\))572 4674 y(CS-graph)29 b(no)s(de)p 1196
4587 123 4 v 1196 4699 4 112 v 58 w(C)p 1314 4699 V 1196
4702 123 4 v 28 w(:)570 b Fz(\000)p FG(q)2025 4688 y
FA(4)2064 4674 y FH(\()p FG(V)2152 4688 y FA(4)2192 4674
y FG(;)15 b(V)2285 4688 y FA(5)2325 4674 y FH(\))25 b(=)83
b Fz(\000)p FG(q)2651 4688 y FA(4)2690 4674 y FH(\()p
FG(V)2798 4636 y Fv(\000)2778 4699 y FA(4)2857 4674 y
FG(;)15 b(V)2971 4636 y Fv(\000)2950 4699 y FA(5)3030
4674 y FH(\))568 4900 y(CS-graph)29 b(no)s(de)p 1192
4813 126 4 v 1192 4925 4 112 v 58 w(D)p 1314 4925 V 1192
4928 126 4 v 29 w(:)641 b FG(q)2025 4914 y FA(5)2064
4900 y FH(\()p FG(V)2152 4914 y FA(7)2192 4900 y FG(;)15
b(V)2285 4914 y FA(0)2325 4900 y FH(\))25 b(=)83 b FG(q)2580
4914 y FA(5)2619 4900 y FH(\()p FG(V)2728 4862 y Fv(\000)2707
4925 y FA(7)2787 4900 y FG(;)15 b(V)2900 4862 y Fv(\000)2880
4925 y FA(0)2959 4900 y FH(\))p 3729 4993 4 954 v 468
4996 3265 4 v 707 5150 a(Figure)30 b(2.11:)43 b(Charge)30
b(conserv)-5 b(ation)30 b(equations)h(for)f(CS-graph)f(in)g(Fig.)41
b(2.9.)p eop
%%Page: 34 47
34 46 bop 3809 -200 a FH(34)300 99 y(Based)29 b(on)g(prop)s(erties)e(2)
i(and)f(3)h(of)g(the)g(c)m(harge)g(surface,)h(and)e(De\014nitions)f
(2.4.1,)k(the)e(c)m(harge)g(conser-)300 324 y(v)-5 b(ation)30
b(equation)g(for)h(the)f(c)m(harge)i(surface)p 1834 237
125 4 v 1834 349 4 112 v 58 w FG(A)p 1955 349 V 1834
352 125 4 v 59 w FH(can)f(b)s(e)e(written)h(as:)1310
550 y Ft(X)1287 734 y FB(c)p Fv(2C)1402 745 y Fu(A)1467
631 y FG(q)1508 645 y FB(c;A)1615 631 y FH(\()p FG(t)p
FH(\))c(=)f FG(Q)1912 645 y FB(A)2423 631 y FH(where)30
b FG(t)25 b Fz(2)g FG(I)2870 646 y FB(k)3668 631 y FH(\(2.25\))300
937 y(According)30 b(to)h(prop)s(ert)m(y)f(4,)h(the)f(total)i(c)m
(harge)f FG(Q)2047 951 y FB(A)2134 937 y FH(inside)e(the)h(surface)p
2855 850 V 2855 962 4 112 v 59 w FG(A)p 2977 962 V 2855
965 125 4 v 58 w FH(can)h(b)s(e)f(expressed)g(as;)1693
1243 y FG(Q)1765 1257 y FB(A)1847 1243 y FH(=)1965 1163
y Ft(X)1943 1346 y FB(c)p Fv(2C)2058 1357 y Fu(A)2123
1243 y FG(q)2164 1257 y FB(c;A)2271 1243 y FH(\()p FG(t)2339
1258 y FB(k)r Fv(\000)p FA(1)2472 1243 y FH(\))1161 b(\(2.26\))300
1550 y(The)39 b(\014nal)f(form)h(of)h(the)f(c)m(harge)i(conserv)-5
b(ation)40 b(equation)f(is)g(obtained)f(b)m(y)i(com)m(bining)e
(\(2.25\))k(and)300 1776 y(\(2.26\).)h(The)30 b(result)f(is:)1564
1920 y Ft(X)1541 2104 y FB(c)p Fv(2C)1656 2115 y Fu(A)1722
2001 y FG(q)1763 2015 y FB(c;A)1869 2001 y FH(\()p FG(t)p
FH(\))d(=)2117 1920 y Ft(X)2094 2104 y FB(c)p Fv(2C)2209
2115 y Fu(A)2275 2001 y FG(q)2316 2015 y FB(c;A)2422
2001 y FH(\()p FG(t)2490 2016 y FB(k)r Fv(\000)p FA(1)2623
2001 y FH(\))1010 b(\(2.27\))300 2276 y(Note,)34 b(that)e(\(2.27\))i
(relates)e(the)g(capacitor)g(c)m(harges)h(at)g(the)f(end)f(of)h(the)f
(switc)m(hing)g(in)m(terv)-5 b(al)31 b FG(I)3655 2291
y FB(k)r Fv(\000)p FA(1)3819 2276 y FH(to)300 2502 y(the)g(capacitor)g
(c)m(harges)g(during)d(the)j(switc)m(hing)e(in)m(terv)-5
b(al)29 b FG(I)2387 2517 y FB(k)2430 2502 y FH(.)300
2743 y Fx(2.4.2)112 b(Linearly)37 b(indep)s(enden)m(t)h(c)m(harge)g
(conserv)-6 b(ation)37 b(equations)300 3028 y FH(There)d(is)g(more)h
(than)f(one)h(w)m(a)m(y)h(to)g(partition)d(a)i(net)m(w)m(ork)h(in)m(to)
e(c)m(harge)i(surfaces.)54 b(F)-8 b(or)35 b(example,)h(in)300
3254 y(Fig.)j(2.12,)30 b(it)c(is)g(p)s(ossible)e(to)k(de\014ne)e(the)g
(c)m(harge)i(surfaces)p 2362 3167 V 2362 3279 4 112 v
55 w FG(A)p 2483 3279 V 2362 3282 125 4 v 55 w FH(and)p
2686 3167 130 4 v 2686 3279 4 112 v 55 w FG(B)p 2813
3279 V 2686 3282 130 4 v 32 w FH(.)40 b(Their)25 b(c)m(harge)j(conserv)
-5 b(ation)300 3479 y(equations)30 b(are:)p 1518 3699
125 4 v 1518 3811 4 112 v 1546 3786 a FG(A)p 1639 3811
V 1518 3814 125 4 v 54 w FH(:)174 b Fz(\000)p FG(q)1979
3800 y FA(1)2018 3786 y FH(\()p FG(t)p FH(\))83 b(=)25
b Fz(\000)p FG(q)2412 3800 y FA(1)2451 3786 y FH(\()p
FG(t)2519 3801 y FB(k)r Fv(\000)p FA(1)2652 3786 y FH(\))981
b(\(2.28\))p 1513 3949 130 4 v 1513 4061 4 112 v 1541
4037 a FG(B)p 1639 4061 V 1513 4064 130 4 v 58 w FH(:)209
b FG(q)1943 4051 y FA(2)1982 4037 y FH(\()p FG(t)p FH(\))119
b(=)25 b FG(q)2341 4051 y FA(2)2380 4037 y FH(\()p FG(t)2448
4052 y FB(k)r Fv(\000)p FA(1)2581 4037 y FH(\))p FG(:)1027
b FH(\(2.29\))300 4343 y(Alternativ)m(ely)-8 b(,)29 b(it)f(is)g(p)s
(ossible)e(to)j(de\014ne)f(the)h(c)m(harge)g(surface)p
2499 4256 128 4 v 2499 4368 4 112 v 57 w FG(C)p 2623
4368 V 2499 4371 128 4 v 63 w FH(whic)m(h)e(is)h(the)h(com)m(bination)f
(of)p 3775 4256 125 4 v 3775 4368 4 112 v 57 w FG(A)p
3897 4368 V 3775 4371 125 4 v 300 4569 a FH(and)p 477
4482 130 4 v 477 4594 4 112 v 58 w FG(B)p 603 4594 V
477 4597 130 4 v 33 w FH(.)40 b(The)30 b(c)m(harge)i(conserv)-5
b(ation)30 b(equation)h(for)p 2179 4482 128 4 v 2179
4594 4 112 v 58 w FG(C)p 2303 4594 V 2179 4597 128 4
v 65 w FH(is)p 1198 4788 V 1198 4900 4 112 v 1226 4875
a FG(C)p 1322 4900 V 1198 4903 128 4 v 60 w FH(:)116
b Fz(\000)p FG(q)1604 4889 y FA(1)1643 4875 y FH(\()p
FG(t)p FH(\))21 b(+)f FG(q)1899 4889 y FA(2)1938 4875
y FH(\()p FG(t)p FH(\))25 b(=)g Fz(\000)p FG(q)2274 4889
y FA(1)2313 4875 y FH(\()p FG(t)2381 4890 y FB(k)r Fv(\000)p
FA(1)2514 4875 y FH(\))c(+)f FG(q)2702 4889 y FA(2)2741
4875 y FH(\()p FG(t)2809 4890 y FB(k)r Fv(\000)p FA(1)2942
4875 y FH(\))p FG(:)666 b FH(\(2.30\))300 5181 y(Note)33
b(that)f(\(2.30\))j(is)30 b(a)i(linear)f(com)m(bination)g(of)h
(\(2.28\))i(and)d(\(2.29\).)47 b(It)32 b(do)s(es)f(not)h(pro)m(vide)f
(an)m(y)h(new)300 5407 y(information)d(ab)s(out)h(the)g(net)m(w)m(ork.)
p eop
%%Page: 35 48
35 47 bop 3809 -200 a FH(35)921 7 y
 18616238 6512394 197345 45192069 18813583 51704463 startTexFig
 921 7 a
%%BeginDocument: figs/cs_comb.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      46 104 moveto
      91 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 105 moveto
      176 105 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      342 105 moveto
      393 105 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      413 105 moveto
      472 105 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      92 137 moveto
      92 74 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      113 137 moveto
      110.33 116.33 110.33 95.33
      113 74 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      393 136 moveto
      393 73 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      414 136 moveto
      411.33 115.33 411.33 94.33
      414 73 curveto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      48 145 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      63 153 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      345 135 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      360 143 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      63 97 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      121 85 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      365 98 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      423 86 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      305 139 moveto
      311 142 lineto
      319 146 lineto
      329 148 lineto
      348 152 lineto
      376 152 lineto
      395 143 lineto
      398 115 lineto
      398 86 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      306 138 moveto
      299 134 lineto
      288 128 lineto
      270 117 lineto
      267 98 lineto
      277 84 lineto
      299 75 lineto
      318 71 lineto
      338 67 lineto
      354 61 lineto
      383 58 lineto
      395 65 lineto
      398 80 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      104 104 moveto
      106 136 lineto
      116 148 lineto
      142 150 lineto
      178 145 lineto
      213 139 lineto
      237 128 lineto
      249 107 lineto
      254 97 lineto
      266 80 lineto
      268 67 lineto
      257 60 lineto
      231 56 lineto
      197 54 lineto
      170 54 lineto
      149 54 lineto
      126 56 lineto
      108 61 lineto
      104 76 lineto
      104 100 lineto
   stroke
   [] 0 setdash
grestore

% OVAL
newpath 47 105 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 47 105 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 175 104 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 175 104 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      147 37 moveto (A) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      168 31 moveto
      17 28 atan dup cos 8 mul 196 exch sub
      exch sin 8 mul 48 exch sub lineto
   stroke
grestore
gsave
   newpath
      196 48 8 3 28 17 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      48 105 moveto
      16 81 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      48 105 moveto
      8 105 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      48 105 moveto
      16 129 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      222 105 moveto
      172 105 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      282 105 moveto
      342 105 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      222 105 moveto
      261 74 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 220 105 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 220 105 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 284 105 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 284 105 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 342 105 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 342 105 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 469 104 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 469 104 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      468 104 moveto
      500 80 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      468 104 moveto
      508 104 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      468 104 moveto
      500 128 lineto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      304 43 moveto (B) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      326 38 moveto
      19 21 atan dup cos 8 mul 347 exch sub
      exch sin 8 mul 57 exch sub lineto
   stroke
grestore
gsave
   newpath
      347 57 8 3 21 19 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      65 132 moveto
      -13 22 atan dup cos 8 mul 87 exch sub
      exch sin 8 mul 119 exch sub lineto
   stroke
grestore
gsave
   newpath
      87 119 8 3 22 -13 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      364 123 moveto
      -5 21 atan dup cos 8 mul 385 exch sub
      exch sin 8 mul 118 exch sub lineto
   stroke
grestore
gsave
   newpath
      385 118 8 3 21 -5 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      97 110 moveto
      97 133 lineto
      99 148 lineto
      107 157 lineto
      118 163 lineto
      156 173 lineto
      185 181 lineto
      222 184 lineto
      263 184 lineto
      283 183 lineto
      327 183 lineto
      365 179 lineto
      387 170 lineto
      403 151 lineto
      406 138 lineto
      406 103 lineto
      406 81 lineto
      403 55 lineto
      378 31 lineto
      328 12 lineto
      294 12 lineto
      271 12 lineto
      204 12 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      93 17 moveto
      94 17 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      98 110 moveto
      97 85 lineto
      97 62 lineto
      97 47 lineto
      98 35 lineto
      102 24 lineto
      108 17 lineto
      124 12 lineto
      143 13 lineto
      160 12 lineto
      181 11 lineto
      203 12 lineto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      449 172 moveto (C) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      440 164 moveto
      -1 -33 atan dup cos 8 mul 407 exch sub
      exch sin 8 mul 163 exch sub lineto
   stroke
grestore
gsave
   newpath
      407 163 8 3 -33 -1 tgifarrowtip
   closepath fill
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      448 153 moveto 465 153 lineto 465 176 lineto 448 176 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      300 24 moveto 319 24 lineto 319 46 lineto 300 46 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      145 21 moveto 161 21 lineto 161 40 lineto 145 40 lineto
   closepath stroke
   1 setmiterlimit
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Nov 13 18:45:59 1998
%%EndDocument

 endTexFig
 1259 1028 a FH(Figure)30 b(2.12:)42 b(Charge)30 b(surface)h(com)m
(binations.)536 1288 y(Let)e FG(N)770 1302 y FB(cs)865
1288 y FH(b)s(e)e(the)h(n)m(um)m(b)s(er)f(of)h(linearly)e(indep)s
(enden)m(t)f(c)m(harge)k(surfaces)f(in)f(the)h(net)m(w)m(ork.)41
b(Then,)300 1514 y(it)34 b(is)g(p)s(ossible)f(to)j(write)e
FG(N)1264 1528 y FB(cs)1366 1514 y FH(linearly)f(indep)s(enden)m(t)f(c)
m(harge)k(conserv)-5 b(ation)36 b(equations)e(of)h(the)g(form)300
1740 y(in)29 b(\(2.27\):)1548 1848 y Ft(X)1533 2032 y
FB(c)p Fv(2C)1648 2041 y Fs(1)1698 1929 y FG(q)1739 1943
y FB(c;)p FA(1)1828 1929 y FH(\()p FG(t)p FH(\))d(=)2125
1848 y Ft(X)2110 2032 y FB(c)p Fv(2C)2225 2041 y Fs(1)2275
1929 y FG(q)2316 1943 y FB(c;)p FA(1)2405 1929 y FH(\()p
FG(t)2473 1944 y FB(k)r Fv(\000)p FA(1)2606 1929 y FH(\))1548
2127 y Ft(X)1533 2310 y FB(c)p Fv(2C)1648 2319 y Fs(2)1698
2207 y FG(q)1739 2221 y FB(c;)p FA(2)1828 2207 y FH(\()p
FG(t)p FH(\))g(=)2125 2127 y Ft(X)2110 2310 y FB(c)p
Fv(2C)2225 2319 y Fs(2)2275 2207 y FG(q)2316 2221 y FB(c;)p
FA(2)2405 2207 y FH(\()p FG(t)2473 2222 y FB(k)r Fv(\000)p
FA(1)2606 2207 y FH(\))1729 2420 y(.)1729 2453 y(.)1729
2486 y(.)2383 2420 y(.)2383 2453 y(.)2383 2486 y(.)1427
2631 y Ft(X)1372 2815 y FB(c)p Fv(2C)1487 2826 y Fu(N)1535
2834 y(cs)1616 2712 y FG(q)1657 2726 y FB(c;N)1764 2734
y Fu(cs)1828 2712 y FH(\()p FG(t)p FH(\))g(=)2165 2631
y Ft(X)2110 2815 y FB(c)p Fv(2C)2225 2826 y Fu(N)2273
2834 y(cs)2354 2712 y FG(q)2395 2726 y FB(c;N)2502 2734
y Fu(cs)2566 2712 y FH(\()p FG(t)2634 2727 y FB(k)r Fv(\000)p
FA(1)2767 2712 y FH(\))p FG(:)3668 2329 y FH(\(2.31\))300
2962 y(A)k(con)m(v)m(enien)m(t)i(w)m(a)m(y)f(to)g(represen)m(t)g(the)f
(equations)g(in)g(\(2.31\))i(is)e(to)h(de\014ne)e(the)i(column)e(v)m
(ector)828 3256 y FD(q)883 3270 y FB(cs)951 3256 y FH(\()p
FG(t)p FH(\))d Fz(\021)1176 3087 y Ft(2)1176 3237 y(4)1246
3175 y(X)1231 3359 y FB(c)p Fv(2C)1346 3368 y Fs(1)1396
3256 y FG(q)1437 3270 y FB(c;)p FA(1)1526 3256 y FH(\()p
FG(t)p FH(\))91 b FG(;)1867 3175 y Ft(X)1852 3359 y FB(c)p
Fv(2C)1967 3368 y Fs(2)2016 3256 y FG(q)2057 3270 y FB(c;)p
FA(2)2147 3256 y FH(\()p FG(t)p FH(\))g FG(;)106 b Fz(\001)15
b(\001)g(\001)108 b FG(;)2870 3175 y Ft(X)2816 3359 y
FB(c)p Fv(2C)2931 3370 y Fu(N)2979 3378 y(cs)3059 3256
y FG(q)3100 3270 y FB(c;N)3207 3278 y Fu(cs)3271 3087
y Ft(3)3271 3237 y(5)3327 3110 y FB(t)3668 3256 y FH(\(2.32\))300
3551 y(where)30 b(the)g(sup)s(erscript)e FG(t)i FH(represen)m(ts)h(the)
f(transp)s(ose)g(op)s(erator.)41 b(Then)29 b(\(2.31\))k(can)e(b)s(e)e
(written)h(as:)1734 3846 y FD(q)1789 3860 y FB(cs)1857
3846 y FH(\()p FG(t)p FH(\))c(=)f FD(q)2137 3860 y FB(cs)2204
3846 y FH(\()p FG(t)2272 3861 y FB(k)r Fv(\000)p FA(1)2405
3846 y FH(\))p FG(:)1203 b FH(\(2.33\))300 4140 y(Since,)29
b(the)g(capacitor)h(c)m(harges)g FG(q)1471 4154 y FB(c;i)1578
4140 y FH(are)f(functions)f(of)h(the)g(no)s(de)f(v)m(oltages,)j(the)f
(c)m(harge)g(conserv)-5 b(ation)300 4366 y(equations)30
b(in)f(\(2.33\))k(can)d(b)s(e)g(written)g(as:)1601 4661
y FD(q)1656 4675 y FB(cs)1723 4661 y FH(\()p FD(x)p FH(\()p
FG(t)p FH(\)\))d(=)e FD(q)2129 4675 y FB(cs)2197 4661
y FH(\()p FD(x)p FH(\()p FG(t)2355 4676 y FB(k)r Fv(\000)p
FA(1)2488 4661 y FH(\)\))p FG(;)1085 b FH(\(2.34\))300
4956 y(where)30 b FD(x)p FH(\()p FG(t)p FH(\))h(is)e(the)i(same)g(v)m
(ector)h(of)e(unkno)m(wns)f(as)i(in)e(the)h(MNA)h(equations)f
(\(2.24\).)536 5181 y(The)40 b(next)h(t)m(w)m(o)h(sections)f(describ)s
(e)e(metho)s(ds)h(to)i(lo)s(cate)f(the)g(linearly)d(indep)s(enden)m(t)h
(c)m(harge)300 5407 y(surfaces)30 b(and)g(to)h(construct)g(the)f
(corresp)s(onding)f(c)m(harge)i(conserv)-5 b(ation)31
b(equations.)p eop
%%Page: 36 49
36 48 bop 3809 -200 a FH(36)300 99 y Fx(2.4.3)112 b(Lo)s(cating)38
b(linearly)d(indep)s(enden)m(t)j(c)m(harge)g(surfaces)300
383 y FH(The)25 b(linearly)e(indep)s(enden)m(t)h(c)m(harge)j(surfaces)e
(are)h(lo)s(cated)g(b)m(y)g(constructing)f(a)h FC(char)-5
b(ge)29 b(surfac)-5 b(e)29 b(gr)-5 b(aph)300 609 y FH(whic)m(h)29
b(will)f(b)s(e)i(referred)f(to)i(as)g(a)g FC(CS-gr)-5
b(aph)p FH(.)398 818 y FD(De\014nition)31 b FH(2.4.2:)562
1048 y FD(CS-graph)k({)45 b FH(A)25 b(net)m(w)m(ork)g(graph)f(deriv)m
(ed)g(b)m(y)g(merging)g(together)i(the)e(terminal)f(no)s(des)727
1217 y(of)31 b(all)e(branc)m(hes)h FC(exc)-5 b(ept)31
b FH(for)f(the)h(branc)m(hes)f(of)g(capacitors)h(and)f(op)s(en)g(switc)
m(hes.)562 1406 y FD(CS-graph)35 b(no)s(de)g({)46 b FH(A)30
b(no)s(de)g(on)g(the)h(CS-graph.)562 1595 y FD(net)m(w)m(ork)k(no)s(de)
g({)46 b FH(A)30 b(a)h(no)s(de)f(of)g(the)h(original)d(net)m(w)m(ork.)
300 1881 y(As)i(an)h(example,)f(the)g(c)m(harge)i(surface)e(graph)g
(for)g(the)h(net)m(w)m(ork)g(in)e(Fig.)i(2.8)g(is)f(sho)m(wn)f(in)h
(Fig.)g(2.9.)536 2107 y(As)k(a)h(consequence)g(of)f(its)g
(de\014nition,)f(the)h(CS-graph)f(con)m(tains)h FG(N)2944
2121 y FB(cs)3034 2107 y FH(+)23 b(1)34 b(no)s(des,)h(where)f
FG(N)3833 2121 y FB(cs)300 2333 y FH(is)i(the)h(n)m(um)m(b)s(er)e(of)i
(linearly)e(indep)s(enden)m(t)f(c)m(harge)k(surfaces.)60
b(Eac)m(h)37 b(CS-graph)f(no)s(de)g(represen)m(ts)h(a)300
2559 y(c)m(harge)22 b(surface,)i(while)19 b(the)i(capacitors)h(attac)m
(hed)h(to)f(the)g(CS-graph)e(no)s(de)g(are)i(the)f FC(surfac)-5
b(e)25 b(c)-5 b(ap)g(acitors)300 2784 y FH(of)31 b(the)f(corresp)s
(onding)e(c)m(harge)k(surface.)536 3010 y(An)m(y)k(set)g(of)f
FG(N)1064 3024 y FB(cs)1167 3010 y FH(CS-graph)f(no)s(des)h(corresp)s
(onds)f(to)i(a)g(set)g(of)f(linearly)f(indep)s(enden)m(t)f(c)m(harge)
300 3236 y(surfaces)40 b(that)i(can)f(b)s(e)e(used)h(in)g(CS/MNA.)h
(Therefore,)i(it)d(is)g(necessary)h(to)g(select)g(one)g(no)s(de)f(on)
300 3462 y(the)34 b(CS-graph)f(whose)h(c)m(harge)h(surface)f(will)d
(not)j(b)s(e)g(used.)50 b(In)34 b(SWITCAP3)f(implemen)m(tation,)h(the)
300 3688 y(surface)c(con)m(taining)g(the)h(net)m(w)m(ork)g(reference)g
(no)s(de)f(is)f(c)m(hosen.)398 3915 y FD(De\014nition)i
FH(2.4.3:)562 4145 y FD(Reference)36 b(c)m(harge)f(surface)h({)45
b FH(The)28 b(c)m(harge)h(surface)f(con)m(taining)g(the)g(net)m(w)m
(ork)h(ref-)727 4314 y(erence)i(no)s(de.)562 4503 y FD(CS-graph)k
(reference)g(no)s(de)g({)46 b FH(The)37 b(CS-graph)g(no)s(de)g(corresp)
s(onding)f(to)j(the)f FC(r)-5 b(ef-)727 4672 y(er)g(enc)g(e)33
b(char)-5 b(ge)34 b(surfac)-5 b(e)p FH(.)300 4956 y(In)41
b(the)g(example)g(of)h(the)f(net)m(w)m(ork)h(in)e(Fig.)i(2.8,)k(the)41
b(c)m(harge)i(surface)p 2879 4869 129 4 v 2879 4980 4
112 v 69 w FG(E)p 3004 4980 V 2879 4983 129 4 v 75 w
FH(con)m(tains)f(the)f(net)m(w)m(ork)300 5181 y(reference)g(no)s(de)e
(0.)70 b(Therefore)40 b(CS-graph)f(no)s(de)p 2127 5094
V 2127 5206 4 112 v 68 w FG(E)p 2252 5206 V 2127 5209
129 4 v 74 w FH(is)g(designated)g(as)i(the)f FC(CS-gr)-5
b(aph)43 b(r)-5 b(efer)g(enc)g(e)300 5407 y(no)g(de)p
FH(.)p eop
%%Page: 37 50
37 49 bop 3809 -200 a FH(37)536 99 y(The)37 b(CS-graph)g(can)h(b)s(e)f
(represen)m(ted)g(b)m(y)g(a)h(table)g(as)g(in)e(Fig.)i(2.10.)64
b(It)37 b(lists)f(the)i(CS-graph)300 324 y(no)s(des)30
b(and)f(the)i(corresp)s(onding)d(sets)j(of)g(net)m(w)m(ork)g(no)s(des)e
(that)i(w)m(ere)g(merged)g(in)m(to)f(them.)398 568 y
FD(De\014nition)h FH(2.4.4:)123 b(The)30 b FC(CS-gr)-5
b(aph)34 b(T)-7 b(able)31 b FH(has)f(the)h(general)f(form:)p
1661 676 1334 4 v 1659 961 4 286 v 1710 786 a(CS-graph)1710
899 y(no)s(des)p 2310 961 V 2344 786 a(Sets)p 2344 799
163 4 v 25 w(of)24 b(net)m(w)m(ork)2344 899 y(no)s(des)p
2992 961 4 286 v 1661 965 1334 4 v 1659 1191 4 226 v
1710 1039 102 4 v 1710 1148 4 109 v 1739 1123 a(1)p 1809
1148 V 1710 1151 102 4 v 469 w Fz( N)2419 1137 y FA(1)p
2992 1191 4 226 v 1661 1194 1334 4 v 1659 1420 4 226
v 1710 1268 102 4 v 1710 1377 4 109 v 1739 1352 a FH(2)p
1809 1377 V 1710 1380 102 4 v 469 w Fz( N)2419 1366 y
FA(2)p 2992 1420 4 226 v 1661 1423 1334 4 v 1659 1649
4 226 v 1710 1515 a FH(.)1710 1548 y(.)1710 1581 y(.)518
b Fz( )2465 1515 y FH(.)2465 1548 y(.)2465 1581 y(.)p
2992 1649 V 1659 1875 V 1710 1720 197 4 v 1710 1845 4
126 v 1739 1807 a FG(N)1812 1821 y FB(cs)p 1904 1845
V 1710 1848 197 4 v 2253 1807 a Fz( N)2419 1821 y FB(N)2475
1829 y Fu(cs)p 2992 1875 4 226 v 1661 1878 1334 4 v 1659
2104 4 226 v 1710 1949 354 4 v 1710 2075 4 126 v 1739
2036 a FG(N)1812 2050 y FB(cs)1899 2036 y FH(+)20 b(1)p
2061 2075 V 1710 2078 354 4 v 218 w Fz( N)2419 2050 y
FB(N)2475 2058 y Fu(cs)2536 2050 y FA(+1)p 2992 2104
4 226 v 1661 2107 1334 4 v 527 2315 a FH(where)g Fz(N)855
2329 y FB(i)904 2315 y FH(is)f(the)i FC(set)g FH(of)g(net)m(w)m(ork)g
(no)s(des)f(that)h(w)m(ere)g(merged)g(in)m(to)f(the)h(CS-graph)f(no)s
(de)p 3560 2230 88 4 v 3560 2340 4 110 v 48 w FG(i)p
3644 2340 V 3560 2343 88 4 v 28 w FH(,)527 2484 y(where)35
b FG(i)f FH(=)f(\(1)p FG(;)15 b FH(2)p FG(;)g(:)g(:)g(:)j(;)d(N)1405
2498 y FB(cs)1496 2484 y FH(+)23 b(1\).)56 b(If)35 b
Fz(N)1922 2498 y FB(i)1985 2484 y FH(con)m(tains)g(the)g(net)m(w)m(ork)
h(reference)g(no)s(de,)g(then)527 2654 y(CS-graph)30
b(no)s(de)p 1151 2569 V 1151 2679 4 110 v 57 w FG(i)p
1236 2679 V 1151 2682 88 4 v 59 w FH(is)g(designated)g(as)g(the)h
FC(CS-gr)-5 b(aph)34 b(r)-5 b(efer)g(enc)g(e)33 b(no)-5
b(de)p FH(.)300 2954 y(Before)32 b(presen)m(ting)e(the)h(general)g
(algorithm,)f(a)h(simple)e(example)h(of)h(constructing)g(CS-graph)e(T)
-8 b(able)300 3180 y(for)30 b(the)h(net)m(w)m(ork)g(of)f(Fig.)h(2.8)h
(is)d(giv)m(en.)300 3349 y FD(Example)g FH(2.4.1:)300
3579 y(Start)i(with)e(eac)m(h)i(net)m(w)m(ork)g(no)s(de)f(in)f(a)i
(separate)g(set.)1290 3804 y Fz(f)p FH(1)p Fz(g)h(f)p
FH(2)p Fz(g)g(f)p FH(3)p Fz(g)f(f)p FH(4)p Fz(g)h(f)p
FH(5)p Fz(g)g(f)p FH(6)p Fz(g)f(f)p FH(7)p Fz(g)h(f)p
FH(0)p Fz(g)300 4030 y FH(Merge)g(the)e(sets)h(that)g(con)m(tain)g(the)
f(no)s(des)g(of)g(a)h(branc)m(h)f(that)h(is)e(not)i(a)f(capacitor)i(or)
300 4256 y(an)e(op)s(en)g(switc)m(h.)740 4482 y(device)g(D1:)41
b(merge\(2,3\))571 b Fz(f)p FH(1)p Fz(g)32 b(f)p FH(2,3)p
Fz(g)g(f)p FH(4)p Fz(g)g(f)p FH(5)p Fz(g)g(f)p FH(6)p
Fz(g)f(f)p FH(7)p Fz(g)h(f)p FH(0)p Fz(g)740 4708 y FH(device)e(D2:)41
b(merge\(3,4\))571 b Fz(f)p FH(1)p Fz(g)32 b(f)p FH(2,3,4)p
Fz(g)h(f)p FH(5)p Fz(g)f(f)p FH(6)p Fz(g)f(f)p FH(7)p
Fz(g)h(f)p FH(0)p Fz(g)740 4933 y FH(device)e(D3:)41
b(merge\(5,6\))571 b Fz(f)p FH(1)p Fz(g)32 b(f)p FH(2,3,4)p
Fz(g)h(f)p FH(5,6)p Fz(g)f(f)p FH(7)p Fz(g)g(f)p FH(0)p
Fz(g)300 5159 y FH(Assign)d(a)i(CS-graph)e(no)s(de)h(to)h(eac)m(h)h
(set)f(of)f(net)m(w)m(ork)h(no)s(des.)p 740 5298 125
4 v 740 5410 4 112 v 768 5385 a FG(A)p 861 5410 V 740
5413 125 4 v 28 w Fz( f)p FH(1)p Fz(g)p FH(,)p 1147 5298
130 4 v 1147 5410 4 112 v 60 w FG(B)p 1274 5410 V 1147
5413 130 4 v 33 w Fz( f)p FH(2,3,4)p Fz(g)p FH(,)p 1701
5298 128 4 v 1701 5410 4 112 v 62 w FG(C)p 1826 5410
V 1701 5413 128 4 v 34 w Fz( f)p FH(5,6)p Fz(g)p FH(,)p
2183 5298 135 4 v 2183 5410 4 112 v 61 w FG(D)p 2314
5410 V 2183 5413 135 4 v 31 w Fz( f)p FH(7)p Fz(g)p FH(,)p
2600 5298 129 4 v 2600 5410 4 112 v 60 w FG(E)p 2725
5410 V 2600 5413 129 4 v 34 w Fz( f)p FH(0)p Fz(g)p eop
%%Page: 38 51
38 50 bop 3809 -200 a FH(38)300 165 y(Designate)31 b(CS-graph)f(no)s
(de)p 1342 78 129 4 v 1342 190 4 112 v 58 w FG(E)p 1468
190 V 1342 193 129 4 v 64 w FH(as)g(a)h(CS-graph)e(reference)i(no)s(de)
f(since)f(it)h(con)m(tains)300 391 y(the)h(net)m(w)m(ork)g(reference)g
(no)s(de)e(0.)41 b(The)30 b(result)g(is)f(the)i(table)f(in)f(Fig.)h
(2.10.)p 1200 602 1800 4 v 536 849 a(The)g(general)g(algorithm)g(for)g
(constructing)g(a)h(CS-graph)e(T)-8 b(able)30 b(is)f(as)i(follo)m(ws.)
300 1082 y FC(A)n(lgorithm)g FH(2.4.1:)138 b Fw(CS-Graph)46
b(Table)300 1257 y(Given:)395 1430 y FG(N)468 1444 y
FB(n)515 1430 y Fw(:)96 b(Number)46 b(of)h(network)f(nodes)g
(\(non-reference\))395 1603 y FG(n)450 1617 y FB(i)478
1603 y Fw(:)95 b(Network)46 b(node)h FG(i)p Fw(,)h FH(\()p
FG(i)26 b FH(=)e(1)p FG(;)15 b(:)g(:)g(:)j(;)d(N)1877
1617 y FB(n)1924 1603 y FH(\))395 1776 y FG(n)450 1790
y FB(N)506 1798 y Fu(n)549 1790 y FA(+1)643 1776 y Fw(:)95
b(Network)46 b(reference)f(node)300 1949 y(Initialize:)395
2122 y(/*Create)h(a)h(list)g(of)g FG(N)1375 2136 y FB(n)1442
2122 y FH(+)20 b(1)49 b Fw(sets)d(with)h(each)f(set)h(containig)f(one)h
(network)e(node*/)395 2295 y FG(N)10 b(ode)p 617 2295
29 4 v 35 w(set)p 770 2295 V 35 w(l)r(ist)47 b Fw(=)g
Fz(f)i(f)p FG(n)1271 2309 y FA(1)1310 2295 y Fz(g)p Fw(,)f
Fz(f)p FG(n)1551 2309 y FA(2)1590 2295 y Fz(g)p Fw(,)g
FG(:)15 b(:)g(:)i Fw(,)47 b Fz(f)p FG(n)2048 2309 y FB(N)2104
2317 y Fu(n)2151 2295 y Fz(g)p Fw(,)h Fz(f)p FG(n)2392
2309 y FB(N)2448 2317 y Fu(n)2490 2309 y FA(+1)2584 2295
y Fz(g)h(g)300 2468 y Fw(Start:)395 2641 y(for)e(\()h(each)e(device)h
(\))539 2813 y(for)g(\()g(each)g(branch)f(in)h(device)f(\))682
2986 y(if)h(\()g(branch)g(is)g(a)g(capacitor)e(or)j(open)e(switch)g(\))
825 3159 y(do)h(nothing)682 3332 y(else)825 3505 y FG(n)880
3519 y FB(i)955 3505 y Fw(=)h(positive)d(branch)i(node)825
3678 y FG(n)880 3692 y FB(j)964 3678 y Fw(=)g(negative)f(branch)g(node)
825 3851 y Fz(N)900 3865 y FB(a)989 3851 y Fw(=)h FG(N)10
b(ode)p 1306 3851 V 35 w(set)48 b Fw(containing)d FG(n)2081
3865 y FB(i)825 4024 y Fz(N)900 4039 y FB(b)982 4024
y Fw(=)i FG(N)10 b(ode)p 1299 4024 V 35 w(set)48 b Fw(containing)d
FG(n)2074 4038 y FB(j)825 4197 y Fw(if)i(\()p Fz(N)1091
4211 y FB(a)1180 4197 y Fw(==)g Fz(N)1398 4212 y FB(b)1432
4197 y Fw(\))g(/*)h FG(n)1726 4211 y FB(i)1801 4197 y
Fw(and)f FG(n)2047 4211 y FB(j)2131 4197 y Fw(are)g(in)g(the)g(same)f
(set)h(*/)968 4370 y(do)g(nothing)825 4543 y(else)968
4716 y(merge\()p Fz(N)1331 4730 y FB(a)1371 4716 y Fw(,)p
Fz(N)1494 4731 y FB(b)1527 4716 y Fw(\))539 4888 y(end)g(for)395
5061 y(end)g(for)300 5234 y(Result:)94 b FG(N)10 b(ode)p
952 5234 V 35 w(set)p 1105 5234 V 34 w(l)r(ist)47 b Fw(is)g
Fz(f)h(N)1627 5248 y FA(1)1666 5234 y Fw(,)g Fz(N)1837
5248 y FA(2)1876 5234 y Fw(,)f FG(:)15 b(:)g(:)i Fw(,)47
b Fz(N)2263 5248 y FB(N)2319 5256 y Fu(cs)2384 5234 y
Fw(,)g Fz(N)2554 5248 y FB(N)2610 5256 y Fu(cs)2671 5248
y FA(+1)2813 5234 y Fz(g)395 5407 y Fw(for)g(\()p FG(i)h
Fw(=)g FH(1)g Fw(to)f FG(N)1118 5421 y FB(cs)1206 5407
y FH(+)19 b(1)p Fw(\))p eop
%%Page: 39 52
39 51 bop 3809 -200 a FH(39)539 99 y Fw(assign)46 b FG(C)7
b(S)p 1012 99 29 4 v 39 w(g)s(r)s(aph)p 1282 99 V 34
w(node)1498 113 y FB(i)1574 99 y Fw(to)48 b Fz(N)1793
113 y FB(i)539 271 y Fw(if)f(\()g Fz(N)852 285 y FB(i)928
271 y Fw(contains)e(network)h(reference)f(node)i(\))682
444 y(designate)e FG(C)7 b(S)p 1298 444 V 39 w(g)s(r)s(aph)p
1568 444 V 35 w(node)1785 458 y FB(i)1861 444 y Fw(as)47
b(CS-graph)f(reference)f(node)395 617 y(end)i(for)536
911 y FH(In)36 b(the)h(next)g(section)h(it)e(is)g(sho)m(wn)g(ho)m(w)h
(the)g(CS-graph)f(table)h(is)f(used)g(in)f(constructing)i(the)300
1137 y(c)m(harge)32 b(conserv)-5 b(ation)30 b(equations)g(\(2.31\).)300
1380 y Fx(2.4.4)112 b(Device)37 b Fq(stamp)g Fx(for)h(c)m(harge)f
(conserv)-6 b(ation)37 b(equations)300 1664 y FH(Similar)27
b(to)j(the)h(metho)s(d)e(used)g(for)h(the)g(MNA)g(equations,)g(the)g(c)
m(harge)h(conserv)-5 b(ation)30 b(equations)g(can)300
1890 y(b)s(e)42 b(constructed)i(b)m(y)e(de\014ning)f(a)j
FC(stamp)g FH(for)f(eac)m(h)h(t)m(yp)s(e)f(of)g(elemen)m(t.)79
b(Since,)46 b(b)m(y)d(de\014nition,)h(the)300 2116 y(capacitors)38
b(are)g(the)g(only)e(elemen)m(ts)i(that)g(con)m(tribute)f(to)h(the)g(c)
m(harge)h(conserv)-5 b(ation)37 b(equations,)i(it)300
2342 y(is)d(only)g(necessary)i(to)g(de\014ne)e(a)i(stamp)f(for)f(the)i
(capacitor)g(and)e(devices)h(that)h(con)m(tain)f(capacitiv)m(e)300
2568 y(branc)m(hes.)j(The)30 b(stamp)g(for)h(the)f(capacitor)h(follo)m
(ws.)536 2794 y(Giv)m(en)48 b(a)g(capacitor)g(connected)h(b)s(et)m(w)m
(een)f(net)m(w)m(ork)h(no)s(des)e FG(i)h FH(and)f FG(j)5
b FH(,)53 b(let)47 b(+)p FG(q)s FH(\()p FG(V)3512 2808
y FB(i)3541 2794 y FG(;)15 b(V)3634 2808 y FB(j)3671
2794 y FH(\))48 b(and)300 3019 y Fz(\000)p FG(q)s FH(\()p
FG(V)503 3033 y FB(i)531 3019 y FG(;)15 b(V)624 3033
y FB(j)661 3019 y FH(\))41 b(b)s(e)f(the)h(c)m(harges)g(on)g(the)f
(plates)h(of)f(the)h(capacitor)g(connected)h(to)f(no)s(des)f
FG(i)h FH(and)f FG(j)46 b FH(re-)300 3245 y(sp)s(ectiv)m(ely)-8
b(.)51 b(V)-8 b(oltages)36 b FG(V)1179 3259 y FB(i)1241
3245 y FH(and)d FG(V)1474 3259 y FB(j)1545 3245 y FH(are)h(the)g(no)s
(de)f(v)m(oltages.)53 b(The)34 b(CS-graph)f(table)h(is)e(used)i(to)g
(map)300 3471 y(the)23 b(net)m(w)m(ork)g(no)s(des)f(to)h(CS-graph)e(no)
s(des.)38 b(Let)22 b(no)s(des)g FG(i)h FH(and)f FG(j)28
b FH(map)22 b(to)h(CS-graph)e(no)s(des)p 3454 3384 125
4 v 3454 3496 4 112 v 50 w FG(A)p 3575 3496 V 3454 3499
125 4 v 51 w FH(and)p 3770 3384 130 4 v 3770 3496 4 112
v 50 w FG(B)p 3897 3496 V 3770 3499 130 4 v 300 3697
a FH(resp)s(ectiv)m(ely)-8 b(.)40 b(Then)30 b(the)g(con)m(tribution)f
(of)i(this)e(capacitor)i(to)g(\(2.31\))i(is:)647 3938
y Fw(Eqn.)94 b(for)47 b(CS-graph)f(node)p 1792 3851 125
4 v 1792 3963 4 112 v 74 w FG(A)p 1914 3963 V 1792 3966
125 4 v 29 w Fw(:)732 4107 y Fz(\001)15 b(\001)g(\001)22
b FH(+)e FG(q)s FH(\()p FG(V)1082 4121 y FB(i)1110 4107
y FH(\()p FG(t)p FH(\))p FG(;)15 b(V)1306 4121 y FB(j)1343
4107 y FH(\()p FG(t)p FH(\)\))22 b(+)110 b Fz(\001)15
b(\001)g(\001)27 b FH(=)116 b Fz(\001)15 b(\001)g(\001)21
b FH(+)f FG(q)s FH(\()p FG(V)2352 4121 y FB(i)2380 4107
y FH(\()p FG(t)2448 4122 y FB(k)r Fv(\000)p FA(1)2581
4107 y FH(\))p FG(;)15 b(V)2709 4121 y FB(j)2746 4107
y FH(\()p FG(t)2814 4122 y FB(k)r Fv(\000)p FA(1)2947
4107 y FH(\)\))21 b(+)111 b Fz(\001)15 b(\001)g(\001)641
4276 y Fw(Eqn.)95 b(for)47 b(CS-graph)e(node)p 1787 4189
130 4 v 1787 4301 4 112 v 75 w FG(B)p 1914 4301 V 1787
4304 130 4 v 33 w Fw(:)732 4446 y Fz(\001)15 b(\001)g(\001)22
b(\000)e FG(q)s FH(\()p FG(V)1082 4460 y FB(i)1110 4446
y FH(\()p FG(t)p FH(\))p FG(;)15 b(V)1306 4460 y FB(j)1343
4446 y FH(\()p FG(t)p FH(\)\))22 b(+)110 b Fz(\001)15
b(\001)g(\001)27 b FH(=)116 b Fz(\001)15 b(\001)g(\001)21
b(\000)f FG(q)s FH(\()p FG(V)2352 4460 y FB(i)2380 4446
y FH(\()p FG(t)2448 4461 y FB(k)r Fv(\000)p FA(1)2581
4446 y FH(\))p FG(;)15 b(V)2709 4460 y FB(j)2746 4446
y FH(\()p FG(t)2814 4461 y FB(k)r Fv(\000)p FA(1)2947
4446 y FH(\)\))21 b(+)111 b Fz(\001)15 b(\001)g(\001)3668
4181 y FH(\(2.35\))436 4687 y Fz(\017)46 b FH(If)32 b(the)p
778 4600 125 4 v 778 4712 4 112 v 61 w FG(A)p 900 4712
V 778 4715 125 4 v 60 w FH(or)p 1048 4600 130 4 v 1048
4712 4 112 v 61 w FG(B)p 1175 4712 V 1048 4715 130 4
v 65 w FH(is)f(a)h(CS-graph)g(reference)g(no)s(de,)g(then)g(the)h(con)m
(tribution)e(to)i(that)f(no)s(de)g(is)527 4856 y(discarded.)536
5157 y(Note)25 b(that,)i(if)p 1043 5070 125 4 v 1043
5181 4 112 v 51 w FG(A)p 1165 5181 V 1043 5184 125 4
v 52 w FH(and)p 1362 5070 130 4 v 1362 5181 4 112 v 52
w FG(B)p 1489 5181 V 1362 5184 130 4 v 56 w FH(happ)s(en)22
b(to)j(b)s(e)e(the)i(same)f(CS-graph)f(no)s(de,)i(then)e(the)h(con)m
(tribution)300 5382 y(cancels)i(itself.)39 b(F)-8 b(or)27
b(example,)g(the)f(no)s(des)f(of)i(capacitor)g FG(C)2354
5396 y FA(3)2419 5382 y FH(in)e(Fig.)i(2.8)g(map)f(to)h(the)f(same)h
(CS-graph)p eop
%%Page: 40 53
40 52 bop 3809 -200 a FH(40)300 99 y(no)s(de,)30 b(as)h(sho)m(wn)f(in)f
(Fig.)i(2.9)h(and)e(Fig.)g(2.10.)43 b(This)29 b(means)h(that)i(b)s(oth)
d(plates)i(of)f(the)h(capacitor)h(are)300 324 y(within)h(the)j(same)g
(c)m(harge)h(surface.)57 b(The)36 b(c)m(harges)g(on)g(the)g(t)m(w)m(o)h
(plates)f(cancel)g(eac)m(h)h(other)f(and)f(do)300 550
y(not)c(con)m(tribute)f(to)h(the)f(total)i(c)m(harge)f(inside)d(the)j
(surface.)536 776 y(The)24 b(c)m(harge)i(conserv)-5 b(ation)25
b(equations)f(for)h(the)g(net)m(w)m(ork)g(of)g(Fig.)g(2.8)h(and)e(the)h
(CS-graph)e(T)-8 b(able)300 1002 y(of)31 b(Fig.)f(2.10)i(are)f(giv)m
(en)f(in)f(Fig.)i(2.11,)h(where)e(the)g(notation)h FG(V)2535
964 y Fv(\000)2515 1028 y FB(i)2625 1002 y FH(represen)m(ts)f
FG(V)3106 1016 y FB(i)3134 1002 y FH(\()p FG(t)3202 1017
y FB(k)r Fv(\000)p FA(1)3335 1002 y FH(\).)300 1288 y
FL(2.5)135 b(Charge)46 b(Surface)f(/Mo)t(di\014ed)f(No)t(dal)i
(Analysis)f(\(CS/MNA\))300 1604 y FH(In)36 b(this)g(section,)k(the)d(c)
m(harge)h(conserv)-5 b(ation)38 b(concept)g(and)e(the)h(MNA)h(are)g
(com)m(bined)e(resulting)f(in)300 1830 y(the)c(Charge)f(Surface)g(/)h
(Mo)s(di\014ed)d(no)s(dal)h(Analysis)g(\(CS/MNA\).)536
2056 y(In)23 b(Sec.)h(2.5.1,)j(the)d(relationship)d(b)s(et)m(w)m(een)k
(the)e(K)m(CL)h(equations)f(and)g(the)h(c)m(harge)h(conserv)-5
b(ation)300 2282 y(equations)33 b(is)g(describ)s(ed,)g(and)g(it)h(is)e
(sho)m(wn)i(ho)m(w)f(the)h(t)m(w)m(o)h(sets)g(of)f(equations)f(can)h(b)
s(e)f(com)m(bined)g(to)300 2507 y(form)g(the)g(new)g(set)h(of)g(CS/MNA)
f(equations.)50 b(In)32 b(Sec.)i(2.5.2)h(the)f(device)f
FC(stamps)i FH(that)f(are)g(used)e(to)300 2733 y(construct)f(the)f
(CS/MNA)h(equations)f(are)h(giv)m(en.)300 2977 y Fx(2.5.1)112
b(CS/MNA)38 b(equations)300 3261 y FH(Charge)27 b(conserv)-5
b(ation)27 b(in)f(a)i(c)m(harge)g(surface)f(is)f(really)g(a)h
(generalized)g(v)m(ersion)g(of)g(K)m(CL)g(in)e(the)j(c)m(harge)300
3487 y(domain.)37 b(It)25 b(w)m(as)f(illustrated)e(in)g(Sec.)j(2.2.1)g
(and)f(it)f(is)g(pro)m(v)m(en)h(in)f(App)s(endix)e(A,)26
b(that)e(the)h(relationship)300 3713 y(b)s(et)m(w)m(een)31
b(a)g(c)m(harge)g(conserv)-5 b(ation)31 b(equation)f(and)g(the)g(K)m
(CL)g(equations)g(is:)518 3915 y Ft(Z)601 3941 y FB(t)564
4104 y(t)589 4074 y Fs(+)589 4129 y Fu(k)q Fr(\000)p
Fs(1)755 3949 y Ft(X)725 4133 y FB(i)p Fv(2N)854 4144
y Fu(A)1010 3861 y Ft(0)1010 4011 y(@)1098 3949 y(X)1083
4134 y FB(b)p Fv(2B)1206 4144 y Fu(i)1248 4030 y FG(I)1288
4045 y FB(b;i)1366 4030 y FH(\()p FG(\034)10 b FH(\))26
b(=)f(0)1653 3861 y Ft(1)1653 4011 y(A)1010 4191 y(|)p
1047 4191 284 10 v 284 w({z)p 1405 4191 V 284 w(})1077
4293 y FH(K)m(CL)30 b(at)h(no)s(de)e FG(i)1741 4030 y(d\034)1955
3980 y FA(same)g(as)2005 4030 y Fz(\000)-16 b(!)2340
3949 y Ft(X)2317 4133 y FB(c)p Fv(2C)2432 4144 y Fu(A)2498
4030 y FG(q)2539 4044 y FB(c;A)2645 4030 y FH(\()p FG(t)p
FH(\))26 b(=)2893 3949 y Ft(X)2870 4133 y FB(c)p Fv(2C)2985
4144 y Fu(A)3051 4030 y FG(q)3092 4044 y FB(c;A)3198
4030 y FH(\()p FG(t)3266 4045 y FB(k)r Fv(\000)p FA(1)3399
4030 y FH(\))2317 4187 y Ft(|)p 2354 4187 484 10 v 484
w({z)p 2912 4187 V 484 w(})2384 4289 y FH(c)m(harge)32
b(conserv)-5 b(ation)30 b(in)f FG(A)3668 4030 y FH(\(2.36\))300
4478 y(where)36 b FG(t)602 4493 y FB(k)r Fv(\000)p FA(1)769
4478 y FG(<)e(t)h Fz(\024)f FG(t)1080 4493 y FB(k)1123
4478 y FH(,)k FG(I)1226 4493 y FB(b;i)1340 4478 y FH(and)d
Fz(B)1582 4492 y FB(i)1646 4478 y FH(are)h(from)g(De\014nitions)e
(2.3.1,)40 b Fz(N)2813 4492 y FB(A)2906 4478 y FH(is)35
b(from)g(De\014nitions)g(2.4.4,)300 4704 y(and)30 b FG(q)518
4718 y FB(c;A)655 4704 y FH(and)g Fz(C)880 4718 y FB(A)967
4704 y FH(are)h(from)e(De\014nitions)g(2.4.1.)536 4929
y(The)f(relationship)d(in)h(\(2.36\))k(states)f(that)g(the)f(c)m(harge)
h(conserv)-5 b(ation)28 b(equation)f(for)h(the)g(c)m(harge)300
5155 y(surface)p 604 5068 125 4 v 604 5180 4 112 v 56
w FG(A)p 725 5180 V 604 5183 125 4 v 56 w FH(is)e(the)i(sum)f(of)g(the)
h(K)m(CL)f(equations)h(for)f(the)h(no)s(des)f(inside)e(the)j(surface)p
3320 5068 V 3320 5180 4 112 v 55 w FG(A)p 3442 5180 V
3320 5183 125 4 v 29 w FH(,)g(in)m(tegrated)300 5381
y(o)m(v)m(er)47 b(time.)85 b(The)44 b(imp)s(ortan)m(t)h(prop)s(ert)m(y)
f(rev)m(ealed)i(b)m(y)f(\(2.36\))j(is)c(that)i(the)f(c)m(harge)i
(conserv)-5 b(ation)p eop
%%Page: 41 54
41 53 bop 3809 -200 a FH(41)875 7 y
 19339837 10590863 0 40718909 19339837 51309772 startTexFig
 875 7 a
%%BeginDocument: figs/csmna.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   newpath
      36 64 moveto 148 64 lineto 148 144 lineto 36 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      80 134 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      92 138 moveto (cs) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      87 78 moveto (1) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      160 98 moveto (charge conservation) show
      160 116 moveto (equations) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      160 182 moveto (KCL equations for) show
      160 200 moveto (non-reference nodes ) show
   grestore

% OVAL
newpath 87 109 1 1 tgifellipse fill
gsave
   newpath 87 109 1 1 tgifellipse stroke
grestore

% OVAL
newpath 87 101 1 1 tgifellipse fill
gsave
   newpath 87 101 1 1 tgifellipse stroke
grestore

% OVAL
newpath 87 93 1 1 tgifellipse fill
gsave
   newpath 87 93 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      88 144 moveto 148 144 lineto 148 224 lineto 88 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      92 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      104 218 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      115 158 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 115 189 1 1 tgifellipse fill
gsave
   newpath 115 189 1 1 tgifellipse stroke
grestore

% OVAL
newpath 115 181 1 1 tgifellipse fill
gsave
   newpath 115 181 1 1 tgifellipse stroke
grestore

% OVAL
newpath 115 173 1 1 tgifellipse fill
gsave
   newpath 115 173 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      148 64 moveto 308 64 lineto 308 144 lineto 148 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      148 144 moveto 308 144 lineto 308 224 lineto 148 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      4 64 moveto 36 64 lineto 36 304 lineto 4 304 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      12 290 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      24 294 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      19 86 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 19 193 1 1 tgifellipse fill
gsave
   newpath 19 193 1 1 tgifellipse stroke
grestore

% OVAL
newpath 19 185 1 1 tgifellipse fill
gsave
   newpath 19 185 1 1 tgifellipse stroke
grestore

% OVAL
newpath 19 177 1 1 tgifellipse fill
gsave
   newpath 19 177 1 1 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      128 42 moveto (Equations) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      416 64 moveto 448 64 lineto 448 144 lineto 416 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      424 134 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      436 138 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      431 78 moveto (1) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      460 106 moveto (node) show
      460 124 moveto (voltages) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      460 182 moveto (branch) show
      460 200 moveto (currents ) show
   grestore

% OVAL
newpath 431 109 1 1 tgifellipse fill
gsave
   newpath 431 109 1 1 tgifellipse stroke
grestore

% OVAL
newpath 431 101 1 1 tgifellipse fill
gsave
   newpath 431 101 1 1 tgifellipse stroke
grestore

% OVAL
newpath 431 93 1 1 tgifellipse fill
gsave
   newpath 431 93 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      416 144 moveto 448 144 lineto 448 224 lineto 416 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      424 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      436 218 moveto (b) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      431 158 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 431 189 1 1 tgifellipse fill
gsave
   newpath 431 189 1 1 tgifellipse stroke
grestore

% OVAL
newpath 431 181 1 1 tgifellipse fill
gsave
   newpath 431 181 1 1 tgifellipse stroke
grestore

% OVAL
newpath 431 173 1 1 tgifellipse fill
gsave
   newpath 431 173 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      448 64 moveto 520 64 lineto 520 144 lineto 448 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      448 144 moveto 520 144 lineto 520 224 lineto 448 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      384 64 moveto 416 64 lineto 416 224 lineto 384 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      392 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      404 218 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      399 86 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 399 153 1 1 tgifellipse fill
gsave
   newpath 399 153 1 1 tgifellipse stroke
grestore

% OVAL
newpath 399 145 1 1 tgifellipse fill
gsave
   newpath 399 145 1 1 tgifellipse stroke
grestore

% OVAL
newpath 399 137 1 1 tgifellipse fill
gsave
   newpath 399 137 1 1 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      456 38 moveto (Unknowns) tgifcentertext show
      456 56 moveto (\(same as in MNA\)) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      160 250 moveto (Implicid BCR equations) show
      160 268 moveto (\(same as in MNA\) ) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      88 224 moveto 148 224 lineto 148 304 lineto 88 304 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      108 294 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      120 298 moveto (b) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      115 238 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 115 269 1 1 tgifellipse fill
gsave
   newpath 115 269 1 1 tgifellipse stroke
grestore

% OVAL
newpath 115 261 1 1 tgifellipse fill
gsave
   newpath 115 261 1 1 tgifellipse stroke
grestore

% OVAL
newpath 115 253 1 1 tgifellipse fill
gsave
   newpath 115 253 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      148 224 moveto 308 224 lineto 308 304 lineto 148 304 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      124 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      136 218 moveto (cs) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      112 214 moveto (-) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      52 290 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      64 294 moveto (g) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      63 162 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 63 225 1 1 tgifellipse fill
gsave
   newpath 63 225 1 1 tgifellipse stroke
grestore

% OVAL
newpath 63 217 1 1 tgifellipse fill
gsave
   newpath 63 217 1 1 tgifellipse stroke
grestore

% OVAL
newpath 63 209 1 1 tgifellipse fill
gsave
   newpath 63 209 1 1 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      32 304 moveto
      88 304 lineto
   stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sun Nov 15 17:58:23 1998
%%EndDocument

 endTexFig
 1306 1545 a FH(Figure)30 b(2.13:)42 b(Set)31 b(of)f(CS/MNA)h
(equations.)300 1825 y(equation)43 b(is)g(a)g(linear)f(com)m(bination)h
(of)g(the)h(K)m(CL)f(equations)g(for)g(the)h(no)s(des)e(inside)f(the)j
(c)m(harge)300 2051 y(surface.)68 b(This)37 b(means)i(that)h(if)f(a)g
(K)m(CL)g(equation)h(for)f(an)m(y)g(no)s(de)g(inside)e(the)j(surface)f
(is)f(replaced)300 2277 y(b)m(y)31 b(the)h(c)m(harge)h(conserv)-5
b(ation)32 b(equation)f(for)h(that)g(surface,)g(then)f(the)h(new)f(set)
h(of)g(equations)f(are)h(all)300 2502 y(linearly)i(indep)s(enden)m(t)g
(and)i(can)g(b)s(e)g(used)f(to)i(represen)m(t)f(the)h(net)m(w)m(ork.)59
b(Consequen)m(tly)-8 b(,)38 b(the)e(set)h(of)300 2728
y(CS/MNA)31 b(equations)f(is)f(obtained)h(as)g(follo)m(ws.)411
2997 y(1.)46 b(Designate)32 b(one)e(no)s(de)g(in)f(eac)m(h)j(c)m(harge)
f(surface)g(as)f(a)h FC(surfac)-5 b(e)33 b(r)-5 b(efer)g(enc)g(e)33
b(no)-5 b(de)p FH(.)411 3241 y(2.)46 b(In)29 b(the)h(MNA)g(equations)g
(\(Fig.)g(2.7\),)i(replace)d(the)h(K)m(CL)f(equation)h(of)g(eac)m(h)h
FC(surfac)-5 b(e)32 b(r)-5 b(efer)g(enc)g(e)527 3411
y(no)g(de)32 b FH(b)m(y)e(the)h(c)m(harge)g(conserv)-5
b(ation)31 b(equations)f(of)g(the)h(corresp)s(onding)d(c)m(harge)k
(surface.)300 3736 y(Note)22 b(that)e(the)h FC(surfac)-5
b(e)24 b(r)-5 b(efer)g(enc)g(e)24 b(no)-5 b(de)21 b FH(is)f(di\013eren)
m(t)f(from)h(the)h FC(CS-gr)-5 b(aph)24 b(r)-5 b(efer)g(enc)g(e)24
b(no)-5 b(de)22 b FH(\(Sec.)f(2.4.3\).)300 3962 y(As)38
b(an)g(example,)i(the)e(surface)g(reference)g(no)s(des)f(in)g(Fig.)h
(2.8)h(are)g(mark)m(ed)f(b)m(y)f(an)h Fz(\002)g FH(and)f(are)i(un-)300
4188 y(derlined)31 b(in)h(Fig.)h(2.10.)51 b(The)33 b(resulting)e(set)j
(of)g(CS/MNA)f(equations)g(has)g(the)h(structure)f(sho)m(wn)f(in)300
4413 y(Fig.)27 b(2.13.)41 b(It)27 b(con)m(tains)h FG(N)1230
4427 y FB(x)1300 4413 y FH(linearly)d(indep)s(enden)m(t)g(equations)i
({)g(the)g(same)h(n)m(um)m(b)s(er)d(as)i(in)f(the)h(MNA)300
4639 y({)k(and)f(the)g(same)h(set)g(of)f FG(N)1255 4653
y FB(x)1330 4639 y FH(unkno)m(wns)e(as)j(in)e(the)i(MNA.)536
4865 y(The)f(new)g(set)h(of)f(CS/MNA)h(equations)f(can)h(b)s(e)f
(written)f(in)g(v)m(ector)j(form:)1002 5013 y Ft(2)1002
5163 y(4)1189 5069 y FD(0)1088 5294 y FH(_)1073 5295
y FD(q)p FH(\()p FD(x)p FH(\()p FG(t)p FH(\)\))1373 5013
y Ft(3)1373 5163 y(5)1448 5182 y FH(+)1539 5013 y Ft(2)1539
5163 y(4)1610 5069 y FD(q)1665 5083 y FB(cs)1732 5069
y FH(\()p FD(x)p FH(\()p FG(t)p FH(\)\))1644 5295 y FD(g)q
FH(\()p FD(x)p FH(\()p FG(t)p FH(\)\))1977 5013 y Ft(3)1977
5163 y(5)2057 5182 y FH(=)2153 5013 y Ft(2)2153 5163
y(4)2224 5069 y FD(q)2279 5083 y FB(cs)2346 5069 y FH(\()p
FD(x)p FH(\()p FG(t)2504 5084 y FB(k)r Fv(\000)p FA(1)2638
5069 y FH(\)\))2440 5295 y FD(0)2724 5013 y Ft(3)2724
5163 y(5)2799 5182 y FH(+)2890 5013 y Ft(2)2890 5163
y(4)3010 5069 y FD(0)2961 5295 y(e)p FH(\()p FG(t)p FH(\))3127
5013 y Ft(3)3127 5163 y(5)3668 5182 y FH(\(2.37\))p eop
%%Page: 42 55
42 54 bop 3809 -200 a FH(42)300 99 y(where)26 b(the)h(top)g(ro)m(w)g
(is)f(the)h(v)m(ector)i(of)e FG(N)1725 113 y FB(cs)1819
99 y FH(c)m(harge)h(conserv)-5 b(ation)27 b(equations)f(\(2.34\))j(and)
e(the)g(b)s(ottom)300 324 y(ro)m(w)35 b(is)g(a)g(v)m(ector)i(of)e
FG(N)1115 338 y FB(g)1189 324 y FH(=)e(\()p FG(N)1401
338 y FB(n)1472 324 y Fz(\000)23 b FG(N)1639 338 y FB(cs)1730
324 y FH(+)g FG(N)1897 339 y FB(b)1931 324 y FH(\))36
b(MNA)f(equations)g(that)h(remain)e(of)i(\(2.24\))h(after)f(the)300
550 y FG(N)373 564 y FB(cs)471 550 y FH(K)m(CL)30 b(equations)g(for)g
(the)g FC(char)-5 b(ge)34 b(surfac)-5 b(e)33 b(r)-5 b(efer)g(enc)g(e)34
b(no)-5 b(des)31 b FH(ha)m(v)m(e)h(b)s(een)d(remo)m(v)m(ed.)300
786 y Fx(2.5.2)112 b(Device)37 b Fq(stamps)g Fx(for)g(CS/MNA)g
(equations)300 1070 y FH(Just)i(lik)m(e)g(the)h(MNA)g(equations,)j(the)
c(CS/MNA)h(equations)g(can)g(b)s(e)f(constructed)h(b)m(y)g(de\014ning)e
(a)300 1296 y FC(stamp)58 b FH(that)28 b(represen)m(ts)f(the)g(con)m
(tribution)f(of)h(a)h(device)f(to)h(the)f(CS/MNA)g(equations)g
(\(2.37\).)42 b(Since)300 1522 y(the)29 b(CS/MNA)g(equations)g(are)g(a)
g(com)m(bination)f(of)h(the)g(MNA)h(and)e(c)m(harge)i(conserv)-5
b(ation)29 b(equations,)300 1748 y(the)36 b(device)g(stamps)g(are)g(a)h
(com)m(bination)e(of)i(the)f(stamps)g(for)f(the)i(MNA)f(and)g(the)g
(stamps)g(for)g(the)300 1974 y(c)m(harge)c(conserv)-5
b(ation)30 b(equations.)536 2200 y(The)35 b(only)g(elemen)m(ts)h(that)g
(con)m(tribute)g(to)g(the)g(c)m(harge)h(conserv)-5 b(ation)36
b(equations)f(are)h(the)g(ca-)300 2425 y(pacitors)24
b(and)g(devices)g(that)h(con)m(tain)g(capacitiv)m(e)g(branc)m(hes)g({)f
(suc)m(h)g(as)h(MOS)f(transistors.)38 b(Therefore,)300
2651 y(the)28 b(stamps)g(for)g(the)g(rest)g(of)g(the)g(elemen)m(ts)g
(are)h(the)f(same)g(as)g(the)g(ones)g(used)g(in)e(MNA)j(in)d(Sec.)j
(2.3.1.)300 2884 y FD(2.5.2.1)106 b(Capacitor)34 b(stamp)300
3168 y FH(The)39 b(stamp)g(for)f(the)i(capacitor)g(is)e(a)h(com)m
(bination)f(of)i(the)f(MNA)h(stamp)f(\(2.21\))i(and)d(the)i(c)m(harge)
300 3394 y(conserv)-5 b(ation)30 b(stamp)h(\(2.35\).)536
3620 y(Giv)m(en)48 b(a)g(capacitor)g(connected)h(b)s(et)m(w)m(een)f
(net)m(w)m(ork)h(no)s(des)e FG(i)h FH(and)f FG(j)5 b
FH(,)53 b(let)47 b(+)p FG(q)s FH(\()p FG(V)3512 3634
y FB(i)3541 3620 y FG(;)15 b(V)3634 3634 y FB(j)3671
3620 y FH(\))48 b(and)300 3846 y Fz(\000)p FG(q)s FH(\()p
FG(V)503 3860 y FB(i)531 3846 y FG(;)15 b(V)624 3860
y FB(j)661 3846 y FH(\))41 b(b)s(e)f(the)h(c)m(harges)g(on)g(the)f
(plates)h(of)f(the)h(capacitor)g(connected)h(to)f(no)s(des)f
FG(i)h FH(and)f FG(j)46 b FH(re-)300 4072 y(sp)s(ectiv)m(ely)-8
b(.)48 b(V)-8 b(oltages)35 b FG(V)1175 4086 y FB(i)1236
4072 y FH(and)d FG(V)1468 4086 y FB(j)1538 4072 y FH(are)h(the)g(no)s
(de)f(v)m(oltages.)50 b(Let)34 b(no)s(des)e FG(i)h FH(and)f
FG(j)39 b FH(map)32 b(to)i(CS-graph)300 4297 y(no)s(des)p
556 4210 125 4 v 556 4322 4 112 v 58 w FG(A)p 677 4322
V 556 4325 125 4 v 58 w FH(and)p 887 4210 130 4 v 887
4322 4 112 v 58 w FG(B)p 1014 4322 V 887 4325 130 4 v
64 w FH(resp)s(ectiv)m(ely)-8 b(.)40 b(Then)29 b(the)i(con)m(tribution)
e(of)h(this)g(capacitor)h(to)g(\(2.37\))i(is:)577 4495
y Fw(Eqn.)95 b(for)47 b(CS-graph)e(node)p 1723 4408 125
4 v 1723 4520 4 112 v 75 w FG(A)p 1844 4520 V 1723 4523
125 4 v 29 w Fw(:)732 4665 y Fz(\001)15 b(\001)g(\001)22
b FH(+)e FG(q)s FH(\()p FG(V)1082 4679 y FB(i)1110 4665
y FH(\()p FG(t)p FH(\))p FG(;)15 b(V)1306 4679 y FB(j)1343
4665 y FH(\()p FG(t)p FH(\)\))22 b(+)110 b Fz(\001)15
b(\001)g(\001)27 b FH(=)116 b Fz(\001)15 b(\001)g(\001)21
b FH(+)f FG(q)s FH(\()p FG(V)2352 4679 y FB(i)2380 4665
y FH(\()p FG(t)2448 4680 y FB(k)r Fv(\000)p FA(1)2581
4665 y FH(\))p FG(;)15 b(V)2709 4679 y FB(j)2746 4665
y FH(\()p FG(t)2814 4680 y FB(k)r Fv(\000)p FA(1)2947
4665 y FH(\)\))21 b(+)111 b Fz(\001)15 b(\001)g(\001)577
4834 y Fw(Eqn.)95 b(for)47 b(CS-graph)e(node)p 1723 4747
130 4 v 1723 4859 4 112 v 75 w FG(B)p 1850 4859 V 1723
4862 130 4 v 33 w Fw(:)732 5003 y Fz(\001)15 b(\001)g(\001)22
b(\000)e FG(q)s FH(\()p FG(V)1082 5017 y FB(i)1110 5003
y FH(\()p FG(t)p FH(\))p FG(;)15 b(V)1306 5017 y FB(j)1343
5003 y FH(\()p FG(t)p FH(\)\))22 b(+)110 b Fz(\001)15
b(\001)g(\001)27 b FH(=)116 b Fz(\001)15 b(\001)g(\001)21
b(\000)f FG(q)s FH(\()p FG(V)2352 5017 y FB(i)2380 5003
y FH(\()p FG(t)2448 5018 y FB(k)r Fv(\000)p FA(1)2581
5003 y FH(\))p FG(;)15 b(V)2709 5017 y FB(j)2746 5003
y FH(\()p FG(t)2814 5018 y FB(k)r Fv(\000)p FA(1)2947
5003 y FH(\)\))21 b(+)111 b Fz(\001)15 b(\001)g(\001)577
5233 y Fw(KCL)47 b(eqn.)95 b(node)46 b FG(i)p Fw(:)703
b Fz(\001)15 b(\001)g(\001)21 b FH(+)37 b(_)-42 b FG(q)s
FH(\()p FG(V)2424 5247 y FB(i)2452 5233 y FH(\()p FG(t)p
FH(\))p FG(;)15 b(V)2648 5247 y FB(j)2686 5233 y FH(\()p
FG(t)p FH(\)\))112 b(+)e Fz(\001)15 b(\001)g(\001)27
b FH(=)e(0)577 5402 y Fw(KCL)47 b(eqn.)95 b(node)46 b
FG(j)5 b Fw(:)692 b Fz(\001)15 b(\001)g(\001)21 b(\000)37
b FH(_)-42 b FG(q)s FH(\()p FG(V)2424 5416 y FB(i)2452
5402 y FH(\()p FG(t)p FH(\))p FG(;)15 b(V)2648 5416 y
FB(j)2686 5402 y FH(\()p FG(t)p FH(\)\))112 b(+)e Fz(\001)15
b(\001)g(\001)27 b FH(=)e(0)3668 4937 y(\(2.38\))p eop
%%Page: 43 56
43 55 bop 3809 -200 a FH(43)436 99 y Fz(\017)46 b FH(The)26
b(con)m(tributions)e(to)j(K)m(CL)f(equations)f(for)h
FC(char)-5 b(ge)30 b(surfac)-5 b(e)29 b(r)-5 b(efer)g(enc)g(e)29
b(no)-5 b(des)28 b FH(or)e(the)g FC(network)527 268 y(r)-5
b(efer)g(enc)g(e)34 b(no)-5 b(de)p FH(,)31 b(are)g(discarded.)436
437 y Fz(\017)46 b FH(The)36 b(con)m(tributions)e(to)i(c)m(harge)h
(conserv)-5 b(ation)36 b(equations)g(for)f FC(CS-gr)-5
b(aph)39 b(r)-5 b(efer)g(enc)g(e)39 b(no)-5 b(de)37 b
FH(are)527 607 y(also)31 b(discarded.)300 840 y FD(2.5.2.2)106
b(CS/MNA)35 b(stamp)e(for)i(an)g(MOS)g(T)-9 b(ransistor)300
1125 y FH(Consider)40 b(an)i(MOS)g(transistor)f(with)g(the)h(drain,)i
(gate,)j(source)42 b(and)f(bulk)g(terminals)f(connected)300
1351 y(to)j(no)s(des)f(D,)h(G,)g(S,)f(and)g(B)h(resp)s(ectiv)m(ely)f
(as)h(sho)m(wn)f(in)f(Fig.)i(2.14\(a\).)79 b(It)43 b(con)m(tains)g
(conductiv)m(e)300 1576 y(branc)m(hes)37 b(sho)m(wn)f(if)g(Fig.)i
(2.14\(b\),)i(and)d(capacitiv)m(e)h(branc)m(hes)f(sho)m(wn)f(in)g(Fig.)
h(2.14\(c\).)64 b(The)36 b(con-)300 1802 y(ductiv)m(e)d(branc)m(hes)g
(are)h(mo)s(deled)e(b)m(y)h(the)h(curren)m(ts)f FG(I)2204
1816 y FB(D)2268 1802 y FH(,)h FG(I)2367 1816 y FB(S)2418
1802 y FH(,)g(and)f FG(I)2697 1816 y FB(B)2791 1802 y
FH(whic)m(h)f(are)i(functions)e(of)i(no)s(de)300 2028
y(v)m(oltages)i FG(V)706 2042 y FB(D)770 2028 y FH(,)f
FG(V)883 2042 y FB(G)942 2028 y FH(,)g FG(V)1055 2042
y FB(S)1106 2028 y FH(,)g(and)e FG(V)1399 2042 y FB(B)1460
2028 y FH(.)52 b(Note,)36 b(that)f FG(I)2027 2042 y FB(G)2117
2028 y FH(=)c(0,)36 b(therefore)e(there)g(is)f(no)h(conductiv)m(e)h
(branc)m(h)300 2254 y(connected)c(to)g(no)s(de)f(G.)536
2480 y(The)g(c)m(harge)h(storage)g(e\013ects)h(of)e(the)g(MOS)f
(transistor)g(are)i(mo)s(deled)d(b)m(y)i(the)g(c)m(harges)h
FG(q)3656 2494 y FB(D)3720 2480 y FH(,)f FG(q)3816 2494
y FB(G)3875 2480 y FH(,)300 2706 y FG(q)341 2720 y FB(S)391
2706 y FH(,)35 b(and)f FG(q)673 2720 y FB(B)733 2706
y FH(,)h(whic)m(h)d(are)j(also)e(functions)g(of)h(the)g(no)s(de)f(v)m
(oltages)j FG(V)2689 2720 y FB(D)2753 2706 y FH(,)p FG(V)2831
2720 y FB(G)2890 2706 y FH(,)f FG(V)3003 2720 y FB(S)3054
2706 y FH(,)g(and)e FG(V)3347 2720 y FB(B)3408 2706 y
FH(.)51 b(Note,)36 b(that)300 2931 y(the)31 b(capacitors)g(in)e(Fig.)h
(2.14\(c\))j(are)e(only)f(sym)m(b)s(ols)f(used)g(to)i(denote)g(a)g
(capacitiv)m(e)g(branc)m(h.)536 3157 y(The)26 b(CS-graph)g(for)g(the)h
(MOS)f(transistor)g(is)g(obtained)g(b)m(y)g(merging)g(the)h(no)s(des)f
(of)h(conductiv)m(e)300 3383 y(branc)m(hes,)g(as)f(sho)m(wn)g(in)f
(Fig.)h(2.15.)41 b(The)25 b(no)s(des)h(D,)h(S,)e(and)h(B)g(are)h
(merged)f(in)m(to)g(one)h(CS-graph)e(no)s(de)300 3609
y(denoted)i(as)p 748 3522 292 4 v 748 3651 4 130 v 56
w(D,S,B)p 1036 3651 V 748 3654 292 4 v 29 w(,)g(while)f(no)s(de)g(G)h
(remains)f(a)h(separate)h(no)s(de)f(on)f(the)i(CS-graph)e(denoted)h(as)
p 3747 3522 128 4 v 3747 3634 4 112 v 55 w(G)p 3871 3634
V 3747 3637 128 4 v 29 w(.)300 3835 y(The)j(stamp)g(of)h(the)f(MOS)g
(transistor)g(for)g(CS/MNA)g(equations)g(is)394 4034
y Fw(Eqn.)94 b(for)47 b(CS-graph)f(node)p 1539 3954 105
4 v 1539 4059 4 106 v 75 w(G)p 1640 4059 V 1539 4062
105 4 v 28 w(:)1244 4204 y Fz(\001)15 b(\001)g(\001)22
b FH(+)e FG(q)1503 4218 y FB(G)1561 4204 y FH(\()p FG(t)p
FH(\))h(+)111 b Fz(\001)15 b(\001)g(\001)26 b FH(=)116
b Fz(\001)15 b(\001)g(\001)21 b FH(+)f FG(q)2443 4218
y FB(G)2502 4204 y FH(\()p FG(t)2570 4219 y FB(k)r Fv(\000)p
FA(1)2703 4204 y FH(\))h(+)110 b Fz(\001)15 b(\001)g(\001)394
4373 y Fw(Eqn.)94 b(for)47 b(CS-graph)f(node)p 1539 4293
296 4 v 1539 4411 4 118 v 75 w(D,B,S)p 1831 4411 V 1539
4414 296 4 v 26 w(:)485 4542 y Fz(\001)15 b(\001)g(\001)21
b FH(+)f FG(q)743 4556 y FB(D)807 4542 y FH(\()p FG(t)p
FH(\))g(+)g FG(q)1062 4556 y FB(B)1123 4542 y FH(\()p
FG(t)p FH(\))g(+)g FG(q)1378 4556 y FB(S)1429 4542 y
FH(\()p FG(t)p FH(\))g(+)111 b Fz(\001)15 b(\001)g(\001)26
b FH(=)116 b Fz(\001)15 b(\001)g(\001)22 b FH(+)d FG(q)2310
4556 y FB(D)2374 4542 y FH(\()p FG(t)2442 4557 y FB(k)r
Fv(\000)p FA(1)2575 4542 y FH(\))i(+)f FG(q)2763 4556
y FB(B)2823 4542 y FH(\()p FG(t)2891 4557 y FB(k)r Fv(\000)p
FA(1)3024 4542 y FH(\))g(+)g FG(q)3211 4556 y FB(S)3262
4542 y FH(\()p FG(t)3330 4557 y FB(k)r Fv(\000)p FA(1)3463
4542 y FH(\))g(+)111 b Fz(\001)15 b(\001)g(\001)394 4772
y Fw(KCL)47 b(eqn.)94 b(node)47 b(D:)850 b Fz(\001)15
b(\001)g(\001)21 b FH(+)37 b(_)-42 b FG(q)2314 4786 y
FB(D)2489 4772 y FH(+)20 b Fz(\001)15 b(\001)g(\001)112
b FH(+)20 b FG(I)2928 4786 y FB(D)3017 4772 y FH(=)25
b(0)394 4941 y Fw(KCL)47 b(eqn.)94 b(node)47 b(G:)850
b Fz(\001)15 b(\001)g(\001)21 b FH(+)37 b(_)-42 b FG(q)2314
4955 y FB(G)2484 4941 y FH(+)20 b Fz(\001)15 b(\001)g(\001)112
b FH(+)20 b FG(I)2923 4955 y FB(G)3007 4941 y FH(=)25
b(0)394 5111 y Fw(KCL)47 b(eqn.)94 b(node)47 b(S:)850
b Fz(\001)15 b(\001)g(\001)21 b FH(+)37 b(_)-42 b FG(q)2314
5125 y FB(S)2476 5111 y FH(+)20 b Fz(\001)15 b(\001)g(\001)112
b FH(+)20 b FG(I)2915 5125 y FB(S)2991 5111 y FH(=)25
b(0)394 5280 y Fw(KCL)47 b(eqn.)94 b(node)47 b(B:)850
b Fz(\001)15 b(\001)g(\001)21 b FH(+)37 b(_)-42 b FG(q)2314
5294 y FB(B)2486 5280 y FH(+)20 b Fz(\001)15 b(\001)g(\001)112
b FH(+)20 b FG(I)2925 5294 y FB(B)3011 5280 y FH(=)k(0)3668
5407 y(\(2.39\))p eop
%%Page: 44 57
44 56 bop 3809 -200 a FH(44)1721 634 y
 5986140 4538941 263127 46573486 6249267 51112427 startTexFig
 1721 634 a
%%BeginDocument: figs/mos.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      13 100 moveto
      62 100 lineto
      62 76 lineto
      112 76 lineto
      112 100 lineto
      161 100 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      62 57 moveto
      112 57 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      87 57 moveto
      87 32 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      16 89 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      156 88 moveto (S) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      63 44 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      81 140 moveto (B) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      87 76 moveto
      87 119 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 160 100 1 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 160 100 1 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 87 32 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 87 32 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 12 100 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 12 100 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 87 119 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 87 119 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   newpath 21 84 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 156 82 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 86 135 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 69 39 11 11 tgifellipse stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 20 15:44:13 1998
%%EndDocument

 endTexFig
 2042 1435 a FH(\(a\))674 1466 y
 9012101 8683192 5525667 42758144 14537768 51441336 startTexFig
 674 1466 a
%%BeginDocument: figs/mos_cond.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      208 112 moveto
      192 144 lineto
      208 176 lineto
      224 144 lineto
      208 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      208 128 moveto
      32 0 atan dup cos 10 mul 208 exch sub
      exch sin 10 mul 160 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      208 160 10 4 0 32 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      208 176 moveto
      208 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      208 88 moveto
      208 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 88 moveto
      272 104 lineto
      304 88 lineto
      272 72 lineto
      240 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 88 moveto
      0 32 atan dup cos 10 mul 288 exch sub
      exch sin 10 mul 88 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      288 88 10 4 32 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      304 88 moveto
      376 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 88 moveto
      240 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 112 moveto
      320 144 lineto
      336 176 lineto
      352 144 lineto
      336 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 128 moveto
      32 0 atan dup cos 10 mul 336 exch sub
      exch sin 10 mul 160 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      336 160 10 4 0 32 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 176 moveto
      336 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 88 moveto
      336 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      208 200 moveto
      336 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 200 moveto
      272 232 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 207 87 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 207 87 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 271 199 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 271 199 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 335 87 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 335 87 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 271 47 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 271 47 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 48 moveto
      272 24 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      296 39 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      304 44 moveto (G) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      288 24 moveto
      32 0 atan dup cos 8 mul 288 exch sub
      exch sin 8 mul 56 exch sub lineto
   stroke
grestore
gsave
   newpath
      288 56 8 3 0 32 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      320 39 moveto (= 0) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      160 111 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      168 116 moveto (D) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      152 96 moveto
      0 32 atan dup cos 8 mul 184 exch sub
      exch sin 8 mul 96 exch sub lineto
   stroke
grestore
gsave
   newpath
      184 96 8 3 32 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      368 111 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      376 116 moveto (S) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      392 96 moveto
      0 -32 atan dup cos 8 mul 360 exch sub
      exch sin 8 mul 96 exch sub lineto
   stroke
grestore
gsave
   newpath
      360 96 8 3 -32 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      288 239 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      296 244 moveto (B) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      280 248 moveto
      -32 0 atan dup cos 8 mul 280 exch sub
      exch sin 8 mul 216 exch sub lineto
   stroke
grestore
gsave
   newpath
      280 216 8 3 0 -32 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      168 73 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      376 74 moveto (S) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      247 36 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      249 236 moveto (B) show
   grestore

% OVAL
gsave
   newpath 173 68 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 376 68 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 254 231 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 253 31 11 11 tgifellipse stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 20 15:43:56 1998
%%EndDocument

 endTexFig
 2576 1733 a
 7499120 6578176 1578762 44271124 9077882 50849300 startTexFig
 2576 1733 a
%%BeginDocument: figs/mos_cap.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 65 moveto
      96 90 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      83 90 moveto
      109 90 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      83 97 moveto
      91.67 95.67 100.33 95.67
      109 97 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 96 moveto
      96 119 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      157 120 moveto
      132 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      132 107 moveto
      132 133 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      125 107 moveto
      126.33 115.67 126.33 124.33
      125 133 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      126 120 moveto
      95 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      199 65 moveto
      199 90 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 90 moveto
      212 90 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 97 moveto
      194.67 95.67 203.33 95.67
      212 97 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      199 96 moveto
      199 119 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      157 65 moveto
      157 90 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 90 moveto
      170 90 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 97 moveto
      152.67 95.67 161.33 95.67
      170 97 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      157 96 moveto
      157 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      152 120 moveto
      236 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      95 64 moveto
      200 64 lineto
   stroke
   1 setlinewidth
grestore

% ARC
gsave
   2 setlinewidth
   newpath
      157 119 8 8 90 -90 tgifarc
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 175 moveto
      96 150 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      83 150 moveto
      109 150 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      83 143 moveto
      91.67 144.33 100.33 144.33
      109 143 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 144 moveto
      96 121 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      199 175 moveto
      199 150 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 150 moveto
      212 150 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 143 moveto
      194.67 144.33 203.33 144.33
      212 143 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      199 144 moveto
      199 121 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      95 176 moveto
      200 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      157 128 moveto
      157 176 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 198 119 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 198 119 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 95 119 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 95 119 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 127 175 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 127 175 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 127 63 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 127 63 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 64 moveto
      128 48 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 120 moveto
      64 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 176 moveto
      128 192 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      136 199 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      144 204 moveto (B) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      48 135 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      56 140 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      136 51 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      144 56 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      223 135 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      231 140 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      56 109 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      233 109 moveto (S) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      102 52 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      103 201 moveto (B) show
   grestore

% OVAL
gsave
   newpath 61 104 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 233 103 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 108 196 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 108 47 11 11 tgifellipse stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 27 15:03:25 1998
%%EndDocument

 endTexFig
 1349 2735 a FH(\(b\))1360 b(\(c\))300 2945 y(Figure)28
b(2.14:)42 b(a\))29 b(MOS)g(transistor's)f(sym)m(b)s(ol.)39
b(b\))28 b(Conductiv)m(e)h(branc)m(hes.)40 b(c\))29 b(Capacitiv)m(e)g
(branc)m(hes.)971 3783 y
 17826857 6183485 197345 45718323 18024202 51901808 startTexFig
 971 3783 a
%%BeginDocument: figs/mos_csg.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      10 90 moveto
      59 90 lineto
      59 66 lineto
      109 66 lineto
      109 90 lineto
      158 90 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      59 47 moveto
      109 47 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 47 moveto
      84 22 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      84 160 moveto (D, B, S) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      60 23 moveto (G) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 66 moveto
      84 140 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 84 22 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 84 22 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 84 128 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 84 128 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 159 90 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 159 90 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 12 90 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 12 90 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      12 92 moveto
      12 128 lineto
      160 128 lineto
      156 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      159 128 moveto
      159 88 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      55 144 moveto 113 144 lineto 113 165 lineto 55 165 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      55 8 moveto 75 8 lineto 75 28 lineto 55 28 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      335 74 moveto
      335 99 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      322 99 moveto
      348 99 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      322 106 moveto
      330.67 104.67 339.33 104.67
      348 106 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      335 105 moveto
      335 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      398 74 moveto
      398 99 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      385 99 moveto
      411 99 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      385 106 moveto
      393.67 104.67 402.33 104.67
      411 106 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      398 105 moveto
      398 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      438 74 moveto
      438 99 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      425 99 moveto
      451 99 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      425 106 moveto
      433.67 104.67 442.33 104.67
      451 106 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      438 105 moveto
      438 129 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      334 129 moveto
      439 129 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      334 73 moveto
      439 73 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 367 128 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 367 128 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 366 72 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 366 72 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      367 73 moveto
      367 57 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      368 129 moveto
      368 145 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      462 159 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      470 164 moveto (B) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      391 159 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      399 164 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      375 60 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      383 65 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      430 159 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      438 164 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      336 59 moveto (G) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      331 44 moveto 351 44 lineto 351 64 lineto 331 64 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      413 161 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      448 161 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      8 36 moveto
      14.67 44.00 22.50 49.17 31.50 51.50 curveto
      40.50 53.83 48.67 55.17 56.00 55.50 curveto
      63.33 55.83 73.83 56.00 87.50 56.00 curveto
      101.17 56.00 111.17 55.83 117.50 55.50 curveto
      123.83 55.17 131.17 53.83 139.50 51.50 curveto
      147.83 49.17 156.00 44.00
      164 36 curveto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      284 72 moveto
      290.67 81.33 295.83 87.83 299.50 91.50 curveto
      303.17 95.17 306.17 97.50 308.50 98.50 curveto
      310.83 99.50 314.50 100.50 319.50 101.50 curveto
      324.50 102.50 328.17 103.00 330.50 103.00 curveto
      332.83 103.00 339.83 102.83 351.50 102.50 curveto
      363.17 102.17 373.33 102.00 382.00 102.00 curveto
      390.67 102.00 401.50 102.17 414.50 102.50 curveto
      427.50 102.83 436.17 103.00 440.50 103.00 curveto
      444.83 103.00 450.50 102.50 457.50 101.50 curveto
      464.50 100.50 469.50 99.50 472.50 98.50 curveto
      475.50 97.50 478.50 95.50 481.50 92.50 curveto
      484.50 89.50 486.33 84.67
      487 78 curveto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      328 160 moveto (D, B, S) tgifcentertext show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      299 144 moveto 357 144 lineto 357 165 lineto 299 165 lineto
   closepath stroke
   1 setmiterlimit
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Sep 28 16:22:32 1998
%%EndDocument

 endTexFig
 1173 4763 a FH(Figure)h(2.15:)42 b(CS-graph)29 b(for)h(the)h(MOS)f
(transistor.)p eop
%%Page: 45 58
45 57 bop 3809 -200 a FH(45)300 99 y(Note,)40 b(that)d(in)e(the)i
(CS/MNA)g(stamp)f(for)h(the)f(MOS)h(transistor,)g(the)g(same)g(curren)m
(t-v)m(oltage)i(and)300 324 y(c)m(harge-v)m(oltage)e(mo)s(dels)c(are)h
(used)f(as)h(in)f(the)h(MNA.)h(Also)e(note,)j(that)e(the)g(stamp)g(ab)s
(o)m(v)m(e)h(assumes)300 550 y(that)30 b(the)f(curren)m(ts)f(and)h(c)m
(harges)h(are)f(explicit)e(functions)h(of)h(no)s(de)f(v)m(oltages.)42
b(If)29 b(the)g(expressions)f(are)300 776 y(implicit,)e(then)h(it)h(is)
f(necessary)h(to)h(add)f(extra)g(unkno)m(wns)f(and)g(equations)h(as)g
(explained)e(in)h(Sec.)i(2.3.)300 1062 y FL(2.6)135 b(CS/MNA)45
b(under)f(instan)l(t)i(settling)g(appro)l(ximation)300
1378 y FH(In)20 b(this)g(section)h(it)g(is)f(sho)m(wn)g(ho)m(w)h(the)g
(CS/MNA)h(equations)e(can)i(b)s(e)e(reduced)g(to)i(non-linear)d
(algebraic)300 1604 y(equations)30 b(whic)m(h)f(mo)s(del)g(the)i(net)m
(w)m(ork)g(under)e(the)i(instan)m(t)f(settling)f(appro)m(ximation.)536
1830 y(First,)42 b(Sec.)e(2.6.1)h(discusses)d(the)i(top)s(ological)g
(restrictions)e(required)g(so)i(that)g(the)g(net)m(w)m(ork)300
2056 y(approac)m(hes)31 b(a)f(settling)g(state)i(within)27
b(eac)m(h)32 b(switc)m(hing)d(in)m(terv)-5 b(al.)40 b(Then,)29
b(in)g(Sec)i(2.6.2)h(the)e(algebraic)300 2282 y(equations)g(whic)m(h)f
(can)i(b)s(e)f(used)f(to)i(compute)g(the)g(settling)e(state)j(of)f(the)
f(net)m(w)m(ork)h(are)g(deriv)m(ed.)536 2507 y(In)j(Sec.)h(2.6.3)h(it)d
(is)h(sho)m(wn)f(ho)m(w)i(these)f(algebraic)g(equations)g(can)h(b)s(e)f
(applied)e(to)j(mo)s(del)e(the)300 2733 y(net)m(w)m(ork)22
b(under)d(the)i(instan)m(t)g(settling)f(appro)m(ximation.)36
b(Finally)-8 b(,)22 b(in)d(Sec.)j(2.6.4,)i(it)d(will)d(b)s(e)i(sho)m
(wn)g(that)300 2959 y(when)26 b(an)h(MOS)g(transistor)g(is)f(used)h(as)
g(a)h(switc)m(h,)f(it)g(is)f(necessary)i(to)g(mak)m(e)g(sev)m(eral)g
(appro)m(ximations)300 3185 y(to)34 b(the)f(transistor)f(mo)s(del,)h
(in)f(order)h(to)h(compute)f(the)g(settling)g(state)h(prop)s(erly)-8
b(.)47 b(This)32 b(section)h(also)300 3411 y(discusses)28
b(the)i(exten)m(t)h(to)g(whic)m(h)d(the)i(second)g(order)f(e\013ects,)j
(in)m(tro)s(duced)c(b)m(y)h(the)h(transistor,)g(can)g(b)s(e)300
3636 y(sim)m(ulated.)300 3880 y Fx(2.6.1)112 b(Net)m(w)m(ork)37
b(restrictions)300 4164 y FH(Although)23 b(practical)h(SC)f(and)g(SI)h
(net)m(w)m(orks)g(are)h(designed)e(to)i(settle)f(within)e(eac)m(h)j
(switc)m(hing)e(in)m(terv)-5 b(al,)300 4390 y(it)37 b(is)g(not)h
(guaran)m(teed)h(that)f(a)g(general)g(top)s(ology)g(consisting)e(of)i
(elemen)m(ts)g(listed)e(in)h(Sec.)h(2.1)h(will)300 4616
y(settle.)i(It)31 b(is)e(necessary)i(that)g(the)f(follo)m(wing)f(top)s
(ological)h(conditions)f(are)i(met.)p eop
%%Page: 46 59
46 58 bop 3809 -200 a FH(46)1825 7 y
 4341596 2565489 920944 47231303 5262540 49796792 startTexFig
 1825 7 a
%%BeginDocument: figs/nonset2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 68 moveto
      128 93 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      115 93 moveto
      141 93 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      115 100 moveto
      123.67 98.67 132.33 98.67
      141 100 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 99 moveto
      128 122 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   newpath 40 92 12 12 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      40 99 moveto
      -16 0 atan dup cos 8 mul 40 exch sub
      exch sin 8 mul 83 exch sub lineto
   stroke
grestore
gsave
   newpath
      40 83 8 3 0 -16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 120 moveto
      128 128 lineto
      40 128 lineto
      40 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 80 moveto
      40 64 lineto
      128 64 lineto
      128 72 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Aug 28 12:33:12 1998
%%EndDocument

 endTexFig
 1270 528 a FH(Figure)30 b(2.16:)43 b(Con)m(tin)m(uous-time)29
b(in)m(tegrator.)330 797 y FC(T)-7 b(op)i(olo)g(gic)g(al)36
b(r)-5 b(estrictions)p 330 828 911 4 v 436 1034 a Fz(\017)46
b FH(No)31 b(con)m(tin)m(uous-time)f(oscillators.)436
1204 y Fz(\017)46 b FH(No)31 b(con)m(tin)m(uous-time)f(in)m(tegrators)h
(\(Fig.)41 b(2.16\).)436 1373 y Fz(\017)46 b FH(No)31
b(con)m(tin)m(uous-time)f(p)s(ositiv)m(e)g(feedbac)m(k)h
(con\014gurations.)436 1542 y Fz(\017)46 b FH(No)34 b(m)m(ultiple)c
(settling)j(states.)49 b(It)33 b(is)f(p)s(ossible)f(that)i(the)g(net)m
(w)m(ork)h(ma)m(y)g(ha)m(v)m(e)g(more)f(than)g(one)527
1712 y(settling)d(state.)536 2005 y(Aside)36 b(from)g(the)g(top)s
(ological)g(restrictions,)h(it)f(is)f(necessary)i(that)g(the)g(time)f
(constan)m(ts)h(pro-)300 2231 y(duced)c(b)m(y)h(capacitors)h(and)f
(resistors)f(are)i(small)d(enough)i(for)g(the)h(net)m(w)m(ork)f(to)h
(settle.)53 b(Finally)-8 b(,)34 b(the)300 2457 y(input)g(signal)g(m)m
(ust)i(b)s(e)f(constan)m(t)i(within)c(eac)m(h)j(switc)m(hing)f(in)m
(terv)-5 b(al.)55 b(This)34 b(means)i(that)g(the)g(input)300
2683 y(m)m(ust)g(b)s(e)f(either)h(constan)m(t)h(or)f(sampled)f(and)g
(held.)56 b(\(Under)36 b(the)g(instan)m(t)g(settling)f(appro)m
(ximation)300 2909 y(this)29 b(restriction)h(ma)m(y)h(b)s(e)e(remo)m(v)
m(ed\))300 3151 y Fx(2.6.2)112 b(Settling)36 b(state)h(equations)300
3435 y FH(Giv)m(en)45 b(that)h(the)g(net)m(w)m(ork)g(restrictions)e(in)
h(Sec.)g(2.6.1)j(are)d(satis\014ed,)k(the)d(CS/MNA)f(equations)300
3661 y(in)29 b(\(2.37\))k(can)d(b)s(e)g(used)g(to)h(e\016cien)m(tly)f
(obtain)g(the)g(settling)g(state.)536 3887 y(First,)g(let)h
FD(e)963 3854 y FB(s)1030 3887 y FH(represen)m(t)f(the)g(sample)g(and)g
(held)f(input,)f FC(i.e.)1391 4195 y FD(e)1439 4158 y
FB(s)1501 4195 y FH(=)d FD(e)p FH(\()p FG(t)1713 4157
y FA(+)1713 4223 y FB(k)r Fv(\000)p FA(1)1846 4195 y
FH(\))273 b(for)30 b FG(t)2326 4210 y FB(k)r Fv(\000)p
FA(1)2484 4195 y FG(<)25 b(t)g Fz(\024)g FG(t)2767 4210
y FB(k)3668 4195 y FH(\(2.40\))300 4504 y(where)30 b
FD(e)p FH(\()p FG(t)p FH(\))h(is)e(the)i(input)d(v)m(ector)k(in)d
(\(2.37\).)536 4730 y(Next,)40 b(let)c FD(x)984 4697
y FB(s)1058 4730 y FH(b)s(e)g(the)g(v)m(ector)j(of)d(unkno)m(wns)g(in)f
(\(2.37\))k(that)e(represen)m(ts)f(the)h(settling)f(state.)300
4956 y(As)28 b(illustrated)d(in)h(the)i(simple)e(examples)h(in)f(Sec.)i
(2.2,)i(a)e(SC)f(or)g(SI)g(net)m(w)m(ork)i(settles)f(b)m(y)f(the)h(ph)m
(ysical)300 5181 y(pro)s(cess)i(of)h(c)m(harging)f(or)g(disc)m(harging)
g(capacitors.)41 b(The)30 b(settling)g(state)i(is)d(therefore)i
(de\014ned)e(as)i(the)300 5407 y(state)j(when)e(the)i(capacitor)f
(curren)m(ts)g(are)h(zero,)g FC(i.)49 b(e.)f FH(the)33
b(capacitors)h(are)f(completely)g(c)m(harged)h(or)p eop
%%Page: 47 60
47 59 bop 3809 -200 a FH(47)300 99 y(disc)m(harged.)40
b(This)29 b(prop)s(ert)m(y)g(of)i(the)f(settling)g(state)i(mak)m(es)
1910 415 y(_)1895 416 y FD(q)p FH(\()p FD(x)2040 378
y FB(s)2078 416 y FH(\))25 b(=)g(0)p FG(:)1364 b FH(\(2.41\))300
733 y(where)595 732 y(_)580 733 y FD(q)47 b FH(is)g(the)h(v)m(ector)h
(represen)m(ting)d(the)i(capacitor)g(curren)m(ts)f(in)f(\(2.37\).)94
b(Using)47 b(the)h(condi-)300 959 y(tions)30 b(\(2.40\))i(and)e
(\(2.41\))j(in)c(the)h(net)m(w)m(ork)i(equations)e(\(2.37\))i(results)d
(in)1325 1107 y Ft(2)1325 1256 y(4)1395 1163 y FD(q)1450
1177 y FB(cs)1518 1163 y FH(\()p FD(x)1608 1130 y FB(s)1645
1163 y FH(\))1430 1389 y FD(g)q FH(\()p FD(x)1573 1356
y FB(s)1611 1389 y FH(\))1696 1107 y Ft(3)1696 1256 y(5)1776
1276 y FH(=)1872 1107 y Ft(2)1872 1256 y(4)1943 1163
y FD(q)1998 1177 y FB(cs)2065 1163 y FH(\()p FD(x)p FH(\()p
FG(t)2223 1178 y FB(k)r Fv(\000)p FA(1)2357 1163 y FH(\)\))2159
1389 y FD(0)2443 1107 y Ft(3)2443 1256 y(5)2518 1276
y FH(+)2609 1107 y Ft(2)2609 1256 y(4)2696 1163 y FD(0)2680
1389 y(e)2728 1356 y FB(s)2779 1107 y Ft(3)2779 1256
y(5)2850 1276 y FG(:)793 b FH(\(2.42\))536 1593 y(Note,)37
b(that)e(\(2.42\))i(is)d(a)h(set)g(of)g(non-linear)d(algebraic)i
(equations)h(whic)m(h)e(can)i(b)s(e)f(solv)m(ed,)h(us-)300
1819 y(ing)k(Newton)h(iteration,)i(to)e(obtain)f(the)h(settling)f
(state)i FD(x)2410 1786 y FB(s)2410 1845 y(k)2453 1819
y FH(.)68 b(There)39 b(is)g(no)g(need)g(to)i(compute)f(the)300
2045 y(inconsisten)m(t)29 b(initial)f(conditions)h(at)i
FG(t)1640 2006 y FA(+)1640 2073 y FB(k)r FA(+1)1773 2045
y FH(,)f(nor)g(p)s(erform)f(n)m(umerical)g(in)m(tegration.)300
2288 y Fx(2.6.3)112 b(Instan)m(t)38 b(settling)d(appro)m(ximation)300
2573 y FH(Under)h(the)h FC(instant)i(settling)e FH(appro)m(ximation,)h
(The)e(state)i(of)f(the)f(net)m(w)m(ork)i(at)f(an)m(y)g(time)g
FG(t)f FH(during)300 2798 y(the)31 b(switc)m(hing)e(in)m(terv)-5
b(al)29 b(is)h(appro)m(ximated)g(b)m(y)g(the)g(settling)g(state.)536
3024 y(First,)k(consider)e(the)i(case)g(when)f(the)g(input)f(is)g
(sampled)h(and)f(held)g(as)i(in)e(\(2.40\).)52 b(Then,)34
b(the)300 3250 y(state)e(of)e(the)h(net)m(w)m(ork)g(within)d(the)i
(switc)m(hing)f(in)m(terv)-5 b(al)30 b FG(I)2339 3265
y FB(k)2412 3250 y FH(is)f(appro)m(ximated)h(as)1474
3567 y FD(x)p FH(\()p FG(t)p FH(\))c(=)f FD(x)1809 3530
y FB(s)2210 3567 y FG(t)2243 3582 y FB(k)r Fv(\000)p
FA(1)2400 3567 y FG(<)g(t)h Fz(\024)e FG(t)2683 3582
y FB(k)3668 3567 y FH(\(2.43\))300 3884 y(where)g FD(x)612
3851 y FB(s)673 3884 y FH(is)f(the)i(settling)e(state)j(in)d(\(2.42\).)
41 b(This)22 b(simply)g(means)i(that)h(the)f(net)m(w)m(ork)h(settles)g
(instan)m(tly)300 4110 y(after)31 b(the)f(switc)m(hing)f(instan)m(t)i
FG(t)1413 4125 y FB(k)r Fv(\000)p FA(1)1545 4110 y FH(.)536
4336 y(Next,)37 b(consider)c(the)h(case)i(when)d(the)h(input)f(is)g
FD(e)p FH(\()p FG(t)p FH(\))h(from)g(\(2.37\),)k(and)c(it)f(is)h(v)-5
b(arying)33 b(during)300 4562 y(the)i(switc)m(hing)f(in)m(terv)-5
b(al.)55 b(Then)34 b(for)h(an)m(y)h(time)f FG(t)p FH(,)i(the)e(state)i
(of)e(the)h(net)m(w)m(ork)g(is)e(appro)m(ximated)h(b)m(y)300
4788 y FD(x)p FH(\()p FG(t)p FH(\))c(suc)m(h)f(that)1877
5012 y(_)1862 5013 y FD(q)p FH(\()p FD(x)p FH(\()p FG(t)p
FH(\)\))d(=)e(0)p FG(:)1330 b FH(\(2.44\))300 5293 y(where)578
5292 y(_)563 5293 y FD(q)30 b FH(is)g(the)g(v)m(ector)i(represen)m
(ting)e(the)h(capacitor)g(curren)m(ts)f(in)f(\(2.37\).)p
eop
%%Page: 48 61
48 60 bop 3809 -200 a FH(48)716 7 y
 6051921 5920358 -65781 45126287 5986140 51046645 startTexFig
 716 7 a
%%BeginDocument: figs/mos_sw1.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      83 53 moveto (off ) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      23 104 moveto
      61 104 lineto
      61 86 lineto
      100 86 lineto
      100 104 lineto
      137 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      61 71 moveto
      100 71 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      81 71 moveto
      81 53 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 105 moveto
      24 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      5 136 moveto
      43 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      5 147 moveto
      17.67 145.00 30.33 145.00
      43 147 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 146 moveto
      24 176 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      72 49 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 176 moveto
      40 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 176 moveto
      0 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 176 moveto
      16 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 176 moveto
      32 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      136 104 moveto
      152 88 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      136 104 moveto
      160 104 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      136 104 moveto
      152 120 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 27 13:55:40 1998
%%EndDocument

 endTexFig
 2302 32 a
 8880538 5723013 65781 45323632 8946319 51046645 startTexFig
 2302 32 a
%%BeginDocument: figs/mos_sw2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      163 53 moveto (off ) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      103 104 moveto
      141 104 lineto
      141 86 lineto
      180 86 lineto
      180 104 lineto
      217 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      141 71 moveto
      180 71 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      161 71 moveto
      161 53 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      25 105 moveto
      25 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      6 136 moveto
      44 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      6 147 moveto
      18.67 145.00 31.33 145.00
      44 147 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      25 146 moveto
      25 176 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      152 49 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      17 176 moveto
      33 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      17 176 moveto
      13 180 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      25 176 moveto
      21 180 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      33 176 moveto
      29 180 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      216 104 moveto
      232 88 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      216 104 moveto
      240 104 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      216 104 moveto
      232 120 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 104 moveto
      104 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      96 104 moveto
      96 144 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      88 144 moveto
      104 144 lineto
   stroke
grestore

% POLYGON/CLOSED-SPLINE
gsave
   newpath
      96 144 moveto
      88 160 lineto
      104 160 lineto
   closepath stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      96 160 moveto
      96 176 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      145 104 moveto
      149 104 lineto
      151 107 lineto
      153 100 lineto
      155 107 lineto
      157 100 lineto
      160 107 lineto
      161 100 lineto
      164 107 lineto
      166 100 lineto
      167 104 lineto
      172 104 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      172 104 moveto
      188 104 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      145 104 moveto
      135 104 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      89 176 moveto
      105 176 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      89 176 moveto
      85 180 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      97 176 moveto
      93 180 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      105 176 moveto
      101 180 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      116 144 moveto
      20 0 atan dup cos 8 mul 116 exch sub
      exch sin 8 mul 164 exch sub lineto
   stroke
grestore
gsave
   newpath
      116 164 8 3 0 20 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      135 165 moveto (diode ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      124 161 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      159 137 moveto (off ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      148 133 moveto (I) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      148 116 moveto
      0 24 atan dup cos 8 mul 172 exch sub
      exch sin 8 mul 116 exch sub lineto
   stroke
grestore
gsave
   newpath
      172 116 8 3 24 0 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 27 14:51:00 1998
%%EndDocument

 endTexFig
 350 954 a FH(Figure)47 b(2.17:)76 b(MOS)46 b(switc)m(h)h(holding)e(a)
350 1067 y(c)m(harge.)2280 963 y(Figure)55 b(2.18:)94
b(Charge)56 b(leak)-5 b(age)58 b(in)d(an)2280 1076 y(MOS)30
b(switc)m(h.)536 1342 y(The)h(solution)f FD(x)p FH(\()p
FG(t)p FH(\))j(for)e(an)m(y)h FG(t)27 b Fz(2)f FG(I)1760
1357 y FB(k)1835 1342 y FH(can)31 b(b)s(e)g(view)m(ed)g(as)h(the)g
(settling)f(solution)f(for)h(a)h(net)m(w)m(ork)300 1568
y(with)j(a)h(constan)m(t)h(input)d(of)i(v)-5 b(alue)35
b FD(e)p FH(\()p FG(t)p FH(\).)58 b(Another)35 b(w)m(a)m(y)i(to)g(view)
e(this)g(appro)m(ximation)f(is)h(that)i(the)300 1794
y(time)32 b(constan)m(ts)h(of)f(the)h(net)m(w)m(ork)g(are)f(\\set")i
(to)f(zero)g(and)e(the)i(net)m(w)m(ork)g(instan)m(taneously)e(reacts)i
(to)300 2020 y(the)26 b(c)m(hanging)f(inputs)f({)i FC(i.)40
b(e.)e FH(the)26 b(c)m(harges)h(on)e(the)h(capacitors)g(are)g(up)s
(dated)e(b)m(y)i(an)f(impulse)e(curren)m(t)300 2245 y(at)31
b(ev)m(ery)g(time)f(instan)m(t)g FG(t)p FH(.)536 2471
y(T)-8 b(o)32 b(obtain)f(the)h(algebraic)g(equations)f(that)h(mo)s(del)
f(the)h(net)m(w)m(ork)g(under)e(the)i(instan)m(t)g(settling)300
2697 y(appro)m(ximation,)e(the)g(condition)f(\(2.44\))k(is)c(applied)f
(to)j(\(2.37\))i(resulting)c(in)645 2845 y Ft(2)645 2995
y(4)715 2901 y FD(q)770 2915 y FB(cs)838 2901 y FH(\()p
FD(x)p FH(\()p FG(t)p FH(\)\))750 3127 y FD(g)q FH(\()p
FD(x)p FH(\()p FG(t)p FH(\)\))1083 2845 y Ft(3)1083 2995
y(5)1163 3014 y FH(=)1259 2845 y Ft(2)1259 2995 y(4)1330
2901 y FD(q)1385 2915 y FB(cs)1452 2901 y FH(\()p FD(x)p
FH(\()p FG(t)1610 2916 y FB(k)r Fv(\000)p FA(1)1744 2901
y FH(\)\))1546 3127 y FD(0)1830 2845 y Ft(3)1830 2995
y(5)1905 3014 y FH(+)1996 2845 y Ft(2)1996 2995 y(4)2116
2901 y FD(0)2066 3127 y(e)p FH(\()p FG(t)p FH(\))2233
2845 y Ft(3)2233 2995 y(5)2576 3014 y FH(for)121 b FG(t)2839
3029 y FB(k)r Fv(\000)p FA(1)2997 3014 y FG(<)25 b(t)g
Fz(\024)g FG(t)3280 3029 y FB(k)3668 3014 y FH(\(2.45\))300
3331 y(The)h(equations)h(in)e(\(2.45\))k(can)e(b)s(e)f(used)g(to)h(dev)
m(elop)g(e\016cien)m(t)g(time-)g(and)f(frequency-domain)f(form)m(u-)300
3557 y(lations.)300 3801 y Fx(2.6.4)112 b(MOS)39 b(transistor)d(as)i(a)
g(switc)m(h)300 4085 y FH(In)c(an)i(actual)f(SC)f(or)i(SI)e(circuit,)h
(the)h(switc)m(hes)f(are)g(implemen)m(ted)f(b)m(y)h(the)g(MOS)g
(transistors)f(that)300 4311 y(in)m(tro)s(duce)f(non-idealities.)50
b(This)32 b(section)j(lists)d(the)j(non-idealities)c(and)j(discusses)f
(to)h(what)h(exten)m(t)300 4537 y(they)c(can)f(b)s(e)g(sim)m(ulated)f
(under)g(the)h(instan)m(t)h(settling)e(appro)m(ximation.)300
4777 y FD(2.6.4.1)106 b(MOS)34 b(switc)m(h)h(used)h(for)f(sampling)300
5061 y FH(A)30 b(common)g(top)s(ology)h(in)d(SC)i(or)g(SI)f(net)m(w)m
(orks)i(is)e(when)g(a)h(switc)m(h)g(is)f(used)g(to)i(hold)d(a)j(c)m
(harge)g(on)f(the)300 5287 y(capacitor)h(as)g(sho)m(wn)f(in)f(Fig.)h
(2.17)p eop
%%Page: 49 62
49 61 bop 3809 -200 a FH(49)658 7 y
 22760489 9867264 394690 41771417 23155179 51638681 startTexFig
 658 7 a
%%BeginDocument: figs/mos_sw3.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   newpath
      208 89 moveto
      208 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      195 106 moveto
      221 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      195 113 moveto
      203.67 111.67 212.33 111.67
      221 113 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 112 moveto
      208 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      269 168 moveto
      244 168 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      244 155 moveto
      244 181 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      237 155 moveto
      238.33 163.67 238.33 172.33
      237 181 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      238 168 moveto
      207 168 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      271 89 moveto
      271 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      258 106 moveto
      284 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      258 113 moveto
      266.67 111.67 275.33 111.67
      284 113 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      271 112 moveto
      271 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      311 89 moveto
      311 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      298 106 moveto
      324 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      298 113 moveto
      306.67 111.67 315.33 111.67
      324 113 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      311 112 moveto
      311 127 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 136 moveto
      412 136 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 89 moveto
      311 89 lineto
   stroke
grestore

% ARC
gsave
   newpath
      311 135 8 8 90 -90 tgifarc
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 215 moveto
      208 198 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      195 198 moveto
      221 198 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      195 191 moveto
      203.67 192.33 212.33 192.33
      221 191 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 192 moveto
      208 169 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      271 215 moveto
      271 198 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      258 198 moveto
      284 198 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      258 191 moveto
      266.67 192.33 275.33 192.33
      284 191 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      271 192 moveto
      271 169 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 215 moveto
      311 215 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      311 176 moveto
      311 215 lineto
   stroke
grestore

% OVAL
newpath 270 167 2 2 tgifellipse fill
gsave
   newpath 270 167 2 2 tgifellipse stroke
grestore

% OVAL
newpath 207 167 2 2 tgifellipse fill
gsave
   newpath 207 167 2 2 tgifellipse stroke
grestore

% OVAL
newpath 239 214 2 2 tgifellipse fill
gsave
   newpath 239 214 2 2 tgifellipse stroke
grestore

% OVAL
newpath 239 88 2 2 tgifellipse fill
gsave
   newpath 239 88 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      240 89 moveto
      240 33 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 136 moveto
      176 136 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      240 215 moveto
      240 271 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      248 237 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      256 243 moveto (B) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      160 150 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      168 156 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      248 75 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      256 81 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      335 150 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      343 156 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      168 124 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      345 124 moveto (S) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      214 76 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      215 239 moveto (B) show
   grestore

% OVAL
gsave
   newpath 173 120 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 345 119 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 220 235 11 11 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 220 72 11 11 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 136 moveto
      224 136 lineto
   stroke
grestore

% OVAL
newpath 222 135 2 2 tgifellipse fill
gsave
   newpath 222 135 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 136 moveto
      248 136 lineto
   stroke
grestore

% OVAL
newpath 248 135 2 2 tgifellipse fill
gsave
   newpath 248 135 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      224 136 moveto
      248 120 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      311 143 moveto
      311 176 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      271 136 moveto
      271 168 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 137 moveto
      208 168 lineto
   stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   [16 16] 0 setdash
   newpath
      143 51 moveto 379 51 lineto 379 252 lineto 143 252 lineto
   closepath stroke
   [] 0 setdash
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      277 37 moveto (MOS switch) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      41 137 moveto
      41 167 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      22 168 moveto
      60 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      22 179 moveto
      34.67 177.00 47.33 177.00
      60 179 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      41 178 moveto
      41 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      33 208 moveto
      49 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      33 208 moveto
      29 212 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      41 208 moveto
      37 212 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      49 208 moveto
      45 212 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 136 moveto
      120 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      120 136 moveto
      144 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      144 136 moveto
      176 136 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      40 173 moveto
      58.67 173.00 72.17 172.83 80.50 172.50 curveto
      88.83 172.17 95.00 172.00 99.00 172.00 curveto
      103.00 172.00 108.50 172.17 115.50 172.50 curveto
      122.50 172.83 127.50 173.00 130.50 173.00 curveto
      133.50 173.00 137.50 172.83 142.50 172.50 curveto
      147.50 172.17 151.17 172.00 153.50 172.00 curveto
      155.83 172.00 158.17 172.17 160.50 172.50 curveto
      162.83 172.83 164.17 173.33 164.50 174.00 curveto
      164.83 174.67 165.50 175.83 166.50 177.50 curveto
      167.50 179.17 168.33 180.83 169.00 182.50 curveto
      169.67 184.17 171.17 185.83 173.50 187.50 curveto
      175.83 189.17 177.67 190.33 179.00 191.00 curveto
      180.33 191.67 181.83 192.17 183.50 192.50 curveto
      185.17 192.83 185.83 193.17 185.50 193.50 curveto
      185.17 193.83 187.50 194.17 192.50 194.50 curveto
      197.50 194.83 202.67 195.00 208.00 195.00 curveto
      213.33 195.00 218.50 194.83 223.50 194.50 curveto
      228.50 194.17 231.17 193.83 231.50 193.50 curveto
      231.83 193.17 232.50 192.50 233.50 191.50 curveto
      234.50 190.50 235.50 189.50 236.50 188.50 curveto
      237.50 187.50 238.50 186.17 239.50 184.50 curveto
      240.50 182.83 241.00 181.50 241.00 180.50 curveto
      241.00 179.50 240.83 177.17 240.50 173.50 curveto
      240.17 169.83 240.17 167.00 240.50 165.00 curveto
      240.83 163.00 240.83 160.50 240.50 157.50 curveto
      240.17 154.50 240.00 152.83 240.00 152.50 curveto
      240.00 152.17 239.83 150.83 239.50 148.50 curveto
      239.17 146.17 239.17 144.00 239.50 142.00 curveto
      239.83 140.00 240.50 137.83 241.50 135.50 curveto
      242.50 133.17 243.33 131.50 244.00 130.50 curveto
      244.67 129.50 245.83 128.50 247.50 127.50 curveto
      249.17 126.50 250.33 125.67 251.00 125.00 curveto
      251.67 124.33 252.50 123.17 253.50 121.50 curveto
      254.50 119.83 255.00 118.33 255.00 117.00 curveto
      255.00 115.67 253.83 113.50 251.50 110.50 curveto
      249.17 107.50 246.83 105.17 244.50 103.50 curveto
      242.17 101.83 239.17 101.17 235.50 101.50 curveto
      231.83 101.83 229.17 102.83 227.50 104.50 curveto
      225.83 106.17 223.17 107.50 219.50 108.50 curveto
      215.83 109.50 213.17 109.83 211.50 109.50 curveto
      209.83 109.17 207.17 108.83 203.50 108.50 curveto
      199.83 108.17 197.00 108.17 195.00 108.50 curveto
      193.00 108.83 190.50 108.83 187.50 108.50 curveto
      184.50 108.17 182.50 107.50 181.50 106.50 curveto
      180.50 105.50 178.50 104.50 175.50 103.50 curveto
      172.50 102.50 170.33 102.00 169.00 102.00 curveto
      167.67 102.00 164.50 102.17 159.50 102.50 curveto
      154.50 102.83 150.50 103.00 147.50 103.00 curveto
      144.50 103.00 139.17 103.50 131.50 104.50 curveto
      123.83 105.50 117.50 106.50 112.50 107.50 curveto
      107.50 108.50 100.83 109.50 92.50 110.50 curveto
      84.17 111.50 78.17 111.83 74.50 111.50 curveto
      70.83 111.17 66.17 111.17 60.50 111.50 curveto
      54.83 111.83 51.00 112.17 49.00 112.50 curveto
      47.00 112.83 44.17 113.50 40.50 114.50 curveto
      36.83 115.50 34.00 116.50 32.00 117.50 curveto
      30.00 118.50 27.83 120.17 25.50 122.50 curveto
      23.17 124.83 21.50 126.50 20.50 127.50 curveto
      19.50 128.50 18.50 130.17 17.50 132.50 curveto
      16.50 134.83 15.67 136.83 15.00 138.50 curveto
      14.33 140.17 13.83 142.50 13.50 145.50 curveto
      13.17 148.50 13.00 150.50 13.00 151.50 curveto
      13.00 152.50 13.17 154.17 13.50 156.50 curveto
      13.83 158.83 13.83 160.50 13.50 161.50 curveto
      13.17 162.50 13.50 163.83 14.50 165.50 curveto
      15.50 167.17 16.50 168.50 17.50 169.50 curveto
      18.50 170.50 20.83 171.50 24.50 172.50 curveto
      28.17 173.50 31.17 173.83 33.50 173.50 curveto
      35.83 173.17 38.17 172.83 40.50 172.50 curveto
      42.83 172.17 44.00 172.33
      44 173 curveto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      232 121 moveto (f) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      152 34 moveto (V) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      165 34 moveto (c) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      560 104 moveto 624 104 lineto 624 168 lineto 560 168 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      584 74 moveto (V) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      597 74 moveto (c) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      592 80 moveto
      24 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      592 104 lineto
   stroke
grestore
gsave
   newpath
      592 80 8 3 0 -24 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      576 154 moveto (DAC) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      592 168 moveto
      24 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      592 192 lineto
   stroke
grestore
gsave
   newpath
      592 168 8 3 0 -24 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      584 227 moveto (f) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      240 32 moveto
      184 32 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      233 272 moveto
      249 272 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      233 272 moveto
      229 276 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      241 272 moveto
      237 276 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      249 272 moveto
      245 276 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      408 136 moveto
      424 120 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      408 136 moveto
      432 136 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      408 136 moveto
      424 152 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      573 130 moveto (Ideal) show
   grestore

% OVAL
newpath 270 135 2 2 tgifellipse fill
gsave
   newpath 270 135 2 2 tgifellipse stroke
grestore

% OVAL
newpath 207 135 2 2 tgifellipse fill
gsave
   newpath 207 135 2 2 tgifellipse stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Nov 14 12:55:43 1998
%%EndDocument

 endTexFig
 1010 1453 a FH(Figure)30 b(2.19:)42 b(Appro)m(ximate)31
b(mo)s(del)e(for)h(the)h(MOS)e(switc)m(h.)300 1728 y
FD(Charge)34 b(leak)-6 b(age)p 300 1759 691 4 v 536 1954
a FH(Ev)m(en)36 b(when)f(the)h(MOS)g(transistor)f(is)g(o\013)h(\(in)f
(the)h(accum)m(ulation)g(region\),)h(there)f(is)f(a)h(small)300
2180 y(leak)-5 b(age)38 b(curren)m(t)f(through)g(the)g(rev)m
(erse-biased)h(dio)s(des)d(at)j(the)g(source)f(or)g(the)h(drain)d(of)i
(the)h(tran-)300 2406 y(sistor)c(and)g(through)g(the)g(c)m(hannel)g(as)
h(sho)m(wn)f(in)f(Fig.)i(2.18.)55 b(In)33 b(practical)i(SI)e(or)i(SC)f
(net)m(w)m(orks)h(the)300 2631 y(leak)-5 b(age)29 b(curren)m(ts)e(are)h
(minimized)d(and)i(the)h(loss)f(of)h(c)m(harge)h(during)c(the)j(switc)m
(hing)e(in)m(terv)-5 b(al)27 b(is)g(negli-)300 2857 y(gible.)41
b(Ho)m(w)m(ev)m(er,)33 b(if)c(the)i(circuit)f(in)f(Fig.)i(2.18)h(is)e
(allo)m(w)m(ed)h(to)g(settle,)h(the)f(capacitor)g(will)d(completely)300
3083 y(disc)m(harge.)536 3309 y(The)41 b(settling)g(state)h(that)g(is)f
(computed)g(b)m(y)g(the)g(CS/MNA)h(equations)f(under)f(the)h(instan)m
(t)300 3535 y(settling)28 b(appro)m(ximation)f(will)f(predict)h(that)i
(the)g(capacitor)g(is)f(completely)g(disc)m(harged.)40
b(In)27 b(order)h(to)300 3761 y(appro)m(ximate)g(the)h(practical)f
(settling)g(p)s(oin)m(t)f(of)h(the)h(net)m(w)m(ork,)h(the)e(transistor)
g(mo)s(del)f(of)h(Fig.)h(2.14)h(is)300 3986 y(appro)m(ximated)g(b)m(y)h
(the)f(mo)s(del)g(sho)m(wn)g(in)f(Fig.)i(2.19.)43 b(The)30
b(c)m(harge)h(mo)s(del)f(remains)f(the)i(same)g(while)300
4212 y(the)40 b(conductiv)m(e)f(branc)m(hes)h(are)g(replaced)f(b)m(y)g
(an)g(ideal)g(switc)m(h.)67 b(When)40 b(the)f(appro)m(ximate)h(mo)s
(del)300 4438 y(is)f(used,)j(the)e(c)m(harge)h(leak)-5
b(age)41 b(e\013ects)g(are)g(ignored.)68 b(The)40 b(settling)f(state)i
(for)f(the)g(c)m(harge)h(on)f(the)300 4664 y(holding)26
b(capacitor)j(is)e(determined)g(b)m(y)h(the)g(c)m(harge)h
(redistribution)24 b(in)j(the)i(c)m(harge)g(surface)f(sho)m(wn)f(in)300
4890 y(Fig.)h(2.19.)41 b(The)27 b(appro)m(ximate)h(mo)s(del)e(in)g
(Fig.)i(2.19)h(for)e(the)h(MOS)e(transistor)h(will)e(b)s(e)i(referred)f
(to)j(as)300 5115 y(the)h(\\MOS)g(switc)m(h".)40 b(Note,)32
b(that)f(the)f(MOS)f(switc)m(h)h(requires)e(b)s(oth)h(an)h(analog)h
(con)m(trol)f(signal)f(\()p FG(V)3830 5129 y FB(c)3865
5115 y FH(\))300 5341 y(and)34 b(a)h(b)s(o)s(olean)e(con)m(trol)i
(signal)e(\()p FG(\036)p FH(\).)54 b(The)34 b(analog)h(con)m(trol)f
(signal)g(can)g(b)s(e)g(pro)s(duced)f(b)m(y)h(using)f(an)p
eop
%%Page: 50 63
50 62 bop 3809 -200 a FH(50)1037 7 y
 16774348 6512394 -65781 45126287 16708567 51638681 startTexFig
 1037 7 a
%%BeginDocument: figs/mos_sw4.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      115 37 moveto (c) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      63 104 moveto
      101 104 lineto
      101 86 lineto
      140 86 lineto
      140 104 lineto
      177 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      101 71 moveto
      140 71 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      121 71 moveto
      121 53 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 105 moveto
      24 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      5 136 moveto
      43 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      5 147 moveto
      17.67 145.00 30.33 145.00
      43 147 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 146 moveto
      24 176 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      104 33 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 176 moveto
      40 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 176 moveto
      0 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 176 moveto
      16 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 176 moveto
      32 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      240 104 moveto
      256 88 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      240 104 moveto
      264 104 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      240 104 moveto
      256 120 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      23 104 moveto
      63 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      58 56 moveto
      58 77 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      45 77 moveto
      72 77 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      45 84 moveto
      53.67 82.67 62.67 82.67
      72 84 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      58 83 moveto
      58 104 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      58 56 moveto
      121 56 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      184 56 moveto
      184 77 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      197 77 moveto
      170 77 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      197 84 moveto
      188.33 82.67 179.33 82.67
      170 84 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      184 83 moveto
      184 104 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      184 56 moveto
      121 56 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      176 104 moveto
      240 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      121 56 moveto
      121 48 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      339 85 moveto (c) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      328 81 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      352 152 moveto
      -64 0 atan dup cos 8 mul 352 exch sub
      exch sin 8 mul 88 exch sub lineto
   stroke
grestore
gsave
   newpath
      352 88 8 3 0 -64 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      352 152 moveto
      0 96 atan dup cos 8 mul 448 exch sub
      exch sin 8 mul 152 exch sub lineto
   stroke
grestore
gsave
   newpath
      448 152 8 3 96 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      360 104 moveto
      392 104 lineto
      392 136 lineto
      424 136 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      320 110 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      327 114 moveto (on) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      320 134 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      327 138 moveto (off) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      394 173 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      387 168 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      443 168 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      40 64 moveto
      39.33 77.33 37.33 86.00 34.00 90.00 curveto
      30.67 94.00 24.67 96.00
      0 -13 atan dup cos 8 mul 16 exch sub
      exch sin 8 mul 96 exch sub curveto
   stroke
grestore
gsave
   newpath
      16 96 8 3 -13 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      200 64 moveto
      200.67 77.33 202.67 86.00 206.00 90.00 curveto
      209.33 94.00 215.33 96.00
      0 13 atan dup cos 8 mul 224 exch sub
      exch sin 8 mul 96 exch sub curveto
   stroke
grestore
gsave
   newpath
      224 96 8 3 13 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Symbol findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      9 82 moveto (D) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      20 82 moveto (q) show
   grestore

% TEXT
0 setgray
/Symbol findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      213 83 moveto (D) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      224 83 moveto (q) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 27 16:51:54 1998
%%EndDocument

 endTexFig
 1311 1028 a FH(Figure)30 b(2.20:)42 b(Clo)s(c)m(k)30
b(feed-through)h(e\013ect.)1037 1145 y
 16774348 6841303 -65781 44797378 16708567 51638681 startTexFig
 1037 1145 a
%%BeginDocument: figs/mos_sw5.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      115 37 moveto (c) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      63 104 moveto
      101 104 lineto
      101 86 lineto
      140 86 lineto
      140 104 lineto
      177 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      101 71 moveto
      140 71 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      121 71 moveto
      121 53 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 105 moveto
      24 135 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      5 136 moveto
      43 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      5 147 moveto
      17.67 145.00 30.33 145.00
      43 147 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 146 moveto
      24 176 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      104 33 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 176 moveto
      40 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 176 moveto
      0 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 176 moveto
      16 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 176 moveto
      32 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      240 104 moveto
      256 88 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      240 104 moveto
      264 104 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      240 104 moveto
      256 120 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      23 104 moveto
      63 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      176 104 moveto
      240 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      121 56 moveto
      121 48 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      339 85 moveto (c) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      328 81 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      352 152 moveto
      -64 0 atan dup cos 8 mul 352 exch sub
      exch sin 8 mul 88 exch sub lineto
   stroke
grestore
gsave
   newpath
      352 88 8 3 0 -64 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      352 152 moveto
      0 96 atan dup cos 8 mul 448 exch sub
      exch sin 8 mul 152 exch sub lineto
   stroke
grestore
gsave
   newpath
      448 152 8 3 96 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      320 110 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      327 114 moveto (on) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      320 134 moveto (V) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      327 138 moveto (off) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      402 189 moveto (fall) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      395 184 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      443 168 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      110 92 moveto
      108.00 100.67 105.50 106.33 102.50 109.00 curveto
      99.50 111.67 86.00 112.67
      -1 -36 atan dup cos 8 mul 62 exch sub
      exch sin 8 mul 112 exch sub curveto
   stroke
grestore
gsave
   newpath
      62 112 8 3 -36 -1 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Symbol findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      56 136 moveto (D) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      67 136 moveto (q) show
   grestore

% TEXT
0 setgray
/Symbol findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      146 136 moveto (D) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      157 136 moveto (q) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      130 93 moveto
      132.00 101.67 134.50 107.33 137.50 110.00 curveto
      140.50 112.67 154.00 113.67
      -1 36 atan dup cos 8 mul 178 exch sub
      exch sin 8 mul 113 exch sub curveto
   stroke
grestore
gsave
   newpath
      178 113 8 3 36 -1 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Helvetica findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      78 139 moveto (source) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      168 139 moveto (drain) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      352 112 moveto
      384 112 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      416 144 moveto
      448 144 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      384 104 moveto
      384 160 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      416 104 moveto
      416 160 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      384 160 moveto
      0 32 atan dup cos 8 mul exch sin 8 mul rmoveto
      0 32 atan dup cos 8 mul 416 exch sub
      exch sin 8 mul 160 exch sub lineto
   stroke
grestore
gsave
   newpath
      384 160 8 3 -32 0 tgifarrowtip
   closepath fill
grestore
gsave
   newpath
      416 160 8 3 32 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      384 112 moveto
      416 144 lineto
   stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 27 17:33:43 1998
%%EndDocument

 endTexFig
 1217 2208 a FH(Figure)f(2.21:)42 b(Channel)29 b(c)m(harge)j
(redistribution.)300 2483 y(ideal)d(D)m(A)m(C)j(as)e(sho)m(wn)g(in)f
(Fig.)i(2.19.)330 2709 y FD(Clo)s(c)m(k)36 b(feed-through)p
300 2740 907 4 v 536 2935 a FH(The)24 b(clo)s(c)m(k)h(feed-through)f
(e\013ect)i(is)e(illustrated)e(in)h(Fig.)i(2.20.)40 b(Because)26
b(of)f(the)f(o)m(v)m(erlap)h(capaci-)300 3161 y(tances)i(b)s(et)m(w)m
(een)g(gate)g(and)f(source)g(and)g(gate)h(and)f(drain,)f(the)i(v)m
(oltage)g(c)m(hange)h(at)e(the)h(gate)g(terminal)300
3386 y(causes)35 b(c)m(harge)g(to)g(b)s(e)f(injected)g(at)h(the)g
(source)f(and)g(drain)f(terminals.)51 b(The)34 b(total)h(c)m(harge)g
(injected)300 3612 y(dep)s(ends)f(on)j(the)f(v)m(oltage)i(swing)d(of)i
(the)f(con)m(trol)h(signal)e(but)h(it)g(is)f(indep)s(enden)m(t)f(of)i
(the)h(fall)e(time.)300 3838 y(This)29 b(e\013ect)i(can)g(b)s(e)f(sim)m
(ulated)f(b)m(y)h(the)h(MOS)f(switc)m(h)f(mo)s(del)h(in)f(Fig.)h(2.19.)
330 4064 y FD(Channel)35 b(c)m(harge)g(redistribution)p
300 4095 1402 4 v 31 w FH([63)q(])536 4290 y(When)29
b(the)h(transistor)f(is)f(on,)i(there)g(is)e(a)i(c)m(harge)h(presen)m
(t)e(in)f(the)i(c)m(hannel.)40 b(As)29 b(the)h(transistor)300
4515 y(is)25 b(turned)g(o\013,)j(this)d(c)m(harge)j(lea)m(v)m(es)f
(through)f(the)g(drain)e(and)i(source)g(terminal)f(and)h(is)f(injected)
h(to)h(the)300 4741 y(holding)20 b(capacitor)j(as)g(sho)m(wn)e(in)g
(Fig.)i(2.21.)39 b(The)22 b(c)m(harge)i(mo)s(del)d(of)h(the)h(device)f
(sp)s(eci\014es)f(the)h(fraction)300 4967 y(b)m(y)29
b(whic)m(h)g(the)h(c)m(hannel)f(c)m(harge)h(is)f(divided)e(b)s(et)m(w)m
(een)j(the)g(drain)e(and)h(the)g(source)h([64)q(].)41
b(Usually)28 b(this)300 5193 y(fraction)e(is)g(a)g(constan)m(t.)41
b(Ho)m(w)m(ev)m(er,)29 b(the)e(actual)g(c)m(harge)g(that)g(lea)m(v)m
(es)h(the)e(drain)f(and)h(source)g(terminal)p eop
%%Page: 51 64
51 63 bop 3809 -200 a FH(51)1187 7 y
 14406206 9735700 2236579 41574072 16642785 51309772 startTexFig
 1187 7 a
%%BeginDocument: figs/mos_sw6.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      267 45 moveto (c1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      215 112 moveto
      253 112 lineto
      253 94 lineto
      292 94 lineto
      292 112 lineto
      329 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      253 79 moveto
      292 79 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      273 79 moveto
      273 61 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      256 41 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 144 moveto
      448 144 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 144 moveto
      408 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      432 144 moveto
      424 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      448 144 moveto
      440 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      273 64 moveto
      273 56 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      267 276 moveto (c2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      215 192 moveto
      253 192 lineto
      253 210 lineto
      292 210 lineto
      292 192 lineto
      329 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      253 225 moveto
      292 225 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      273 225 moveto
      273 243 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      256 272 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      273 240 moveto
      273 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      346 112 moveto
      355 112 lineto
      358 118 lineto
      363 105 lineto
      366 118 lineto
      371 105 lineto
      376 118 lineto
      379 105 lineto
      385 118 lineto
      388 105 lineto
      391 112 lineto
      400 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      400 112 moveto
      432 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      346 112 moveto
      327 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      346 192 moveto
      355 192 lineto
      358 198 lineto
      363 185 lineto
      366 198 lineto
      371 185 lineto
      376 198 lineto
      379 185 lineto
      385 198 lineto
      388 185 lineto
      391 192 lineto
      400 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      400 192 moveto
      432 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      346 192 moveto
      327 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 224 moveto
      448 224 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 224 moveto
      408 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      432 224 moveto
      424 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      448 224 moveto
      440 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      432 112 moveto
      432 144 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      432 192 moveto
      432 224 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 192 moveto
      192 192 lineto
      192 112 lineto
      216 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 152 moveto
      144 152 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 124 152 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 152 moveto
      72 152 lineto
      72 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 96 moveto
      80 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      112 152 moveto
      0 24 atan dup cos 10 mul 136 exch sub
      exch sin 10 mul 152 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      136 152 10 4 24 0 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 27 17:56:46 1998
%%EndDocument

 endTexFig
 1250 1436 a FH(Figure)30 b(2.22:)42 b(MOS)30 b(switc)m(h)g(in)f
(curren)m(t)h(path.)300 1711 y(is)e(also)h(dep)s(enden)m(t)e(on)i(the)g
(fall)e(time)i FG(t)1679 1726 y FB(f)7 b(al)q(l)1834
1711 y FH(of)29 b(the)g(con)m(trol)g(signal)f(at)h(the)g(gate)i
(terminal)c(and)h(on)h(the)300 1937 y(imp)s(edances)g(at)i(the)g(drain)
d(and)i(source)g(terminals)f(that)i(pro)s(duce)e(\014nite)h(time)g
(constan)m(ts[65)r(].)536 2163 y(When)j(the)g(switc)m(hing)f(is)g
(assumed)g(to)h(b)s(e)g(instan)m(taneous)g(\()p FG(t)2714
2178 y FB(f)7 b(al)q(l)2870 2163 y FH(=)29 b(0\))34 b(this)e(e\013ect)i
(cannot)g(b)s(e)300 2389 y(sim)m(ulated.)j(The)21 b(fraction)h(of)g(c)m
(harge)h(going)f(to)h(the)f(drain)e(and)h(the)i(source)f(is)f
(completely)g(determined)300 2615 y(b)m(y)k(the)g(c)m(harge)i(mo)s(del)
d(of)h(the)h(device.)38 b(The)25 b(MOS)g(switc)m(h)f(mo)s(del)g(of)i
(Fig.)f(2.19)i(computes)e(the)h(c)m(harge)300 2841 y(injection)j(when)h
(the)g(switc)m(hing)f(is)h(instan)m(taneous.)536 3066
y(Neglecting)38 b(the)e(dep)s(endence)g(on)h(the)g(fall)e(time)i(and)f
(drain/source)f(no)s(de)i(imp)s(edances)e(is)h(a)300
3292 y(go)s(o)s(d)26 b(appro)m(ximation)f(when)f(the)j(fall)d(time)i
(is)f(short)g(compared)h(to)h(the)f(time)f(constan)m(ts)j(of)e(the)g
(drain)300 3518 y(and)k(source)g(no)s(de)g(imp)s(edances.)300
3761 y Fx(2.6.5)112 b(MOS)39 b(transistor)d(as)i(a)g(curren)m
(t-conducting)f(switc)m(h)300 4046 y FH(The)i(net)m(w)m(ork)h(in)e
(Fig.)h(2.22)i(is)d(an)i(example)e(where)h(the)h(MOS)e(transistor)h(is)
f(used)h(as)g(a)h(curren)m(t-)300 4272 y(conducting)32
b(switc)m(h.)48 b(In)33 b(this)f(case,)j(the)e(settling)f(state)j(can)e
(b)s(e)g(prop)s(erly)d(computed)j(b)m(y)g(using)f(the)300
4498 y(full)j(transistor)i(mo)s(del.)60 b(The)37 b(con)m(trol)h(v)m
(oltages)h(\()p FG(V)2161 4512 y FB(c)p FA(1)2269 4498
y FH(and)e FG(V)2506 4512 y FB(c)p FA(2)2576 4498 y FH(\))g(are)h(pro)s
(duced)e(b)m(y)h(an)h(ideal)e(D)m(A)m(C)300 4723 y(\(just)30
b(lik)m(e)g(in)f(the)h(case)i(of)e(the)h(sampling)d(MOS)i(switc)m(h.\))
p eop
%%Page: 52 65
52 64 bop 3809 -200 a FH(52)300 99 y FL(2.7)135 b(F)-11
b(ast)45 b(transien)l(t)h(analysis)300 414 y FH(The)25
b(algebraic)h(equations)g(deriv)m(ed)f(from)g(CS/MNA)h(under)e(the)j
(instan)m(t)e(settling)g(appro)m(ximation)g(in)300 640
y(Sec.)k(2.6.2)h(can)e(b)s(e)f(applied)f(to)j(dev)m(elop)f(an)g
(e\016cien)m(t)h(time-domain)e(form)m(ulation.)39 b(F)-8
b(or)29 b(con)m(v)m(enience,)300 866 y(the)i(equations)f(\(2.45\))i
(are)f(rep)s(eated)f(here;)1083 1014 y Ft(2)1083 1164
y(4)1154 1070 y FD(q)1209 1085 y FB(cs;k)1334 1070 y
FH(\()p FD(x)1424 1085 y FB(k)1468 1070 y FH(\()p FG(t)p
FH(\)\))1197 1296 y FD(g)1249 1311 y FB(k)1292 1296 y
FH(\()p FD(x)1382 1311 y FB(k)1425 1296 y FH(\()p FG(t)p
FH(\)\))1622 1014 y Ft(3)1622 1164 y(5)1702 1183 y FH(=)1798
1014 y Ft(2)1798 1164 y(4)1869 1070 y FD(q)1924 1085
y FB(cs;k)2049 1070 y FH(\()p FD(x)2139 1085 y FB(k)r
Fv(\000)p FA(1)2273 1070 y FH(\()p FG(t)2341 1085 y FB(k)r
Fv(\000)p FA(1)2474 1070 y FH(\)\))2180 1296 y FD(0)2560
1014 y Ft(3)2560 1164 y(5)2635 1183 y FH(+)2726 1014
y Ft(2)2726 1164 y(4)2867 1070 y FD(0)2797 1296 y(e)2845
1311 y FB(k)2887 1296 y FH(\()p FG(t)p FH(\))3006 1014
y Ft(3)3006 1164 y(5)3076 1183 y FG(;)567 b FH(\(2.46\))300
1500 y(where)32 b(the)h(subscript)d FG(k)36 b FH(has)d(b)s(een)e(rein)m
(tro)s(duced)g(to)j(denote)f(that)g(the)g(equations)f(are)h(v)-5
b(alid)31 b(in)h(the)300 1726 y(in)m(terv)-5 b(al)30
b FG(I)669 1741 y FB(k)711 1726 y FH(.)536 1952 y(Note,)f(that)e(the)g
(state)h FD(x)1398 1967 y FB(k)1441 1952 y FH(\()p FG(t)p
FH(\))f(for)f(an)m(y)h(time)f FG(t)f Fz(2)g FG(I)2261
1967 y FB(k)2330 1952 y FH(can)i(b)s(e)f(obtained)g(b)m(y)g(solving)g
(\(2.47\),)j(using)300 2178 y(Newton)f(iteration.)39
b(In)27 b(particular,)f(the)i(state)h(at)f(the)f(end)g(of)g(the)h
(switc)m(hing)e(in)m(terv)-5 b(al)27 b FD(x)3427 2193
y FB(k)3469 2178 y FH(\()p FG(t)3537 2193 y FB(k)3580
2178 y FH(\))h(can)g(b)s(e)300 2404 y(obtained)i(b)m(y)g(solving)f(the)
i(equations:)1048 2552 y Ft(2)1048 2701 y(4)1119 2608
y FD(q)1174 2623 y FB(cs;k)1299 2608 y FH(\()p FD(x)1389
2623 y FB(k)1433 2608 y FH(\()p FG(t)1501 2623 y FB(k)1543
2608 y FH(\)\))1162 2834 y FD(g)1214 2849 y FB(k)1256
2834 y FH(\()p FD(x)1346 2849 y FB(k)1390 2834 y FH(\()p
FG(t)1458 2849 y FB(k)1501 2834 y FH(\)\))1629 2552 y
Ft(3)1629 2701 y(5)1710 2721 y FH(=)1806 2552 y Ft(2)1806
2701 y(4)1876 2608 y FD(q)1931 2623 y FB(cs;k)2057 2608
y FH(\()p FD(x)2147 2623 y FB(k)r Fv(\000)p FA(1)2280
2608 y FH(\()p FG(t)2348 2623 y FB(k)r Fv(\000)p FA(1)2481
2608 y FH(\)\))2188 2834 y FD(0)2567 2552 y Ft(3)2567
2701 y(5)2643 2721 y FH(+)2734 2552 y Ft(2)2734 2701
y(4)2896 2608 y FD(0)2804 2834 y(e)2852 2849 y FB(k)2895
2834 y FH(\()p FG(t)2963 2849 y FB(k)3006 2834 y FH(\))3056
2552 y Ft(3)3056 2701 y(5)3127 2721 y FG(:)516 b FH(\(2.47\))536
3038 y(When)36 b(the)h(input)e FD(e)1267 3053 y FB(k)1309
3038 y FH(\()p FG(t)p FH(\))i(is)e(sampled)h(and)f(held,)i(it)f(is)g
(constan)m(t)h(within)d(eac)m(h)k(switc)m(hing)d(in-)300
3264 y(terv)-5 b(al.)68 b(Then,)41 b(under)d(the)i(instan)m(t)f
(settling)g(appro)m(ximation,)i(the)f(state)h(of)e(the)h(net)m(w)m(ork)
g(within)300 3489 y(the)30 b(switc)m(hing)e(in)m(terv)-5
b(al)29 b(is)f(also)i(constan)m(t,)h(and)e FD(x)2079
3504 y FB(k)2121 3489 y FH(\()p FG(t)2189 3504 y FB(k)2232
3489 y FH(\))h(can)g(represen)m(t)f(the)h(state)h(during)c(the)j(en)m
(tire)300 3715 y(switc)m(hing)f(in)m(terv)-5 b(al.)40
b(In)30 b(that)h(case,)g(only)f(one)g(solution)f(is)h(required)e(p)s
(er)i(switc)m(hing)f(in)m(terv)-5 b(al.)536 3941 y(Note,)27
b(that)d(using)e(\(2.47\),)28 b(it)23 b(is)g(p)s(ossible)e(to)k
(compute)f(the)g(solution)e FD(x)2993 3956 y FB(k)3036
3941 y FH(\()p FG(t)3104 3956 y FB(k)3147 3941 y FH(\))i(giv)m(en)f
(the)h(solution)300 4167 y(at)29 b(the)g(end)f(of)h(the)g(previous)f
(switc)m(hing)f(in)m(terv)-5 b(al)28 b FD(x)2134 4182
y FB(k)r Fv(\000)p FA(1)2267 4167 y FH(\()p FG(t)2335
4182 y FB(k)r Fv(\000)p FA(1)2468 4167 y FH(\).)40 b(This)27
b(leads)h(to)i(the)f(follo)m(wing)e(simple)300 4393 y(algorithm)i(for)i
(the)f(\\fast)h(transien)m(t")g(analysis.)p eop
%%Page: 53 66
53 65 bop 3809 -200 a FH(53)300 99 y FC(A)n(lgorithm)31
b FH(2.7.1:)138 b Fw(Fast)47 b(transient)e(analysis.)300
286 y(Initialize:)92 b FG(t)26 b FH(=)e FG(t)1107 300
y FA(0)1147 286 y Fw(,)47 b FG(k)29 b FH(=)c(0)300 459
y Fw(1\))143 b(Set)47 b(initial)e(conditions)g FD(x)1691
473 y FA(0)1731 459 y FH(\()p FG(t)1799 473 y FA(0)1839
459 y FH(\))300 632 y Fw(2\))143 b(while)46 b(\()p FG(t)906
647 y FB(k)973 632 y FG(<)25 b(t)1102 646 y FB(stop)1234
632 y Fw(\))300 805 y(2.1\))190 b(k)47 b(=)h(k)f(+)h(1)300
978 y(2.2\))190 b(Construct)45 b(equations)g(\(2.47\))h(and)h(solve)g
(for)g FD(x)2694 993 y FB(k)2736 978 y FH(\()p FG(t)2804
993 y FB(k)2847 978 y FH(\))192 b Fw(\(Algorithm)45 b(2.7.3\))300
1151 y(3\))143 b(end)47 b(while)536 1624 y FH(Note,)26
b(that)e(in)e(step)h(2.2)h(ab)s(o)m(v)m(e,)i(it)c(is)g(necessary)i(to)g
(construct)f(and)f(solv)m(e)i(a)f FC(new)g FH(set)h(of)f(net)m(w)m(ork)
300 1850 y(equations)j(for)f(eac)m(h)i(top)s(ology)g(of)f(the)g(net)m
(w)m(ork.)40 b(This)24 b(pro)s(cess)i(is)f(computationally)f(exhaustiv)
m(e)j(and)300 2076 y(can)i(cause)g(the)g(fast)h(transien)m(t)e
(algorithm)g(to)h(b)s(e)g(v)m(ery)g(ine\016cien)m(t.)39
b(The)29 b(next)g(section)g(discusses)e(the)300 2302
y(implemen)m(tation)h(issues)h(that)h(are)g(in)m(v)m(olv)m(ed)f(and)g
(presen)m(t)h(an)g(algorithm)e(that)i(leads)g(to)g(an)f(e\016cien)m(t)
300 2527 y(transien)m(t)h(analysis.)300 2771 y Fx(2.7.1)112
b(Implemen)m(tation)27 b(considerations)i(and)i(e\016tien)m(t)e
(algorithm)e(for)i(fast)i(tran-)642 2887 y(sien)m(t)37
b(analysis)300 3172 y FH(The)31 b(goal)h(is)f(to)h(e\016cien)m(tly)f
(solv)m(e)h(the)g(set)g(of)f(non-linear)f(algebraic)h(equations)g(in)g
(\(2.47\).)46 b(T)-8 b(o)32 b(mak)m(e)300 3397 y(the)h(follo)m(wing)f
(discussion)f(more)i(general,)i(let)e FD(x)2037 3364
y FB(s)2037 3424 y(k)2113 3397 y FH(represen)m(t)g(the)h(desired)e
(solution)f FD(x)3381 3412 y FB(k)3424 3397 y FH(\()p
FG(t)3492 3412 y FB(k)3535 3397 y FH(\),)k(and)d FD(e)3857
3364 y FB(s)3857 3424 y(k)300 3623 y FH(represen)m(t)e(the)h(input)d
FD(e)1139 3638 y FB(k)1182 3623 y FH(\()p FG(t)1250 3638
y FB(k)1292 3623 y FH(\).)41 b(In)30 b(general,)g FD(x)1900
3590 y FB(s)1900 3650 y(k)1973 3623 y FH(and)g FD(e)2198
3590 y FB(s)2198 3650 y(k)2271 3623 y FH(can)g(represen)m(t)g(the)h
(solution)e(and)g(the)i(input,)300 3849 y(resp)s(ectiv)m(ely)-8
b(,)30 b(for)h(an)m(y)f(time)g FG(t)25 b Fz(2)g FG(I)1515
3864 y FB(k)1558 3849 y FH(.)41 b(The)29 b(net)m(w)m(ork)j(equations)e
(can)g(b)s(e)g(rewritten)g(in)f(the)h(form:)1871 4166
y FD(f)1903 4181 y FB(k)1946 4166 y FH(\()p FD(x)2036
4129 y FB(s)2036 4189 y(k)2079 4166 y FH(\))c(=)f FD(0)p
FG(;)1355 b FH(\(2.48\))300 4483 y(where)1073 4709 y
FD(f)1105 4724 y FB(k)1147 4709 y FH(\()p FD(x)p FH(\))26
b(=)1394 4540 y Ft(2)1394 4690 y(4)1465 4596 y FD(q)1520
4611 y FB(cs;k)1645 4596 y FH(\()p FD(x)p FH(\))1508
4822 y FD(g)1560 4837 y FB(k)1603 4822 y FH(\()p FD(x)p
FH(\))1786 4540 y Ft(3)1786 4690 y(5)1862 4709 y Fz(\000)1953
4540 y Ft(2)1953 4690 y(4)2023 4596 y FD(q)2078 4611
y FB(cs;k)2204 4596 y FH(\()p FD(x)2294 4611 y FB(k)r
Fv(\000)p FA(1)2427 4596 y FH(\()p FG(t)2495 4611 y FB(k)r
Fv(\000)p FA(1)2628 4596 y FH(\)\))2335 4822 y FD(0)2714
4540 y Ft(3)2714 4690 y(5)2790 4709 y FH(+)2881 4540
y Ft(2)2881 4690 y(4)2970 4596 y FD(0)2951 4822 y(e)2999
4789 y FB(s)2999 4849 y(k)3057 4540 y Ft(3)3057 4690
y(5)3668 4709 y FH(\(2.49\))300 4989 y(The)44 b(solution)f
FD(x)914 4956 y FB(s)914 5015 y(k)1002 4989 y FH(is)h(obtained)g(b)m(y)
g(Newton)h(iteration)g([12)q(].)84 b(The)44 b(basic)g(steps)h(of)g(the)
f(Newton)300 5215 y(iteration)30 b(algorithm)f(are)i(as)g(follo)m(ws;)p
eop
%%Page: 54 67
54 66 bop 3809 -200 a FH(54)300 99 y FC(A)n(lgorithm)31
b FH(2.7.2:)138 b Fw(Newton)46 b(iteration.)539 286 y(Let)h
FD(x)785 253 y FB(g)873 286 y Fw(be)g(a)g(guess)g(for)f
FD(x)1643 253 y FB(s)1643 313 y(k)539 489 y Fw(Let)h
FD(x)785 456 y FB(d)873 489 y Fw(be)g(temporary)e(vector)539
692 y(while)h(\()h FD(f)952 707 y FB(k)995 692 y FH(\()p
FD(x)1085 659 y FB(g)1126 692 y FH(\))25 b FG(>)g(eps)48
b Fw(\))f(do)777 968 y(Solve)1255 849 y Ft(\024)1333
908 y FG(d)p FD(f)1412 923 y FB(k)1455 908 y FH(\()p
FD(x)p FH(\))p 1333 949 248 4 v 1406 1032 a FG(d)p FD(x)1591
847 y Ft(\014)1591 897 y(\014)1591 947 y(\014)1591 997
y(\014)1619 1051 y FD(x)25 b FH(=)g FD(x)1850 1013 y
FB(g)1910 849 y Ft(\025)1969 968 y FD(x)2024 935 y FB(d)2090
968 y FH(=)g Fz(\000)p FD(f)2289 983 y FB(k)2331 968
y FH(\()p FD(x)2421 935 y FB(g)2462 968 y FH(\))777 1244
y FD(x)832 1211 y FB(g)898 1244 y FH(=)g FD(x)1049 1211
y FB(g)1109 1244 y FH(+)20 b FD(x)1255 1211 y FB(d)539
1447 y Fw(end)47 b(while)539 1650 y FD(x)594 1617 y FB(s)594
1676 y(k)662 1650 y FH(=)25 b FD(x)813 1617 y FB(g)536
2154 y FH(Note)34 b(that)g(at)f(eac)m(h)h(iteration)e(of)h(the)g
(Newton)g(algorithm)f(it)g(is)g(necessary)h(to)g(solv)m(e)g(a)h(linear)
300 2379 y(system)d(of)f(equations)1765 2605 y FD(M)1864
2620 y FB(k)1907 2605 y FD(x)1962 2568 y FB(d)2028 2605
y FH(=)25 b Fz(\000)p FD(f)2227 2620 y FB(k)2269 2605
y FH(\()p FD(x)2359 2568 y FB(g)2400 2605 y FH(\))1233
b(\(2.50\))300 2885 y(where)1285 3140 y FD(M)1384 3155
y FB(k)1452 3140 y FH(=)1548 3021 y Ft(\024)1611 3079
y FG(d)p FD(f)1690 3094 y FB(k)1733 3079 y FH(\()p FG(x)p
FH(\))p 1611 3119 245 4 v 1683 3202 a FG(d)p FD(x)1866
3018 y Ft(\014)1866 3068 y(\014)1866 3117 y(\014)1866
3167 y(\014)1894 3221 y Fp(x)p FA(=)p Fp(x)2035 3202
y Fu(g)2075 3021 y Ft(\025)2144 3140 y FH(=)2240 2897
y Ft(2)2240 3043 y(6)2240 3092 y(6)2240 3142 y(6)2240
3195 y(4)2357 2960 y FG(d)p FD(q)2459 2975 y FB(cs;k)p
2357 3001 228 4 v 2419 3084 a FG(d)p FD(x)2595 2899 y
Ft(\014)2595 2949 y(\014)2595 2999 y(\014)2595 3049 y(\014)2622
3103 y Fp(x)p FA(=)p Fp(x)2763 3084 y Fu(g)2399 3196
y FG(d)p FD(g)2498 3211 y FB(k)p 2399 3236 143 4 v 2419
3320 a FG(d)p FD(x)2552 3135 y Ft(\014)2552 3185 y(\014)2552
3234 y(\014)2552 3284 y(\014)2579 3338 y Fp(x)p FA(=)p
Fp(x)2720 3319 y Fu(g)2845 2897 y Ft(3)2845 3043 y(7)2845
3092 y(7)2845 3142 y(7)2845 3195 y(5)3668 3140 y FH(\(2.51\))536
3472 y(Note,)43 b(that)c FD(M)1096 3487 y FB(k)1178 3472
y FH(is)f(an)g(\()p FG(N)1520 3486 y FB(x)1590 3472 y
Fz(\002)26 b FG(N)1760 3486 y FB(x)1804 3472 y FH(\))39
b(sparse)f(matrix)g(whose)h(en)m(tries)f(are)i(the)f(deriv)-5
b(ativ)m(es)38 b(of)300 3698 y(the)29 b(CS/MNA)f(equations)g(with)f
(resp)s(ect)i(to)g(unkno)m(wns.)38 b(The)28 b(construction)g(of)h
FD(M)3257 3713 y FB(k)3328 3698 y FH(and)f(the)g(v)m(ector)300
3924 y FD(f)332 3939 y FB(k)375 3924 y FH(\()p FD(x)465
3891 y FB(g)505 3924 y FH(\))45 b(is)e(accomplished)h(b)m(y)g
(de\014ning)e(stamps)j(as)f(describ)s(ed)f(in)g(Sec.)i(2.5.2.)84
b(Recall,)48 b(ho)m(w)m(ev)m(er,)300 4149 y(that)34 b(the)g(stamps)g
(require)e(the)i(CS-graph)f(table,)i(the)f(construction)f(of)h(whic)m
(h)e(is)h(computationally)300 4375 y(in)m(tensiv)m(e.)40
b(\(See)31 b(Algorithm)e(2.4.1\))536 4601 y(Next,)43
b(it)38 b(is)g(imp)s(ortan)m(t)h(to)h(consider)e(the)h(pro)s(cess)f(of)
i(solving)e(the)h(set)g(of)h(linear)d(equations)300 4827
y(in)30 b(\(2.50\).)47 b(It)32 b(in)m(v)m(olv)m(es)g(LU-decomp)s
(osition)e([12)q(])i(and)f(then)g(doing)g(forw)m(ard)g(and)g(bac)m(kw)m
(ard)h(substi-)300 5053 y(tution.)40 b(The)30 b(LU-decomp)s(osition)f
(pro)s(duces)g(matrices)i FD(L)2359 5068 y FB(k)2432
5053 y FH(and)e FD(U)2688 5068 y FB(k)2762 5053 y FH(suc)m(h)h(that)
1461 5370 y FD(M)1560 5385 y FB(k)1603 5370 y FD(x)1658
5332 y FB(d)1724 5370 y FH(=)25 b(\()p FD(L)1918 5385
y FB(k)1981 5370 y Fz(\001)c FD(U)2107 5385 y FB(k)2150
5370 y FH(\))p FD(x)2240 5332 y FB(d)2306 5370 y FH(=)k
Fz(\000)p FD(f)2505 5385 y FB(k)2547 5370 y FH(\()p FD(x)2637
5332 y FB(g)2678 5370 y FH(\))p FG(:)930 b FH(\(2.52\))p
eop
%%Page: 55 68
55 67 bop 3809 -200 a FH(55)300 99 y(By)31 b(forw)m(ard)f(substitution)
e(it)h(is)h(p)s(ossible)e(to)j(obtain)f(a)h(v)m(ector)g
FD(y)h FH(suc)m(h)e(that)1790 409 y FD(L)1853 424 y FB(k)1896
409 y FD(y)c FH(=)f Fz(\000)p FD(f)2176 424 y FB(k)2219
409 y FH(\()p FD(x)2309 372 y FB(g)2349 409 y FH(\))p
FG(:)1259 b FH(\(2.53\))300 720 y(Finally)-8 b(,)29 b
FD(x)682 687 y FB(d)753 720 y FH(is)g(solv)m(ed)i(for)f(b)m(y)g(bac)m
(kw)m(ard)h(substitution)1889 1031 y FD(U)1969 1046 y
FB(k)2012 1031 y FD(x)2067 994 y FB(d)2133 1031 y FH(=)25
b FD(y)q FG(:)1358 b FH(\(2.54\))536 1342 y(Since)34
b FD(M)877 1357 y FB(k)955 1342 y FH(is)f(a)i(sparse)g(matrix,)g(it)g
(is)e(e\016cien)m(t)j(to)f(use)f(sparse)h(matrix)f(tec)m(hniques.)53
b(In)34 b(that)300 1568 y(case,)f(the)f(LU-decomp)s(osition)e(requires)
g(t)m(w)m(o)j(steps)e({)h(\014rst,)f(the)h(sparsit)m(y)f(structure)g
(of)g FD(L)3525 1583 y FB(k)3599 1568 y FH(and)g FD(U)3857
1583 y FB(k)300 1794 y FH(is)i(determined)f(and)h(then)g(the)h(actual)g
(n)m(umerical)e(v)-5 b(alues)33 b(are)h(computed.)50
b(The)33 b(\014rst)g(step)g(requires)300 2020 y(extensiv)m(e)e
(computation)f(time.)536 2246 y(The)35 b(structure)g(of)h(the)g
(SC-graph)e(table,)j(the)f(matrix)e FD(M)2623 2261 y
FB(k)2666 2246 y FH(,)j(and)e(subsequen)m(tly)f FD(L)3517
2261 y FB(k)3595 2246 y FH(and)h FD(U)3857 2261 y FB(k)300
2472 y FH(is)c(determined)g(b)m(y)h(the)g(top)s(ology)h(of)f(the)h(net)
m(w)m(ork)g(during)d(the)i(in)m(terv)-5 b(al)31 b FG(I)2962
2487 y FB(k)3005 2472 y FH(.)46 b(T)m(ypically)-8 b(,)31
b(in)g(SC)h(and)300 2697 y(SI)d(net)m(w)m(orks,)h(the)g(top)s(ologies)f
(tend)g(to)h(rep)s(eat.)41 b(Therefore)29 b(it)g(mak)m(es)h(sense)f(to)
h(store)g(the)g(CS-graph)300 2923 y(table)37 b(and)f(the)h(results)e
(of)i(the)g(structural)e(LU-decomp)s(osition)h(and)g(reuse)g(them)h
(when)f(the)h(same)300 3149 y(top)s(ology)26 b(is)e(encoun)m(tered)h
(again.)39 b(Recall)25 b(from)g(De\014nition)f(2.1.4)j(that)f(the)f
(switc)m(h)g(state)h(v)m(ector)h FG( )3805 3164 y FB(s;k)300
3375 y FH(uniquely)g(de\014nes)i(the)g(top)s(ology)h(of)g(the)g(net)m
(w)m(ork.)41 b(Therefore,)30 b(it)f(can)h(b)s(e)e(used)h(as)h(a)g
(\\signature")g(of)300 3601 y(the)h(structure)e(of)i
FD(M)1049 3616 y FB(k)1092 3601 y FH(,)f FD(L)1210 3616
y FB(k)1253 3601 y FH(,)h FD(U)1389 3616 y FB(k)1432
3601 y FH(,)f(and)g(the)h(CS-graph)e(table.)536 3826
y(Next,)j(it)f(is)e(imp)s(ortan)m(t)h(to)i(consider)e(the)h(con)m(v)m
(ergence)i(of)e(the)g(Newton)g(iteration)g(algorithm.)300
4052 y(The)i(con)m(v)m(ergence)k(dep)s(ends)31 b(on)j(the)g(initial)d
(guess)j FD(x)2204 4019 y FB(g)2278 4052 y FH(giv)m(en)g(for)g(the)g
(solution)e FD(x)3224 4019 y FB(s)3224 4079 y(k)3267
4052 y FH(.)51 b(If)33 b(the)h(guess)g(is)300 4278 y(far)29
b(from)g(the)g(actual)h(op)s(erating)e(region)h(of)g(the)h(non-linear)d
(devices)i(then,)g(the)h(con)m(v)m(ergence)h(is)d(slo)m(w)300
4504 y(and)k(ma)m(y)h(require)e(sp)s(ecial)g(con)m(tin)m(uation)i(tec)m
(hniques.)46 b(Alternativ)m(ely)-8 b(,)34 b(if)d(the)i(initial)d(guess)
i(is)g(close)300 4730 y(to)f(the)g(solution,)e(then)h(the)h(algorithm)e
(con)m(v)m(erges)j(quadratically)d(and)h(requires)f(few)h(iteration.)
536 4956 y(F)-8 b(or)26 b(this)d(reason)i(it)g(is)f(imp)s(ortan)m(t)g
(to)h(store)h(the)f(complete)g(settling)f(solution)f
FD(x)3302 4923 y FB(s)3302 4982 y(k)3370 4956 y FH(together)j(with)300
5181 y(the)37 b(structural)f(information)g(for)h(the)g(top)s(ology)-8
b(.)62 b(Then,)38 b(it)f(can)g(b)s(e)f(used)h(as)g(an)g(initial)e
(guess)i(the)300 5407 y(next)27 b(time)f(the)h(top)s(ology)g(o)s
(ccurs.)39 b FC(Note)29 b(however,)i(that)f(if)f(the)h(op)-5
b(er)g(ating)31 b(p)-5 b(oint)31 b(changes)e(dr)-5 b(astic)g(al)5
b(ly)p eop
%%Page: 56 69
56 68 bop 3809 -200 a FH(56)300 99 y FC(fr)-5 b(om)37
b(one)f(o)-5 b(c)g(curr)g(enc)g(e)38 b(of)e(the)g(top)-5
b(olo)g(gy)39 b(to)d(the)g(next,)h(then)f(the)h(c)-5
b(onver)g(genc)g(e)36 b(wil)5 b(l)36 b(stil)5 b(l)36
b(b)-5 b(e)36 b(slow.)53 b(It)300 324 y(may)33 b(even)g(b)-5
b(e)32 b(ne)-5 b(c)g(essary)34 b(to)f(employ)h(c)-5 b(ontinuation)35
b(metho)-5 b(ds)35 b(to)e(get)f(the)h(new)g(solution.)536
550 y FH(Giv)m(en)43 b(the)h(considerations)e(ab)s(o)m(v)m(e,)47
b(an)d(e\016cien)m(t)f(pro)s(cedure)f(for)h(obtaining)f(the)h(complete)
300 776 y(settling)30 b(state)h(is)f(as)g(follo)m(ws.)40
b(First,)30 b(a)h(top)s(ology)g(storage)h(structure)e(is)f(de\014ned)g
(as)i(follo)m(ws:)1187 1093 y Fw(TStore)24 b FH(=)1595
999 y Ft(n)1741 1093 y Fz(T)1814 1056 y FA(\(1\))1908
1093 y FG(;)106 b Fz(T)2112 1056 y FA(\(2\))2206 1093
y FG(;)h(:)15 b(:)g(:)h(;)106 b Fz(T)2663 1056 y FA(\()p
FB(N)2746 1064 y Fu(s)2779 1056 y FA(\))2902 999 y Ft(o)2972
1093 y FG(;)671 b FH(\(2.55\))300 1410 y(where)31 b Fw(TStore)f
FH(is)h(a)h(list)e(con)m(taining)h(a)h(maxim)m(um)e(of)i
FG(N)2328 1424 y FB(s)2397 1410 y FH(en)m(tries,)f(where)h(eac)m(h)g
(en)m(try)g Fz(T)3496 1377 y FA(\()p FB(i)p FA(\))3610
1410 y FH(has)g(the)300 1636 y(structure:)1670 1949 y
Fz(T)1743 1912 y FA(\()p FB(i)p FA(\))1942 1949 y Fz(!)2149
1653 y Ft(8)2149 1727 y(>)2149 1752 y(>)2149 1777 y(>)2149
1802 y(>)2149 1827 y(>)2149 1852 y(<)2149 2001 y(>)2149
2026 y(>)2149 2051 y(>)2149 2076 y(>)2149 2101 y(>)2149
2126 y(:)2265 1723 y FG( )2324 1737 y FB(s)2265 1836
y FG(C)7 b(S)e(T)2265 1949 y FD(L)2265 2062 y(U)2265
2175 y(x)2320 2142 y FB(s)3668 1949 y FH(\(2.56\))325
2334 y(where)25 b FG(C)7 b(S)e(T)37 b FH(stands)25 b(for)g(the)h
(CS-graph)e(table.)39 b(Note)26 b(that)g(the)g(sup)s(erscript)c
FG(i)k FH(denotes)f(the)h(p)s(osition)300 2560 y(of)31
b(the)f(top)s(ology)h(in)e(the)h Fw(TStore)f FH(list,)g(and)h(is)g(not)
g(the)h(switc)m(hing)e(in)m(terv)-5 b(al)29 b(index.)536
2786 y(Using)g(the)h Fw(TStore)d FH(list,)i(the)h(follo)m(wing)d
(algorithm)i(is)g(used)f(to)i(e\016cien)m(tly)g(solv)m(e)f(the)h(net)m
(w)m(ork)300 3012 y(equations.)300 3245 y FC(A)n(lgorithm)h
FH(2.7.3:)138 b Fw(Solving)46 b(network)g(equations)f(while)i(using)f
(topology)f(storage)300 3432 y(Given:)395 3545 y FG(T)13
b(S)5 b(tor)s(e)48 b Fw(list)e(Equation)g(\(2.55\))395
3718 y FG(N)468 3732 y FB(s)553 3718 y Fw(-)h(maximum)f(number)g(of)i
(entries)d(in)j FG(T)13 b(S)5 b(tor)s(e)47 b Fw(list.)300
3891 y(Start:)395 4004 y([Construct)e FG( )979 4019 y
FB(s;k)1075 4004 y Fw(])238 b(Definition)45 b(2.1.4)395
4177 y(/*)j(Search)e(for)h(topology)e(in)i FG(T)13 b(S)5
b(tor)s(e)48 b Fw(list.)94 b(*/)491 4350 y(for)47 b(\(i)g(=)g(1)h(to)f
FG(N)1232 4364 y FB(s)1269 4350 y Fw(\))g(do)730 4526
y(if)g(\()g Fz(T)1041 4493 y FA(\()p FB(i)p FA(\))1149
4526 y Fz(!)25 b FG( )1324 4540 y FB(s)1387 4526 y FH(=)f
FG( )1541 4541 y FB(s;k)1684 4526 y Fw(\))48 b(then)968
4699 y(/*)f(Found)g(match)f(in)h FG(T)13 b(S)5 b(tor)s(e)47
b Fw(list)g(*/)968 4876 y Fz(T)1018 4891 y FB(k)1086
4876 y FH(=)25 b Fz(T)1254 4843 y FA(\()p FB(i)p FA(\))1576
4876 y Fw(/*)47 b FC(i.e.)95 b FD(L)2003 4891 y FB(k)2071
4876 y FH(=)25 b Fz(T)2239 4843 y FA(\()p FB(i)p FA(\))2348
4876 y Fz(!)g FD(L)p Fw(,)47 b FD(U)2702 4891 y FB(k)2770
4876 y FH(=)25 b Fz(T)2939 4843 y FA(\()p FB(i)p FA(\))3047
4876 y Fz(!)h FD(U)p Fw(,)1940 5023 y FG(C)7 b(S)e(T)2126
5038 y FB(k)2193 5023 y FH(=)25 b Fz(T)2362 4990 y FA(\()p
FB(i)p FA(\))2470 5023 y Fz(!)h FG(C)7 b(S)e(T)13 b Fw(,)46
b FD(x)2935 4990 y FB(g)3001 5023 y FH(=)25 b Fz(T)3169
4990 y FA(\()p FB(i)p FA(\))3278 5023 y Fz(!)g FD(x)3449
4990 y FB(s)3533 5023 y Fw(*/)968 5199 y([Move)47 b Fz(T)1327
5166 y FA(\()p FB(i)p FA(\))1458 5199 y Fw(to)g(beginning)e(of)j
FG(T)13 b(S)5 b(tor)s(e)47 b Fw(list.])968 5372 y(goto)g
FD(TOPOLOGY)p 1818 5372 32 4 v 36 w(IS)p 1952 5372 V
38 w(SET)p eop
%%Page: 57 70
57 69 bop 3809 -200 a FH(57)730 99 y Fw(end)46 b(if)491
271 y(end)h(for)395 444 y(/*)h(No)f(match)f(found)h(in)g
FG(T)13 b(S)5 b(tor)s(e)47 b Fw(list)g(*/)491 617 y Fz(T)541
632 y FB(k)631 617 y Fw(=)g(new)g Fz(T)166 b Fw(/*)47
b(Allocate)f(new)h(topology)e(data)i(structure)e(*/)491
790 y(if)i(\()p FG(T)13 b(S)5 b(tor)s(e)47 b Fw(is)g(full\))g(then)730
967 y([Delete)e Fz(T)1184 934 y FA(\()p FB(N)1267 942
y Fu(s)1301 934 y FA(\))1380 967 y Fw(-)i(the)g(last)g(topology)f(in)h
FG(T)13 b(S)5 b(tor)s(e)47 b Fw(list.])491 1140 y([Position)e
Fz(T)1018 1155 y FB(k)1108 1140 y Fw(at)i(the)g(beginning)e(of)j(the)f
FG(T)13 b(S)5 b(tor)s(e)47 b Fw(list.])395 1313 y(/*)h(Construct)d
(topology)g(related)h(members)g(of)h Fz(T)2402 1328 y
FB(k)2492 1313 y Fw(*/)491 1486 y Fz(T)541 1501 y FB(k)608
1486 y Fz(!)25 b FG( )783 1500 y FB(s)846 1486 y FH(=)g
FG( )1001 1501 y FB(s;k)491 1658 y Fw([Construct)45 b
Fz(T)1066 1673 y FB(k)1133 1658 y Fz(!)25 b FG(C)7 b(S)e(T)60
b Fw(])48 b(\(Algorithm)d(2.4.1\))491 1831 y([Construct)g(the)i(sparse)
f(structures)f(of)i Fz(T)2259 1846 y FB(k)2326 1831 y
Fz(!)26 b FD(L)47 b Fw(and)g Fz(T)2794 1846 y FB(k)2862
1831 y Fz(!)25 b FD(U)p Fw(.])300 2004 y FD(TOPOLOGY)p
911 2004 32 4 v 37 w(IS)p 1046 2004 V 37 w(SET)47 b Fw(:)395
2177 y([Solve)g(for)f FD(x)975 2144 y FB(s)975 2204 y(k)1018
2177 y Fw(.])95 b(\(Algorithm)45 b(2.7.2\))395 2350 y
Fz(T)445 2365 y FB(k)513 2350 y Fz(!)25 b FD(x)684 2317
y FB(s)746 2350 y FH(=)g FD(x)897 2317 y FB(s)897 2377
y(k)300 2523 y Fw(return)46 b FD(x)689 2490 y FB(s)689
2549 y(k)732 2523 y Fw(.)300 2809 y FL(2.8)135 b(Conclusion)300
3125 y FH(In)29 b(this)g(c)m(hapter,)i(the)g(CS/MNA)f(w)m(as)h(presen)m
(ted,)f(wic)m(h)f(is)g(a)i(new)f(metho)s(d)f(for)h(SC)f(and)h(SI)f(net)
m(w)m(ork)300 3351 y(analysis.)42 b(The)31 b(algorithms)f(for)h
(constructing)g(the)g(net)m(w)m(ork)h(equations)f(w)m(ere)h(giv)m(en.)
44 b(It)31 b(w)m(as)h(sho)m(wn)300 3577 y(that)44 b(under)e(the)h
(instan)m(t)g(settling)g(appro)m(ximation,)j(the)d(CS/MNA)h(net)m(w)m
(ork)g(equations)f(can)h(b)s(e)300 3803 y(reduced)24
b(to)h(non-linear)e(algebraic)h(equations)g(without)g(the)g(need)h(to)g
(eliminate)e(\\resistiv)m(e")i(elemen)m(ts)300 4029 y(from)43
b(the)g(set)h(of)f(net)m(w)m(ork)h(elemen)m(ts.)79 b(The)43
b(net)m(w)m(ork)h(restrictions)e(required)f(under)h(the)h(instan)m(t)
300 4254 y(settling)30 b(appro)m(ximation)f(w)m(ere)i(giv)m(en.)536
4480 y(An)23 b(imp)s(ortan)m(t)f(prop)s(ert)m(y)g(of)h(the)g(CS/MNA)g
(net)m(w)m(ork)h(equations)e(is)g(that)h(they)g(are)h(compatible)300
4706 y(with)j(the)i(same)g(device)g(mo)s(dels)e(used)h(in)f(a)i
(SPICE-lik)m(e)e(sim)m(ulator.)39 b(It)29 b(w)m(as)g(sho)m(wn)f(that,)i
(under)d(the)300 4932 y(instan)m(t)34 b(settling)g(appro)m(ximation,)g
(the)h(c)m(harge)g(leak)-5 b(age)36 b(e\013ect)g(in)d(an)h(MOS)g
(transistor)f(when)h(used)300 5158 y(as)27 b(a)h(switc)m(h)e(cannot)i
(b)s(e)f(sim)m(ulated,)f(ho)m(w)m(ev)m(er,)k(the)d(clo)s(c)m(k)g
(feedthrough)g(e\013ect)i(and,)e(to)h(some)f(exten)m(t,)300
5384 y(the)k(c)m(hannel)e(c)m(harge)j(redistribution)27
b(e\013ect)32 b(can)e(b)s(e)g(sim)m(ulated.)p eop
%%Page: 58 71
58 70 bop 3809 -200 a FH(58)536 99 y(Finally)-8 b(,)27
b(an)g(e\016cien)m(t)h(algorith)f(for)g(the)h(fast)g(transien)m(t)f
(analysis)f(w)m(as)i(presen)m(ted.)39 b(If)27 b(the)h(input)300
324 y(is)23 b(sampled)f(and)h(held,)g(the)h(algorithm)f(requires)f
(only)g(one)i(Newton)g(iteration)f(p)s(er)g(switc)m(hing)f(in)m(terv)-5
b(al)300 550 y(and)27 b(it)f(minimizes)f(the)j(n)m(um)m(b)s(er)d(of)j
(times)f(the)g(sparsit)m(y)g(structure)f(of)i(the)f(net)m(w)m(ork)h
(equations)f(needs)300 776 y(to)k(b)s(e)f(constructed.)p
eop
%%Page: 59 72
59 71 bop 3809 -200 a FH(59)300 721 y FM(Chapter)65 b(3)300
1095 y(F)-16 b(requency)65 b(Resp)5 b(onse)300 1653 y
FH(In)45 b(this)f(c)m(hapter,)50 b(the)c(frequency)f(resp)s(onse)f(of)i
(SC)e(and)h(SI)g(\014lters)f(under)g(the)h(instan)m(t)h(settling)300
1878 y(appro)m(ximation)39 b(is)h(considered.)69 b(Practical,)43
b(SC)c(and)h(SI)f(\014lters)h(can)g(b)s(e)g(c)m(haracterized)h(as)g
FC(line)-5 b(ar)300 2104 y(p)g(erio)g(dic)g(al)5 b(ly)35
b(switche)-5 b(d)33 b(networks)e FH(for)f(whic)m(h)e(e\016cien)m(t)j
(frequency-domain)d(form)m(ulations)h(ha)m(v)m(e)i(b)s(een)300
2330 y(dev)m(elop)s(ed)f([20)q(,)g(21)q(,)h(66)q(].)536
2556 y(In)39 b(Sec.)g(3.1,)k(the)d(net)m(w)m(ork)g(elemen)m(ts)f(whic)m
(h)f(will)f(b)s(e)h(considered)g(in)g(the)i(form)m(ulation)e(and)300
2782 y(the)i(notation)f(for)g(p)s(erio)s(dic)e(switc)m(hing)h(is)h
(de\014ned.)66 b(In)39 b(Sec.)h(3.2,)j(the)c(a)h(small-signal)d
(analysis)h(is)300 3008 y(presen)m(ted,)f(where)e(the)h(small-signal)d
(parameters)j(for)f(the)h(linear)d(p)s(erio)s(dically)f(switc)m(hed)j
(net)m(w)m(ork)300 3233 y(are)e(extracted)h(from)e(large-signal)f(net)m
(w)m(ork)j(equations)e(dev)m(elop)s(ed)g(in)f(Chapter)h(2.)47
b(In)32 b(Sec.)h(3.3)h(the)300 3459 y(small-signal)28
b(net)m(w)m(ork)j(equations)f(are)g(transformed)f(in)m(to)i(the)f
(state)h(c)m(harge)h(v)-5 b(ariable)29 b(form)g([40)r(,)h(41)q(])300
3685 y(whic)m(h)21 b(can)i(b)s(e)f(directly)g(used)g(in)f(the)i
(existing)e(frequency)h(domain)g(form)m(ulations.)37
b(Finally)20 b(in)i(Sec.)h(3.4)300 3911 y(the)30 b(explicit)f
(expressions)f(and)i(the)g(algorithm)f(for)h(the)g(frequency-domain)e
(form)m(ulation)h(are)i(giv)m(en.)p eop
%%Page: 60 73
60 72 bop 3809 -200 a FH(60)300 99 y FL(3.1)135 b(Net)l(w)l(ork)47
b(de\014nitions)330 414 y FD(Net)m(w)m(ork)35 b(elemen)m(ts)p
300 427 853 4 v 536 640 a FH(The)30 b(elemen)m(ts)h(considered)e(in)g
(the)i(frequency-domain)e(form)m(ulation)g(are:)486 826
y Fz(\017)46 b FH(resistors)486 1014 y Fz(\017)g FH(capacitors)486
1202 y Fz(\017)g FH(indep)s(enden)m(t)20 b(v)m(oltage)k(and)e(curren)m
(t)g(sources)486 1389 y Fz(\017)46 b FH(con)m(trolled)30
b(v)m(oltage)i(and)e(curren)m(t)g(sources)486 1577 y
Fz(\017)46 b FH(MOS)30 b(transistor)486 1765 y Fz(\017)46
b FH(MOS)30 b(switc)m(h)2386 902 y Fz(\017)46 b FH(ideal)29
b(switc)m(hes)2386 1090 y Fz(\017)46 b FH(b)s(o)s(olean)21
b(clo)s(c)m(ks)h({)g(p)s(erio)s(dic)2386 1278 y Fz(\017)46
b FH(b)s(o)s(olean)31 b(logic)h(elemen)m(ts)g({)2477
1391 y(com)m(binational)d(logic)h(only)2386 1578 y Fz(\017)46
b FH(ideal)30 b(digital/analog)i(con-)2477 1691 y(v)m(erters)300
1936 y(Note)38 b(that)e(this)g(set)g(of)h(elemen)m(ts)f(is)g(the)g
(same)h(as)f(the)h(one)f(considered)f(for)h(transien)m(t)g(analysis)f
(in)300 2162 y(Chapter)j(2,)i(with)d(the)h(exception)h(of)f(the)g
(absence)h(of)f(latc)m(hed)g(comparators)h(and)f(the)g(restriction)300
2387 y(of)f(com)m(binational)f(logic.)61 b(The)37 b(analog)h(elemen)m
(ts)f(can)h(b)s(e)e(linear)g(or)h(non-linear.)59 b(The)37
b(non-linear)300 2613 y(elemen)m(ts)27 b(will)d(b)s(e)h(linearized)g
(at)i(some)g(bias)e(op)s(erating)h(p)s(oin)m(t.)38 b(The)26
b(MOS)g(transistor)g(and)g(the)g(MOS)300 2839 y(switc)m(h)34
b(are)h(implemen)m(ted)e(the)i(same)g(w)m(a)m(y)h(as)f(in)e(Chapter)i
(2)g(and)f(are)h(linearized)d(at)k(a)f(bias)f(p)s(oin)m(t.)300
3065 y(The)26 b(ideal)g(D)m(A)m(C)i(is)e(implemen)m(ted)f(as)i(in)f
(Sec.)h(2.1.)41 b(The)26 b(general)h(net)m(w)m(ork)h(is)d(illustrated)g
(in)h(Fig.)h(3.1.)330 3291 y FD(P)m(erio)s(dic)36 b(switc)m(hing.)p
300 3322 899 4 v 536 3516 a FH(Just)e(as)h(in)f(the)g(transien)m(t)h
(form)m(ulation,)g(the)f(clo)s(c)m(k)h(state)i(v)m(ector)f
FG( )2992 3531 y FB(c;k)3119 3516 y FH(\(De\014nition)e(2.1.3\))j(is)
300 3742 y(p)s(erio)s(dic.)f(Due)23 b(to)h(the)g(com)m(binational)e
(logic)h(restriction)f(and)h(the)g(absence)h(of)f(latc)m(hed)h
(comparators,)300 3968 y(it)32 b(is)f(guaran)m(teed)i(that)g(the)f
(switc)m(hing)f(v)m(ector)j FG( )2050 3983 y FB(s;k)2177
3968 y FH(\(De\014nition)d(2.1.4\))k(is)c(p)s(erio)s(dic)e(with)i(the)i
(same)300 4194 y(p)s(erio)s(d)28 b(as)j FG( )754 4209
y FB(c;k)847 4194 y FH(.)40 b(This)29 b(means)h(that)h(there)g(exists)f
(an)g(in)m(teger)h FG(N)40 b FH(suc)m(h)30 b(that)758
4462 y FG( )817 4477 y FB(s;k)937 4462 y FH(=)25 b FG( )1092
4477 y FB(s;nN)7 b FA(+)p FB(k)1530 4462 y FH(for)30
b(all)f FG(k)g Fz(2)24 b FH(1)p FG(;)15 b FH(2)p FG(;)g(:)g(:)g(:)j(;)d
(N)102 b FH(and)90 b FG(n)25 b Fz(2)g FH(\(0)p FG(;)15
b Fz(\006)p FH(1)p FG(;)g Fz(\006)p FH(2)g FG(:)g(:)g(:)s
FH(\))p FG(:)271 b FH(\(3.1\))300 4730 y(Since)40 b(the)g(switc)m(hing)
g(v)m(ector)i(determines)e(the)g(top)s(ology)h(of)g(the)g(net)m(w)m
(ork)g(within)d(the)j(switc)m(hing)300 4956 y(in)m(terv)-5
b(al,)33 b(the)g(net)m(w)m(ork)h(top)s(ology)f(is)g(also)f(p)s(erio)s
(dic.)46 b(Also,)34 b(due)e(to)i(the)f(p)s(erio)s(dicit)m(y)-8
b(,)32 b(the)h(switc)m(hing)300 5181 y(instan)m(ts)d(satisfy)1768
5407 y FG(t)1801 5422 y FB(nN)7 b FA(+)p FB(k)2029 5407
y FH(=)25 b FG(nT)33 b FH(+)20 b FG(t)2390 5422 y FB(k)3713
5407 y FH(\(3.2\))p eop
%%Page: 61 74
61 73 bop 3809 -200 a FH(61)358 117 y
 27496776 39205929 460472 10590863 27957248 49796792 startTexFig
 358 117 a
%%BeginDocument: figs/elm_freq.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      16 179 moveto 135 179 lineto 135 278 lineto 16 278 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 216 moveto
      24 0 atan dup cos 10 mul 105 exch sub
      exch sin 10 mul 240 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      105 240 10 4 0 24 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 105 228 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 207 moveto
      105 183 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 247 moveto
      105 271 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 208 moveto
      48 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 248 moveto
      48 272 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 48 228 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 235 moveto (_) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 230 moveto (+) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      256 319 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      332 183 moveto
      369 183 lineto
      369 165 lineto
      407 165 lineto
      407 183 lineto
      443 183 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      369 150 moveto
      407 150 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      388 150 moveto
      388 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      506 166 moveto
      515 166 lineto
      518 172 lineto
      523 159 lineto
      526 172 lineto
      531 159 lineto
      536 172 lineto
      539 159 lineto
      545 172 lineto
      548 159 lineto
      551 166 lineto
      560 166 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      560 166 moveto
      592 166 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      506 166 moveto
      487 166 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 336 231 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 336 231 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 336 338 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 336 338 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 232 231 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 232 231 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 232 338 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 232 338 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 480 231 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 480 231 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 480 338 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 480 338 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 336 372 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 336 372 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 336 480 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 336 480 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 232 372 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 232 372 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 232 480 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 232 480 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 480 372 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 480 372 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 480 480 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 480 480 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      330 294 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      328 289 moveto (+) show
   grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      336 259 moveto
      320 286 lineto
      336 312 lineto
      352 286 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 259 moveto
      336 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 339 moveto
      336 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 232 moveto
      368 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 339 moveto
      368 339 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      264 373 moveto
      264 480 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      248 296 moveto (V) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 232 moveto
      264 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 339 moveto
      264 339 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      480 259 moveto
      464 286 lineto
      480 312 lineto
      496 286 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 259 moveto
      480 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 339 moveto
      480 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 232 moveto
      512 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 339 moveto
      512 339 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      256 267 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      360 296 moveto ( f\(V\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      512 296 moveto ( f\(V\)) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 277 moveto
      20 0 atan dup cos 10 mul 480 exch sub
      exch sin 10 mul 297 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      480 297 10 4 0 20 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      330 435 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      328 430 moveto (+) show
   grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      336 400 moveto
      320 426 lineto
      336 453 lineto
      352 426 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 400 moveto
      336 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 480 moveto
      336 453 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 373 moveto
      368 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 480 moveto
      368 480 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      280 430 moveto (I) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 373 moveto
      264 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 480 moveto
      264 480 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      480 400 moveto
      464 426 lineto
      480 453 lineto
      496 426 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 400 moveto
      480 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 480 moveto
      480 453 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 373 moveto
      512 373 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 480 moveto
      512 480 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      360 437 moveto ( f\(I\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      512 437 moveto ( f\(I\)) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 418 moveto
      20 0 atan dup cos 10 mul 480 exch sub
      exch sin 10 mul 438 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      480 438 10 4 0 20 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      264 426 moveto
      272 420 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      264 426 moveto
      256 420 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      168 64 moveto 664 64 lineto 664 688 lineto 168 688 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      291 165 moveto
      238 165 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      238 146 moveto
      238 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      227 146 moveto
      229.00 158.67 229.00 171.33
      227 184 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      229 165 moveto
      182 165 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 102 moveto (small-) show
      48 131 moveto (signal) show
      48 160 moveto (input) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      136 224 moveto
      0 32 atan dup cos 10 mul 168 exch sub
      exch sin 10 mul 224 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      168 224 10 4 32 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      664 288 moveto
      0 32 atan dup cos 10 mul 696 exch sub
      exch sin 10 mul 288 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      696 288 10 4 32 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      688 270 moveto (output) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      400 1005 moveto
      -77 0 atan dup cos 10 mul 400 exch sub
      exch sin 10 mul 928 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      400 928 10 4 0 -77 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      348 1036 moveto (boolian clocks) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      256 1006 moveto 560 1006 lineto 560 1118 lineto 256 1118 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      309 1038 moveto
      72 0 atan dup cos 10 mul exch sin 10 mul rmoveto
      309 1110 lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      309 1038 10 4 0 -72 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      295 1094 moveto
      0 241 atan dup cos 10 mul 536 exch sub
      exch sin 10 mul 1094 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      536 1094 10 4 241 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      275 1063 moveto (on) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      309 1062 moveto
      338 1062 lineto
      338 1094 lineto
      366 1094 lineto
      366 1062 lineto
      423 1062 lineto
      423 1094 lineto
      479 1094 lineto
      479 1062 lineto
      508 1062 lineto
      508 1094 lineto
      536 1094 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      273 1094 moveto (off) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      176 848 moveto 640 848 lineto 640 928 lineto 176 928 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      251 898 moveto (boolean \(combinational\) logic) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      326 778 moveto (DAC) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      288 736 moveto 416 736 lineto 416 800 lineto 288 800 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      464 548 moveto (ideal switches) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      462 560 moveto 606 560 lineto 606 656 lineto 462 656 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      554 632 moveto
      594 632 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      474 632 moveto
      514 632 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      514 632 moveto
      554 616 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      533 594 moveto
      20 0 atan dup cos 10 mul 533 exch sub
      exch sin 10 mul 614 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      533 614 10 4 0 20 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      192 548 moveto (MOS switches) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      190 560 moveto 334 560 lineto 334 656 lineto 190 656 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      240 578 moveto (Y) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 639 moveto
      241 639 lineto
      241 621 lineto
      279 621 lineto
      279 639 lineto
      315 639 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      241 606 moveto
      279 606 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      260 606 moveto
      260 588 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      268 578 moveto (, V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      285 585 moveto (c) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      176 512 moveto
      672 512 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      400 736 moveto
      -224 0 atan dup cos 10 mul 400 exch sub
      exch sin 10 mul 512 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      400 512 10 4 0 -224 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 848 moveto
      -192 0 atan dup cos 10 mul 224 exch sub
      exch sin 10 mul 656 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      224 656 10 4 0 -192 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      352 848 moveto
      -48 0 atan dup cos 10 mul 352 exch sub
      exch sin 10 mul 800 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      352 800 10 4 0 -48 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      316 102 moveto (Analog Components) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      320 736 moveto
      -80 0 atan dup cos 10 mul 320 exch sub
      exch sin 10 mul 656 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      320 656 10 4 0 -80 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      253 583 moveto (s) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      525 580 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      538 585 moveto (s) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      192 722 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      205 727 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      288 711 moveto (  V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      305 718 moveto (c) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      485 724 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      498 729 moveto (s) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      413 980 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      426 985 moveto (c) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      301 1028 moveto (Y) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      314 1033 moveto (c) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      16 403 moveto 135 403 lineto 135 502 lineto 16 502 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 440 moveto
      24 0 atan dup cos 10 mul 105 exch sub
      exch sin 10 mul 464 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      105 464 10 4 0 24 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 105 452 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 431 moveto
      105 407 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 471 moveto
      105 495 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 432 moveto
      48 408 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 472 moveto
      48 496 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 48 452 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 459 moveto (_) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 454 moveto (+) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      48 358 moveto (bias) show
      48 387 moveto (input) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      136 448 moveto
      0 32 atan dup cos 10 mul 168 exch sub
      exch sin 10 mul 448 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      168 448 10 4 32 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      528 848 moveto
      -192 0 atan dup cos 10 mul 528 exch sub
      exch sin 10 mul 656 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      528 656 10 4 0 -192 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      368 551 moveto (  V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      385 558 moveto (c) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      382 129 moveto (  V) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      399 136 moveto (c) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Oct  5 15:16:53 1998
%%EndDocument

 endTexFig
 798 5280 a FH(Figure)30 b(3.1:)42 b(Net)m(w)m(ork)32
b(elemen)m(ts)e(for)g(frequency-domain)g(form)m(ulation.)p
eop
%%Page: 62 75
62 74 bop 3809 -200 a FH(62)817 7 y
 20260781 5591450 -65781 46113013 20195000 51704463 startTexFig
 817 7 a
%%BeginDocument: figs/timing2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      167 33 moveto ( T) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      25 91 moveto (phase 1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      97 84 moveto
      121 84 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      182 91 moveto (i) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      199 84 moveto
      233 84 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      295 91 moveto (N) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      22 102 moveto
      22 102 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      125 57 moveto
      125 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      193 61 moveto
      193 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      238 57 moveto
      238 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      318 57 moveto
      318 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      12 98 moveto
      190 98 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      190 98 moveto
      318 98 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      20 73 moveto
      20 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      396 84 moveto
      419 84 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      321 102 moveto
      321 102 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      389 57 moveto
      389 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      426 57 moveto
      426 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      493 57 moveto
      493 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      309 98 moveto
      495 98 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      20 38 moveto
      0 298 atan dup cos 8 mul exch sin 8 mul rmoveto
      0 298 atan dup cos 8 mul 318 exch sub
      exch sin 8 mul 38 exch sub lineto
   stroke
grestore
gsave
   newpath
      20 38 8 3 -298 0 tgifarrowtip
   closepath fill
grestore
gsave
   newpath
      318 38 8 3 298 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      493 98 moveto
      0 40 atan dup cos 8 mul 533 exch sub
      exch sin 8 mul 98 exch sub lineto
   stroke
grestore
gsave
   newpath
      533 98 8 3 40 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      36 45 moveto 180 rotate (I) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      36 61 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      45 61 moveto (,1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      426 34 moveto
      426 57 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      20 73 moveto
      20 12 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      318 57 moveto
      318 12 lineto
   stroke
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      146 45 moveto 180 rotate (I) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      146 61 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      156 61 moveto (,i) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      262 48 moveto 180 rotate (I) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      262 64 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      272 64 moveto (,N) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      343 39 moveto 180 rotate (I) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      343 55 moveto (n) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      452 39 moveto 180 rotate (I) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      452 55 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      479 55 moveto (,i) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      88 57 moveto
      88 108 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      21 70 moveto
      87 70 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 318 73 3 3 tgifellipse fill
gsave
   newpath 318 73 3 3 tgifellipse stroke
grestore

% OVAL
newpath 388 63 3 3 tgifellipse fill
gsave
   newpath 388 63 3 3 tgifellipse stroke
grestore

% OVAL
newpath 491 63 4 3 tgifellipse fill
gsave
   newpath 491 63 4 3 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      318 63 moveto
      389 63 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      426 63 moveto
      493 63 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      238 73 moveto
      318 73 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      125 70 moveto
      194 70 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 318 63 3 3 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 318 63 3 3 tgifellipse stroke
grestore

% OVAL
newpath 426 63 3 3 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 426 63 3 3 tgifellipse stroke
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      537 108 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      3 126 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      12 128 moveto (nN) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      227 125 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      236 128 moveto (nN+\(N-1\)) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      89 133 moveto
      -19 0 atan dup cos 8 mul 89 exch sub
      exch sin 8 mul 114 exch sub lineto
   stroke
grestore
gsave
   newpath
      89 114 8 3 0 -19 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      194 136 moveto
      -23 0 atan dup cos 8 mul 194 exch sub
      exch sin 8 mul 113 exch sub lineto
   stroke
grestore
gsave
   newpath
      194 113 8 3 0 -23 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      504 84 moveto
      537 84 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      325 90 moveto (phase 1) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      129 91 moveto (phase) show
   grestore

% OVAL
newpath 193 69 3 3 tgifellipse fill
gsave
   newpath 193 69 3 3 tgifellipse stroke
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      242 91 moveto (phase) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      484 91 moveto (i) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      431 91 moveto (phase) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      462 55 moveto (+1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      353 55 moveto (+1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      370 55 moveto (,1) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      33 127 moveto (= nT) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      471 132 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      481 135 moveto (\(n+1\)N+i) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      317 132 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      327 135 moveto (\(n+1\)N) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      105 125 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      114 128 moveto (nN+\(i-1\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      180 152 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      189 154 moveto (nN+i) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      65 151 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      75 153 moveto (nN+1) show
   grestore

% OVAL
newpath 88 70 3 3 tgifellipse fill
gsave
   newpath 88 70 3 3 tgifellipse stroke
grestore

% OVAL
newpath 237 73 3 3 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 237 73 3 3 tgifellipse stroke
grestore

% OVAL
newpath 125 70 3 3 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 125 70 3 3 tgifellipse stroke
grestore

% OVAL
newpath 19 70 3 3 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 19 70 3 3 tgifellipse stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Sep  2 12:22:58 1998
%%EndDocument

 endTexFig
 615 935 a FH(Figure)49 b(3.2:)78 b(Switc)m(hing)48 b(instan)m(ts)g
(and)g(switc)m(hing)g(in)m(terv)-5 b(als)48 b(in)f(a)j(p)s(erio)s
(dically)615 1048 y(switc)m(hed)30 b(net)m(w)m(ork.)300
1306 y(where)g FG(T)43 b FH(is)29 b(the)i(time)f(p)s(erio)s(d)e(of)j
(the)f(switc)m(hing.)536 1531 y(Fig.)k(3.2)i(de\014nes)d(the)h(p)s
(erio)s(dic)d(switc)m(hing)i(pattern.)52 b(F)-8 b(or)34
b(simplicit)m(y)-8 b(,)33 b(the)h(in)m(terv)-5 b(al)34
b FG(I)3602 1546 y FB(nN)7 b FA(+)p FB(k)3839 1531 y
FH(is)300 1757 y(referred)30 b(to)h(as)f FG(I)899 1772
y FB(n;k)1004 1757 y FH(,)h(and)f(in)m(terv)-5 b(als)29
b FG(I)1641 1772 y FB(n;k)1776 1757 y FH(for)i(an)m(y)f
FG(n)g FH(as)h FC(phase)g FG(k)s FH(.)330 1983 y FD(Net)m(w)m(ork)k
(restrictions/appro)m(ximations)p 300 2019 1724 4 v 536
2209 a FH(It)j(is)f(assumed)g(that)i(the)f(net)m(w)m(ork)g(satis\014es)
g(all)e(of)j(the)f(top)s(ological)f(restrictions)g(discussed)300
2435 y(in)i(Sec.)h(2.6.1.)72 b(The)39 b(frequency-domain)g(form)m
(ulation)g(is)g(dev)m(elop)s(ed)g(under)g(the)h FC(instant)j(settling)
300 2660 y(appr)-5 b(oximation)27 b FH(of)c(Sec.)h(2.6.3,)i(therefore,)
g(the)d(net)m(w)m(ork)h(is)e(represen)m(ted)h(b)m(y)g(the)g(CS/MNA)g
(equations)300 2886 y(in)29 b(\(2.45\).)330 3112 y FD(Input)35
b(signal)p 300 3143 581 4 v 536 3338 a FH(The)j(w)m(a)m(v)m(eforms)i
(of)f(the)g(indep)s(enden)m(t)e(sources)h(consist)h(of)g(bias)e(and)h
(small-signal)f(comp)s(o-)300 3564 y(nen)m(ts.)68 b(The)39
b(input)e(v)m(ector)k FD(e)1380 3579 y FB(k)1423 3564
y FH(\()p FG(t)p FH(\))f(from)f(the)g(net)m(w)m(ork)i(equations)e(in)f
(\(2.45\))k(can)d(b)s(e)g(decomp)s(osed)300 3790 y(as)1454
4015 y FD(e)1502 4030 y FB(k)1545 4015 y FH(\()p FG(t)p
FH(\))26 b(=)1771 4014 y(\026)1770 4015 y FD(e)1818 4030
y FB(k)1880 4015 y FH(+)1973 4014 y(~)1971 4015 y FD(e)2019
4030 y FB(k)2062 4015 y FH(\()p FG(t)p FH(\))p FG(;)289
b(t)25 b Fz(2)g FG(I)2663 4030 y FB(k)2705 4015 y FG(;)983
b FH(\(3.3\))300 4295 y(where)573 4294 y(\026)572 4295
y FD(e)620 4310 y FB(k)702 4295 y FH(is)39 b(the)g(large)h(signal)e
(bias)h(comp)s(onen)m(t)h(and)2325 4294 y(~)2323 4295
y FD(e)2371 4310 y FB(k)2453 4295 y FH(is)f(the)h(small-signal)d(input)
g(during)h(the)300 4521 y(in)m(terv)-5 b(al)33 b FG(I)672
4536 y FB(k)715 4521 y FH(.)52 b(The)34 b(bias)f(input)f(is)h(constan)m
(t)j(during)c(the)i(switc)m(hing)f(in)m(terv)-5 b(al)33
b(and)h(m)m(ust)g(satisfy)g(the)300 4747 y(p)s(erio)s(dicit)m(y)28
b(prop)s(ert)m(y)777 5063 y(\026)776 5064 y FD(e)824
5079 y FB(k)892 5064 y FH(=)989 5063 y(\026)987 5064
y FD(e)1035 5079 y FB(nN)7 b FA(+)p FB(k)1512 5064 y
FH(for)30 b(all)f FG(k)f Fz(2)d FH(1)p FG(;)15 b FH(2)p
FG(;)g(:)g(:)g(:)j(;)d(N)101 b FH(and)91 b FG(n)25 b
Fz(2)g FH(\(0)p FG(;)15 b Fz(\006)p FH(1)p FG(;)g Fz(\006)p
FH(2)g FG(:)g(:)g(:)s FH(\))p FG(:)289 b FH(\(3.4\))p
eop
%%Page: 63 76
63 75 bop 3809 -200 a FH(63)300 99 y FL(3.2)135 b(Small-signal)47
b(analysis)300 414 y FH(F)-8 b(or)36 b(a)g(con)m(tin)m(uous-time)g
(\(time-in)m(v)-5 b(arian)m(t\))35 b(net)m(w)m(ork,)j(the)e
(small-signal)d(analysis)h(consists)h(of)h(\014nd-)300
640 y(ing)f(the)g(op)s(erating)g(p)s(oin)m(t,)h(whic)m(h)e(is)h(set)h
(b)m(y)f(bias)g(inputs,)g(and)f(then)i(extracting)g(the)f(small-signal)
300 866 y(parameters)i(for)f(that)h(op)s(erating)e(p)s(oin)m(t.)58
b(In)35 b(a)i(switc)m(hed)e(net)m(w)m(ork,)k(the)e(op)s(erating)e(p)s
(oin)m(t)h(ma)m(y)h(b)s(e)300 1092 y(di\013eren)m(t)c(in)g(eac)m(h)i
(switc)m(hing)e(in)m(terv)-5 b(al.)51 b(This)32 b(ma)m(y)j(b)s(e)e(due)
g(to)i(switc)m(hes)f(c)m(hanging)g(their)f(states)i(or)300
1318 y(due)30 b(to)h(the)g(bias)e(inputs)f(c)m(hanging)j(their)e(v)-5
b(alues)30 b(b)s(et)m(w)m(een)h(the)g(switc)m(hing)e(in)m(terv)-5
b(als.)40 b(The)29 b(di\013eren)m(t)300 1543 y(bias)39
b(p)s(oin)m(ts)g(result)g(in)f(di\013eren)m(t)i(small)e(signal)h
(parameters.)69 b(In)40 b(practical)f(SC)g(or)h(SI)f(\014lters,)j(the)
300 1769 y(op)s(erating)30 b(p)s(oin)m(ts)g(are)i(p)s(erio)s(dic)c
(with)i(the)h(same)h(p)s(erio)s(d)c(as)k(the)f(switc)m(h)f(state)j(v)m
(ector)f(and)f(the)g(bias)300 1995 y(inputs.)53 b(Consequen)m(tly)-8
b(,)37 b(the)e(corresp)s(onding)e(set)j(of)f(small-signal)e(parameters)
j(represen)m(t)f(a)h FC(line)-5 b(ar)300 2221 y(p)g(erio)g(dic)g(al)5
b(ly)36 b(switche)-5 b(d)35 b(network)p FH(,)d(for)f(whic)m(h)f
(e\016cien)m(t)i(frequency-domain)e(form)m(ulations)f(ha)m(v)m(e)k(b)s
(een)300 2447 y(dev)m(elop)s(ed)d([20)q(,)g(21)q(,)h(66)q(].)536
2673 y(In)25 b(Sec.)g(3.2.1,)k(the)c(prop)s(erties)f(of)h(the)h(op)s
(erating)e(p)s(oin)m(ts)g(in)g(a)i(p)s(erio)s(dically)c(switc)m(hed)i
(net)m(w)m(ork)300 2898 y(will)30 b(b)s(e)j(discussed)e(and)h(the)h
(metho)s(d)g(for)f(obtaining)g(the)h(op)s(erating)g(p)s(oin)m(t)f(for)g
(eac)m(h)j(phase)d(will)f(b)s(e)300 3124 y(presen)m(ted.)67
b(Then,)41 b(in)d(Sec.)i(3.2.2)h(the)f(equations)e(describing)f(the)j
(small-signal)d(net)m(w)m(ork)j(will)d(b)s(e)300 3350
y(deriv)m(ed.)300 3588 y Fx(3.2.1)112 b(Op)s(erating)38
b(p)s(oin)m(ts)300 3872 y FH(Since)h(the)h(frequency-domain)f(form)m
(ulation)f(is)h(dev)m(elop)s(ed)g(under)g(the)h(instan)m(t)f(settling)g
(appro)m(xi-)300 4098 y(mation,)h(the)e(net)m(w)m(ork)h(is)e(represen)m
(ted)h(b)m(y)g(the)g(set)h(of)f(non-linear)e(algebraic)i(equations)g
(\(2.45\))i(in)300 4324 y(Sec.)30 b(2.6.3.)42 b(T)-8
b(o)29 b(obtain)g(the)g(op)s(erating)f(p)s(oin)m(ts,)h(the)g(net)m(w)m
(ork)h(with)d(only)i(the)g(bias)f(inputs)f(is)h(consid-)300
4550 y(ered,)i FC(i.)42 b(e.)1635 4775 y FD(e)1683 4790
y FB(k)1725 4775 y FH(\()p FG(t)p FH(\))26 b(=)1951 4774
y(\026)1950 4775 y FD(e)1998 4790 y FB(k)2313 4775 y
FG(t)f Fz(2)g FG(I)2497 4790 y FB(k)2540 4775 y FG(:)1148
b FH(\(3.5\))300 5037 y(Then,)30 b(the)g(net)m(w)m(ork)h(equations)f
(in)g(\(2.45\))i(b)s(ecome)1267 5148 y Ft(2)1267 5298
y(4)1338 5204 y FD(q)1393 5219 y FB(cs;k)1519 5204 y
FH(\()1559 5203 y(\026)1554 5204 y FD(x)1609 5219 y FB(k)1652
5204 y FH(\))1381 5430 y FD(g)1433 5445 y FB(k)1476 5430
y FH(\()1516 5429 y(\026)1511 5430 y FD(x)1566 5445 y
FB(k)1609 5430 y FH(\))1702 5148 y Ft(3)1702 5298 y(5)1783
5317 y FH(=)1879 5148 y Ft(2)1879 5298 y(4)1949 5204
y FD(q)2004 5219 y FB(cs;k)r Fv(\000)p FA(1)2220 5204
y FH(\()2260 5203 y(\026)2255 5204 y FD(x)2310 5219 y
FB(k)r Fv(\000)p FA(1)2444 5204 y FH(\))2188 5430 y FD(0)2494
5148 y Ft(3)2494 5298 y(5)2570 5317 y FH(+)2661 5148
y Ft(2)2661 5298 y(4)2750 5204 y FD(0)2732 5429 y FH(\026)2731
5430 y FD(e)2779 5445 y FB(k)2837 5148 y Ft(3)2837 5298
y(5)2907 5317 y FG(:)781 b FH(\(3.6\))p eop
%%Page: 64 77
64 76 bop 3809 -200 a FH(64)300 99 y(where)576 98 y(\026)571
99 y FD(x)626 114 y FB(k)707 99 y FH(and)897 98 y(\026)892
99 y FD(x)p FH(\()p FG(t)1015 114 y FB(k)r Fv(\000)p
FA(1)1148 99 y FH(\))39 b(are)g(the)g(v)m(ectors)h(of)e(unkno)m(wns)f
(represen)m(ting)h(the)h(op)s(erating)f(p)s(oin)m(ts)f(for)300
324 y(in)m(terv)-5 b(als)36 b FG(I)711 339 y FB(k)790
324 y FH(and)g FG(I)1013 339 y FB(k)r Fv(\000)p FA(1)1146
324 y FH(,)i(resp)s(ectiv)m(ely)-8 b(.)60 b(Since)36
b(the)h(switc)m(h)f(state)i(v)m(ector)g(and)e(the)h(bias)f(inputs)f
(are)300 550 y(p)s(erio)s(dic)28 b(with)h(p)s(erio)s(d)f(N,)j(the)f
(\\bias)g(net)m(w)m(ork")i(equations)e(in)f(\(3.6\))j(ha)m(v)m(e)g(the)
e(prop)s(ert)m(y)1239 831 y FD(q)1294 846 y FB(cs;k)1420
831 y FH(\()p Fz(\001)p FH(\))c(=)f FD(q)1692 846 y FB(cs;nN)7
b FA(+)p FB(k)1979 831 y FH(\()p Fz(\001)p FH(\))p FG(;)198
b FD(g)2349 846 y FB(k)2392 831 y FH(\()p Fz(\001)p FH(\))26
b(=)f FD(g)2661 846 y FB(nN)7 b FA(+)p FB(k)2865 831
y FH(\()p Fz(\001)p FH(\))1156 1056 y(for)30 b(all)g
FG(k)e Fz(2)d FH(1)p FG(;)15 b FH(2)p FG(;)g(:)g(:)g(:)j(;)d(N)101
b FH(and)91 b FG(n)24 b Fz(2)h FH(\(0)p FG(;)15 b Fz(\006)p
FH(1)p FG(;)g Fz(\006)p FH(2)g FG(:)g(:)g(:)s FH(\))3713
921 y(\(3.7\))536 1292 y(The)26 b(net)m(w)m(ork)h(equations)f(in)f
(\(3.6\))j(sho)m(w)e(that)h(in)e(order)g(to)i(solv)m(e)g(for)f(the)g
(op)s(erating)g(p)s(oin)m(t)3782 1291 y(\026)3777 1292
y FD(x)3832 1307 y FB(k)3875 1292 y FH(,)300 1518 y(it)34
b(is)f(necessary)i(to)g(kno)m(w)g(the)g(op)s(erating)e(p)s(oin)m(t)2072
1517 y(\026)2067 1518 y FD(x)2122 1533 y FB(k)r Fv(\000)p
FA(1)2289 1518 y FH(in)g(the)i(previous)e(switc)m(hing)g(in)m(terv)-5
b(al.)52 b(Con-)300 1744 y(sequen)m(tly)-8 b(,)31 b(it)g(is)f
(necessary)h(to)g(de\014ne)f(an)h(initial)d(op)s(erating)i(p)s(oin)m(t)
2721 1743 y(\026)2716 1744 y FD(x)2771 1711 y FB(init)2771
1770 y(k)2923 1744 y FH(for)g(some)i FG(k)d Fz(2)c(f)p
FH(1)p FG(;)15 b(:)g(:)g(:)j(;)d(N)10 b Fz(g)p FH(,)300
1969 y(and)30 b(then)g(get)h(the)g(rest)f(of)h(the)g(op)s(erating)e(p)s
(oin)m(ts)h(recursiv)m(ely)-8 b(.)39 b(T)m(ypically)-8
b(,)30 b(ho)m(w)m(ev)m(er,)1836 2286 y(\026)1831 2287
y FD(x)1886 2302 y FB(k)r FA(+)p FB(N)2072 2287 y Fz(6)p
FH(=)2173 2286 y(\026)2168 2287 y FD(x)2223 2249 y FB(init)2223
2309 y(k)2344 2287 y FG(:)1344 b FH(\(3.8\))300 2604
y(That)41 b(is,)i(after)e(tra)m(v)m(ersing)g(a)g(full)e(p)s(erio)s(d)g
(of)i(the)g(net)m(w)m(ork)g(equations,)j(the)d(op)s(erating)f(p)s(oin)m
(t)g(for)300 2830 y(in)m(terv)-5 b(al)36 b FG(I)675 2845
y FB(k)r FA(+)p FB(N)872 2830 y FH(is)g(not)h(guaran)m(teed)h(to)f(b)s
(e)f(the)h(same)g(as)g(the)g(initial)d(op)s(erating)i(p)s(oin)m(t.)59
b(T)m(ypically)-8 b(,)300 3055 y(only)29 b(after)i(sev)m(eral)g(net)m
(w)m(ork)g(p)s(erio)s(ds)d(the)j(op)s(erating)f(p)s(oin)m(ts)f(reac)m
(h)i(the)g(condition)1140 3371 y(\026)1135 3372 y FD(x)1190
3387 y FB(nN)7 b FA(+)p FB(k)1419 3372 y Fz(\031)1520
3371 y FH(\026)1515 3372 y FD(x)1570 3391 y FA(\()p FB(n)p
Fv(\000)p FA(1\))p FB(N)g FA(+)p FB(k)2191 3372 y FH(for)31
b(all)e FG(k)f Fz(2)d(f)p FH(1)p FG(;)15 b(:)g(:)g(:)j(;)d(N)10
b Fz(g)p FG(:)649 b FH(\(3.9\))300 3690 y(Ev)m(en)28
b(though)f(the)h(switc)m(h)g(state)h(v)m(ector)g(and)e(the)h(bias)f
(inputs)f(are)i(p)s(erio)s(dic)d(with)i(the)h(same)g(p)s(erio)s(d,)300
3915 y(in)34 b(general,)i(it)e(is)g(not)i(guaran)m(teed)g(that)f(the)g
(op)s(erating)g(p)s(oin)m(t)f(is)g(p)s(erio)s(dic.)51
b(Practical)35 b(SC)f(and)h(SI)300 4141 y(\014lters)24
b(rely)h(on)h(the)f(op)s(erating)g(p)s(oin)m(ts)g(to)h(b)s(e)f(p)s
(erio)s(dic)e(with)h(the)i(same)g(p)s(erio)s(d.)37 b(Therefore,)26
b(for)f(these)300 4367 y(net)m(w)m(orks,)37 b(the)f(condition)d(in)h
(\(3.9\))j(will)c(b)s(e)h(reac)m(hed)i(for)f(some)h(\014nite)e(in)m
(teger)h FG(n)p FH(.)55 b(The)34 b(v)-5 b(alue)35 b(of)g
FG(n)300 4593 y FH(dep)s(ends)29 b(on)h(ho)m(w)g(close)h(the)f(initial)
e(op)s(erating)i(p)s(oin)m(t)f(is)h(to)h(the)f(actual)h(p)s(erio)s(dic)
d(solution.)p eop
%%Page: 65 78
65 77 bop 3809 -200 a FH(65)536 99 y(The)35 b(observ)-5
b(ations)35 b(ab)s(o)m(v)m(e)i(suggest)f(the)f(follo)m(wing)f
(algorithm)h(for)g(obtaining)f(the)h(op)s(erating)300
324 y(p)s(oin)m(ts.)300 557 y FC(A)n(lgorithm)c FH(3.2.1:)138
b Fw(Operating)46 b(points.)300 715 y(Variables:)395
828 y FG(P)453 842 y FB(max)645 828 y Fw(-)i(maximum)e(number)g
(periods)395 1001 y FG(eps)i Fw(-)f(a)h(constant)d(defining)h
(convergence)395 1174 y FG(k)51 b Fw(-)d(phase)e(index)h
Fz(f)p FH(1)p FG(;)15 b(:)g(:)g(:)i(;)e(N)10 b Fz(g)p
Fw(,)48 b(index)f FG(k)28 b FH(=)d(0)48 b Fw(is)f(same)g(as)g
FG(k)29 b FH(=)c FG(N)395 1347 y(C)7 b(O)s(N)j(V)20 b(E)5
b(R)q(GE)g(D)50 b Fw(-)e(flag)e(to)i(signal)e(convergance)300
1580 y(Initialize:)400 1751 y FH(\026)395 1752 y FD(x)450
1766 y FB(N)543 1752 y FH(=)644 1751 y(\026)639 1752
y FD(x)694 1719 y FB(init)694 1778 y(N)395 1925 y FG(n)25
b FH(=)g(0)395 2098 y FG(C)7 b(O)s(N)j(V)20 b(E)5 b(R)q(GE)g(D)50
b Fw(=)e(FALSE)300 2331 y(Start:)395 2504 y(while\()f
FG(C)7 b(O)s(N)j(V)19 b(E)5 b(R)q(GE)g(D)50 b Fw(=)e(FALSE)e(and)h
FG(n)25 b(<)g(P)2247 2518 y FB(max)2439 2504 y Fw(\))47
b(do)634 2677 y FG(C)7 b(O)s(N)j(V)20 b(E)5 b(R)q(GE)g(D)50
b Fw(=)d(TRUE)634 2850 y(for)g(\()g FG(k)29 b FH(=)c(1)48
b Fw(to)f FG(N)58 b Fw(\))47 b(do)878 3022 y FH(\026)873
3023 y FD(x)928 2990 y FB(new)928 3049 y(k)1108 3023
y Fw(=)g([Solution)e(to)j(\(3.6\))e(given)2401 3022 y
FH(\026)2396 3023 y FD(x)2451 3038 y FB(k)r Fv(\000)p
FA(1)2632 3023 y Fw(])238 b(Algorithm)46 b(2.7.3.)873
3196 y(if)h(\()g Fz(jj)1166 3195 y FH(\026)1161 3196
y FD(x)1216 3163 y FB(new)1216 3222 y(k)1369 3196 y Fz(\000)1465
3195 y FH(\026)1460 3196 y FD(x)1515 3211 y FB(k)1558
3196 y Fz(jj)26 b FG(>)f(eps)p Fw(\))47 b(then)1111 3369
y FG(C)7 b(O)s(N)j(V)20 b(E)5 b(R)q(GE)g(D)50 b Fw(=)e(FALSE)878
3541 y FH(\026)873 3542 y FD(x)928 3557 y FB(k)996 3542
y FH(=)1097 3541 y(\026)1092 3542 y FD(x)1147 3509 y
FB(new)1147 3568 y(k)634 3715 y Fw(end)f(for)634 3887
y FG(n)25 b FH(=)g FG(n)20 b FH(+)g(1)395 4060 y Fw(end)47
b(while)300 4233 y(return)639 4232 y FH(\026)634 4233
y FD(x)689 4248 y FB(k)732 4233 y FG(;)111 b(k)28 b Fz(2)d
FH(1)p FG(;)15 b(:)g(:)g(:)i(;)e(N)536 4504 y FH(The)36
b(algorithm)f(ab)s(o)m(v)m(e)j(is)d(really)h(a)g(fast)h(transien)m(t)f
(sim)m(ultion)e(of)j(the)f(step)h(resp)s(onse)e(of)i(the)300
4730 y(net)m(w)m(ork)e(to)g(the)f(bias)g(inputs.)50 b(The)34
b(sim)m(ulation)e(is)h(p)s(erformed)g(un)m(til)f(some)j
(\\steady-state")i(of)e(the)300 4956 y(op)s(erating)28
b(p)s(oin)m(ts)f(is)g(reac)m(hed.)41 b(Fig.)28 b(3.3)h(illustrates)e(a)
h(p)s(ossible)e(step)i(resp)s(onse)f(of)i(the)f(bias)f(solution)300
5181 y(during)35 b(in)m(terv)-5 b(al)37 b FG(k)k FH(for)c(sev)m(eral)h
(switc)m(hing)f(p)s(erio)s(ds.)60 b(The)37 b(v)m(ector)2736
5180 y(\026)2731 5181 y FD(x)2786 5196 y FB(k)2866 5181
y FH(is)g(represen)m(ted)g(b)m(y)h(a)g(scalar)300 5407
y(v)-5 b(alue)30 b(on)g(the)h(ordinate)f(axis.)p eop
%%Page: 66 79
66 78 bop 3809 -200 a FH(66)346 7 y
 27694121 9472574 131563 36508876 27825684 45981450 startTexFig
 346 7 a
%%BeginDocument: figs/bias_step.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      16 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      23 412 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      88 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      95 412 moveto (N+k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      168 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      175 412 moveto (2N+k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      248 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      255 412 moveto (3N+k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      328 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      335 412 moveto (4N+k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      408 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      415 412 moveto (5N+k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      488 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      495 412 moveto (6N+k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      568 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      575 412 moveto (7N+k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      648 407 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      655 412 moveto (8N+k) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 384 moveto
      216 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      216 384 moveto
      248 384 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      248 384 moveto
      296 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      296 384 moveto
      328 384 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 384 moveto
      376 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      376 384 moveto
      408 384 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      408 384 moveto
      456 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      456 384 moveto
      488 384 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      488 384 moveto
      536 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      536 384 moveto
      568 384 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      568 384 moveto
      616 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      616 384 moveto
      648 384 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      648 384 moveto
      696 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      696 384 moveto
      0 32 atan dup cos 10 mul 728 exch sub
      exch sin 10 mul 384 exch sub lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore
gsave
   newpath
      728 384 10 4 32 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      88 384 moveto
      136 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      136 384 moveto
      168 384 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 384 moveto
      56 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      56 384 moveto
      88 384 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 192 moveto
      8 400 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 368 moveto
      56 368 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      88 328 moveto
      136 328 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 288 moveto
      216 288 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      248 256 moveto
      296 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 232 moveto
      376 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      408 248 moveto
      456 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      488 264 moveto
      536 264 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      568 256 moveto
      616 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      640 256 moveto
      688 256 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      744 391 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      11 183 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      23 188 moveto (nN+k) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      12 170 moveto
      21 170 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      27 319 moveto (x) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      28 306 moveto
      37 306 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      32 328 moveto
      32 0 atan dup cos 10 mul 32 exch sub
      exch sin 10 mul 360 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      32 360 10 4 0 32 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      39 332 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      41 314 moveto (init) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Nov 18 18:19:23 1998
%%EndDocument

 endTexFig
 848 1403 a FH(Figure)30 b(3.3:)42 b(Step)30 b(resp)s(onse)f(of)i(the)f
(bias)g(net)m(w)m(ork)h(to)g(the)g(bias)e(input)300 1678
y Fx(3.2.2)112 b(Small-signal)36 b(net)m(w)m(ork)h(equations)300
1963 y FH(In)43 b(this)f(section,)48 b(the)43 b(equations)h(represen)m
(ting)e(the)i(small-signal,)h(linear)d(p)s(erio)s(dically)e(switc)m
(hed)300 2189 y(net)m(w)m(ork)31 b(will)d(b)s(e)i(deriv)m(ed.)40
b(Again,)31 b(recall)e(that)i(the)g(instan)m(t)f(settling)g(appro)m
(ximation)f(is)h(made)h(and)300 2414 y(the)g(net)m(w)m(ork)g(equations)
f(in)f(\(2.45\))k(are)d(used)g(to)h(represen)m(t)f(the)h(large-signal)f
(net)m(w)m(ork.)536 2640 y(Consider)g(the)i(full)d(input)h(v)m(ector)k
FD(e)1802 2655 y FB(k)1844 2640 y FH(\()p FG(t)p FH(\))e(that)h(con)m
(tains)f(b)s(oth)f(the)h(bias)e(and)h(the)h(small-signal)300
2866 y(comp)s(onen)m(ts)f(as)f(in)f(\(3.3\).)43 b(In)29
b(that)i(case,)h(the)f(solution)d(v)m(ector)k(during)d
FG(I)2901 2881 y FB(k)2974 2866 y FH(b)s(ecomes)1443
3183 y FD(x)1498 3198 y FB(k)1541 3183 y FH(\()p FG(t)p
FH(\))d(=)1771 3182 y(\026)1766 3183 y FD(x)1821 3198
y FB(k)1884 3183 y FH(+)1980 3182 y(~)1975 3183 y FD(x)2030
3198 y FB(k)2073 3183 y FH(\()p FG(t)p FH(\))p FG(;)289
b(t)25 b Fz(2)f FG(I)2673 3198 y FB(k)2716 3183 y FG(;)927
b FH(\(3.10\))300 3500 y(where)568 3499 y(\026)563 3500
y FD(x)618 3515 y FB(k)692 3500 y FH(is)29 b(the)i(op)s(erating)f(p)s
(oin)m(t)g(solution)f(obtained)h(in)g(the)h(previous)e(section,)i(and)
3440 3499 y(~)3435 3500 y FD(x)3490 3515 y FB(k)3533
3500 y FH(\()p FG(t)p FH(\))g(repre-)300 3726 y(sen)m(ts)g(the)f(part)h
(of)f(the)h(solution)e(due)g(to)i(the)g(small-signal)d(input.)39
b(Similarly)-8 b(,)27 b(during)h FG(I)3429 3741 y FB(k)r
Fv(\000)p FA(1)3562 3726 y FH(,)1283 4043 y FD(x)1338
4058 y FB(k)r Fv(\000)p FA(1)1471 4043 y FH(\()p FG(t)p
FH(\))e(=)1701 4042 y(\026)1696 4043 y FD(x)1751 4058
y FB(k)r Fv(\000)p FA(1)1904 4043 y FH(+)2000 4042 y(~)1995
4043 y FD(x)2050 4058 y FB(k)r Fv(\000)p FA(1)2183 4043
y FH(\()p FG(t)p FH(\))p FG(;)289 b(t)25 b Fz(2)g FG(I)2784
4058 y FB(k)r Fv(\000)p FA(1)3668 4043 y FH(\(3.11\))300
4360 y(where)568 4359 y(~)563 4360 y FD(x)618 4375 y
FB(k)r Fv(\000)p FA(1)751 4360 y FH(\()p FG(t)p FH(\))31
b(is)e(the)h(part)h(of)f(the)h(solution)d(due)i(to)h(the)g
(small-signal)d(input)g(in)h(the)h(in)m(terv)-5 b(al)30
b FG(I)3742 4375 y FB(k)r Fv(\000)p FA(1)3875 4360 y
FH(.)536 4586 y(Using)25 b(the)g(de\014nitions)e(for)i(the)h(input)d
(in)h(\(3.3\),)k(and)d(for)g(the)h(unkno)m(wns)d(in)h(\(3.10\))k(and)c
(\(3.11\),)300 4812 y(the)31 b(net)m(w)m(ork)g(equations)f(in)f
(\(2.47\))k(ma)m(y)e(b)s(e)e(rewritten)h(as)549 4960
y Ft(2)549 5110 y(4)620 5016 y FD(q)675 5031 y FB(cs;k)800
5016 y FH(\()840 5015 y(\026)835 5016 y FD(x)890 5031
y FB(k)954 5016 y FH(+)1050 5015 y(~)1045 5016 y FD(x)1100
5031 y FB(k)1143 5016 y FH(\()p FG(t)p FH(\)\))663 5242
y FD(g)715 5257 y FB(k)758 5242 y FH(\()798 5241 y(\026)793
5242 y FD(x)848 5257 y FB(k)911 5242 y FH(+)1007 5241
y(~)1002 5242 y FD(x)1057 5257 y FB(k)1100 5242 y FH(\()p
FG(t)p FH(\)\))1297 4960 y Ft(3)1297 5110 y(5)1377 5129
y FH(=)1473 4960 y Ft(2)1473 5110 y(4)1544 5016 y FD(q)1599
5031 y FB(cs;k)1724 5016 y FH(\()1764 5015 y(\026)1759
5016 y FD(x)1814 5031 y FB(k)r Fv(\000)p FA(1)1968 5016
y FH(+)2064 5015 y(~)2059 5016 y FD(x)2114 5031 y FB(k)r
Fv(\000)p FA(1)2247 5016 y FH(\()p FG(t)2315 5031 y FB(k)r
Fv(\000)p FA(1)2448 5016 y FH(\)\))2005 5242 y FD(0)2534
4960 y Ft(3)2534 5110 y(5)2609 5129 y FH(+)2700 4960
y Ft(2)2700 5110 y(4)2790 5016 y FD(0)2772 5241 y FH(\026)2771
5242 y FD(e)2819 5257 y FB(k)2876 4960 y Ft(3)2876 5110
y(5)2952 5129 y FH(+)3043 4960 y Ft(2)3043 5110 y(4)3184
5016 y FD(0)3115 5241 y FH(~)3113 5242 y FD(e)3161 5257
y FB(k)3204 5242 y FH(\()p FG(t)p FH(\))3323 4960 y Ft(3)3323
5110 y(5)3393 5129 y FG(:)250 b FH(\(3.12\))p eop
%%Page: 67 80
67 79 bop 3809 -200 a FH(67)536 99 y(A)m(t)38 b(this)e(p)s(oin)m(t,)j
(the)e(function)f(v)m(ectors)j(in)c(\(3.12\),)42 b(can)37
b(b)s(e)g(appro)m(ximated)g(b)m(y)g(the)g(\014rst)g(t)m(w)m(o)300
324 y(terms)30 b(of)h(their)e(T)-8 b(a)m(ylor)31 b(series)f(expansion.)
39 b(Let)1388 556 y FD(g)1440 571 y FB(k)1483 556 y FH(\()1523
555 y(\026)1518 556 y FD(x)1573 571 y FB(k)1637 556 y
FH(+)1732 555 y(~)1728 556 y FD(x)1783 571 y FB(k)1825
556 y FH(\()p FG(t)p FH(\)\))27 b Fz(\031)e FD(g)2138
571 y FB(k)2180 556 y FH(\()2220 555 y(\026)2215 556
y FD(x)2270 571 y FB(k)2314 556 y FH(\))20 b(+)g FD(G)2542
571 y FB(k)2590 555 y FH(~)2585 556 y FD(x)2640 571 y
FB(k)2683 556 y FH(\()p FG(t)p FH(\))p FG(;)1265 782
y FD(q)1320 797 y FB(cs;k)1445 782 y FH(\()1485 781 y(\026)1480
782 y FD(x)1535 797 y FB(k)1599 782 y FH(+)1694 781 y(~)1690
782 y FD(x)1745 797 y FB(k)1787 782 y FH(\()p FG(t)p
FH(\)\))27 b Fz(\031)d FD(q)2102 797 y FB(cs;k)2228 782
y FH(\()2268 781 y(\026)2263 782 y FD(x)2318 797 y FB(k)2361
782 y FH(\))d(+)f FD(C)2584 797 y FB(cs;k)2714 781 y
FH(~)2709 782 y FD(x)2764 797 y FB(k)2807 782 y FH(\()p
FG(t)p FH(\))p FG(;)1084 1008 y FD(q)1139 1023 y FB(cs;k)1265
1008 y FH(\()1305 1007 y(\026)1300 1008 y FD(x)1355 1023
y FB(k)r Fv(\000)p FA(1)1508 1008 y FH(+)1604 1007 y(~)1599
1008 y FD(x)1654 1023 y FB(k)r Fv(\000)p FA(1)1787 1008
y FH(\()p FG(t)p FH(\)\))27 b Fz(\031)d FD(q)2102 1023
y FB(cs;k)2228 1008 y FH(\()2268 1007 y(\026)2263 1008
y FD(x)2318 1023 y FB(k)r Fv(\000)p FA(1)2452 1008 y
FH(\))c(+)g FD(C)2674 975 y Fv(0)2674 1034 y FB(cs;k)2804
1007 y FH(~)2799 1008 y FD(x)2854 1023 y FB(k)r Fv(\000)p
FA(1)2987 1008 y FH(\()p FG(t)p FH(\))p FG(;)3668 760
y FH(\(3.13\))300 1195 y(where)1567 1410 y FD(G)1649
1425 y FB(k)1717 1410 y FH(=)1833 1348 y FG(d)p FD(g)1932
1363 y FB(k)1975 1348 y FH(\()p FD(x)2065 1363 y FB(k)2108
1348 y FH(\))p 1833 1389 311 4 v 1915 1472 a FG(d)p FD(x)2017
1487 y FB(k)2153 1287 y Ft(\014)2153 1337 y(\014)2153
1387 y(\014)2153 1437 y(\014)2181 1491 y FD(x)2236 1506
y FB(k)2304 1491 y FH(=)2405 1490 y(\026)2400 1491 y
FD(x)2455 1506 y FB(k)2608 1410 y FG(;)456 1695 y FD(C)532
1710 y FB(cs;k)682 1695 y FH(=)798 1633 y FG(d)p FD(q)900
1648 y FB(cs;k)1026 1633 y FH(\()p FD(x)1116 1648 y FB(k)1159
1633 y FH(\))p 798 1674 397 4 v 924 1758 a FG(d)p FD(x)1026
1773 y FB(k)1204 1573 y Ft(\014)1204 1623 y(\014)1204
1673 y(\014)1204 1723 y(\014)1232 1777 y FD(x)1287 1792
y FB(k)1355 1777 y FH(=)1456 1776 y(\026)1451 1777 y
FD(x)1506 1792 y FB(k)1659 1695 y FG(;)561 b FD(C)2321
1658 y Fv(0)2321 1718 y FB(cs;k)2471 1695 y FH(=)2587
1633 y FG(d)p FD(q)2689 1648 y FB(cs;k)2815 1633 y FH(\()p
FD(x)2905 1648 y FB(k)r Fv(\000)p FA(1)3038 1633 y FH(\))p
2587 1674 487 4 v 2713 1758 a FG(d)p FD(x)2815 1773 y
FB(k)r Fv(\000)p FA(1)3084 1573 y Ft(\014)3084 1623 y(\014)3084
1673 y(\014)3084 1723 y(\014)3111 1784 y FD(x)3166 1799
y FB(k)r Fv(\000)p FA(1)3325 1784 y FH(=)3426 1783 y(\026)3421
1784 y FD(x)3476 1799 y FB(k)r Fv(\000)p FA(1)3719 1695
y FG(:)3668 1882 y FH(\(3.14\))300 2108 y(The)32 b(notation)864
2063 y FB(d)p Fp(f)8 b FA(\()p Fp(x)p FA(\))p 864 2087
167 4 v 908 2139 a FB(d)p Fp(x)1073 2108 y FH(in)31 b(\(3.14\))k
(represen)m(ts)d(Jacobian)g(of)g(the)h(function)d(v)m(ector)k
FD(f)10 b FH(\()p Fz(\001)p FH(\).)47 b(It)33 b(is)e(a)i(matrix)300
2334 y(whose)f(en)m(try)g(\()p FG(i;)15 b(j)5 b FH(\))34
b(con)m(tains)e(the)g(deriv)-5 b(ativ)m(e)31 b(of)h(the)g
FG(i)2254 2301 y FH(th)2376 2334 y(equation)g(of)g(v)m(ector)h
FD(f)10 b FH(\()p Fz(\001)p FH(\))33 b(with)d(resp)s(ect)i(to)300
2559 y(the)f FG(j)499 2526 y FH(th)620 2559 y(unkno)m(wn)d(of)j(the)g
(v)m(ector)g FD(x)p FH(.)536 2785 y(It)h(is)f(imp)s(ortan)m(t)g(to)i
(note)f(the)g(di\013erence)f(b)s(et)m(w)m(een)i FD(C)2471
2800 y FB(cs;k)2627 2785 y FH(and)f FD(C)2882 2752 y
Fv(0)2882 2812 y FB(cs;k)3038 2785 y FH(in)f(\(3.14\).)47
b FD(C)3524 2800 y FB(cs;k)3681 2785 y FH(is)31 b(the)300
3011 y(Jacobian)39 b(of)g FD(q)856 3026 y FB(cs;k)1020
3011 y FH(with)f(resp)s(ect)h(to)h FD(x)1731 3026 y FB(k)1812
3011 y FH(while)d FD(C)2134 2978 y Fv(0)2134 3037 y FB(cs;k)2298
3011 y FH(is)h(the)h(Jacobian)g(of)g FD(q)3119 3026 y
FB(cs;k)3284 3011 y FH(with)e(resp)s(ect)i(to)300 3237
y FD(x)355 3252 y FB(k)r Fv(\000)p FA(1)488 3237 y FH(.)48
b(Since)32 b(the)h(structure)g(of)g FD(x)1514 3252 y
FB(k)1589 3237 y FH(and)g FD(x)1824 3252 y FB(k)r Fv(\000)p
FA(1)1989 3237 y FH(is)f(di\013eren)m(t,)i(the)f(structure)f(of)h(the)g
(matrices)g(is)f(also)300 3463 y(di\013eren)m(t.)536
3688 y(If)20 b(the)g(T)-8 b(a)m(ylor)21 b(series)f(appro)m(ximation)f
(\(3.13\))j(is)e(substituted)e(in)m(to)j(the)f(net)m(w)m(ork)h
(equations)f(\(3.12\))300 3914 y(the)31 b(result)e(is)300
4019 y Ft(2)300 4169 y(4)370 4075 y FD(q)425 4090 y FB(cs;k)551
4075 y FH(\()591 4074 y(\026)586 4075 y FD(x)641 4090
y FB(k)684 4075 y FH(\))413 4301 y FD(g)465 4316 y FB(k)508
4301 y FH(\()548 4300 y(\026)543 4301 y FD(x)598 4316
y FB(k)641 4301 y FH(\))735 4019 y Ft(3)735 4169 y(5)p
300 4337 491 4 v 807 4188 a FH(+)894 4019 y Ft(2)894
4169 y(4)964 4075 y FD(C)1040 4090 y FB(cs;k)1002 4301
y FD(G)1084 4316 y FB(k)1180 4019 y Ft(3)1180 4169 y(5)1256
4187 y FH(~)1251 4188 y FD(x)p FH(\()p FG(t)p FH(\))d(=)1531
4019 y Ft(2)1531 4169 y(4)1601 4075 y FD(q)1656 4090
y FB(cs;k)r Fv(\000)p FA(1)1872 4075 y FH(\()1912 4074
y(\026)1907 4075 y FD(x)1962 4090 y FB(k)r Fv(\000)p
FA(1)2095 4075 y FH(\))1840 4301 y FD(0)2146 4019 y Ft(3)2146
4169 y(5)p 1531 4337 671 4 v 2218 4188 a FH(+)2305 4019
y Ft(2)2305 4169 y(4)2375 4075 y FD(C)2451 4042 y Fv(0)2451
4102 y FB(cs;k)2449 4301 y FD(0)2591 4019 y Ft(3)2591
4169 y(5)2667 4187 y FH(~)2662 4188 y FD(x)2717 4203
y FB(k)r Fv(\000)p FA(1)2850 4188 y FH(\()p FG(t)2918
4203 y FB(k)r Fv(\000)p FA(1)3051 4188 y FH(\))16 b(+)3189
4019 y Ft(2)3189 4169 y(4)3279 4075 y FD(0)3261 4300
y FH(\026)3260 4301 y FD(e)3308 4316 y FB(k)3366 4019
y Ft(3)3366 4169 y(5)p 3189 4337 232 4 v 3437 4188 a
FH(+)3524 4019 y Ft(2)3524 4169 y(4)3666 4075 y FD(0)3596
4300 y FH(~)3595 4301 y FD(e)3643 4316 y FB(k)3686 4301
y FH(\()p FG(t)p FH(\))3804 4019 y Ft(3)3804 4169 y(5)3875
4188 y FG(:)3668 4414 y FH(\(3.15\))300 4640 y(Next,)24
b(note)d(that)g(the)g(underlined)c(terms)k(in)e(\(3.15\))k(are)e(the)g
(terms)g(that)g(mak)m(e)h(up)e(the)g(\\bias)h(net)m(w)m(ork")300
4866 y(equations)27 b(in)g(\(3.6\).)42 b(This)25 b(means)j(that)h(the)e
(non-underlined)d(terms)k(from)f(\(3.15\))j(can)e(b)s(e)f(separated)300
5091 y(to)k(get)1126 5148 y Ft(2)1126 5298 y(4)1197 5204
y FD(C)1273 5219 y FB(cs;k)1235 5430 y FD(G)1317 5445
y FB(k)1413 5148 y Ft(3)1413 5298 y(5)1488 5316 y FH(~)1483
5317 y FD(x)1538 5332 y FB(k)1581 5317 y FH(\()p FG(t)p
FH(\))26 b(=)1806 5148 y Ft(2)1806 5298 y(4)1876 5204
y FD(C)1952 5171 y Fv(0)1952 5231 y FB(cs;k)1951 5430
y FD(0)2092 5148 y Ft(3)2092 5298 y(5)2168 5316 y FH(~)2163
5317 y FD(x)2218 5332 y FB(k)r Fv(\000)p FA(1)2351 5317
y FH(\()p FG(t)2419 5332 y FB(k)r Fv(\000)p FA(1)2552
5317 y FH(\))20 b(+)2698 5148 y Ft(2)2698 5298 y(4)2840
5204 y FD(0)2770 5429 y FH(~)2769 5430 y FD(e)2817 5445
y FB(k)2859 5430 y FH(\()p FG(t)p FH(\))2978 5148 y Ft(3)2978
5298 y(5)3049 5317 y FG(:)594 b FH(\(3.16\))p eop
%%Page: 68 81
68 80 bop 3809 -200 a FH(68)536 99 y(The)41 b(set)h(of)g(linear)e
(algebraic)h(equations)g(in)f(\(3.16\))k(represen)m(ts)d(the)h
(small-signal)d(net)m(w)m(ork)300 324 y(during)f(the)i(in)m(terv)-5
b(al)40 b FG(I)1143 339 y FB(k)1185 324 y FH(.)70 b(Since)39
b(the)i(op)s(erating)e(p)s(oin)m(ts)g(of)i(the)f(bias)f(net)m(w)m(ork)i
(are)g(p)s(erio)s(dic,)f(the)300 550 y(small-signal)28
b(matrices)i(in)f(\(3.16\))k(also)d(ha)m(v)m(e)i(the)f(p)s(erio)s
(dicit)m(y)c(prop)s(ert)m(y)1019 825 y FD(G)1101 840
y FB(k)1169 825 y FH(=)e FD(G)1347 840 y FB(nN)7 b FA(+)p
FB(k)1551 825 y FG(;)106 b FD(C)1758 840 y FB(cs;k)1908
825 y FH(=)25 b FD(C)2080 840 y FB(cs;nN)7 b FA(+)p FB(k)2366
825 y FG(;)106 b FD(C)2573 792 y Fv(0)2573 852 y FB(cs;k)2723
825 y FH(=)25 b FD(C)2895 792 y Fv(0)2895 852 y FB(cs;nN)7
b FA(+)p FB(k)1156 1051 y FH(for)30 b(all)g FG(k)e Fz(2)d
FH(1)p FG(;)15 b FH(2)p FG(;)g(:)g(:)g(:)j(;)d(N)101
b FH(and)91 b FG(n)24 b Fz(2)h FH(\(0)p FG(;)15 b Fz(\006)p
FH(1)p FG(;)g Fz(\006)p FH(2)g FG(:)g(:)g(:)s FH(\))3668
916 y(\(3.17\))300 1277 y(The)38 b(set)h(of)f(small-signal)e(matrices)i
(for)h(the)f FG(N)48 b FH(phases)38 b(de\014ne)g(the)g(linear)f(p)s
(erio)s(dically)e(switc)m(hed)300 1503 y(net)m(w)m(ork.)536
1728 y(An)23 b(imp)s(ortan)m(t)f(prop)s(ert)m(y)g(of)h(\(3.16\))i(is)d
(that)i(the)f(top)g(ro)m(w)g(represen)m(ts)g(the)g(c)m(harge)h(conserv)
-5 b(ation)300 1954 y(equations)30 b(for)g(the)h(small)e(signal)g(net)m
(w)m(ork.)41 b(Recall)30 b(from)g(\(2.26\),)j(\(2.31\),)g(\(2.32\))g
(and)c(\(2.34\)\))k(that)1110 2266 y FD(q)1165 2281 y
FB(cs;k)1291 2266 y FH(\()p FD(x)1381 2281 y FB(k)r Fv(\000)p
FA(1)1514 2266 y FH(\()p FG(t)1582 2281 y FB(k)r Fv(\000)p
FA(1)1715 2266 y FH(\)\))26 b(=)1907 2172 y Ft(h)2037
2266 y FG(Q)2109 2280 y FA(1)2149 2266 y FG(;)106 b(Q)2352
2280 y FA(2)2391 2266 y FG(;)g(:)15 b(:)g(:)i(;)106 b(Q)2847
2280 y FB(N)2903 2292 y Fu(cs;k)3021 2172 y Ft(i)3060
2195 y FB(t)3668 2266 y FH(\(3.18\))300 2578 y(where)20
b FG(Q)625 2592 y FB(i)674 2578 y FH(represen)m(t)h(the)g(total)g(c)m
(harge)h(inside)d(the)i(c)m(harge)h(surface)e FG(i)p
FH(.)38 b(In)20 b(\(3.13\),)25 b FD(q)3188 2593 y FB(cs;k)3314
2578 y FH(\()p FD(x)3404 2593 y FB(k)r Fv(\000)p FA(1)3537
2578 y FH(\()p FG(t)p FH(\)\))d(is)e(de-)300 2804 y(comp)s(osed)g(in)m
(to)g(t)m(w)m(o)i(parts,)g(where)e FD(q)1601 2819 y FB(cs;k)1727
2804 y FH(\()1767 2803 y(\026)1762 2804 y FD(x)1817 2819
y FB(k)r Fv(\000)p FA(1)1950 2804 y FH(\))h(is)e(the)h(bias-signal)f
(con)m(tribution)f(and)i FD(C)3419 2771 y Fv(0)3419 2830
y FB(cs;k)3549 2803 y FH(~)3544 2804 y FD(x)3599 2819
y FB(k)r Fv(\000)p FA(1)3732 2804 y FH(\()p FG(t)3800
2819 y FB(k)r Fv(\000)p FA(1)3933 2804 y FH(\))300 3030
y(is)37 b(the)g(small-signal)e(con)m(tribution)h(to)j(the)e(surfaces')h
(c)m(harges.)63 b(Let)38 b(the)g(v)m(ector)h FD(q)3294
3045 y FB(k)3374 3030 y FH(represen)m(t)f(the)300 3256
y(small-signal)28 b(con)m(tribution)h(to)i(the)g(c)m(harge)g(in)e(a)i
(c)m(harge)h(surface,)e(then)1665 3568 y FD(q)1720 3583
y FB(k)1788 3568 y FH(=)25 b FD(C)1960 3530 y Fv(0)1960
3590 y FB(cs;k)2090 3567 y FH(~)2085 3568 y FD(x)2140
3583 y FB(k)r Fv(\000)p FA(1)2273 3568 y FH(\()p FG(t)2341
3583 y FB(k)r Fv(\000)p FA(1)2474 3568 y FH(\))p FG(:)1134
b FH(\(3.19\))300 3880 y(This)30 b(v)m(ector)j(will)c(b)s(e)i(used)g
(as)h(a)g(state)h(v)-5 b(ariable)31 b(v)m(ector)i(in)e(the)h(state)h(c)
m(harge)g(v)-5 b(ariable)30 b(form)m(ulation)300 4106
y(describ)s(ed)e(in)h(the)i(next)f(section.)536 4331
y(It)40 b(will)e(also)i(b)s(e)f(necessary)i(to)g(rewrite)e(the)h
(small-signal)e(net)m(w)m(ork)j(equations)f(in)f(terms)h(of)300
4557 y(input)28 b(and)i(output)g(v)m(ectors)490 4869
y FD(u)p FH(\()p FG(t)p FH(\))c(=)f([)p FG(u)850 4883
y FA(1)890 4869 y FH(\()p FG(t)p FH(\))p FG(;)15 b(u)1085
4883 y FA(2)1125 4869 y FH(\()p FG(t)p FH(\))p FG(;)g(:)g(:)g(:)j(;)d
(u)1483 4883 y FB(N)1539 4891 y Fu(u)1584 4869 y FH(\()p
FG(t)p FH(\)])1712 4832 y FB(t)1924 4869 y FH(and)182
b FD(y)q FH(\()p FG(t)p FH(\))26 b(=)f([)p FG(y)2604
4883 y FA(1)2643 4869 y FH(\()p FG(t)p FH(\))p FG(;)15
b(y)2831 4883 y FA(2)2871 4869 y FH(\()p FG(t)p FH(\))p
FG(;)g(:)g(:)g(:)i(;)e(y)3221 4883 y FB(N)3277 4891 y
Fu(y)3319 4869 y FH(\()p FG(t)p FH(\)])3447 4832 y FB(t)3668
4869 y FH(\(3.20\))300 5181 y(where)31 b FG(u)616 5195
y FB(i)644 5181 y FH(\()p FG(t)p FH(\))i(and)e FG(y)1003
5195 y FB(i)1031 5181 y FH(\()p FG(t)p FH(\))h(represen)m(t)g(the)f(v)
-5 b(alues)32 b(of)f(the)h FG(i)2283 5148 y FH(th)2405
5181 y(small-signal)e(input)g(and)h(output)g(resp)s(ec-)300
5407 y(tiv)m(ely)-8 b(,)32 b(and)f FG(N)820 5421 y FB(u)896
5407 y FH(and)g FG(N)1147 5421 y FB(y)1220 5407 y FH(is)f(the)i(n)m(um)
m(b)s(er)e(of)i(small-signal)d(inputs)g(and)i(outputs)g(resp)s(ectiv)m
(ely)-8 b(.)44 b(This)p eop
%%Page: 69 82
69 81 bop 3809 -200 a FH(69)300 99 y(can)31 b(b)s(e)e(done)i(b)m(y)f
(de\014ning)e(the)j(matrices)f FD(l)1827 114 y FB(k)1900
99 y FH(and)g FD(m)2165 114 y FB(k)2237 99 y FH(suc)m(h)g(that)1544
415 y(~)1543 416 y FD(e)1591 431 y FB(k)1634 416 y FH(\()p
FG(t)p FH(\))83 b(=)g FD(l)2003 431 y FB(k)2046 416 y
FD(u)p FH(\()p FG(t)p FH(\))273 b(and)1041 b(\(3.21\))1577
666 y FD(y)q FH(\()p FG(t)p FH(\))84 b(=)f FD(m)2062
681 y FB(k)2109 665 y FH(~)2104 666 y FD(x)2159 681 y
FB(k)2202 666 y FH(\()p FG(t)p FH(\))1363 b(\(3.22\))300
984 y(where)30 b(the)h(matrix)f FD(l)1045 999 y FB(k)1119
984 y FH(maps)g(the)h(v)-5 b(alues)30 b(of)h(the)g(small-signal)d
(inputs)h(to)i(their)f(prop)s(er)g(p)s(ositions)e(in)300
1209 y(the)33 b(v)m(ector)735 1208 y(~)734 1209 y FD(e)782
1224 y FB(k)825 1209 y FH(\()p FG(t)p FH(\))g(and)f(the)g(matrix)g
FD(m)1684 1224 y FB(k)1759 1209 y FH(maps)g(the)h(unkno)m(wns)e(in)2698
1208 y(~)2693 1209 y FD(x)2748 1224 y FB(k)2823 1209
y FH(to)j(the)e(output)h(v)m(ector.)49 b(Note)300 1435
y(that)29 b FD(u)p FH(\()p FG(t)p FH(\))g(and)e FD(y)q
FH(\()p FG(t)p FH(\))j(ha)m(v)m(e)f(the)g(same)f(structure)g(in)f(all)g
(switc)m(hing)g(in)m(terv)-5 b(als)27 b(while)g(the)h(structures)g(of)
301 1660 y(~)300 1661 y FD(e)348 1676 y FB(k)391 1661
y FH(\()p FG(t)p FH(\))i(and)706 1660 y(~)701 1661 y
FD(x)756 1676 y FB(k)799 1661 y FH(\()p FG(t)p FH(\))h(v)-5
b(ary)d(.)536 1887 y(Using)30 b(\(3.21\),)j(the)d(small-signal)e
(equations)i(in)f(\(3.16\))k(can)e(b)s(e)e(rewritten)h(as)1106
2035 y Ft(2)1106 2185 y(4)1177 2091 y FD(C)1253 2106
y FB(cs;k)1215 2317 y FD(G)1297 2332 y FB(k)1393 2035
y Ft(3)1393 2185 y(5)1468 2203 y FH(~)1464 2204 y FD(x)1519
2219 y FB(k)1561 2204 y FH(\()p FG(t)p FH(\))c(=)1786
2035 y Ft(2)1786 2185 y(4)1857 2091 y FD(C)1933 2058
y Fv(0)1933 2117 y FB(cs;k)1931 2317 y FD(0)2073 2035
y Ft(3)2073 2185 y(5)2148 2203 y FH(~)2143 2204 y FD(x)2198
2219 y FB(k)r Fv(\000)p FA(1)2331 2204 y FH(\()p FG(t)2399
2219 y FB(k)r Fv(\000)p FA(1)2532 2204 y FH(\))21 b(+)2679
2035 y Ft(2)2679 2185 y(4)2759 2091 y FD(0)2749 2317
y(l)2778 2332 y FB(k)2836 2035 y Ft(3)2836 2185 y(5)2907
2204 y FD(u)p FH(\()p FG(t)p FH(\))p FG(:)575 b FH(\(3.23\))300
2568 y FL(3.3)135 b(State)46 b(c)l(harge)g(v)-7 b(ariable)46
b(form)l(ulation)300 2884 y FH(In)29 b(this)g(section,)h(the)g
(small-signal)e(net)m(w)m(ork)i(equations)g(in)f(\(3.23\))j(are)e
(transformed,)f(in)m(to)h(the)g FC(state)300 3110 y(char)-5
b(ge)34 b(variable)d FH(form:)1548 3427 y FD(q)1603 3442
y FB(k)1729 3427 y FH(=)82 b FD(A)1961 3442 y FB(k)2004
3427 y FD(q)2059 3442 y FB(k)r Fv(\000)p FA(1)2212 3427
y FH(+)20 b FD(B)2377 3442 y FB(k)2420 3427 y FD(u)p
FH(\()p FG(t)2546 3442 y FB(k)r Fv(\000)p FA(1)2679 3427
y FH(\))954 b(\(3.24\))1485 3677 y FD(y)q FH(\()p FG(t)p
FH(\))85 b(=)d FD(C)1958 3692 y FB(k)2000 3677 y FD(q)2055
3692 y FB(k)2119 3677 y FH(+)19 b FD(D)2289 3692 y FB(k)2332
3677 y FD(u)p FH(\()p FG(t)p FH(\))p FG(;)1150 b FH(\(3.25\))536
3995 y(where)30 b FG(q)840 4010 y FB(k)912 3995 y FH(is)f(the)h(state)i
(c)m(harge)f(v)m(ector)h(de\014ned)c(in)h(\(3.19\),)k
FD(u)p FH(\()p FG(t)p FH(\))d(and)g FD(y)q FH(\()p FG(t)p
FH(\))h(are)f(the)g(input)f(and)300 4220 y(output)d(v)m(ectors)j(in)c
(\(3.20\).)42 b(The)26 b(matrices)h FD(A)1922 4235 y
FB(k)1964 4220 y FH(,)h FD(B)2091 4235 y FB(k)2134 4220
y FH(,)g FD(C)2263 4235 y FB(k)2331 4220 y FH(and)f FD(D)2585
4235 y FB(k)2654 4220 y FH(are)g(state)h(matrices)f(whic)m(h)e(will)g
(b)s(e)300 4446 y(deriv)m(ed)33 b(in)g(this)g(section.)52
b(The)34 b(state)h(c)m(harge)h(v)-5 b(ariable)33 b(equations)g(ha)m(v)m
(e)j(b)s(een)d(deriv)m(ed)g(for)h(\\ideal")300 4672 y(SCN's)23
b(in)f([40)q(,)h(41)q(].)39 b(Here,)25 b(the)f(same)f(deriv)-5
b(ation)22 b(is)g(p)s(erformed)g(for)h(the)h(net)m(w)m(ork)g(equations)
f(in)f(\(3.23\))300 4898 y(whic)m(h)29 b(represen)m(t)i(the)f(more)h
(general)f(set)h(of)f(elemen)m(ts)h(de\014ned)e(in)g(Sec.)i(3.1.)536
5124 y(First,)j(the)g(output)f(state)i(equation)e(\(3.25\))j(is)d
(deriv)m(ed.)49 b(Note)35 b(from)e(\(3.22\),)k(that)d(to)g(get)h(the)
300 5349 y(expression)28 b(for)h FD(y)q FH(\()p FG(t)p
FH(\))i(it)e(is)f(necessary)i(to)g(solv)m(e)g(for)2122
5348 y(~)2117 5349 y FD(x)2172 5364 y FB(k)2215 5349
y FH(\()p FG(t)p FH(\))g(in)e(\(3.23\).)42 b(This)28
b(can)i(b)s(e)e(done)i(b)m(y)f(de\014ning)p eop
%%Page: 70 83
70 82 bop 3809 -200 a FH(70)300 99 y(the)31 b(matrices)f
FD(r)864 114 y FB(k)937 99 y FH(and)g FD(s)1155 114 y
FB(k)1228 99 y FH(suc)m(h)g(that)1424 247 y Ft(2)1424
396 y(4)1494 303 y FD(C)1570 318 y FB(cs;k)1532 529 y
FD(G)1614 544 y FB(k)1710 247 y Ft(3)1710 396 y(5)1781
416 y FH([)15 b FD(r)1864 431 y FB(k)1998 416 y FD(s)2039
431 y FB(k)2097 416 y FH(])25 b(=)2243 247 y Ft(2)2243
396 y(4)2314 303 y Fz(I)2364 318 y FB(r)n(;k)2596 303
y FH(0)2362 529 y(0)139 b Fz(I)2596 544 y FB(s;k)2706
247 y Ft(3)2706 396 y(5)3668 416 y FH(\(3.26\))300 733
y(where)28 b Fz(I)611 748 y FB(r)n(;k)731 733 y FH(is)f(an)h(\()p
FG(N)1052 748 y FB(cs;k)1194 733 y Fz(\002)16 b FG(N)1354
748 y FB(cs;k)1479 733 y FH(\))29 b(iden)m(tit)m(y)f(matrix)f(and)h
Fz(I)2395 748 y FB(s;k)2518 733 y FH(is)f(an)h(\()p FG(N)2839
748 y FB(g)r(;k)2954 733 y Fz(\002)16 b FG(N)3114 748
y FB(g)r(;k)3212 733 y FH(\))29 b(iden)m(tit)m(y)e(matrix,)300
959 y(where)20 b FG(N)626 974 y FB(cs;k)772 959 y FH(and)g
FG(N)1012 974 y FB(g)r(;k)1131 959 y FH(are)h(de\014ned)f(in)f(Fig.)i
(2.13.)39 b(The)20 b(de\014nition)e(\(3.26\))23 b(mak)m(es)f
FD(r)3204 974 y FB(k)3267 959 y FH(an)f(\()p FG(N)3492
974 y FB(x;k)3595 959 y Fz(\002)q FG(N)3740 974 y FB(cs;k)3865
959 y FH(\))300 1184 y(matrix)30 b(and)f FD(s)813 1199
y FB(k)887 1184 y FH(an)h(\()p FG(N)1121 1199 y FB(x;k)1244
1184 y Fz(\002)19 b FG(N)1407 1199 y FB(g)r(;k)1506 1184
y FH(\))30 b(matrix)g(with)f(the)i(prop)s(ert)m(y)1643
1502 y([)15 b FD(r)1726 1517 y FB(k)1860 1502 y FD(s)1901
1517 y FB(k)1959 1502 y FH(])26 b(=)2106 1333 y Ft(2)2106
1482 y(4)2176 1389 y FD(C)2252 1404 y FB(cs;k)2214 1614
y FD(G)2296 1629 y FB(k)2392 1333 y Ft(3)2392 1482 y(5)2448
1347 y Fv(\000)p FA(1)3668 1502 y FH(\(3.27\))300 1819
y(No)m(w)31 b(it)f(is)f(p)s(ossible)f(to)j(solv)m(e)g(for)1509
1818 y(~)1504 1819 y FD(x)1559 1834 y FB(k)1602 1819
y FH(\()p FG(t)p FH(\))g(in)e(\(3.23\);)838 2135 y(~)834
2136 y FD(x)889 2151 y FB(k)931 2136 y FH(\()p FG(t)p
FH(\))d(=)1156 1967 y Ft(2)1156 2116 y(4)1227 2023 y
FD(C)1303 2038 y FB(cs;k)1265 2249 y FD(G)1347 2264 y
FB(k)1443 1967 y Ft(3)1443 2116 y(5)1498 1981 y Fv(\000)p
FA(1)1608 1967 y Ft(2)1608 2116 y(4)1678 2023 y FD(C)1754
1990 y Fv(0)1754 2049 y FB(cs;k)1752 2249 y FD(0)1894
1967 y Ft(3)1894 2116 y(5)1970 2135 y FH(~)1965 2136
y FD(x)2020 2151 y FB(k)r Fv(\000)p FA(1)2153 2136 y
FH(\()p FG(t)2221 2151 y FB(k)r Fv(\000)p FA(1)2354 2136
y FH(\))20 b(+)2500 1967 y Ft(2)2500 2116 y(4)2571 2023
y FD(C)2647 2038 y FB(cs;k)2609 2249 y FD(G)2691 2264
y FB(k)2787 1967 y Ft(3)2787 2116 y(5)2842 1981 y Fv(\000)p
FA(1)2952 1967 y Ft(2)2952 2116 y(4)3032 2023 y FD(0)3022
2249 y(l)3051 2264 y FB(k)3109 1967 y Ft(3)3109 2116
y(5)3180 2136 y FD(u)p FH(\()p FG(t)p FH(\))p FG(:)302
b FH(\(3.28\))300 2453 y(Using)30 b(the)g(prop)s(ert)m(y)g(\(3.27\))i
(and)e(the)h(de\014nition)d(in)h(\(3.21\),)946 2769 y(~)941
2770 y FD(x)996 2785 y FB(k)1039 2770 y FH(\()p FG(t)p
FH(\))d(=)f([)15 b FD(r)1347 2785 y FB(k)1481 2770 y
FD(s)1522 2785 y FB(k)1580 2770 y FH(])1620 2601 y Ft(2)1620
2751 y(4)1691 2657 y FD(C)1767 2624 y Fv(0)1767 2684
y FB(cs;k)1765 2883 y FD(0)1907 2601 y Ft(3)1907 2751
y(5)1982 2769 y FH(~)1977 2770 y FD(x)2032 2785 y FB(k)r
Fv(\000)p FA(1)2165 2770 y FH(\()p FG(t)2233 2785 y FB(k)r
Fv(\000)p FA(1)2366 2770 y FH(\))21 b(+)f([)15 b FD(r)2596
2785 y FB(k)2730 2770 y FD(s)2771 2785 y FB(k)2829 2770
y FH(])2869 2601 y Ft(2)2869 2751 y(4)2950 2657 y FD(0)2940
2883 y(l)2969 2898 y FB(k)3027 2601 y Ft(3)3027 2751
y(5)3097 2770 y FD(u)p FH(\()p FG(t)p FH(\))410 b(\(3.29\))300
3087 y(or)1361 3312 y(~)1356 3313 y FD(x)1411 3328 y
FB(k)1454 3313 y FH(\()p FG(t)p FH(\))26 b(=)f FD(r)1722
3328 y FB(k)1765 3313 y FD(C)1841 3276 y Fv(0)1841 3336
y FB(cs;k)1971 3312 y FH(~)1966 3313 y FD(x)2021 3328
y FB(k)r Fv(\000)p FA(1)2154 3313 y FH(\()p FG(t)2222
3328 y FB(k)r Fv(\000)p FA(1)2355 3313 y FH(\))20 b(+)g
FD(s)2542 3328 y FB(k)2585 3313 y FD(l)2614 3328 y FB(k)2657
3313 y FD(u)p FH(\()p FG(t)p FH(\))p FG(:)825 b FH(\(3.30\))300
3593 y(Applying)28 b(the)j(de\014nition)d(of)i(the)h(state)g(c)m(harge)
h(v)m(ector)g FD(q)2351 3608 y FB(k)2424 3593 y FH(in)d(\(3.19\))k(to)e
(\(3.30\))i(mak)m(es)1604 3909 y(~)1599 3910 y FD(x)1654
3925 y FB(k)1697 3910 y FH(\()p FG(t)p FH(\))25 b(=)g
FD(r)1964 3925 y FB(k)2007 3910 y FD(q)2062 3925 y FB(k)2125
3910 y FH(+)20 b FD(s)2257 3925 y FB(k)2300 3910 y FD(l)2329
3925 y FB(k)2372 3910 y FD(u)2430 3925 y FB(k)2472 3910
y FH(\()p FG(t)p FH(\))p FG(:)1068 b FH(\(3.31\))300
4227 y(The)26 b(expression)f(for)h(the)g(output)g(v)m(ector)i(can)f(no)
m(w)f(b)s(e)g(obtained)g(b)m(y)g(substituting)e(\(3.31\))k(in)m(to)f
(\(3.22\))300 4453 y(resulting)h(in)1511 4679 y FD(y)q
FH(\()p FG(t)p FH(\))e(=)f FD(m)1880 4694 y FB(k)1922
4679 y FD(r)1965 4694 y FB(k)2008 4679 y FD(q)2063 4694
y FB(k)2126 4679 y FH(+)20 b FD(m)2305 4694 y FB(k)2347
4679 y FD(s)2388 4694 y FB(k)2430 4679 y FD(l)2459 4694
y FB(k)2502 4679 y FD(u)p FH(\()p FG(t)p FH(\))p FG(:)980
b FH(\(3.32\))300 4959 y(By)31 b(de\014ning)d(the)j(matrices)1242
5276 y FD(C)1318 5291 y FB(k)1385 5276 y FH(=)25 b FD(m)1569
5291 y FB(k)1611 5276 y FD(r)1654 5291 y FB(k)1969 5276
y FH(and)272 b FD(D)2468 5291 y FB(k)2537 5276 y FH(=)25
b FD(m)2721 5291 y FB(k)2762 5276 y FD(s)2803 5291 y
FB(k)2846 5276 y FD(l)2875 5291 y FB(k)2918 5276 y FG(;)725
b FH(\(3.33\))p eop
%%Page: 71 84
71 83 bop 3809 -200 a FH(71)300 99 y(the)21 b(output)g(equation)g
(\(3.32\))j(obtains)c(the)h(desired)f(form)h(in)e(\(3.25\).)40
b(Note)23 b(that)f FD(C)3180 114 y FB(k)3243 99 y FH(is)e(an)h(\()p
FG(N)3550 113 y FB(y)3594 99 y Fz(\002)r FG(N)3740 114
y FB(cs;k)3865 99 y FH(\))300 324 y(matrix)30 b(while)e
FD(D)913 339 y FB(k)986 324 y FH(is)i(an)g(\()p FG(N)1312
338 y FB(y)1374 324 y Fz(\002)20 b FG(N)1538 338 y FB(u)1583
324 y FH(\))31 b(matrix.)536 550 y(Next,)h(the)e(state)i(c)m(harge)g
(equation)e(in)f(\(3.24\))j(is)e(deriv)m(ed.)40 b(Note)31
b(from)f(\(3.31\))j(that)1267 866 y(~)1262 867 y FD(x)1317
882 y FB(k)r Fv(\000)p FA(1)1450 867 y FH(\()p FG(t)1518
882 y FB(k)r Fv(\000)p FA(1)1651 867 y FH(\))26 b(=)e
FD(r)1850 882 y FB(k)r Fv(\000)p FA(1)1983 867 y FD(q)2038
882 y FB(k)r Fv(\000)p FA(1)2192 867 y FH(+)19 b FD(s)2323
882 y FB(k)r Fv(\000)p FA(1)2457 867 y FD(l)2486 882
y FB(k)r Fv(\000)p FA(1)2618 867 y FD(u)p FH(\()p FG(t)2744
882 y FB(k)r Fv(\000)p FA(1)2878 867 y FH(\))p FG(:)730
b FH(\(3.34\))300 1184 y(Substituting)28 b(\(3.34\))k(in)m(to)f
(\(3.19\))h(giv)m(es)f(the)g(desired)d(relation:)1224
1502 y FD(q)1279 1517 y FB(k)1347 1502 y FH(=)d FD(C)1519
1464 y Fv(0)1519 1524 y FB(cs;k)1644 1502 y FD(r)1687
1517 y FB(k)r Fv(\000)p FA(1)1820 1502 y FD(q)1875 1517
y FB(k)r Fv(\000)p FA(1)2028 1502 y FH(+)20 b FD(C)2195
1464 y Fv(0)2195 1524 y FB(cs;k)2320 1502 y FD(s)2361
1517 y FB(k)r Fv(\000)p FA(1)2494 1502 y FD(l)2523 1517
y FB(k)r Fv(\000)p FA(1)2656 1502 y FD(u)p FH(\()p FG(t)2782
1517 y FB(k)r Fv(\000)p FA(1)2915 1502 y FH(\))p FG(:)693
b FH(\(3.35\))300 1819 y(By)31 b(de\014ning)d(the)j(matrices)1057
2136 y FD(A)1136 2151 y FB(k)1204 2136 y FH(=)24 b FD(C)1375
2098 y Fv(0)1375 2158 y FB(cs;k)1500 2136 y FD(r)1543
2151 y FB(k)r Fv(\000)p FA(1)1949 2136 y FH(and)272 b
FD(B)2442 2151 y FB(k)2511 2136 y FH(=)25 b FD(C)2683
2098 y Fv(0)2683 2158 y FB(cs;k)2807 2136 y FD(s)2848
2151 y FB(k)r Fv(\000)p FA(1)2982 2136 y FD(l)3011 2151
y FB(k)r Fv(\000)p FA(1)3668 2136 y FH(\(3.36\))300 2453
y(the)49 b(state)i(equation)e(in)f(\(3.35\))k(obtains)c(the)i(desired)e
(form)h(in)e(\(3.24\).)100 b(Note)51 b(that)f FD(A)3602
2468 y FB(k)3694 2453 y FH(is)e(an)300 2679 y(\()p FG(N)408
2694 y FB(cs;k)554 2679 y Fz(\002)20 b FG(N)718 2694
y FB(cs;k)r Fv(\000)p FA(1)934 2679 y FH(\))30 b(matrix)g(while)e
FD(B)1606 2694 y FB(k)1680 2679 y FH(is)h(an)h(\()p FG(N)2005
2694 y FB(cs;k)2151 2679 y Fz(\002)20 b FG(N)2315 2693
y FB(u)2360 2679 y FH(\))31 b(matrix.)300 2965 y FL(3.4)135
b(F)-11 b(requency-domain)45 b(analysis.)300 3281 y FH(Giv)m(en)33
b(a)h(linear)e(p)s(erio)s(dically)e(time)j(v)-5 b(arying)33
b(\(LPTV\))h(net)m(w)m(ork)g(with)e(p)s(erio)s(d)f FG(T)13
b FH(,)35 b(if)d(the)i(input)e(and)300 3507 y(output)41
b(v)m(ectors)i(are)f FD(u)p FH(\()p FG(t)p FH(\))g(and)f
FD(y)q FH(\()p FG(t)p FH(\),)k(resp)s(ectiv)m(ely)-8
b(,)45 b(then)c(the)h(relation)e(b)s(et)m(w)m(een)i(the)g(input)e(and)
300 3733 y(output)30 b(in)f(the)i(frequency)e(domain)h(is)f([66)q(])
1429 4050 y FD(Y)s FH(\()p FG(!)s FH(\))d(=)1839 3944
y Fv(1)1814 3969 y Ft(X)1763 4148 y FB(n)p FA(=)p Fv(\0001)2001
4050 y FD(H)2083 4064 y FB(n)2130 4050 y FH(\()p FG(!)s
FH(\))p FD(U)p FH(\()p FG(!)e Fz(\000)c FG(n!)2659 4064
y FB(s)2695 4050 y FH(\))p FG(;)913 b FH(\(3.37\))300
4367 y(where)30 b FD(Y)s FH(\()p FG(!)s FH(\))g(and)g
FD(U)p FH(\()p FG(!)s FH(\))h(are)g(the)g(F)-8 b(ourier)30
b(transforms)f(of)i FD(y)q FH(\()p FG(t)p FH(\))g(and)f
FD(u)p FH(\()p FG(t)p FH(\))h(resp)s(ectiv)m(ely)-8 b(,)1912
4684 y FG(!)1969 4698 y FB(s)2031 4684 y FH(=)2137 4623
y(2)p FG(\031)p 2137 4663 101 4 v 2154 4747 a(T)2247
4684 y(;)1396 b FH(\(3.38\))300 5001 y(and)1386 5227
y FD(H)1468 5241 y FB(n)1514 5227 y FH(\()p FG(!)s FH(\))26
b(=)1786 5166 y(1)p 1776 5206 66 4 v 1776 5289 a FG(T)1867
5112 y Ft(Z)1950 5138 y FB(T)1913 5301 y FA(0)2020 5227
y FD(H)p FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))p FG(e)2364
5190 y FB(j)t FA(\()p FB(!)r Fv(\000)p FB(n!)2612 5198
y Fu(s)2646 5190 y FA(\))p FB(\034)2717 5227 y FG(d\034)864
b FH(\(3.39\))p eop
%%Page: 72 85
72 84 bop 3809 -200 a FH(72)300 99 y(where)25 b FD(H)p
FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))27 b(is)e(the)h(F)-8
b(ourier)26 b(transform)f(of)h FD(h)p FH(\()p FG(t;)15
b(\034)10 b FH(\))27 b(whic)m(h)e(is)g(the)h(net)m(w)m(ork)h(resp)s
(onse)e(to)h(a)h(dela)m(y)m(ed)300 324 y(delta)j(function)f
FG(\016)s FH(\()p FG(t)22 b Fz(\000)d FG(\034)10 b FH(\).)536
550 y(In)46 b(App)s(endix)e(B,)52 b(the)47 b(expression)e(for)i
FD(H)2105 564 y FB(n)2152 550 y FH(\()p FG(!)s FH(\))g(is)f(deriv)m(ed)
g(for)g(an)h(N-phase)g(p)s(erio)s(dically)300 776 y(switc)m(hed)36
b(net)m(w)m(ork)i(that)g(is)e(describ)s(ed)f(b)m(y)i(the)g(state)h(c)m
(harge)g(equations)f(\(3.24\))i(and)e(\(3.25\).)62 b(The)300
1002 y(results)29 b(are)i(summarized)e(as)h(follo)m(ws:)1575
1310 y FD(H)1657 1324 y FB(n)1703 1310 y FH(\()p FG(!)s
FH(\))c(=)1973 1287 y(~)1955 1310 y FD(H)2037 1324 y
FB(n)2084 1310 y FH(\()p FG(!)s FH(\))21 b(+)2344 1287
y(^)2326 1310 y FD(H)2408 1324 y FB(n)2454 1310 y FH(\()p
FG(!)s FH(\))p FG(;)1059 b FH(\(3.40\))300 1618 y(where)1587
1820 y(^)1569 1844 y FD(H)1651 1858 y FB(n)1698 1844
y FH(\()p FG(!)s FH(\))25 b(=)1969 1782 y(1)p 1959 1823
66 4 v 1959 1906 a FG(T)2083 1738 y FB(N)2055 1763 y
Ft(X)2050 1947 y FB(k)r FA(=1)2194 1844 y FD(D)2274 1859
y FB(k)2317 1844 y FG(V)2370 1859 y FB(k)2413 1844 y
FH(\()p FG(n!)2560 1858 y FB(s)2596 1844 y FH(\))1037
b(\(3.41\))300 2119 y(and)1373 2321 y(~)1355 2345 y FD(H)1437
2359 y FB(n)1484 2345 y FH(\()p FG(!)s FH(\))26 b(=)1756
2283 y(1)p 1746 2324 V 1746 2407 a FG(T)1869 2239 y FB(N)1841
2264 y Ft(X)1836 2448 y FB(k)r FA(=1)1980 2345 y FD(F)2046
2360 y FB(k)2089 2345 y FH(\()p FG(!)s FH(\))p FD(B)2293
2360 y FB(k)r FA(+1)2426 2345 y FG(e)2468 2307 y FB(j)t
FA(\()p FB(!)r Fv(\000)p FB(n!)2716 2315 y Fu(s)2750
2307 y FA(\))p FB(t)2802 2319 y Fu(k)3668 2345 y FH(\(3.42\))300
2620 y(The)k(matrix)g FD(F)849 2635 y FB(k)891 2620 y
FH(\()p FG(!)s FH(\))h(in)e(\(3.42\))k(is)939 2928 y
FD(F)1005 2943 y FB(k)1048 2928 y FH(\()p FG(!)s FH(\))26
b(=)1300 2822 y FB(N)7 b FA(+1)1316 2847 y Ft(X)1319
3029 y FB(i)p FA(=2)1468 2928 y FG(V)1521 2942 y FB(i)1549
2928 y FH(\()p FG(!)s FH(\))p FD(C)1755 2890 y FB(t)1755
2950 y(i)1800 2834 y Ft(h)1839 2928 y FD(P)1910 2943
y FB(k)r(;i)2017 2928 y FH(+)20 b FD(S)2166 2942 y FB(i)2210
2834 y Ft(\020)2259 2928 y FD(1)p FG(e)2353 2890 y FB(j)t(!)r(T)2508
2928 y Fz(\000)g FD(S)2657 2942 y FB(N)7 b FA(+1)2814
2834 y Ft(\021)2879 2928 y FD(P)2950 2943 y FB(k)r(;N)g
FA(+1)3166 2834 y Ft(i)3220 2928 y FG(;)423 b FH(\(3.43\))300
3236 y(where)1143 3462 y FD(S)1201 3476 y FB(i)1254 3462
y FH(=)25 b FD(A)1429 3476 y FB(i)1458 3462 y FD(A)1537
3476 y FB(i)p Fv(\000)p FA(1)1655 3462 y FD(A)1734 3476
y FB(i)p Fv(\000)p FA(2)1868 3462 y Fz(\001)15 b(\001)g(\001)h
FD(A)2068 3476 y FA(3)2107 3462 y FD(A)2186 3476 y FA(2)2498
3462 y FH(2)26 b Fz(\024)f FG(i)h Fz(\024)f FG(N)30 b
FH(+)20 b(1)611 b(\(3.44\))300 3737 y(and)1268 4107 y
FD(P)1339 4122 y FB(k)r(;i)1451 4107 y FH(=)1547 3760
y Ft(8)1547 3835 y(>)1547 3860 y(>)1547 3885 y(>)1547
3910 y(>)1547 3935 y(>)1547 3959 y(>)1547 3984 y(>)1547
4009 y(<)1547 4159 y(>)1547 4184 y(>)1547 4209 y(>)1547
4233 y(>)1547 4258 y(>)1547 4283 y(>)1547 4308 y(>)1547
4333 y(:)1662 3903 y FD(0)684 b FH(if)29 b FG(i)d Fz(\024)f
FG(k)s(;)1662 4129 y FD(1)684 b FH(if)29 b FG(i)d FH(=)f
FG(k)e FH(+)d(1)p FG(;)1662 4355 y FD(A)1741 4369 y FB(i)1769
4355 y FD(A)1848 4369 y FB(i)p Fv(\000)p FA(1)1982 4355
y Fz(\001)15 b(\001)g(\001)h FD(A)2182 4370 y FB(k)r
FA(+2)2398 4355 y FH(if)29 b FG(i)d(>)f(k)e FH(+)d(1)p
FG(:)3668 4107 y FH(\(3.45\))300 4549 y(The)30 b(scalar)g(function)f
FG(V)1154 4564 y FB(k)1197 4549 y FH(\()p FG(!)s FH(\))i(in)e(\(3.43\))
k(and)c(\(3.41\))k(is)1359 4857 y FG(V)1412 4872 y FB(k)1455
4857 y FH(\()p FG(!)s FH(\))26 b(=)f FG(e)1749 4819 y
Fv(\000)p FB(j)t(!)r FA(\()1920 4773 y Fu(t)1944 4791
y(k)q Fr(\000)p Fs(1)2060 4773 y(+)p Fu(t)2131 4791 y(k)p
1920 4804 249 4 v 2029 4845 a Fs(2)2179 4819 y FA(\))2236
4857 y FH(\001)2312 4872 y FB(k)2379 4857 y FH(sinc)o(\()2576
4795 y FG(!)s FH(\001)2712 4810 y FB(k)p 2576 4836 179
4 v 2643 4919 a FH(2)2765 4857 y(\))p FG(;)843 b FH(\(3.46\))300
5165 y(where)1110 5390 y(sinc)o(\()p FG(x)p FH(\))26
b(=)1516 5329 y FG(sin)p FH(\()p FG(x)p FH(\))p 1516
5369 252 4 v 1616 5453 a FG(x)2050 5390 y(and)273 b FH(\001)2549
5405 y FB(k)2616 5390 y FH(=)25 b FG(t)2745 5405 y FB(k)2808
5390 y Fz(\000)20 b FG(t)2932 5405 y FB(k)r Fv(\000)p
FA(1)3065 5390 y FG(:)578 b FH(\(3.47\))p eop
%%Page: 73 86
73 85 bop 3809 -200 a FH(73)300 99 y(Note,)32 b(that)f(due)f(to)h(the)f
(p)s(erio)s(dicit)m(y)e(prop)s(ert)m(y)-8 b(,)31 b(the)f(index)f
FG(N)i FH(+)19 b(1)31 b(refers)f(to)h(phase)f(1.)42 b(By)30
b(carefully)300 324 y(examining)f(the)h(v)m(ector)i FD(F)1232
339 y FB(k)1275 324 y FH(\()p FG(!)s FH(\))f(in)e(\(3.43\),)k(the)d
(follo)m(wing)f(recursiv)m(e)h(prop)s(ert)m(y)g(can)g(b)s(e)g(seen:)
1422 593 y FD(F)1488 608 y FB(k)r Fv(\000)p FA(1)1620
593 y FH(\()p FG(!)s FH(\))c(=)f FD(F)1938 608 y FB(k)1980
593 y FH(\()p FG(!)s FH(\))p FD(A)2189 608 y FB(k)r FA(+1)2343
593 y FH(+)20 b FG(V)2487 608 y FB(k)2530 593 y FH(\()p
FG(!)s FH(\))p FD(C)2736 555 y FB(t)2736 615 y(k)3668
593 y FH(\(3.48\))300 861 y(This)29 b(prop)s(ert)m(y)g(allo)m(ws)h(us)f
(to)i(compute)g(the)g(full)d(expression)h(in)g(\(3.43\))j(only)e(once)h
(to)g(ev)-5 b(aluate)31 b FD(F)3808 875 y FB(N)3875 861
y FH(,)300 1087 y(and)39 b(then,)j(ev)-5 b(aluate)41
b(the)f(rest)g(of)g FD(F)1628 1102 y FB(k)1670 1087 y
FH(,)j FG(k)h Fz(2)d(f)p FG(N)c Fz(\000)26 b FH(1)p FG(;)15
b(N)37 b Fz(\000)26 b FH(2)p FG(;)15 b(:)g(:)g(:)j(;)d
FH(1)p Fz(g)41 b FH(with)d(the)i(minimal)d(n)m(um)m(b)s(er)300
1313 y(matrix)30 b(pro)s(duct)f(and)h(scaling)f(op)s(erations.)536
1539 y(Giv)m(en)41 b(the)g(expression)f(for)g FD(H)1657
1553 y FB(n)1704 1539 y FH(\()p FG(!)s FH(\))h(in)f(\(3.37\))j(it)d(is)
g(p)s(ossible)e(to)k(compute)f(the)g(frequency-)300 1765
y(domain)27 b(resp)s(onse.)38 b(The)28 b(goal)g(is)f(to)h(compute)g
(the)g(output)f FD(y)q FH(\()p FG(t)p FH(\))i(when)e(the)h(input)d
(signal)i(is)g(a)h(phaser)300 1990 y(of)j(the)f(form)1766
2216 y FD(u)p FH(\()p FG(t)p FH(\))c(=)f FD(a)p FG(e)2142
2179 y FB(j)t FA(\()p FB(!)2246 2188 y Fs(0)2280 2179
y FB(t)p FA(+)p FB(\036)p FA(\))3668 2216 y FH(\(3.49\))300
2472 y(where)32 b FD(a)g FH(is)f(a)i(v)m(ector)h(con)m(taining)e(the)h
(magnitudes)e(of)h(the)h(inputs,)e FG(\036)i FH(is)e(the)h(phase,)h
(and)f FG(!)3609 2486 y FA(0)3680 2472 y FH(is)g(the)300
2698 y(input)c(frequency)-8 b(.)41 b(The)30 b(F)-8 b(ourier)30
b(transform)g(of)g(\(3.49\))j(is)1645 2966 y FD(U)p FH(\()p
FG(!)s FH(\))26 b(=)f FD(a)p FG(e)2070 2929 y FB(j)t(\036)2149
2966 y FG(\016)s FH(\()p FG(!)f Fz(\000)c FG(!)2456 2980
y FA(0)2495 2966 y FH(\))p FG(:)1113 b FH(\(3.50\))300
3235 y(Inserting)29 b(\(3.50\))k(in)m(to)d(\(3.37\))j(results)c(in,)
1258 3503 y FD(Y)s FH(\()p FG(!)s FH(\))d(=)1668 3397
y Fv(1)1643 3422 y Ft(X)1592 3601 y FB(n)p FA(=)p Fv(\0001)1830
3503 y FD(H)1912 3517 y FB(n)1959 3503 y FH(\()p FG(!)s
FH(\))p FD(a)p FG(e)2182 3466 y FB(j)t(\036)2261 3503
y FG(\016)s FH(\()p FG(!)e Fz(\000)c FG(!)2568 3517 y
FA(0)2627 3503 y Fz(\000)g FG(n!)2830 3517 y FB(s)2866
3503 y FH(\))p FG(;)742 b FH(\(3.51\))300 3772 y(whic)m(h)29
b(is)h(equiv)-5 b(alen)m(t)29 b(to)1075 4040 y FD(Y)s
FH(\()p FG(!)s FH(\))d(=)1485 3934 y Fv(1)1460 3959 y
Ft(X)1409 4138 y FB(n)p FA(=)p Fv(\0001)1647 4040 y FD(H)1729
4054 y FB(n)1776 4040 y FH(\()p FG(!)1868 4054 y FA(0)1927
4040 y FH(+)20 b FG(n!)2130 4054 y FB(s)2166 4040 y FH(\))p
FD(a)p FG(e)2294 4003 y FB(j)t(\036)2373 4040 y FG(\016)s
FH(\()p FG(!)k Fz(\000)c FH(\()p FG(!)2715 4054 y FA(0)2775
4040 y FH(+)g FG(n!)2978 4054 y FB(s)3014 4040 y FH(\)\))p
FG(;)559 b FH(\(3.52\))300 4309 y(T)-8 b(aking)30 b(the)h(in)m(v)m
(erse)f(F)-8 b(ourier)30 b(transform)f(of)i(\(3.52\),)1251
4577 y FD(y)q FH(\()p FG(t)p FH(\))26 b(=)1608 4471 y
Fv(1)1584 4496 y Ft(X)1532 4675 y FB(n)p FA(=)p Fv(\0001)1770
4577 y FD(H)1852 4591 y FB(n)1899 4577 y FH(\()p FG(!)1991
4591 y FA(0)2051 4577 y FH(+)20 b FG(n!)2254 4591 y FB(s)2289
4577 y FH(\))p FD(a)p FG(e)2417 4540 y FB(j)t(\036)2496
4577 y FG(e)2538 4540 y FB(j)t FA(\()p FB(!)2642 4549
y Fs(0)2677 4540 y FA(+)p FB(n!)2819 4548 y Fu(s)2852
4540 y FA(\))p FB(t)2909 4577 y FG(;)734 b FH(\(3.53\))300
4846 y(Note)34 b(that)f FD(H)803 4860 y FB(n)850 4846
y FH(\()p FG(!)942 4860 y FA(0)1003 4846 y FH(+)22 b
FG(n!)1208 4860 y FB(s)1244 4846 y FH(\))p FD(a)p FG(e)1372
4813 y FB(j)t(\036)1483 4846 y FH(in)32 b(\(3.54\))j(is)d(a)h(complex)f
(quan)m(tit)m(y)h(that)h(can)f(b)s(e)f(written)g(in)f(terms)300
5071 y(of)g(its)e(magnitude)h(and)g(phase.)40 b(Therefore,)30
b(\(3.54\))j(can)e(b)s(e)e(rewritten)h(as)1389 5340 y
FD(y)q FH(\()p FG(t)p FH(\))c(=)1746 5234 y Fv(1)1722
5259 y Ft(X)1670 5438 y FB(n)p FA(=)p Fv(\0001)1909 5340
y FD(b)1967 5354 y FB(n;!)2074 5363 y Fs(0)2112 5340
y FG(e)2154 5302 y FB(j)t(\022)2220 5310 y Fu(n;!)2316
5325 y Fs(0)2358 5340 y FG(e)2400 5302 y FB(j)t FA(\()p
FB(!)2504 5311 y Fs(0)2539 5302 y FA(+)p FB(n!)2681 5310
y Fu(s)2714 5302 y FA(\))p FB(t)2771 5340 y FG(;)872
b FH(\(3.54\))p eop
%%Page: 74 87
74 86 bop 3809 -200 a FH(74)300 99 y(where)20 b FD(b)611
113 y FB(n;!)718 122 y Fs(0)776 99 y FH(and)g FG(\022)986
113 y FB(n;!)1093 122 y Fs(0)1151 99 y FH(are)g(the)h(magnitude)e(and)h
(phase)g(of)g(the)h(complex)f(quan)m(tit)m(y)g FD(H)3309
113 y FB(n)3356 99 y FH(\()p FG(!)3448 113 y FA(0)3508
99 y FH(+)f FG(n!)3710 113 y FB(s)3746 99 y FH(\))p FD(a)p
FG(e)3874 66 y FB(j)t(\036)3953 99 y FH(,)300 324 y(resp)s(ectiv)m(ely)
-8 b(.)536 550 y(F)g(rom)28 b(\(3.54\))h(it)e(can)g(b)s(e)f(seen)h
(that)h(the)f(output)g(consists)f(of)h(in\014nite)e(n)m(um)m(b)s(er)h
(of)h(phasers)f(with)300 776 y(frequencies)31 b(\()p
FG(!)859 790 y FA(0)919 776 y FH(+)21 b FG(n!)1123 790
y FB(s)1159 776 y FH(\))32 b(where)g FG(n)27 b Fz(2)g(f)p
FH(0)p FG(;)15 b Fz(\006)p FH(1)p FG(;)g Fz(\006)p FH(2)p
FG(;)g(:)g(:)g(:)t Fz(g)p FH(.)45 b(The)32 b(frequency-domain)e
(analysis)g(consists)300 1002 y(of)h(computing)e FD(b)911
1016 y FB(n;!)1018 1025 y Fs(0)1086 1002 y FH(and)h FG(\022)1306
1016 y FB(n;!)1413 1025 y Fs(0)1481 1002 y FH(for)g(the)h(desired)e
FG(n)h FH(and)f FG(!)2404 1016 y FA(0)2443 1002 y FH(.)536
1228 y(The)d(follo)m(wing)e(algorithm)h(serv)m(es)i(as)f(a)g(summary)f
(of)h(steps)g(required)e(for)i(the)g(computation)g(of)300
1453 y(the)33 b(frequency)f(resp)s(onse.)46 b(In)32 b(the)h(actual)g
(implemen)m(tation,)f(the)g(algorithm)g(is)g(further)f(optimized.)300
1679 y(The)f(details)f(of)i(the)f(optimization)g(are)g(b)s(ey)m(ond)g
(the)h(scop)s(e)f(of)h(this)e(thesis.)300 1912 y FC(A)n(lgorithm)i
FH(3.4.1:)138 b Fw(Frequency)46 b(response.)300 2100
y(Given:)395 2273 y FG(!)452 2287 y FB(star)r(t)611 2273
y Fw(,)i FG(!)764 2287 y FB(stop)943 2273 y Fw(-)f(start)g(and)f(stop)h
(frequencies)e(of)i(the)g(input)f(frequency)g(sweep.)395
2446 y FD(a)p Fw(,)i FG(\036)g Fw(-)f(magnitude)e(and)i(phase)g(of)g
(the)g(input.)395 2619 y FG(n)h Fw(-)f(the)g(desired)f(multiple)f(of)j
(the)f(sampling)e(frequency)g FG(!)2893 2633 y FB(s)2977
2619 y Fw(for)i(the)g(output.)300 2791 y(Start:)395 2964
y(/*)h(Large-signal)c(transient)h(simulation)g(*/)395
3137 y([Compute)h(operating)f(points)1641 3136 y FH(\026)1636
3137 y FD(x)1691 3152 y FB(k)1734 3137 y FG(;)111 b(k)28
b FH(=)d(1)p FG(;)15 b(:)g(:)g(:)j(;)d(N)10 b Fw(])191
b(Algorithm)45 b(3.2.1.)395 3370 y(/*)j(Extract)d(small)i(signal)f
(parameters)f(*/)395 3543 y([Compute)h FD(G)907 3558
y FB(k)950 3543 y Fw(,)h FD(C)1121 3558 y FB(cs;k)1246
3543 y Fw(,)h FD(C)1418 3510 y Fv(0)1418 3569 y FB(cs;k)1543
3543 y FG(;)111 b(k)28 b FH(=)d(1)p FG(;)15 b(:)g(:)g(:)i(;)e(N)10
b Fw(])191 b(Equation)46 b(\(3.14\))395 3781 y(/*)i(Charge)e(state)g
(variable)g(formulation)e(*/)395 3954 y([Compute)i FD(r)868
3969 y FB(k)911 3954 y FG(;)63 b FD(s)1040 3969 y FB(k)1083
3954 y FG(;)g FD(l)1200 3969 y FB(k)1243 3954 y FG(;)g
FD(m)1419 3969 y FB(k)1460 3954 y FG(;)111 b(k)29 b FH(=)c(1)p
FG(;)15 b(:)g(:)g(:)i(;)e(N)10 b Fw(])191 b(Equations)45
b(\(3.26\),)h(\(3.21\),)g(\(3.22\))395 4127 y([Compute)g
FD(A)904 4142 y FB(k)947 4127 y FG(;)63 b FD(B)1109 4142
y FB(k)1152 4127 y FG(;)g FD(C)1316 4142 y FB(k)1358
4127 y FG(;)g FD(D)1526 4142 y FB(k)1569 4127 y FG(;)111
b(k)28 b FH(=)d(1)p FG(;)15 b(:)g(:)g(:)i(;)e(N)10 b
Fw(])191 b(Equations)46 b(\(3.36\),)g(\(3.33\))395 4360
y(/*)i(Frequency)d(response)g(*/)395 4540 y([Compute)843
4517 y FH(^)825 4540 y FD(H)907 4554 y FB(n)954 4540
y Fw(])190 b(Equation)46 b(\(3.41\))395 4713 y(for)h(\()p
FG(!)691 4727 y FA(0)778 4713 y Fw(=)g FG(!)930 4727
y FB(star)r(t)1137 4713 y Fw(to)g FG(!)1337 4727 y FB(stop)1468
4713 y Fw(\))h(do)634 4886 y([Compute)e FD(F)1130 4900
y FB(N)1197 4886 y FH(\()p FG(!)1289 4900 y FA(0)1348
4886 y FH(+)20 b FG(n!)1551 4900 y FB(s)1587 4886 y FH(\))p
Fw(])191 b(Equation)46 b(\(3.43\))634 5005 y(for)h(\()p
FG(k)k Fw(=)c FG(N)58 b Fw(to)47 b FH(2)p Fw(\))h(do)873
5178 y([Compute)d FD(F)1368 5193 y FB(k)r Fv(\000)p FA(1)1501
5178 y FH(\()p FG(!)1593 5192 y FA(0)1652 5178 y FH(+)20
b FG(n!)1855 5192 y FB(s)1891 5178 y FH(\))48 b Fw(from)f
FD(F)2279 5193 y FB(k)2321 5178 y FH(\()p FG(!)2413 5192
y FA(0)2473 5178 y FH(+)20 b FG(n!)2676 5192 y FB(s)2712
5178 y FH(\))p Fw(])191 b(Equation)45 b(\(3.48\))634
5351 y(end)i(for)p eop
%%Page: 75 88
75 87 bop 3809 -200 a FH(75)634 99 y Fw([Compute)1082
75 y FH(~)1064 99 y FD(H)1146 113 y FB(n)1192 99 y FH(\()p
FG(!)1284 113 y FA(0)1344 99 y FH(+)20 b FG(n!)1547 113
y FB(s)1583 99 y FH(\))p Fw(])191 b(Equation)45 b(\(3.42\))634
279 y FD(H)716 293 y FB(n)763 279 y FH(\()p FG(!)855
293 y FA(0)914 279 y FH(+)20 b FG(n!)1117 293 y FB(s)1153
279 y FH(\))26 b(=)1328 256 y(~)1310 279 y FD(H)1392
293 y FB(n)1439 279 y FH(\()p FG(!)1531 293 y FA(0)1590
279 y FH(+)20 b FG(n!)1793 293 y FB(s)1829 279 y FH(\))h(+)1994
256 y(^)1976 279 y FD(H)2058 293 y FB(n)634 452 y Fw([Compute)46
b FD(b)1122 466 y FB(n;!)1229 475 y Fs(0)1314 452 y Fw(and)h
FG(\022)1548 466 y FB(n;!)1655 475 y Fs(0)1693 452 y
Fw(])191 b(Equations)45 b(\(3.54\),)h(\(3.54\))395 625
y(end)h(for)300 911 y FL(3.5)135 b(Conclusion)300 1227
y FH(In)33 b(this)f(c)m(hapter,)j(explicit)d(expressions)g(w)m(ere)i
(deriv)m(ed)f(for)g(the)h(frequency)f(rosp)s(onse)f(of)i(SC)f(and)g(SI)
300 1453 y(\014lters)40 b(under)f(the)i(instan)m(t)g(settling)f(appro)m
(ximation.)71 b(The)41 b(expressions)e(are)j(in)d(terms)i(of)g(small-)
300 1678 y(signal)35 b(parameters)i(that)f(are)h(extracted)h(from)d
(the)i(large-signal)e(CS/MNA)i(equations)f(dev)m(elop)s(ed)300
1904 y(in)d(Chapter)h(2.)53 b(This)32 b(allo)m(ws)i(the)g(designer)g
(to)h(sp)s(ecify)e(the)h(net)m(w)m(ork)h(at)g(the)g(transistor)e(lev)m
(el,)j(and)300 2130 y(the)g(small)e(signal)h(parameters)h(are)h(then)e
(automatically)h(extracted)h(and)e(the)h(frequency)g(resp)s(onse)300
2356 y(computed.)536 2582 y(It)29 b(w)m(as)g(sho)m(wn)f(that)h(in)e
(order)h(to)h(obtain)f(the)h(small-signal)d(parameters)j(it)f(is)f
(\014rst)h(neccessary)300 2808 y(to)43 b(parform)f(a)h(transien)m(t)f
(sim)m(ulation)f(on)h(the)h(large)f(signal)f(net)m(w)m(ork)j(with)d
(only)h(the)g(bias)g(input)300 3033 y(signals.)50 b(The)33
b(transien)m(t)h(sim)m(ulation)e(m)m(ust)i(b)s(e)f(long)h(enough)f(for)
h(the)g(bias)f(net)m(w)m(ork)i(to)f(settle)h(to)g(a)300
3259 y(steady)30 b(state.)41 b(A)m(t)31 b(that)e(p)s(oin)m(t)g(the)g
(the)h(small-signal)c(parameters)k(in)e(eac)m(h)i(phase)f(can)h(b)s(e)f
(extracted)300 3485 y(from)h(the)g(bias)g(solution)f(of)h(that)h
(phase.)p eop
%%Page: 76 89
76 88 bop 3809 -200 a FH(76)300 721 y FM(Chapter)65 b(4)300
1095 y(Sim)-5 b(ulation)65 b(examples)300 1653 y FH(In)31
b(this)f(c)m(hapter,)i(three)f(examples)g(are)h(presen)m(ted)f(whic)m
(h)f(demonstrate)i(the)f(time-)g(and)g(frequency-)300
1878 y(domain)42 b(sim)m(ulation)e(under)i(the)h(instan)m(t)f(settling)
g(appro)m(ximation,)j(based)e(on)f(the)h(form)m(ulations)300
2104 y(discussed)25 b(in)g(Chapters)h(2)h(and)g(3.)39
b(The)27 b(\014rst)f(example)g(demonstrates)h(the)g(time-domain)f(sim)m
(ulation)300 2330 y(of)39 b(an)h(SI)e(in)m(tegrator)i(on)f(the)h
(transistor)e(lev)m(el.)68 b(The)38 b(second)i(example)f(demonstrates)g
(the)h(sim)m(u-)300 2556 y(lation)c(of)i(the)f(frequency)g(resp)s(onse)
f(of)i(an)f(SI)f(\014fth-order)h(elliptic)d(lo)m(w-pass)j(\014lter.)61
b(First)36 b(the)i(the)300 2782 y(frequency-domain)h(sim)m(ulation,)j
(under)c(the)j(small-signal)d(assumption,)k(is)d(used.)71
b(Then)39 b(the)i(the)300 3008 y(results)31 b(are)h(v)m(eri\014ed)f(b)m
(y)h(the)g(transien)m(t/FFT)g(metho)s(d.)45 b(The)31
b(sim)m(ulation)f(of)i(the)h(distortion)d(due)h(to)300
3233 y(non-linearities)e(is)i(also)h(p)s(erformed.)43
b(The)32 b(third)e(example)h(illustrates)f(the)i(transien)m(t)g(sim)m
(ulation)e(of)300 3459 y(an)f(SI)g(sigma-delta)h(mo)s(dulator)e(in)g
(whic)m(h)g(some)i(elemen)m(ts)g(are)g(sp)s(eci\014ed)d(as)j(ideal)e
(while)g(others)i(are)300 3685 y(at)h(the)g(transistor)e(lev)m(el.)536
3911 y(Wherev)m(er)i(p)s(ossible,)d(the)j(transien)m(t)f(sim)m
(ulations)e(are)j(p)s(erformed)e(in)g(b)s(oth)h(SWITCAP3)g(and)300
4137 y(HSPICE)d(in)f(order)i(to)h(compare)f(the)g(accuracy)h(and)f(the)
g(sp)s(eed)f(of)h(the)g(sim)m(ulation.)38 b(The)28 b(CPU)f(time)300
4363 y(quoted)g(in)f(the)i(examples)f(are)g(for)g(a)h(70)g(MHz)g(SUN)f
(SP)-8 b(AR)m(Cstation)27 b(5.)40 b(The)27 b(transistor)g(mo)s(del)f
(used)300 4588 y(in)j(b)s(oth)h(SWITCAP3)g(and)f(HSPICE)h(sim)m
(ulations)e(is)h(BSIM3)i(\(v)m(ersion)f(3\))h([60)r(].)p
eop
%%Page: 77 90
77 89 bop 3809 -200 a FH(77)300 99 y FL(4.1)135 b(Clo)t(c)l(k)46
b(w)l(a)l(v)l(eforms)h(and)d(switc)l(hes)300 414 y FH(The)30
b(clo)s(c)m(k)h(w)m(a)m(v)m(eforms)g(and)f(switc)m(hes)g(in)f(all)h
(three)g(examples)g(are)h(sim)m(ulated)e(as)i(follo)m(ws.)300
640 y FD(Switc)m(hes)p 300 653 395 4 v 300 866 a FH(There)d(are)h(t)m
(w)m(o)h(t)m(yp)s(es)e(of)h(switc)m(hes)f(used)g(in)f(the)h(sim)m
(ulation,)g(eac)m(h)h(designated)f(b)m(y)h(its)e(o)m(wn)i(sym)m(b)s
(ol.)300 1084 y Fo(Curr)-5 b(ent-c)g(onducting)38 b(CMOS)g(switch:)p
300 1115 1636 4 v 94 w FH(The)i(sym)m(b)s(ol,)h(and)e(the)h(circuit)e
(that)i(it)g(represen)m(ts,)527 1310 y(are)28 b(sho)m(wn)f(in)g(Fig.)g
(4.1.)41 b(It)28 b(is)f(the)g(w)m(ell)g(kno)m(wn)g(complemen)m(tary)h
(MOS)f(\(CMOS\))g(switc)m(h)g(con-)527 1536 y(\014guration.)38
b(The)25 b(NMOS)f(and)g(PMOS)h(transistors)f(are)h(mo)s(deled)e(b)m(y)i
(the)g(full)e(BSIM3)i(\(v)m(ersion)527 1762 y(3\))j(device)g(mo)s(del)e
(in)g(b)s(oth)h(SWITCAP3)g(and)g(HSPICE.)f(In)h(SWITCAP3,)h(the)f(con)m
(trol)h(signal)527 1987 y FG(\036)h FH(and)f(its)g(in)m(v)m(erse)g(are)
h(b)s(o)s(olean)e(v)-5 b(alues)28 b(and)g(m)m(ust)g(b)s(e)g(con)m(v)m
(erted)i(to)f(analog)g(w)m(a)m(v)m(eforms)h(b)m(y)f(a)527
2213 y(D)m(A)m(C)k(as)e(describ)s(ed)e(in)h(Sec.)i(2.1.)44
b(In)30 b(HSPICE,)g(the)i(con)m(trol)f(signals)f(are)i(analog)f(w)m(a)m
(v)m(eforms,)527 2439 y(therefore,)d(the)f(D)m(A)m(C)g(is)f(simply)e(a)
j(short)f(circuit.)38 b(Recall)26 b(from)g(Sec.)h(2.6.4.1,)j(that)d
(for)f(the)h(fast)527 2665 y(transien)m(t)33 b(analyses)g(in)e
(SWITCAP3,)i(when)f(the)i(transistor)e(is)g(implemen)m(ted)f(with)h
(its)g(com-)527 2891 y(plete)i(device)g(mo)s(del,)g(it)f(cannot)i(b)s
(e)e(used)g(for)h(holding)e(a)i(c)m(harge)i(on)d(the)i(capacitor.)52
b(Hence,)527 3116 y(the)33 b(CMOS)f(switc)m(h)f(of)i(Fig.)g(4.1)g(is)f
(de\014ned)f(as)i(the)g FC(curr)-5 b(ent-c)g(onducting)33
b FH(CMOS)f(switc)m(h)g(and)527 3342 y(is)e(only)f(used)h(in)f(the)h
(\\curren)m(t)h(path")g(as)f(will)e(b)s(e)i(sho)m(wn)f(in)g(the)i
(examples.)300 3601 y Fo(sampling)38 b(CMOS)f(switch:)p
300 3632 1154 4 v 95 w FH(The)20 b(sym)m(b)s(ol)f(and)g(the)i(corresp)s
(onding)d(circuit)h(are)i(sho)m(wn)e(in)g(Fig.)i(4.2.)527
3826 y(F)-8 b(or)29 b(HSPICE)d(sim)m(ulation,)g(it)h(is)g(the)h(same)f
(as)h(the)g(non-sampling)d(CMOS)i(switc)m(h)g(in)f(Fig.)i(4.1.)527
4052 y(F)-8 b(or)32 b(the)e(fast)h(transien)m(t)f(sim)m(ulation)f(in)g
(SWITCAP3,)h(b)s(oth)g(NMOS)g(and)g(PMOS)g(transistors)527
4278 y(are)35 b(replaced)e(b)m(y)h(an)g(\\MOS)g(switc)m(h")g(mo)s(del)f
(of)i(Fig.)f(2.19.)54 b(Recall)33 b(from)h(Sec.)h(2.6.4.1,)i(that)527
4504 y(the)30 b(\\MOS)g(switc)m(h")f(is)g(a)h(com)m(bination)f(of)g(an)
h(ideal)e(switc)m(h)h(and)g(the)h(capacitiv)m(e)h(branc)m(hes)e(of)527
4730 y(an)k(MOS)g(transistor)g(and)g(that)g(it)g(requires)f(b)s(oth)h
(an)g(analog)h(con)m(trol)f(signal)g(and)f(a)i(b)s(o)s(olean)527
4956 y(con)m(trol)39 b(signal.)63 b(The)38 b(capacitiv)m(e)h(branc)m
(hes)f(are)h(mo)s(deled)e(b)m(y)h(the)h(BSIM3)g(\(v)m(ersion)f(3\))h
(ca-)527 5181 y(pacitance)34 b(mo)s(del.)47 b(The)33
b FC(sampling)j(CMOS)e(switch)g FH(is)e(used)g(when)g(it)h(is)f
(necessary)h(to)h(hold)e(a)527 5407 y(c)m(harge)g(on)e(a)h(capacitor.)
41 b(\(See)31 b(Sec.)g(2.6.4.1\))p eop
%%Page: 78 91
78 90 bop 3809 -200 a FH(78)579 7 y
 24010343 8288501 3025960 42166108 27036303 50454609 startTexFig
 579 7 a
%%BeginDocument: figs/cmos_switch.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      542 128 moveto
      580 128 lineto
      580 110 lineto
      619 110 lineto
      619 128 lineto
      656 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      580 95 moveto
      619 95 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      600 95 moveto
      600 77 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      543 184 moveto
      519 184 lineto
      519 128 lineto
      543 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      519 168 moveto
      471 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      655 184 moveto
      679 184 lineto
      679 128 lineto
      655 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      719 168 moveto
      679 168 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      408 48 moveto 472 48 lineto 472 88 lineto 408 88 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      440 75 moveto (DAC) tgifcentertext show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      408 224 moveto 472 224 lineto 472 264 lineto 408 264 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      440 251 moveto (DAC) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      472 248 moveto
      600 248 lineto
      600 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      472 64 moveto
      600 64 lineto
      600 80 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      343 72 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      351 256 moveto (f) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      368 64 moveto
      0 40 atan dup cos 10 mul 408 exch sub
      exch sin 10 mul 64 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      408 64 10 4 40 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      368 248 moveto
      0 40 atan dup cos 10 mul 408 exch sub
      exch sin 10 mul 248 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      408 248 10 4 40 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      476 154 moveto (1) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 476 148 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      716 154 moveto (2) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 716 148 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      343 231 moveto
      359 231 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      592 112 moveto
      24 0 atan dup cos 10 mul exch sin 10 mul rmoveto
      592 136 lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      592 112 10 4 0 -24 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      576 136 moveto
      608 136 lineto
      600 144 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      592 136 moveto
      584 144 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      576 136 moveto
      568 144 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      608 184 moveto
      608 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      624 160 moveto
      592 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      542 184 moveto
      580 184 lineto
      580 202 lineto
      619 202 lineto
      619 184 lineto
      656 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      580 217 moveto
      619 217 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      600 217 moveto
      600 235 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      608 200 moveto
      -16 0 atan dup cos 10 mul 608 exch sub
      exch sin 10 mul 184 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      608 184 10 4 0 -16 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      108 242 moveto (2) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 108 236 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      108 74 moveto (1) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 108 68 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 715 168 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 715 168 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 475 168 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 475 168 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      87 144 moveto (f) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      116 124 moveto
      116 188 lineto
      132 212 lineto
      148 188 lineto
      148 124 lineto
      132 100 lineto
      116 124 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      132 68 moveto
      132 100 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      132 212 moveto
      132 244 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 132 68 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 132 68 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      92 156 moveto
      116 156 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 132 244 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 132 244 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 152 moveto
      272 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 160 moveto
      272 160 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      260 144 moveto
      280 156 lineto
      260 168 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Nov 16 16:02:39 1998
%%EndDocument

 endTexFig
 1268 1253 a FH(Figure)30 b(4.1:)42 b(Non-sampling)28
b(CMOS)i(switc)m(h.)575 1879 y
 24076125 9012101 592035 42626580 24668160 51638681 startTexFig
 575 1879 a
%%BeginDocument: figs/cmos_switch2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      487 168 moveto
      455 168 lineto
      455 88 lineto
      487 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      455 128 moveto
      407 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      583 168 moveto
      615 168 lineto
      615 88 lineto
      583 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      655 128 moveto
      615 128 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      344 32 moveto 408 32 lineto 408 72 lineto 344 72 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      376 59 moveto (DAC) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      408 224 moveto
      512 224 lineto
      512 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      408 48 moveto
      512 48 lineto
      512 64 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      271 56 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      279 232 moveto (f) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      304 48 moveto
      0 40 atan dup cos 10 mul 344 exch sub
      exch sin 10 mul 48 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      344 48 10 4 40 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      304 224 moveto
      0 40 atan dup cos 10 mul 344 exch sub
      exch sin 10 mul 224 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      344 224 10 4 40 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      412 114 moveto (1) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 412 108 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      652 114 moveto (2) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 652 108 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      271 207 moveto
      287 207 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      36 218 moveto (2) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 36 212 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      44 66 moveto (1) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 44 60 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 651 128 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 651 128 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 411 128 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 411 128 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      20 136 moveto (f) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      52 116 moveto
      52 180 lineto
      68 180 lineto
      84 180 lineto
      84 116 lineto
      68 92 lineto
      52 116 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      68 60 moveto
      68 92 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      68 180 moveto
      68 212 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 68 60 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 68 60 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      28 148 moveto
      52 148 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 68 212 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 68 212 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 120 moveto
      208 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 128 moveto
      208 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      196 112 moveto
      216 124 lineto
      196 136 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      344 200 moveto 408 200 lineto 408 240 lineto 344 240 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      376 227 moveto (DAC) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      536 80 moveto (NMOS) tgifcentertext show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      488 64 moveto 584 64 lineto 584 128 lineto 488 128 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      488 144 moveto 584 144 lineto 584 208 lineto 488 208 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      552 40 moveto
      552 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      552 208 moveto
      552 232 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      559 40 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      559 240 moveto (f) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      35 142 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      288 238 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      573 246 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      573 46 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      288 62 moveto (s) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      536 160 moveto (PMOS) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      536 115 moveto (Fig. 2.19  ) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      536 96 moveto (switch) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      536 195 moveto (Fig.  2.19) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      536 176 moveto (switch) tgifcentertext show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Nov 20 17:02:31 1998
%%EndDocument

 endTexFig
 1358 3217 a FH(Figure)g(4.2:)42 b(Sampling)28 b(CMOS)h(switc)m(h.)742
3843 y
 21444854 11643372 394690 35456368 21839544 47099740 startTexFig
 742 3843 a
%%BeginDocument: figs/int_clk.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   newpath
      56 216 moveto
      56 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      56 272 lineto
   stroke
grestore
gsave
   newpath
      56 216 8 3 0 -56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 272 moveto
      0 320 atan dup cos 8 mul 376 exch sub
      exch sin 8 mul 272 exch sub lineto
   stroke
grestore
gsave
   newpath
      376 272 8 3 320 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 240 moveto
      184 240 lineto
      184 272 lineto
      312 272 lineto
      312 240 lineto
      376 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      56 272 moveto
      64 240 lineto
      160 240 lineto
      168 272 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      312 272 moveto
      320 240 lineto
      368 240 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 136 moveto
      56 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      56 192 lineto
   stroke
grestore
gsave
   newpath
      56 136 8 3 0 -56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 192 moveto
      0 320 atan dup cos 8 mul 376 exch sub
      exch sin 8 mul 192 exch sub lineto
   stroke
grestore
gsave
   newpath
      376 192 8 3 320 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 160 moveto
      184 160 lineto
      184 192 lineto
      312 192 lineto
      312 160 lineto
      376 160 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      56 192 moveto
      64 160 lineto
      176 160 lineto
      184 192 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      312 192 moveto
      320 160 lineto
      368 160 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      15 176 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      30 186 moveto (1) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      15 256 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      30 266 moveto (1s) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 360 moveto
      56 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      56 416 lineto
   stroke
grestore
gsave
   newpath
      56 360 8 3 0 -56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 416 moveto
      0 320 atan dup cos 8 mul 376 exch sub
      exch sin 8 mul 416 exch sub lineto
   stroke
grestore
gsave
   newpath
      376 416 8 3 320 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      184 416 moveto
      192 384 lineto
      288 384 lineto
      296 416 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 280 moveto
      56 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      56 336 lineto
   stroke
grestore
gsave
   newpath
      56 280 8 3 0 -56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 336 moveto
      0 320 atan dup cos 8 mul 376 exch sub
      exch sin 8 mul 336 exch sub lineto
   stroke
grestore
gsave
   newpath
      376 336 8 3 320 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      184 336 moveto
      192 304 lineto
      304 304 lineto
      312 336 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      15 320 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      30 330 moveto (2) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      15 400 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      30 410 moveto (2s) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 160 moveto
      56 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 240 moveto
      56 272 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 304 moveto
      56 336 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 384 moveto
      56 416 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 336 moveto
      184 336 lineto
      184 304 lineto
      312 304 lineto
      312 336 lineto
      368 336 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 416 moveto
      184 416 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      184 416 moveto
      184 384 lineto
      312 384 lineto
      312 416 lineto
      368 416 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      488 218 moveto (SWITCAP3) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      488 282 moveto (HSPICE) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      440 208 moveto
      480 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      440 272 moveto
      480 272 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      304 442 moveto (T) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      176 442 moveto (T/2) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      488 242 moveto (\(boolean\)) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      488 306 moveto (\(analog\)) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Oct 28 11:49:05 1998
%%EndDocument

 endTexFig
 1499 5514 a FH(Figure)h(4.3:)42 b(Clo)s(c)m(k)30 b(w)m(a)m(v)m
(eforms.)p eop
%%Page: 79 92
79 91 bop 3809 -200 a FH(79)300 99 y FD(Clo)s(c)m(ks)p
300 112 300 4 v 536 324 a FH(The)30 b(clo)s(c)m(k)h(w)m(a)m(v)m(eforms)
h(are)f(sho)m(wn)f(in)f(Fig.)i(4.3.)42 b(The)30 b(solid)f(lines)f
(represen)m(t)j(b)s(o)s(olean)e(signals)300 550 y(in)j(SWITCAP3,)h
(while)e(the)i(dashed)f(lines)g(represen)m(t)h(the)g(analog)g(signals)f
(in)g(HSPICE,)g(whic)m(h)g(are)300 776 y(implemen)m(ted)j(b)m(y)i(a)g
(v)m(oltage)i(source)e(with)f(a)h(\\PULSE")g(w)m(a)m(v)m(eform)h([59)r
(].)60 b(The)36 b(clo)s(c)m(ks)i FG(\036)3547 790 y FA(1)3623
776 y FH(and)e FG(\036)3860 790 y FA(2)300 1002 y FH(con)m(trol)d(the)g
(curren)m(t-conducting)g(CMOS)f(switc)m(hes,)h(while)e(the)j(clo)s(c)m
(ks)f FG(\036)2961 1016 y FA(1)p FB(s)3066 1002 y FH(and)f
FG(\036)3299 1016 y FA(2)p FB(s)3404 1002 y FH(con)m(trol)i(sam-)300
1228 y(pling)g(CMOS)i(switc)m(hes.)59 b(Note)38 b(that,)h(for)d(the)h
(HSPICE)f(sim)m(ulation,)g(the)h(analog)g(w)m(a)m(v)m(eforms)h
FG(\036)3828 1242 y FA(1)p FB(s)300 1453 y FH(and)c FG(\036)535
1467 y FA(2)p FB(s)641 1453 y FH(fall)f(earlier)g(than)h
FG(\036)1351 1467 y FA(1)1424 1453 y FH(and)g FG(\036)1659
1467 y FA(2)1698 1453 y FH(,)i(resp)s(ectiv)m(ely)-8
b(.)52 b(This)32 b(is)h(done)h(to)h(prev)m(en)m(t)g(the)f(c)m(harge)h
(from)300 1679 y(going)k(through)g(partially)e(turned)h(o\013)i
(sampling)d(switc)m(hes)i(while)f(the)h(top)s(ology)h(is)e(c)m
(hanging.)68 b(In)300 1905 y(SWITCAP3,)32 b(the)g(switc)m(hing)f(is)f
(instan)m(taneous,)j(therefore)f FG(\036)2534 1919 y
FA(1)p FB(s)2638 1905 y FH(and)f FG(\036)2870 1919 y
FA(2)p FB(s)2974 1905 y FH(are)i(the)f(same)g(as)g FG(\036)3682
1919 y FA(1)3754 1905 y FH(and)300 2131 y FG(\036)354
2145 y FA(2)394 2131 y FH(,)e(resp)s(ectiv)m(ely)-8 b(.)300
2417 y FL(4.2)135 b(Time-domain)46 b(sim)l(ulation)h(of)e(SI)f(in)l
(tegrator)300 2733 y FH(In)32 b(this)f(example,)h(the)h(fast)g
(transien)m(t)f(analysis)e(of)j(Sec.)g(2.7)g(is)e(demonstrated)i(and)e
(the)i(sim)m(ulation)300 2959 y(results)k(are)h(compared)g(to)g(the)g
(con)m(tin)m(uous-time)g(sim)m(ulation)e(p)s(erformed)g(in)g(HSPICE)h
([59)q(].)63 b(The)300 3185 y(simple)21 b(SI)h(in)m(tegrator)h([8)q(])g
(sho)m(wn)f(in)f(Fig.)i(4.4)h(will)c(b)s(e)i(used.)38
b(The)22 b(switc)m(hes)g(and)h(the)f(clo)s(c)m(k)i(w)m(a)m(v)m(eforms)
300 3411 y(used)42 b(in)f(the)i(sim)m(ulation)e(are)j(as)f(describ)s
(ed)d(in)i(Sec.)h(4.1.)79 b(Note,)48 b(from)42 b(Fig.)h(4.4,)k(that)d
FG(\036)3639 3425 y FA(1)p FB(s)3754 3411 y FH(and)300
3636 y FG(\036)354 3650 y FA(2)p FB(s)460 3636 y FH(con)m(trol)34
b(the)f(sampling)f(CMOS)h(switc)m(hes,)h(while)e FG(\036)2301
3650 y FA(1)2374 3636 y FH(and)h FG(\036)2608 3650 y
FA(2)2681 3636 y FH(con)m(trol)h(the)f(curren)m(t-conducting)300
3862 y(CMOS)j(switc)m(hes.)58 b(The)36 b(devices)g(that)i(w)m(ere)e
(sim)m(ulated)g(as)g(ideal)g(elemen)m(ts)h(in)e(b)s(oth)g(SWITCAP3)300
4088 y(and)g(HSPICE)f(are:)51 b(curren)m(t)35 b(sources)h
FG(I)1736 4102 y FB(in)1842 4088 y FH(and)e FG(I)2063
4103 y FB(b)2098 4088 y FH(,)j(the)e(opamp)g(\(as)h(a)g(V)m(CVS\),)g
(output)f(resistor)f FG(R)300 4314 y FH(and)c(the)g(capacitors)h
FG(C)1128 4328 y FA(1)1198 4314 y FH(and)f FG(C)1440
4328 y FA(2)1479 4314 y FH(.)536 4540 y(A)j(constan)m(t)h(curren)m(t)f
FG(I)1365 4554 y FB(in)1461 4540 y FH(=)25 b(10)31 b
FG(\026)p FH(A)i(w)m(as)g(applied)d(to)k(the)f(in)m(tegrator)g(of)g
(Fig.)g(4.4.)49 b(The)33 b(clo)s(c)m(k)300 4766 y(p)s(erio)s(d)g(w)m
(as)i(set)g(to)h FG(T)i FH(=)25 b(0)p FG(:)p FH(5)31
b FG(\026)p FH(s.)54 b(A)35 b(transien)m(t)f(sim)m(ulation)f(w)m(as)i
(p)s(erformed)f(in)f(b)s(oth)h(SWITCAP3)300 4991 y(and)h(HSPICE)f(from)
g(time)h(0)h(to)f(10)h FG(\026)p FH(s.)55 b(F)-8 b(or)36
b(HSPICE,)e(the)h(transien)m(t)g(sim)m(ulation)f(time)g(step)i(w)m(as)
300 5217 y(5)31 b(ns.)p eop
%%Page: 80 93
80 92 bop 3809 -200 a FH(80)708 7 y
 21971108 18879365 1249853 33022443 23220961 51901808 startTexFig
 708 7 a
%%BeginDocument: figs/int_si.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      343 338 moveto (f) show
   grestore

% OVAL
newpath 264 96 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 264 96 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      96 350 moveto (W=3e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      96 366 moveto (L=1.5e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      256 350 moveto (W=3e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      256 366 moveto (L=1.5e-6) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      80 416 moveto
      80 448 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 448 moveto
      104 448 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 464 moveto
      104 464 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      80 464 moveto
      80 496 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 416 moveto
      328 448 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      304 448 moveto
      352 448 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      304 464 moveto
      352 464 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 464 moveto
      328 496 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      80 416 moveto
      80 400 lineto
      112 400 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 464 moveto
      160 421 lineto
      143 421 lineto
      143 378 lineto
      160 378 lineto
      160 336 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 421 moveto
      128 378 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 400 moveto
      111 400 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      159 440 moveto
      175 440 lineto
      175 400 lineto
      0 -32 atan dup cos 10 mul 143 exch sub
      exch sin 10 mul 400 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      143 400 10 4 -32 0 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 160 439 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 160 439 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      248 464 moveto
      248 421 lineto
      265 421 lineto
      265 378 lineto
      248 378 lineto
      248 336 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      280 421 moveto
      280 378 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      280 400 moveto
      297 400 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      249 440 moveto
      233 440 lineto
      233 400 lineto
      0 32 atan dup cos 10 mul 265 exch sub
      exch sin 10 mul 400 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      265 400 10 4 32 0 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 248 439 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 248 439 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 416 moveto
      328 400 lineto
      296 400 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      88 486 moveto (C1=2e-12) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      336 486 moveto (C2=2e-12) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 352 moveto
      72 352 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      72 344 moveto
      72 368 lineto
      88 368 lineto
      88 344 lineto
      80 328 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      80 400 moveto
      80 368 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      80 328 moveto
      80 296 lineto
      160 296 lineto
      160 336 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      352 352 moveto
      336 352 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      336 344 moveto
      336 368 lineto
      320 368 lineto
      320 344 lineto
      328 328 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 400 moveto
      328 368 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 328 moveto
      328 296 lineto
      248 296 lineto
      248 336 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      80 496 moveto
      328 496 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      248 464 moveto
      248 496 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 464 moveto
      160 496 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 296 moveto
      248 296 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 296 moveto
      200 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 160 moveto
      200 232 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 228 moveto
      84 260 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      68 260 moveto
      100 260 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      68 260 moveto
      60 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 260 moveto
      76 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      100 260 moveto
      92 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 120 moveto
      84 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      68 80 moveto
      100 64 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      104 130 moveto (Iin=10e-6) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      63 211 moveto
      75 211 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 156 moveto
      128 168 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      240 158 moveto (Vbias) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      248 96 moveto
      280 96 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 328 176 16 16 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 168 moveto
      16 0 atan dup cos 10 mul 328 exch sub
      exch sin 10 mul 184 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      328 184 10 4 0 16 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      344 158 moveto (Ib=100e-6) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 192 moveto
      328 216 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      312 216 moveto
      344 216 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      312 216 moveto
      304 224 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 216 moveto
      320 224 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      344 216 moveto
      336 224 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      456 464 moveto
      456 421 lineto
      439 421 lineto
      439 378 lineto
      456 378 lineto
      456 336 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      424 421 moveto
      424 378 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      424 400 moveto
      407 400 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      455 440 moveto
      471 440 lineto
      471 400 lineto
      0 -32 atan dup cos 10 mul 439 exch sub
      exch sin 10 mul 400 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      439 400 10 4 -32 0 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 456 439 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 456 439 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 400 moveto
      408 400 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 496 moveto
      456 496 lineto
      456 464 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 32 moveto
      328 75 lineto
      311 75 lineto
      311 118 lineto
      328 118 lineto
      328 160 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 75 moveto
      296 118 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 96 moveto
      279 96 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 328 57 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 328 57 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      311 86 moveto
      0 16 atan dup cos 10 mul 327 exch sub
      exch sin 10 mul 86 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      327 86 10 4 16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      327 86 moveto
      343 86 lineto
      343 56 lineto
      327 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 32 moveto
      200 75 lineto
      217 75 lineto
      217 118 lineto
      200 118 lineto
      200 160 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 75 moveto
      232 118 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 96 moveto
      249 96 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 200 57 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 200 57 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      217 86 moveto
      0 -16 atan dup cos 10 mul 201 exch sub
      exch sin 10 mul 86 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      201 86 10 4 -16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      201 86 moveto
      185 86 lineto
      185 56 lineto
      201 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      456 32 moveto
      456 75 lineto
      439 75 lineto
      439 118 lineto
      456 118 lineto
      456 160 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      424 75 moveto
      424 118 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      424 96 moveto
      407 96 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 456 57 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 456 57 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      439 86 moveto
      0 16 atan dup cos 10 mul 455 exch sub
      exch sin 10 mul 86 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      455 86 10 4 16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      455 86 moveto
      471 86 lineto
      471 56 lineto
      455 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 96 moveto
      416 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 32 moveto
      456 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      456 160 moveto
      456 336 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      120 168 moveto
      136 168 lineto
      144 176 lineto
      136 184 lineto
      120 184 lineto
      112 176 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      92 204 moveto
      92 220 lineto
      84 228 lineto
      76 220 lineto
      76 204 lineto
      84 196 lineto
   closepath stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 84 136 16 16 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 128 moveto
      16 0 atan dup cos 10 mul 84 exch sub
      exch sin 10 mul 144 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      84 144 10 4 0 16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 152 moveto
      84 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 176 moveto
      112 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 176 moveto
      84 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 176 moveto
      200 176 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      536 208 moveto
      600 240 lineto
      536 272 lineto
   closepath stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      544 244 moveto (1e+4) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      544 260 moveto (+) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      544 220 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      456 224 moveto
      536 224 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      536 256 moveto
      512 256 lineto
      512 280 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      496 280 moveto
      528 280 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      496 302 moveto (Vbias) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      520 224 moveto
      520 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      624 168 moveto
      624 240 lineto
      600 240 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      552 194 moveto (R=1e+5) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      552 130 moveto (Iout) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      600 167 moveto
      625 167 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      544 167 moveto
      519 167 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      544 167 moveto
      554 167 lineto
      557 174 lineto
      562 160 lineto
      565 174 lineto
      570 160 lineto
      575 174 lineto
      579 160 lineto
      584 174 lineto
      588 160 lineto
      592 167 lineto
      600 167 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      544 144 moveto
      0 48 atan dup cos 10 mul 592 exch sub
      exch sin 10 mul 144 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      592 144 10 4 48 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      484 24 moveto
      516 8 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      456 32 moveto
      504 32 lineto
      504 16 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      456 496 moveto
      512 496 lineto
      512 504 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      496 504 moveto
      528 504 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      496 504 moveto
      488 512 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 504 moveto
      504 512 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      528 504 moveto
      520 512 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 456 224 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 456 224 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 520 224 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 520 224 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 200 296 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 200 296 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 248 296 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 248 296 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 160 296 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 160 296 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 200 176 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 200 176 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 400 96 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 400 96 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 84 175 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 84 175 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      355 342 moveto (2s) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      39 338 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      51 342 moveto (1s) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      39 202 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      51 206 moveto (1) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      135 162 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      147 166 moveto (2) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      472 374 moveto (W=3e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      472 390 moveto (L=1.5e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      120 46 moveto (W=6e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      120 62 moveto (L=1.5e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      384 54 moveto (W=6e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      384 70 moveto (L=1.5e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      248 54 moveto (W=12e-6) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      248 70 moveto (L=1.5e-6) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      264 96 moveto
      264 136 lineto
      328 136 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 264 136 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 264 136 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 328 136 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 328 136 4 4 tgifellipse stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Nov 16 15:29:24 1998
%%EndDocument

 endTexFig
 1449 2595 a FH(Figure)30 b(4.4:)41 b(Simple)28 b(SI)i(in)m(tegrator)
536 2870 y(The)38 b(sim)m(ulation)f(results)g(for)i(the)f(output)g
(curren)m(t)h FG(I)2462 2884 y FB(out)2566 2870 y FH(,)i(for)d(the)h
(\014rst)f(5)h FG(\026)p FH(s,)h(are)f(sho)m(wn)f(in)300
3096 y(Fig.)26 b(4.5.)40 b(Note,)29 b(ho)m(w)c(HSPICE)g(computes)h(the)
g(full)d(w)m(a)m(v)m(eform,)29 b(while)24 b(SWITCAP3)h(only)g(computes)
300 3321 y(the)43 b(settling)e(p)s(oin)m(ts)h(at)h(the)g(end)e(of)i
(eac)m(h)h(switc)m(hing)d(in)m(terv)-5 b(al.)76 b(Note,)47
b(that)c(since)f(the)g(input)f(is)300 3547 y(constan)m(t,)e(the)d
(settling)f(p)s(oin)m(t,)i(under)d(the)i(instan)m(t)g(settling)f(appro)
m(ximation,)i(represen)m(ts)e(state)j(of)300 3773 y(the)e(net)m(w)m
(ork)h(for)f(the)g(en)m(tire)g(switc)m(hing)f(in)m(terv)-5
b(al.)56 b(The)36 b(CPU)g(times)f(required)f(for)i(the)g(transien)m(ts)
300 3999 y(sim)m(ulations)29 b(w)m(ere)j(60)g(s)f(for)g(HSPICE)f(and)g
(6)i(s)f(for)g(SWITCAP3.)43 b(The)30 b(options)h(used)f(for)h(HSPICE)
300 4225 y(sim)m(ulation)d(are)j(listed)e(in)g(Fig.)i(4.6.)536
4451 y(Ev)m(en)36 b(though)f(the)h(sim)m(ulation)e(in)g(SWITCAP3)h(is)g
(faster,)i(it)f(do)s(es)f(not)h(mak)m(e)g(sense)g(to)g(use)300
4676 y(it)30 b(for)h(a)h(short)e(transien)m(t)h(sim)m(ulation)e(of)i(a)
g(small)f(circuit)f(suc)m(h)i(as)g(the)g(in)m(tegrator)h(of)f(this)f
(example.)300 4902 y(HSPICE)42 b(pro)m(vides)h(more)g(detail)g(in)f(a)i
(reasonable)f(time.)80 b(Ho)m(w)m(ev)m(er,)49 b(as)44
b(will)d(b)s(e)i(sho)m(wn)g(in)f(the)300 5128 y(next)36
b(example,)g(when)f(sev)m(eral)h(in)m(tegrators)g(are)g(com)m(bined)f
(to)h(mak)m(e)g(a)g(\014lter,)g(and)f(long)g(transien)m(t)300
5354 y(sim)m(ulations)28 b(are)j(required,)e(the)h(time)h(sa)m(ving)f
(is)f(signi\014can)m(t.)p eop
%%Page: 81 94
81 93 bop 3809 -200 a FH(81)600 435 y
 23681433 19181958 3289088 3289088 17497948 14866677 startTexFig
 600 435 a
%%BeginDocument: figs/iout.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
840 3089 M
3249 0 V
840 351 M
0 2966 V
LTb
840 3089 M
63 0 V
3186 0 R
-63 0 V
-3270 0 R
(0) Rshow
840 2633 M
63 0 V
3186 0 R
-63 0 V
-3270 0 R
(-10) Rshow
840 2176 M
63 0 V
3186 0 R
-63 0 V
-3270 0 R
(-20) Rshow
840 1720 M
63 0 V
3186 0 R
-63 0 V
-3270 0 R
(-30) Rshow
840 1264 M
63 0 V
3186 0 R
-63 0 V
-3270 0 R
(-40) Rshow
840 807 M
63 0 V
3186 0 R
-63 0 V
756 807 M
(-50) Rshow
1652 351 M
0 63 V
0 2903 R
0 -63 V
0 -3043 R
(1.25) Cshow
2465 351 M
0 63 V
0 2903 R
0 -63 V
0 -3043 R
(2.5) Cshow
3277 351 M
0 63 V
0 2903 R
0 -63 V
0 -3043 R
(3.75) Cshow
4089 351 M
0 63 V
0 2903 R
0 -63 V
0 -3043 R
(5.0) Cshow
840 351 M
3249 0 V
0 2966 V
-3249 0 V
840 351 L
140 1834 M
currentpoint gsave translate 90 rotate 0 0 M
(uA) Cshow
grestore
2464 -69 M
(usec) Cshow
2464 3457 M
(Iout) Cshow
LT0
3606 3114 M
('HSPICE') Rshow
3690 3114 M
252 0 V
840 3059 M
3 2 V
3 -2 V
4 0 V
3 0 V
3 1 V
3 0 V
4 -1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 1 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 1 V
4 128 V
3 -116 V
3 -116 V
3 -101 V
4 -66 V
3 -44 V
3 -44 V
3 -44 V
4 -43 V
3 -22 V
3 -7 V
3 -6 V
4 -3 V
3 -4 V
3 -3 V
3 -3 V
4 -3 V
3 -1 V
3 0 V
3 -1 V
4 0 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 -3 V
3 13 V
3 -15 V
3 1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 1 V
3 -1 V
4 186 V
3 -100 V
3 -113 V
3 -105 V
4 -50 V
3 -45 V
3 -45 V
3 -45 V
4 -45 V
3 -10 V
3 -7 V
3 -4 V
4 -3 V
3 -3 V
3 -4 V
3 -3 V
4 -2 V
3 0 V
3 -1 V
3 0 V
4 0 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 -4 V
3 13 V
3 -13 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 1 V
3 -1 V
3 238 V
4 -90 V
3 -112 V
3 -84 V
3 -63 V
4 -46 V
3 -45 V
3 -42 V
3 -13 V
4 -14 V
3 -13 V
3 -14 V
3 -12 V
4 -3 V
3 -1 V
3 -1 V
3 -1 V
4 -1 V
3 -1 V
3 -1 V
3 0 V
4 0 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 -5 V
4 13 V
3 -11 V
3 -2 V
3 1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 -1 V
3 1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 2 V
3 -2 V
3 282 V
4 -83 V
3 -107 V
3 -86 V
3 -48 V
4 -49 V
3 -49 V
3 -49 V
3 -35 V
4 -7 V
3 -6 V
3 -3 V
3 -3 V
4 -3 V
3 -3 V
3 -3 V
3 -1 V
4 -1 V
3 0 V
3 0 V
3 -1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
currentpoint stroke M
3 0 V
3 -6 V
4 14 V
3 -10 V
3 -3 V
3 0 V
4 1 V
3 0 V
3 0 V
3 0 V
4 -1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 -1 V
3 0 V
4 0 V
3 0 V
3 0 V
3 1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 -1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 -1 V
3 0 V
4 0 V
3 0 V
3 1 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 -1 V
3 2 V
3 -1 V
3 315 V
4 -75 V
3 -105 V
3 -83 V
3 -48 V
4 -48 V
3 -48 V
3 -47 V
3 -35 V
4 -7 V
3 -5 V
3 -3 V
3 -3 V
4 -3 V
3 -3 V
3 -3 V
3 0 V
4 -1 V
3 0 V
3 0 V
3 -1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 -6 V
4 13 V
3 -9 V
3 -4 V
3 1 V
3 1 V
4 0 V
3 0 V
3 0 V
3 -1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 1 V
3 0 V
4 0 V
3 0 V
3 0 V
3 -1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 1 V
3 0 V
4 0 V
3 0 V
3 0 V
3 -1 V
4 2 V
3 -1 V
3 341 V
3 -68 V
4 -102 V
3 -82 V
3 -47 V
3 -47 V
4 -47 V
3 -47 V
3 -35 V
3 -6 V
4 -5 V
3 -3 V
3 -2 V
3 -3 V
4 -3 V
3 -3 V
3 0 V
3 -1 V
4 0 V
3 0 V
3 -1 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 -6 V
3 13 V
4 -8 V
3 -4 V
3 1 V
3 0 V
4 0 V
3 0 V
3 -1 V
3 0 V
4 1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 -1 V
3 0 V
3 1 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 1 V
3 -1 V
3 359 V
3 -61 V
4 -102 V
3 -66 V
3 -56 V
3 -56 V
4 -57 V
3 -43 V
3 -10 V
3 -9 V
4 -5 V
3 -4 V
3 -5 V
3 -5 V
4 -3 V
3 -1 V
3 -1 V
3 0 V
4 -1 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 -7 V
3 13 V
4 -7 V
3 -3 V
3 0 V
3 -1 V
4 0 V
3 0 V
3 0 V
3 1 V
4 0 V
3 0 V
3 0 V
3 -1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 1 V
3 0 V
3 0 V
4 0 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 1 V
4 0 V
3 0 V
3 0 V
3 -1 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 1 V
3 0 V
3 0 V
4 0 V
3 -1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 1 V
4 1 V
3 -1 V
3 379 V
3 -58 V
3 -99 V
4 -80 V
3 -46 V
3 -46 V
3 -45 V
4 -46 V
3 -34 V
3 -5 V
3 -5 V
4 -3 V
3 -2 V
3 -3 V
3 -2 V
4 -3 V
3 -1 V
3 0 V
3 0 V
4 -1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
currentpoint stroke M
4 0 V
3 -7 V
3 13 V
3 -6 V
4 -4 V
3 0 V
3 -1 V
3 0 V
4 0 V
3 1 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 -1 V
3 0 V
3 1 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 1 V
4 -1 V
3 390 V
3 -53 V
3 -97 V
4 -78 V
3 -46 V
3 -46 V
3 -46 V
4 -45 V
3 -33 V
3 -5 V
3 -5 V
4 -2 V
3 -3 V
3 -2 V
3 -3 V
4 -2 V
3 -1 V
3 0 V
3 0 V
4 -1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 -7 V
3 13 V
3 -6 V
4 -5 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 1 V
4 -1 V
3 401 V
3 -50 V
3 -96 V
4 -77 V
3 -46 V
3 -45 V
3 -46 V
4 -45 V
3 -32 V
3 -5 V
3 -5 V
4 -2 V
3 -3 V
3 -2 V
3 -3 V
4 -2 V
3 -1 V
3 0 V
3 0 V
4 -1 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
4 0 V
3 -7 V
3 13 V
3606 2974 M
('SWITCAP3') Rshow
3774 2974 D
840 3059 D
1002 3059 D
1165 2559 D
1327 2555 D
1490 2155 D
1652 2151 D
1815 1832 D
1977 1827 D
2140 1572 D
2302 1568 D
2465 1365 D
2627 1361 D
2789 1201 D
2952 1196 D
3114 1070 D
3277 1065 D
3439 966 D
3602 961 D
3764 884 D
3927 879 D
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 878 3061 a FH(Figure)30 b(4.5:)41 b(T)-8 b(ransien)m(t)30
b(resp)s(onse)g(of)g(the)h(SI)e(in)m(tegrator)j(in)d(Fig.)h(4.4)p
350 3990 1370 4 v 348 4103 4 113 v 639 4069 a(HSPICE)f(OPTIONS)p
1718 4103 V 350 4106 1370 4 v 350 4123 V 348 4236 4 113
v 400 4202 a(absv=5e-8)p 883 4236 V 123 w(gmin)g(=)h(1e-12)p
1718 4236 V 348 4349 V 400 4315 a(absi=1e-12)p 883 4349
V 100 w(gmindc)f(=)h(1e-12)p 1718 4349 V 348 4462 V 400
4428 a(relv=1e-10)p 883 4462 V 108 w(gramp)g(=)g(6)p
1718 4462 V 348 4575 V 400 4541 a(reli=1e-12)p 883 4575
V 130 w(dcon=2)p 1718 4575 V 348 4688 V 400 4654 a(itl1=10000)p
883 4688 V 106 w(limpts=500000)p 1718 4688 V 350 4691
1370 4 v 348 4804 4 113 v 400 4770 a(.tran)g Fn(STEP)f
FH(=)i(5e-9)g Fn(STOP)p FH(=10e-6)p 1718 4804 V 350 4807
1370 4 v 2149 4103 1024 4 v 2147 4216 4 113 v 2426 4182
a(CPU)f(TIME)p 3171 4216 V 2149 4219 1024 4 v 2149 4236
V 2147 4349 4 113 v 2199 4315 a(SWITCAP3)p 2731 4349
V 99 w(HSPICE)p 3171 4349 V 2149 4352 1024 4 v 2147 4465
4 113 v 2731 4465 V 3171 4465 V 2147 4578 V 2385 4544
a(6)h(s)p 2731 4578 V 377 w(60)g(s)p 3171 4578 V 2147
4691 V 2731 4691 V 3171 4691 V 2149 4694 1024 4 v 976
4962 a(Figure)e(4.6:)42 b(HSPICE)29 b(options)h(and)g(CPU)g(time)g
(comparison)p eop
%%Page: 82 95
82 94 bop 3809 -200 a FH(82)536 99 y(A)23 b(sim)m(ulation)d(as)j(the)f
(one)h(in)e(this)g(example)h(is)f(useful)g(for)h(v)m(eri\014cation)g
(of)h(the)f(settling)g(assump-)300 324 y(tion.)40 b(Before)32
b(using)d(SWITCAP3)g(to)j(p)s(erform)d(a)h(long)g(transien)m(t)g(sim)m
(ulation)f(of)h(a)h(large)g(system,)f(it)300 550 y(is)g(a)h(go)s(o)s(d)
g(idea)f(to)i(p)s(erform)d(short)i(transien)m(t)f(sim)m(ulations)f(in)h
(b)s(oth)g(SWITCAP3)g(and)g(HSPICE)g(to)300 776 y(mak)m(e)36
b(sure)e(that)i(eac)m(h)g(comp)s(onen)m(t)g(of)f(the)g(system)h(or)f
(ev)m(en)g(the)h(full)c(system)k(settles)f(within)e(eac)m(h)300
1002 y(switc)m(hing)c(in)m(terv)-5 b(al.)300 1280 y FL(4.3)135
b(SI)45 b(\014fth-order)g(elliptic)h(lo)l(w-pass)g(\014lter)300
1596 y FH(This)27 b(example)h(demonstrates)h(b)s(oth)e(time-)i(and)e
(frequency-domain)h(sim)m(ulation)e(of)j(a)f(SI)g(\014fth-order)300
1822 y(elliptic)h(lo)m(w-pass)i(\014lter.)42 b(A)31 b(brief)f
(description)f(of)i(the)g(circuit)f(is)g(giv)m(en)h(b)s(efore)g(the)g
(sim)m(ulations)f(are)300 2048 y(discussed.)536 2274
y(The)j(basic)g(circuit)f(cell)h(used)g(to)h(construct)g(the)g
(\014lter)e(is)h(a)h(casco)s(de)g(transconductor)g(sho)m(wn)300
2500 y(in)f(Fig.)h(4.7,)i(whic)m(h)c(has)i(a)g(non-linear)e
(relationship)f(b)s(et)m(w)m(een)k(the)f(input)d(v)m(oltage)36
b(and)d(the)h(output)300 2725 y(curren)m(t.)39 b(The)24
b(transconductor)g(will)e(b)s(e)i(represen)m(ted)g(b)m(y)h(the)f(sym)m
(b)s(ol)g(also)g(sho)m(wn)g(in)f(Fig.)i(4.7.)40 b(A)24
b(set)300 2951 y(of)31 b(transconductors)g(are)g(used)f(to)h(construct)
h(a)f(di\013eren)m(tial)e(double-sampling)f(in)m(tegrator/summer)300
3177 y(circuit)37 b(as)i(sho)m(wn)f(in)f(Fig.)i(4.8)g([67)q(])1598
3144 y FA(1)1638 3177 y FH(.)65 b(The)38 b(de\014nition)e(of)j(the)f
(clo)s(c)m(k)h(w)m(a)m(v)m(eforms)h(and)e(the)g(switc)m(h)300
3403 y(sym)m(b)s(ols)27 b(are)i(the)g(same)g(as)f(in)g(Sec.)h(4.2.)41
b(\(See)29 b(Figs.)g(4.1,)h(4.2)f(and)f(4.3.\))42 b(The)28
b(transconductors)g(with)300 3629 y(the)22 b(\\G")g(lab)s(el,)g
(together)h(with)d(the)i(switc)m(hes,)h(p)s(erform)d(the)h(curren)m(t)h
(cop)m(ying)f(function)f([5)q(],)j(while)d(the)300 3854
y(transconductors)29 b(with)e(the)i FG(\013)h FH(and)e
FG(\014)34 b FH(lab)s(els)27 b(mirror)g(the)i(curren)m(ts)g(to)g
(construct)h(the)f(outputs.)39 b(The)300 4080 y(co)s(e\016cien)m(ts)30
b FG(\013)g FH(and)f FG(\014)35 b FH(also)30 b(represen)m(t)f(the)h
(ratio)g(of)g(the)g(transistor)e(sizes)i(relativ)m(e)g(to)g(the)g
(transistor)300 4306 y(sizes)g(in)f(the)i(\\G")g(transconductors.)41
b(The)30 b(transfer)f(function)h(of)g(the)h(in)m(tegrator/summer)f(is)
1748 4512 y FG(I)1788 4526 y FB(\013)1838 4512 y FH(\()p
FG(z)t FH(\))p 1582 4552 540 4 v 1582 4636 a(\()p FG(I)7
b FH(\()p FG(z)t FH(\))21 b(+)f FG(I)1932 4650 y FB(s)1969
4636 y FH(\()p FG(z)t FH(\)\))2157 4573 y(=)25 b FG(\013)2321
4512 y FH(1)c(+)f FG(z)2524 4479 y Fv(\000)p FA(1)p 2321
4552 298 4 v 2321 4636 a FH(1)h Fz(\000)f FG(z)2524 4609
y Fv(\000)p FA(1)3713 4573 y FH(\(4.1\))300 4841 y(and)1795
5067 y FG(I)1835 5082 y FB(\014)1907 5067 y FH(=)25 b
FG(\014)5 b FH(\()p FG(I)28 b FH(+)20 b FG(I)2293 5081
y FB(s)2330 5067 y FH(\))p FG(;)1323 b FH(\(4.2\))p 300
5139 1440 4 v 404 5193 a Fs(1)438 5225 y Fy(In)25 b([67)r(],)h(the)f
(transconductors)i(w)n(ere)f(implemen)n(ted)e(using)i(the)f(S)2402
5193 y Fs(2)2437 5225 y Fy(I)g(tec)n(hnique)g([9)q(])h(whic)n(h)g
(leads)g(to)g(a)g(b)r(etter)g(\014lter)300 5316 y(p)r(erformance.)32
b(Ho)n(w)n(ev)n(er,)20 b(since)f(the)f(goal)i(here)f(is)g(to)g(only)f
(demonstrate)g(the)g(sim)n(ulation,)i(the)e(simpler)h(transconductors)
300 5407 y(are)26 b(used.)p eop
%%Page: 83 96
83 95 bop 3809 -200 a FH(83)863 136 y
 19537177 11840716 460472 36640440 26115358 52164935 startTexFig
 863 136 a
%%BeginDocument: figs/el5_gm.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 112 moveto
      216 144 lineto
      199 144 lineto
      199 176 lineto
      216 176 lineto
      216 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      185 144 moveto
      185 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      185 160 moveto
      168 160 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      199 152 moveto
      0 16 atan dup cos 10 mul 215 exch sub
      exch sin 10 mul 152 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      215 152 10 4 16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 400 moveto
      216 368 lineto
      199 368 lineto
      199 335 lineto
      216 335 lineto
      216 304 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      185 368 moveto
      185 335 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      185 352 moveto
      168 352 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 360 moveto
      0 -16 atan dup cos 10 mul 200 exch sub
      exch sin 10 mul 360 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      200 360 10 4 -16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 304 moveto
      216 272 lineto
      199 272 lineto
      199 239 lineto
      216 239 lineto
      216 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      185 272 moveto
      185 239 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      185 256 moveto
      168 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 264 moveto
      0 -16 atan dup cos 10 mul 200 exch sub
      exch sin 10 mul 264 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      200 264 10 4 -16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 16 moveto
      216 48 lineto
      199 48 lineto
      199 80 lineto
      216 80 lineto
      216 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      185 48 moveto
      185 80 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      185 64 moveto
      168 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      199 56 moveto
      0 16 atan dup cos 10 mul 215 exch sub
      exch sin 10 mul 56 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      215 56 10 4 16 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 400 moveto
      232 400 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 400 moveto
      192 408 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 400 moveto
      208 408 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      232 400 moveto
      224 408 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 8 moveto
      200 24 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      112 50 moveto (Vbias1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 64 moveto
      168 64 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 128 63 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 128 63 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      112 146 moveto (Vbias2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 160 moveto
      168 160 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 128 159 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 128 159 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      112 242 moveto (Vbias3) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 256 moveto
      168 256 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 128 255 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 128 255 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      24 330 moveto (Vin) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 352 moveto
      168 352 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 56 351 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 56 351 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      16 312 moveto 64 312 lineto 64 336 lineto 16 336 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 264 moveto
      240 264 lineto
      240 384 lineto
      216 384 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 360 moveto
      240 360 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 152 moveto
      240 152 lineto
      240 32 lineto
      216 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 56 moveto
      240 56 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 240 55 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 240 55 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 216 31 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 216 31 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 240 359 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 240 359 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 216 383 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 216 383 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 216 207 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 216 207 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      328 194 moveto (Iout) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      320 176 moveto 368 176 lineto 368 200 lineto 320 200 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 400 moveto
      72 400 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 400 moveto
      32 408 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 400 moveto
      48 408 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      72 400 moveto
      64 408 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 400 moveto
      56 384 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      40 362 moveto (+) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      40 386 moveto (-) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      216 208 moveto
      0 160 atan dup cos 10 mul 376 exch sub
      exch sin 10 mul 208 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      376 208 10 4 160 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      640 256 moveto
      656 192 lineto
      688 192 lineto
      704 256 lineto
      640 256 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      664 231 moveto (G) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      99 1 moveto 298 1 lineto 298 414 lineto 99 414 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      608 322 moveto (Vin) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      672 296 moveto
      672 256 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 672 295 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 672 295 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      600 304 moveto 648 304 lineto 648 328 lineto 600 328 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      656 360 moveto
      688 360 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      656 360 moveto
      648 368 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      672 360 moveto
      664 368 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      688 360 moveto
      680 368 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      672 360 moveto
      672 344 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      656 306 moveto (+) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      656 346 moveto (-) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      672 192 moveto
      -48 0 atan dup cos 10 mul 672 exch sub
      exch sin 10 mul 144 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      672 144 10 4 0 -48 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      608 154 moveto (Iout) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      600 136 moveto 648 136 lineto 648 160 lineto 600 160 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% OVAL
newpath 672 343 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 672 343 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 56 383 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 56 383 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 208 moveto
      520 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 216 moveto
      520 216 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      508 200 moveto
      528 212 lineto
      508 224 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Nov 16 19:13:46 1998
%%EndDocument

 endTexFig
 1389 1832 a FH(Figure)30 b(4.7:)42 b(Casco)s(de)30 b(transconductor)
575 2158 y
 24076124 9669919 394690 38548111 24470814 48218030 startTexFig
 575 2158 a
%%BeginDocument: figs/el5_int.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      68 228 moveto
      100 228 lineto
      96 204 lineto
      72 204 lineto
      68 228 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      71 223 moveto ( G) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 220 moveto
      48 208 lineto
      52 204 lineto
      56 208 lineto
      56 220 lineto
      48 220 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      76 256 moveto
      92 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      76 260 moveto
      92 260 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 260 moveto
      84 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      88 268 moveto
      84 272 lineto
      80 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 256 moveto
      84 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 236 moveto
      84 228 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      52 220 moveto
      52 236 lineto
      84 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      52 204 moveto
      52 196 lineto
      84 196 lineto
      84 204 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 196 moveto
      116 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      164 228 moveto
      132 228 lineto
      136 204 lineto
      160 204 lineto
      164 228 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      161 223 moveto (G ) tgifrighttext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      184 220 moveto
      184 208 lineto
      180 204 lineto
      176 208 lineto
      176 220 lineto
      184 220 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      156 256 moveto
      140 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      156 260 moveto
      140 260 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 260 moveto
      148 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      152 268 moveto
      144 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 268 moveto
      148 272 lineto
      152 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 256 moveto
      148 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 236 moveto
      148 228 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      180 220 moveto
      180 236 lineto
      148 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      180 204 moveto
      180 196 lineto
      148 196 lineto
      148 204 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 196 moveto
      116 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      80 256 moveto
      88 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      116 196 moveto
      116 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 188 moveto
      88 184 lineto
      88 176 lineto
      84 172 lineto
      80 176 lineto
      80 184 lineto
      84 188 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 188 moveto
      84 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 172 moveto
      84 148 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 188 moveto
      152 184 lineto
      152 176 lineto
      148 172 lineto
      144 176 lineto
      144 184 lineto
      148 188 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 188 moveto
      148 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 172 moveto
      148 156 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      152 180 moveto
      172 180 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      60 180 moveto
      80 180 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      24 212 moveto
      48 212 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      184 212 moveto
      200 212 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      260 228 moveto
      292 228 lineto
      288 204 lineto
      264 204 lineto
      260 228 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      263 223 moveto ( G) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 220 moveto
      240 208 lineto
      244 204 lineto
      248 208 lineto
      248 220 lineto
      240 220 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      268 256 moveto
      284 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      268 260 moveto
      284 260 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 260 moveto
      276 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      280 268 moveto
      276 272 lineto
      272 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 256 moveto
      276 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 236 moveto
      276 228 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      244 220 moveto
      244 236 lineto
      276 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      244 204 moveto
      244 196 lineto
      276 196 lineto
      276 204 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 196 moveto
      308 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      356 228 moveto
      324 228 lineto
      328 204 lineto
      352 204 lineto
      356 228 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      352 223 moveto (G ) tgifrighttext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      376 220 moveto
      376 208 lineto
      372 204 lineto
      368 208 lineto
      368 220 lineto
      376 220 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      348 256 moveto
      332 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      348 260 moveto
      332 260 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      340 260 moveto
      340 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      344 268 moveto
      336 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      336 268 moveto
      340 272 lineto
      344 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      340 256 moveto
      340 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      340 236 moveto
      340 228 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      372 220 moveto
      372 236 lineto
      340 236 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 339 235 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 339 235 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      372 204 moveto
      372 196 lineto
      340 196 lineto
      340 204 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      340 196 moveto
      308 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 268 moveto
      280 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      308 196 moveto
      308 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 188 moveto
      280 184 lineto
      280 176 lineto
      276 172 lineto
      272 176 lineto
      272 184 lineto
      276 188 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 188 moveto
      276 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 172 moveto
      276 156 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      340 188 moveto
      344 184 lineto
      344 176 lineto
      340 172 lineto
      336 176 lineto
      336 184 lineto
      340 188 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      340 188 moveto
      340 196 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      340 172 moveto
      340 148 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      344 180 moveto
      364 180 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      252 180 moveto
      272 180 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 212 moveto
      240 212 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      376 212 moveto
      396 212 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 156 moveto
      276 156 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 148 moveto
      340 148 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 292 moveto
      80 292 lineto
      76 316 lineto
      52 316 lineto
      48 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      88 292 moveto
      120 292 lineto
      116 316 lineto
      92 316 lineto
      88 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 316 moveto
      64 324 lineto
      104 324 lineto
      104 316 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      84 324 moveto
      84 340 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      132 292 moveto
      164 292 lineto
      160 316 lineto
      136 316 lineto
      132 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      172 292 moveto
      204 292 lineto
      200 316 lineto
      176 316 lineto
      172 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 316 moveto
      148 324 lineto
      188 324 lineto
      188 316 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 324 moveto
      168 340 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      220 292 moveto
      252 292 lineto
      248 316 lineto
      224 316 lineto
      220 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      260 292 moveto
      292 292 lineto
      288 316 lineto
      264 316 lineto
      260 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      236 316 moveto
      236 324 lineto
      276 324 lineto
      276 316 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 324 moveto
      256 340 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      304 292 moveto
      336 292 lineto
      332 316 lineto
      308 316 lineto
      304 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      344 292 moveto
      376 292 lineto
      372 316 lineto
      348 316 lineto
      344 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      320 316 moveto
      320 324 lineto
      360 324 lineto
      360 316 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      340 324 moveto
      340 340 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      64 292 moveto
      64 248 lineto
      84 236 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      104 292 moveto
      104 256 lineto
      144 236 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      360 292 moveto
      360 248 lineto
      340 236 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      320 292 moveto
      320 256 lineto
      276 236 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      148 292 moveto
      168 248 lineto
      148 236 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      188 292 moveto
      244 244 lineto
      276 236 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      236 280 moveto
      124 276 lineto
      116 236 lineto
      84 236 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      276 292 moveto
      308 236 lineto
      336 236 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      60 310 moveto (b) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      100 310 moveto (b) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      316 310 moveto (b) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      356 310 moveto (b) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      272 310 moveto (a) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      232 310 moveto (a) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      184 310 moveto (a) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      144 310 moveto (a) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      56 170 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      68 175 moveto (1) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      232 181 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      244 186 moveto (1) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      348 172 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      360 177 moveto (2) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      176 182 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      188 187 moveto (2) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      184 229 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      196 234 moveto (2S) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      380 230 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      392 235 moveto (2S) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      216 229 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      228 234 moveto (1S) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      16 230 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      28 235 moveto (1S) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      180 148 moveto
      180 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      244 156 moveto
      244 132 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      88 136 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      100 143 moveto (S) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      100 125 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      184 133 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      196 123 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      228 133 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      240 123 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      313 137 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      325 140 moveto (S) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      325 127 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      92 349 moveto (I) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      104 357 moveto (b) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      102 341 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      348 349 moveto (I) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      360 357 moveto (b) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      359 341 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      176 349 moveto (I) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      188 353 moveto (a) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      187 341 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      264 349 moveto (I) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      276 353 moveto (a) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      274 341 moveto (-) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      236 292 moveto
      236 280 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      548 245 moveto (a) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      612 245 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      528 268 moveto
      640 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      640 268 moveto
      656 194 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 194 moveto
      528 268 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 194 moveto
      656 194 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      564 261 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      536 261 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      604 169 moveto
      25 0 atan dup cos 10 mul 604 exch sub
      exch sin 10 mul 194 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      604 194 10 4 0 25 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      636 169 moveto
      25 0 atan dup cos 10 mul 636 exch sub
      exch sin 10 mul 194 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      636 194 10 4 0 25 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      560 203 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      528 203 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      632 203 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      600 203 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      604 268 moveto
      25 0 atan dup cos 10 mul 604 exch sub
      exch sin 10 mul 293 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      604 293 10 4 0 25 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      628 268 moveto
      25 0 atan dup cos 10 mul 628 exch sub
      exch sin 10 mul 293 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      628 293 10 4 0 25 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      628 261 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      600 261 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      540 269 moveto
      25 0 atan dup cos 10 mul 540 exch sub
      exch sin 10 mul 294 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      540 294 10 4 0 25 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      564 269 moveto
      25 0 atan dup cos 10 mul 564 exch sub
      exch sin 10 mul 294 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      564 294 10 4 0 25 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      432 216 moveto
      472 216 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      432 224 moveto
      472 224 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      460 208 moveto
      480 220 lineto
      460 232 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      616 216 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      628 219 moveto (S) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      544 216 moveto (I) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      532 169 moveto
      25 0 atan dup cos 10 mul 532 exch sub
      exch sin 10 mul 194 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      532 194 10 4 0 25 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      560 169 moveto
      25 0 atan dup cos 10 mul 560 exch sub
      exch sin 10 mul 194 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      560 194 10 4 0 25 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      628 313 moveto (I) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      640 321 moveto (b) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      638 305 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      592 313 moveto (I) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      604 321 moveto (b) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      603 305 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      516 313 moveto (I) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      528 317 moveto (a) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      527 305 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      556 313 moveto (I) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      568 317 moveto (a) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      566 305 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      636 160 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      648 163 moveto (S) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      648 150 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      518 160 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      530 150 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      556 160 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      568 150 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      599 160 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      611 163 moveto (S) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      611 149 moveto (+) show
   grestore

% OVAL
newpath 275 235 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 275 235 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 147 235 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 147 235 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 83 235 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 83 235 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 339 195 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 339 195 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 275 195 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 275 195 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 147 195 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 147 195 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 83 195 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 83 195 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 115 195 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 115 195 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 179 147 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 179 147 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 243 155 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 243 155 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 307 195 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 307 195 2 2 tgifellipse stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Oct 28 16:33:28 1998
%%EndDocument

 endTexFig
 952 3579 a FH(Figure)g(4.8:)42 b(Bilinear,)29 b(double)g(sampling)f
(summer/in)m(tegrator)450 3910 y
 26049576 9117346 197345 37100912 28878192 47297085 startTexFig
 450 3910 a
%%BeginDocument: figs/el5.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      48 257 moveto (a) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      60 260 moveto (S) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      72 257 moveto (a) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      100 257 moveto (b) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      84 260 moveto (12) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      112 260 moveto (31) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      112 231 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      56 231 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      120 232 moveto (S) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      48 280 moveto
      124 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      124 280 moveto
      144 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      32 206 moveto
      48 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      32 206 moveto
      144 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      84 280 moveto
      84 334 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      92 280 moveto
      92 326 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      92 273 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      80 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      68 273 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      56 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      116 273 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      104 273 moveto (-) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 194 moveto
      56 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 194 moveto
      64 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      112 194 moveto
      112 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      120 194 moveto
      120 206 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      64 215 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      52 215 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      120 215 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      108 215 moveto (-) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      224 236 moveto (a) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      236 240 moveto (21) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      252 236 moveto (a) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      264 240 moveto (23) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      244 265 moveto (I) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      280 206 moveto
      296 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      200 280 moveto
      216 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      200 280 moveto
      296 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      260 206 moveto
      260 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      268 206 moveto
      268 145 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      256 217 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      268 217 moveto (-) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      228 206 moveto
      228 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      236 206 moveto
      236 194 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      224 217 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      236 217 moveto (-) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      244 322 moveto
      244 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      252 330 moveto
      252 280 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      252 274 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      240 274 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      216 206 moveto
      280 206 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      384 257 moveto (a) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      396 260 moveto (34) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      356 257 moveto (a) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      412 257 moveto (b) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      368 260 moveto (32) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      424 260 moveto (5) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      412 231 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      340 231 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      420 232 moveto (S) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      324 280 moveto
      436 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      436 280 moveto
      452 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      308 206 moveto
      324 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      308 206 moveto
      452 206 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      372 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      360 273 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      336 280 moveto
      336 305 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      344 280 moveto
      344 297 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      388 280 moveto
      388 334 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      396 280 moveto
      396 326 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      344 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      332 273 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      396 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      384 273 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      340 137 moveto
      340 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      348 145 moveto
      348 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      412 169 moveto
      412 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      420 161 moveto
      420 206 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      348 215 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      336 215 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      420 215 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      408 215 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      416 280 moveto
      416 305 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      424 280 moveto
      424 297 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      328 257 moveto (b) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      340 260 moveto (1) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      424 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      412 273 moveto (+) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      532 232 moveto (a) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      544 236 moveto (43) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      560 232 moveto (a) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      572 236 moveto (45) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      552 265 moveto (I) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      588 206 moveto
      604 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      508 280 moveto
      524 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      508 280 moveto
      604 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      568 206 moveto
      568 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      576 206 moveto
      576 145 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      564 217 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      576 217 moveto (-) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      536 206 moveto
      536 145 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      544 206 moveto
      544 137 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      532 217 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      544 217 moveto (-) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      552 334 moveto
      552 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      560 326 moveto
      560 280 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      560 274 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      548 274 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      524 206 moveto
      588 206 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      668 257 moveto (a) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      716 257 moveto (a) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      680 260 moveto (54) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      728 260 moveto (L) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      720 231 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      648 231 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      728 232 moveto (S) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      632 280 moveto
      744 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      744 280 moveto
      760 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      616 206 moveto
      632 280 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      616 206 moveto
      760 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      672 280 moveto
      672 326 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      680 280 moveto
      680 334 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      680 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      668 273 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      644 280 moveto
      644 297 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      652 280 moveto
      652 305 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      696 280 moveto
      696 368 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      704 280 moveto
      704 392 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      652 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      640 273 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      648 137 moveto
      648 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      656 145 moveto
      656 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      720 169 moveto
      720 206 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      728 161 moveto
      728 206 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      656 215 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      644 215 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      728 215 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      716 215 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      724 280 moveto
      724 334 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      732 280 moveto
      732 326 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      636 257 moveto (b) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      648 260 moveto (35) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      732 273 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      720 273 moveto (+) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      60 281 moveto
      60 326 lineto
      16 326 lineto
      16 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      68 281 moveto
      68 334 lineto
      8 334 lineto
      8 145 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      120 194 moveto
      136 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      112 194 moveto
      112 186 lineto
      136 186 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      116 281 moveto
      116 297 lineto
      152 297 lineto
      152 169 lineto
      412 169 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      108 281 moveto
      108 305 lineto
      160 305 lineto
      160 161 lineto
      420 161 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      8 145 moveto
      228 145 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      16 137 moveto
      236 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 194 moveto
      64 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 194 moveto
      56 145 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      228 194 moveto
      228 145 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      236 194 moveto
      236 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      136 194 moveto
      184 194 lineto
      184 305 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      136 186 moveto
      188 186 lineto
      192 186 lineto
      192 297 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      92 326 moveto
      372 326 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      84 334 moveto
      364 334 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      364 334 moveto
      364 281 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      372 326 moveto
      372 281 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      192 297 moveto
      344 297 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      184 305 moveto
      336 305 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      260 137 moveto
      544 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      268 145 moveto
      536 145 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      412 186 moveto
      496 186 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      420 194 moveto
      488 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      424 297 moveto
      464 297 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      416 305 moveto
      472 305 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      644 297 moveto
      496 297 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      652 305 moveto
      488 305 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      496 297 moveto
      496 186 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      488 305 moveto
      488 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      464 297 moveto
      464 161 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      472 305 moveto
      472 169 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      396 326 moveto
      672 326 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      388 334 moveto
      680 334 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      732 326 moveto
      772 326 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      724 334 moveto
      780 334 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      772 326 moveto
      772 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      568 137 moveto
      772 137 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      576 145 moveto
      780 145 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      780 334 moveto
      780 145 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      472 169 moveto
      720 169 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      464 161 moveto
      728 161 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      79 348 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      79 375 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      68 383 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      80 383 moveto (in) show
   grestore

% TEXT
0 setgray
/Courier findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      112 384 moveto (S/H) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      104 355 moveto 160 355 lineto 160 395 lineto 104 395 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Courier findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      584 389 moveto (V) show
   grestore

% TEXT
0 setgray
/Courier findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      628 389 moveto (I) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      580 359 moveto 648 359 lineto 648 400 lineto 580 400 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      604 379 moveto
      624 379 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      604 379 moveto
      612 375 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      604 379 moveto
      612 383 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      160 363 moveto
      176 363 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      160 387 moveto
      176 387 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      176 363 moveto
      180 359 lineto
      184 368 lineto
      188 359 lineto
      192 368 lineto
      196 359 lineto
      200 363 lineto
      212 363 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      176 387 moveto
      180 383 lineto
      184 392 lineto
      188 383 lineto
      192 392 lineto
      196 383 lineto
      200 387 lineto
      212 387 lineto
   stroke
grestore

% OVAL
gsave
   newpath 216 387 4 4 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 216 363 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      60 326 moveto
      60 363 lineto
      104 363 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      52 334 moveto
      52 387 lineto
      104 387 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      696 368 moveto
      648 368 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      704 392 moveto
      648 392 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      580 368 moveto
      564 368 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      580 392 moveto
      564 392 lineto
   stroke
grestore

% OVAL
gsave
   newpath 560 391 4 4 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 560 367 4 4 tgifellipse stroke
grestore

% OVAL
newpath 420 194 4 4 tgifellipse fill
gsave
   newpath 420 194 4 4 tgifellipse stroke
grestore

% OVAL
newpath 412 186 4 4 tgifellipse fill
gsave
   newpath 412 186 4 4 tgifellipse stroke
grestore

% OVAL
newpath 340 136 4 4 tgifellipse fill
gsave
   newpath 340 136 4 4 tgifellipse stroke
grestore

% OVAL
newpath 348 144 4 4 tgifellipse fill
gsave
   newpath 348 144 4 4 tgifellipse stroke
grestore

% OVAL
newpath 656 144 4 4 tgifellipse fill
gsave
   newpath 656 144 4 4 tgifellipse stroke
grestore

% OVAL
newpath 648 136 4 4 tgifellipse fill
gsave
   newpath 648 136 4 4 tgifellipse stroke
grestore

% OVAL
newpath 56 144 4 4 tgifellipse fill
gsave
   newpath 56 144 4 4 tgifellipse stroke
grestore

% OVAL
newpath 52 334 4 4 tgifellipse fill
gsave
   newpath 52 334 4 4 tgifellipse stroke
grestore

% OVAL
newpath 244 326 4 4 tgifellipse fill
gsave
   newpath 244 326 4 4 tgifellipse stroke
grestore

% OVAL
newpath 552 334 4 4 tgifellipse fill
gsave
   newpath 552 334 4 4 tgifellipse stroke
grestore

% OVAL
newpath 252 334 4 4 tgifellipse fill
gsave
   newpath 252 334 4 4 tgifellipse stroke
grestore

% OVAL
newpath 560 326 4 4 tgifellipse fill
gsave
   newpath 560 326 4 4 tgifellipse stroke
grestore

% OVAL
newpath 60 326 4 4 tgifellipse fill
gsave
   newpath 60 326 4 4 tgifellipse stroke
grestore

% OVAL
newpath 64 136 4 4 tgifellipse fill
gsave
   newpath 64 136 4 4 tgifellipse stroke
grestore

% TEXT
0 setgray
/Courier findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      68 357 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      80 357 moveto (in) show
   grestore

% TEXT
0 setgray
/Courier findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      236 356 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      236 383 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      225 391 moveto (V) show
   grestore

% TEXT
0 setgray
/Courier findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      237 391 moveto (in) show
   grestore

% TEXT
0 setgray
/Courier findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      225 345 moveto () show
      225 364 moveto (V) show
   grestore

% TEXT
0 setgray
/Courier findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      237 365 moveto (in) show
   grestore

% TEXT
0 setgray
/Courier findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      528 360 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      528 387 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      517 395 moveto (V) show
   grestore

% TEXT
0 setgray
/Courier findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      529 395 moveto (out) show
   grestore

% TEXT
0 setgray
/Courier findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      517 369 moveto (V) show
   grestore

% TEXT
0 setgray
/Courier findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      529 369 moveto (out) show
   grestore

% TEXT
0 setgray
/Courier findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      668 352 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      668 379 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      657 387 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      669 387 moveto (out) show
   grestore

% TEXT
0 setgray
/Courier findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      657 361 moveto (I) show
   grestore

% TEXT
0 setgray
/Courier findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      669 361 moveto (out) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Oct 28 14:12:46 1998
%%EndDocument

 endTexFig
 1183 5261 a FH(Figure)i(4.9:)42 b(Fifth-order)29 b(Elliptic)f(lo)m
(w-pass)i(\014lter)p eop
%%Page: 84 97
84 96 bop 3809 -200 a FH(84)300 99 y(where)25 b FG(z)k
FH(=)c FG(e)767 66 y FB(j)t(!)r(T)8 b(=)p FA(2)995 99
y FH(and)24 b(T)h(is)f(the)i(p)s(erio)s(d)c(of)k(the)f(clo)s(c)m(ks)g
(in)f(Fig.)i(4.3.)40 b(The)24 b FG(T)10 b(=)p FH(2)26
b(in)e(the)i(de\014nition)c(of)k FG(z)300 324 y FH(is)g(due)h(to)h(the)
f(fact)h(that)g(this)e(a)h(double)f(sampling)f(circuit)h([67)q(],)i
(therefore,)h(the)e(sampling)e(frequency)300 550 y(is)35
b(t)m(wice)h(the)g(frequency)f(of)h(the)g(clo)s(c)m(k.)57
b(The)35 b(sym)m(b)s(ol)g(for)g(the)h(in)m(tegrator/summer)g(is)f(also)
h(sho)m(wn)300 776 y(in)j(Fig.)h(4.8,)k(where)c(the)g(outputs)g(lab)s
(eled)f FG(\013)h FH(and)g FG(\014)45 b FH(represen)m(t)40
b(the)h(transfer)e(functions)g(in)g(\(4.1\))300 1002
y(and)30 b(\(4.2\),)i(resp)s(ectiv)m(ely)-8 b(.)536 1228
y(Fig.)31 b(4.9)g(sho)m(ws)f(the)g(SI)f(\014fth-order)h(elliptic)d(lo)m
(w-pass)j(\014lter)f(whic)m(h)g(is)h(constructed)g(from)g(\014v)m(e)300
1453 y(in)m(tegrator/summer)j(cells)f(of)i(Fig.)f(4.8.)50
b(The)32 b(di\013eren)m(tial)g(input)f(v)m(oltage)k(signal)c(is)h(con)m
(v)m(erted)j(in)m(to)300 1679 y(a)j(curren)m(t)g(signal)f(and)g(then)h
(sampled)f(and)g(held.)62 b(The)38 b(output)g(curren)m(t)f(is)g(con)m
(v)m(erted)j(bac)m(k)f(to)g(a)300 1905 y(v)m(oltage)e(signal.)52
b(Note,)38 b(for)c(curren)m(t)h(signals,)f(the)h(connection)g(of)g
(lines)e(creates)j(a)g(summing)c(no)s(de.)300 2131 y(The)39
b(clo)s(c)m(k)h(frequency)e(w)m(as)i(set)g(to)g(2)g(MHz,)i(or)d
FG(T)53 b FH(=)40 b(0)p FG(:)p FH(5)h FG(\026)p FH(s,)g(whic)m(h)d(mak)
m(es)i(the)g(\014lter)e(sampling)300 2357 y(frequency)30
b(of)g(4)h(MHz.)42 b(The)30 b(corner)g(frequency)g(w)m(as)h(designed)e
(to)i(b)s(e)f(400)h(kHz.)300 2600 y Fx(4.3.1)112 b(Small-signal,)36
b(frequency-domain)i(sim)m(ulation)300 2885 y FH(Recall)31
b(from)g(Sec.)g(3.2)i(that)f(in)d(order)i(to)h(obtain)f(the)g
(small-signal)e(parameters)j(for)f(the)g(frequency-)300
3110 y(domain)25 b(form)m(ulation,)i(it)f(is)f(\014rst)h(necessary)h
(to)g(obtain)f(the)h(bias)e(op)s(erating)h(p)s(oin)m(ts)f(for)i(eac)m
(h)g(switc)m(h-)300 3336 y(ing)32 b(phase.)49 b(This)31
b(is)h(done)h(b)m(y)g(p)s(erforming)e(the)j(fast)f(transien)m(t)g
(analysis)e(in)h(SWITCAP3)h(with)f(the)300 3562 y(small-signal)c(input)
g(set)j(to)g(zero)h(un)m(til)c(the)j(bias)e(net)m(w)m(ork)i(reac)m(hes)
h(a)f(steady)f(state.)536 3788 y(The)e(bias)g(inputs)f(in)g(the)i
(\014lter)f(are)h(the)g(v)m(oltages)h FG(V)2364 3803
y FB(bias)p FA(1)2528 3788 y FH(,)f FG(V)2635 3803 y
FB(bias)p FA(2)2799 3788 y FH(,)g(and)f FG(V)3081 3803
y FB(bias)p FA(3)3274 3788 y FH(in)f(Fig.)i(4.7.)41 b(The)300
4014 y(sim)m(ulation)26 b(results)h(for)h(the)g(fast)h(transien)m(t)f
(sim)m(ulation)e(of)i(the)g(net)m(w)m(ork)h(with)e(only)h(the)g(bias)f
(inputs)300 4240 y(are)i(sho)m(wn)f(in)f(Fig.)h(4.10,)j(where)d(the)h
(v)m(oltage)h(across)f(one)g(of)f(the)h(capacitors)g(in)e(Fig.)i(4.8)g
(is)f(plotted.)300 4465 y(Note,)48 b(that)43 b(after)h(800)g
FG(\026)p FH(s)f(the)g(v)m(oltage)i(nearly)d(settles)h(to)h(a)g
(constan)m(t)g(v)-5 b(alue.)78 b(The)43 b(CPU)f(time)300
4691 y(required)25 b(for)i(the)g(transien)m(t)g(analysis)e(of)i(the)h
(bias)e(net)m(w)m(ork)h(w)m(as)h(9779)h(s.)39 b(Note,)29
b(that)f(the)f(bias)f(p)s(oin)m(t)300 4917 y(do)s(es)31
b(not)h(c)m(hange)h(m)m(uc)m(h)f(after)g(200)h(s,)f(therefore)g(the)f
(transien)m(t)h(sim)m(ulation)d(can)j(b)s(e)f(made)h(shorter.)300
5143 y(It)j(is)g(also)g(imp)s(ortan)m(t)g(to)h(note)g(that)g(the)f(clo)
s(c)m(k)h(feedthrough)f(and)f(c)m(hannel)h(c)m(harge)i(redistribution)
300 5369 y(e\013ects)28 b(due)e(to)h(large)g(signal)e(swings)g(of)i
(the)g(clo)s(c)m(ks)g(\(as)g(discussed)e(in)g(Sec.)i(2.6.4\),)j
(in\015uence)25 b(the)i(bias)p eop
%%Page: 85 98
85 97 bop 3809 -200 a FH(85)300 99 y(solution.)536 324
y(Once,)29 b(the)e(bias)g(p)s(oin)m(ts)g(are)h(obtained,)g(the)f
(small-signal)f(parameters)i(are)g(automatically)f(ex-)300
550 y(tracted)i(and)f(frequency)f(resp)s(onse)h(is)f(computed.)40
b(The)27 b(results)g(of)i(a)f(2000)i(p)s(oin)m(t)d(frequency-domain)300
776 y(sim)m(ulation)e(in)h(SWITCAP3)h(is)g(sho)m(wn)f(in)g(Fig.)i
(4.11.)41 b(The)27 b(solid)e(line)h(represen)m(ts)h(the)h(transfer)f
(func-)300 1002 y(tion)k(of)g(an)h(ideal)e(\014fth-order)g(elliptic)f
(lo)m(w-pass)i(\014lter)g(with)f(the)h(sample-and-hold)f(e\013ect)i
(included.)300 1228 y(The)26 b(dashed)g(line)f(represen)m(ts)h(the)h
(results)e(from)h(SWITCAP3)g(sim)m(ulation,)g(whic)m(h)f(includes)f
(the)j(sec-)300 1453 y(ond)g(order)h(e\013ects)h(suc)m(h)f(as)g
(\014nite)f(output)h(imp)s(edance)e(of)i(the)g(transconductor)g(cells)f
(and)h(transistor)300 1679 y(mismatc)m(h.)39 b(As)25
b(men)m(tioned)g(earlier,)g(the)g(clo)s(c)m(k)h(feedthrough)f(and)f
(the)i(c)m(harge)g(redistribution)c(e\013ects)300 1905
y(are)j(only)e(included)f(through)i(their)f(in\015uence)g(of)i(the)g
(bias)e(p)s(oin)m(t)g(and)h(consequen)m(tly)h(the)f(small-signal)300
2131 y(parameters.)63 b(The)37 b(CPU)g(time)g(required)f(for)h(the)h
(2000)h(p)s(oin)m(t)d(frequency)h(resp)s(onse)g(computation)300
2357 y(is)29 b(20)j(s.)300 2600 y Fx(4.3.2)150 b(Sim)m(ulating)35
b(frequency)j(resp)s(onse)h(using)e(transien)m(t/FFT)g(metho)s(d)300
2885 y FH(T)-8 b(o)44 b(v)m(erify)f(the)g(results)f(of)i(the)g
(frequency-domain)e(sim)m(ulation)f(in)h(SWITCAP3,)47
b(the)c(frequency)300 3110 y(resp)s(onse)34 b(w)m(as)i(computed)f(for)g
(sev)m(eral)h(frequency)f(p)s(oin)m(ts)f(b)m(y)h(p)s(erforming)e(a)j
(transien)m(t)f(sim)m(ulation)300 3336 y(of)42 b(the)g(\014lter)f(with)
f(small-signal)g(sin)m(usoidal)f(inputs)h(and)h(then)g(taking)h(the)g
(FFT)g(of)g(the)g(output)300 3562 y(w)m(a)m(v)m(eform.)i(The)30
b(transien)m(t)h(sim)m(ulations)e(w)m(ere)i(p)s(erformed)f(in)f(b)s
(oth)i(SWITCAP3)f(and)g(HSPICE)g(in)300 3788 y(order)g(to)h(con\014rm)f
(the)g(accuracy)i(and)d(compare)i(the)g(sim)m(ulation)d(sp)s(eed)i(of)g
(the)h(transien)m(t)f(analyses.)536 4014 y(T)-8 b(o)29
b(satisfy)e(the)i(small)d(signal)h(assumption,)g(the)h(sample)g(and)f
(hold)g(circuit)g(at)h(the)h(input)d(\014lter)300 4240
y(w)m(as)31 b(designed)f(suc)m(h)g(that)h(the)g(magnitude)f(of)h(input)
d(curren)m(ts)j(are)g(5)g(p)s(ercen)m(t)g(of)f(the)h(bias)f(curren)m
(ts.)300 4465 y(A)g(2)443 4432 y FA(12)549 4465 y FH(p)s(oin)m(t)f(FFT)
h(w)m(as)h(p)s(erformed)e(on)h(the)g(part)g(of)h(the)f(output)g(w)m(a)m
(v)m(eform)i(whic)m(h)d(reac)m(hed)h(steady)300 4691
y(state.)44 b(The)31 b FC(start,)j(stop)f FH(and)d FC(step)i
FH(times)f(for)g(the)g(transien)m(t)g(analysis)e(of)j(eac)m(h)g(input)d
(frequency)i(are)300 4917 y(giv)m(en)f(in)f(columns)g(4,)i(5)g(and)f(6)
h(of)f(T)-8 b(able)30 b(4.1,)i(resp)s(ectiv)m(ely)-8
b(.)536 5143 y(In)34 b(Fig.)g(4.12,)k(the)c(p)s(oin)m(ts)g(lab)s(eled)e
(with)h(a)i(')p Fz(\005)p FH(')g(are)g(the)g(results)e(of)h(the)h
(transien)m(t/FFT)g(sim-)300 5369 y(ulation)e(in)g(SWITCAP3)g(while)f
(the)j(p)s(oin)m(ts)e(lab)s(eled)f(with)h(a)h('+')h(are)f(from)g
(HSPICE)f(sim)m(ulations.)p eop
%%Page: 86 99
86 98 bop 3809 -200 a FH(86)1050 58 y
 16577003 11438130 3289088 3289088 15129804 11577589 startTexFig
 1050 58 a
%%BeginDocument: dat/el5_bias.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
840 351 M
0 1958 V
LTb
840 547 M
63 0 V
2466 0 R
-63 0 V
756 547 M
(1) Rshow
840 938 M
63 0 V
2466 0 R
-63 0 V
756 938 M
(1.02) Rshow
840 1330 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(1.04) Rshow
840 1722 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(1.06) Rshow
840 2113 M
63 0 V
2466 0 R
-63 0 V
-2550 0 R
(1.08) Rshow
840 351 M
0 63 V
0 1895 R
0 -63 V
840 211 M
(0e+00) Cshow
1472 351 M
0 63 V
0 1895 R
0 -63 V
0 -2035 R
(2e-04) Cshow
2105 351 M
0 63 V
0 1895 R
0 -63 V
0 -2035 R
(4e-04) Cshow
2737 351 M
0 63 V
0 1895 R
0 -63 V
0 -2035 R
(6e-04) Cshow
3370 351 M
0 63 V
0 1895 R
0 -63 V
0 -2035 R
(8e-04) Cshow
840 351 M
2529 0 V
0 1958 V
-2529 0 V
840 351 L
140 1330 M
currentpoint gsave translate 90 rotate 0 0 M
(Voltage) Cshow
grestore
2104 -69 M
(seconds) Cshow
2104 2449 M
(Bias state) Cshow
LT0
840 1985 M
1 0 V
1 -10 V
0 -2 V
1 -9 V
1 -1 V
1 -8 V
1 -1 V
0 -8 V
1 -1 V
1 -7 V
1 -1 V
0 -7 V
1 -1 V
1 -7 V
1 -1 V
1 -7 V
1 -7 V
1 0 V
1 -7 V
1 -1 V
0 -6 V
1 0 V
1 -7 V
1 0 V
1 -6 V
0 -1 V
1 -6 V
1 0 V
1 -6 V
1 -1 V
0 -6 V
1 0 V
1 -6 V
1 0 V
0 -6 V
1 -1 V
1 -5 V
1 -1 V
1 -5 V
1 -6 V
1 0 V
1 -6 V
1 0 V
0 -6 V
1 0 V
1 -5 V
1 -1 V
1 -5 V
1 -6 V
1 0 V
1 -5 V
1 -5 V
1 -1 V
1 -5 V
1 0 V
0 -5 V
1 0 V
1 -5 V
1 -1 V
1 -5 V
1 -5 V
1 0 V
1 -5 V
1 0 V
0 -5 V
1 0 V
1 -5 V
1 0 V
1 -5 V
1 -5 V
1 0 V
1 -5 V
1 -5 V
1 0 V
1 -4 V
1 0 V
0 -5 V
1 0 V
1 -5 V
1 0 V
1 -5 V
1 -4 V
1 0 V
1 -5 V
1 0 V
0 -4 V
1 0 V
1 -5 V
1 0 V
0 -5 V
1 1 V
1 -5 V
1 0 V
1 -4 V
1 -5 V
1 0 V
1 -4 V
1 0 V
0 -5 V
1 0 V
1 -4 V
1 0 V
1 -4 V
1 -5 V
1 0 V
1 -4 V
1 -4 V
1 0 V
1 -4 V
1 0 V
0 -4 V
1 0 V
1 -4 V
1 0 V
1 -5 V
1 -4 V
1 1 V
1 -5 V
1 0 V
0 -4 V
1 0 V
1 -4 V
1 0 V
1 -4 V
1 -4 V
1 0 V
1 -4 V
1 -4 V
1 1 V
1 -5 V
1 1 V
0 -4 V
1 0 V
1 -4 V
1 0 V
1 -4 V
1 -4 V
1 0 V
1 -4 V
1 1 V
0 -4 V
1 0 V
1 -4 V
1 0 V
0 -4 V
1 0 V
1 -3 V
1 0 V
1 -4 V
1 -4 V
1 0 V
1 -3 V
1 0 V
0 -4 V
1 0 V
1 -4 V
1 1 V
1 -4 V
1 -4 V
1 0 V
1 -3 V
1 0 V
0 -4 V
1 1 V
1 -4 V
1 0 V
0 -4 V
1 1 V
1 -4 V
1 0 V
1 -4 V
0 1 V
1 -4 V
1 0 V
1 -4 V
1 1 V
0 -4 V
1 1 V
1 -4 V
1 0 V
1 -4 V
0 1 V
1 -4 V
1 0 V
1 -3 V
1 -4 V
1 1 V
1 -4 V
1 1 V
0 -4 V
1 0 V
1 -3 V
1 0 V
1 -4 V
0 1 V
1 -4 V
1 1 V
1 -4 V
1 0 V
0 -3 V
1 0 V
1 -4 V
1 1 V
1 -4 V
0 1 V
1 -4 V
1 1 V
1 -4 V
0 1 V
1 -4 V
1 1 V
1 -4 V
1 0 V
0 -3 V
1 0 V
1 -3 V
1 0 V
1 -3 V
1 -3 V
1 0 V
1 -3 V
1 0 V
0 -3 V
1 0 V
1 -3 V
1 0 V
0 -3 V
1 0 V
1 -3 V
1 0 V
1 -3 V
1 -3 V
1 0 V
1 -3 V
1 0 V
0 -3 V
1 0 V
1 -3 V
1 0 V
1 -3 V
0 1 V
1 -4 V
1 1 V
1 -4 V
0 1 V
1 -3 V
1 0 V
1 -3 V
1 0 V
0 -3 V
1 0 V
1 -3 V
1 0 V
1 -3 V
0 1 V
1 -4 V
1 1 V
1 -4 V
1 1 V
0 -3 V
1 1 V
1 -4 V
1 1 V
1 -4 V
0 1 V
1 -3 V
1 0 V
1 -3 V
0 1 V
1 -4 V
1 1 V
1 -4 V
1 1 V
0 -3 V
1 1 V
1 -4 V
1 1 V
1 -4 V
0 1 V
1 -3 V
1 1 V
1 -4 V
1 1 V
0 -3 V
1 0 V
1 -3 V
1 1 V
0 -4 V
1 1 V
1 -3 V
1 0 V
1 -3 V
0 1 V
1 -3 V
1 0 V
1 -3 V
1 1 V
0 -4 V
1 1 V
1 -3 V
1 1 V
1 -4 V
0 1 V
1 -3 V
1 1 V
1 -4 V
1 1 V
0 -3 V
1 1 V
1 -4 V
1 1 V
0 -3 V
1 1 V
1 -4 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 0 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -4 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 0 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -4 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -4 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -4 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 0 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 0 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -4 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -4 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
currentpoint stroke M
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -4 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 2 V
1 -4 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 2 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 2 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 1 V
1 -2 V
0 1 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -3 V
1 2 V
1 -3 V
0 1 V
1 -3 V
1 1 V
1 -3 V
1 2 V
0 -3 V
1 1 V
1 -3 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 1 V
1 -2 V
1 1 V
1 -3 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 1 V
1 -3 V
0 1 V
1 -2 V
1 1 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -3 V
1 1 V
1 -3 V
0 2 V
1 -3 V
1 1 V
1 -3 V
0 2 V
1 -3 V
1 1 V
1 -3 V
1 2 V
0 -3 V
1 1 V
1 -3 V
1 2 V
1 -3 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -3 V
1 2 V
1 -3 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 1 V
1 -2 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -3 V
1 2 V
1 -3 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -3 V
1 2 V
1 -3 V
0 1 V
1 -2 V
1 1 V
1 -3 V
0 2 V
1 -3 V
1 1 V
1 -2 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 1 V
1 -2 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -3 V
1 2 V
1 -3 V
0 1 V
1 -2 V
1 1 V
1 -2 V
0 1 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 1 V
1 -2 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 1 V
1 -2 V
1 1 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -2 V
1 1 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 1 V
1 -2 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 1 V
1 -2 V
0 1 V
1 -2 V
1 1 V
1 -2 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -2 V
1 1 V
1 -2 V
0 1 V
1 -2 V
1 1 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 1 V
0 -2 V
1 1 V
1 -2 V
1 1 V
0 -2 V
1 1 V
1 -2 V
1 1 V
1 -2 V
0 1 V
1 -2 V
1 1 V
1 -2 V
1 1 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
currentpoint stroke M
1 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 1 V
1 -2 V
1 1 V
1 -2 V
1 1 V
0 -2 V
1 1 V
1 -2 V
1 1 V
0 -2 V
1 1 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 1 V
1 -2 V
1 1 V
0 -2 V
1 1 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 1 V
1 -2 V
0 1 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 1 V
1 -2 V
1 1 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -2 V
0 1 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 1 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 1 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 1 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 1 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 1 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 1 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 1 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 1 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 1 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 1 V
0 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
0 1 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 1 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 1 V
1 -2 V
1 2 V
0 -2 V
1 1 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 1 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 1 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
currentpoint stroke M
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 1 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 1 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 1 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
currentpoint stroke M
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
currentpoint stroke M
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
currentpoint stroke M
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
currentpoint stroke M
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 3 V
1 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
0 -3 V
1 3 V
1 -3 V
1 3 V
1 -3 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
0 -2 V
1 2 V
1 -2 V
1 2 V
1 -2 V
0 2 V
1 -2 V
1 2 V
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 998 1703 a FH(Figure)30 b(4.10:)42 b(T)-8 b(ransien)m(t)30
b(sim)m(ulation)f(with)g(bias)g(inputs)f(only)450 2029
y
 26049576 18495194 -65781 44994723 9998827 52164935 startTexFig
 450 2029 a
%%BeginDocument: dat/el5_mag.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11.00 mul neg translate

-28.125 657.562 translate 0.562 0.562 scale 0 rotate

/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
840 351 M
0 3218 V
LTb
840 351 M
63 0 V
4266 0 R
-63 0 V
756 351 M
(1e-06) Rshow
840 505 M
31 0 V
4298 0 R
-31 0 V
840 708 M
31 0 V
4298 0 R
-31 0 V
840 812 M
31 0 V
4298 0 R
-31 0 V
840 862 M
63 0 V
4266 0 R
-63 0 V
756 862 M
(1e-05) Rshow
840 1015 M
31 0 V
4298 0 R
-31 0 V
840 1219 M
31 0 V
4298 0 R
-31 0 V
840 1323 M
31 0 V
4298 0 R
-31 0 V
840 1372 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-04) Rshow
840 1526 M
31 0 V
4298 0 R
-31 0 V
840 1729 M
31 0 V
4298 0 R
-31 0 V
840 1834 M
31 0 V
4298 0 R
-31 0 V
840 1883 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-03) Rshow
840 2037 M
31 0 V
4298 0 R
-31 0 V
840 2240 M
31 0 V
4298 0 R
-31 0 V
840 2344 M
31 0 V
4298 0 R
-31 0 V
840 2394 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-02) Rshow
840 2548 M
31 0 V
4298 0 R
-31 0 V
840 2751 M
31 0 V
4298 0 R
-31 0 V
840 2855 M
31 0 V
4298 0 R
-31 0 V
840 2905 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-01) Rshow
840 3058 M
31 0 V
4298 0 R
-31 0 V
840 3262 M
31 0 V
4298 0 R
-31 0 V
840 3366 M
31 0 V
4298 0 R
-31 0 V
840 3415 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e+00) Rshow
840 3569 M
31 0 V
4298 0 R
-31 0 V
840 351 M
0 63 V
0 3155 R
0 -63 V
840 211 M
(0.0e+00) Cshow
1627 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(2.0e+05) Cshow
2414 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(4.0e+05) Cshow
3201 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(6.0e+05) Cshow
3988 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(8.0e+05) Cshow
4775 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(1.0e+06) Cshow
840 351 M
4329 0 V
0 3218 V
-4329 0 V
840 351 L
140 1960 M
currentpoint gsave translate 90 rotate 0 0 M
(|V| Log scale) Cshow
grestore
3004 -69 M
(Freqency Hz) Cshow
3004 3709 M
(Magnitude of output voltage) Cshow
LT0
4686 3366 M
(Ideal filter) Rshow
4770 3366 M
252 0 V
840 3415 M
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
currentpoint stroke M
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
currentpoint stroke M
2 0 V
2 -1 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -2 V
2 -3 V
1 -2 V
2 -3 V
2 -3 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -4 V
2 -3 V
2 -3 V
2 -3 V
2 -4 V
2 -3 V
2 -3 V
2 -4 V
2 -3 V
2 -4 V
2 -3 V
2 -4 V
2 -4 V
2 -3 V
2 -4 V
2 -4 V
2 -3 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
1 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -5 V
2 -4 V
2 -4 V
2 -4 V
2 -5 V
2 -4 V
2 -4 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -4 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -4 V
1 -5 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
1 -5 V
2 -5 V
2 -5 V
2 -6 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -6 V
2 -5 V
2 -5 V
2 -6 V
2 -5 V
2 -5 V
2 -6 V
2 -5 V
2 -6 V
2 -5 V
2 -6 V
2 -6 V
2 -5 V
2 -6 V
2 -6 V
2 -6 V
2 -5 V
2 -6 V
2 -6 V
2 -6 V
2 -6 V
2 -6 V
1 -7 V
2 -6 V
2 -6 V
2 -6 V
2 -7 V
2 -6 V
2 -7 V
2 -6 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
2 -8 V
2 -7 V
2 -8 V
2 -8 V
2 -8 V
2 -8 V
2 -8 V
2 -8 V
2 -9 V
2 -9 V
2 -9 V
2 -9 V
2 -9 V
2 -9 V
2 -10 V
1 -10 V
2 -10 V
2 -11 V
2 -11 V
2 -11 V
2 -12 V
2 -12 V
2 -12 V
2 -13 V
2 -14 V
2 -14 V
2 -15 V
2 -15 V
2 -16 V
2 -18 V
2 -18 V
2 -20 V
2 -21 V
2 -23 V
2 -25 V
2 -27 V
2 -31 V
2 -35 V
2 -41 V
2 -49 V
2 -61 V
2 -84 V
2 -131 V
2 -347 V
2 221 V
2 189 V
1 99 V
2 67 V
2 50 V
2 41 V
2 33 V
2 28 V
2 25 V
2 22 V
2 20 V
2 17 V
2 16 V
2 15 V
2 13 V
2 13 V
2 11 V
2 11 V
2 10 V
2 9 V
2 9 V
2 8 V
2 8 V
2 7 V
2 7 V
2 7 V
2 6 V
2 6 V
2 6 V
2 6 V
2 5 V
2 5 V
2 4 V
1 5 V
2 4 V
2 5 V
2 3 V
2 4 V
2 4 V
2 4 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 2 V
2 3 V
2 2 V
2 2 V
2 3 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 1 V
2 2 V
2 2 V
2 1 V
2 2 V
2 1 V
2 2 V
1 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
currentpoint stroke M
2 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -2 V
1 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -2 V
2 -3 V
1 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -4 V
2 -3 V
2 -3 V
2 -3 V
2 -4 V
2 -3 V
2 -4 V
2 -3 V
2 -4 V
2 -3 V
1 -4 V
2 -4 V
2 -3 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -6 V
2 -5 V
2 -5 V
2 -6 V
2 -6 V
2 -5 V
2 -6 V
2 -7 V
2 -6 V
2 -6 V
2 -7 V
1 -7 V
2 -7 V
2 -7 V
2 -8 V
2 -8 V
2 -8 V
2 -8 V
2 -8 V
2 -9 V
2 -10 V
2 -9 V
2 -10 V
2 -11 V
2 -11 V
2 -12 V
2 -12 V
2 -13 V
2 -13 V
2 -15 V
2 -16 V
2 -16 V
2 -18 V
2 -20 V
2 -21 V
2 -23 V
2 -27 V
2 -29 V
2 -34 V
2 -41 V
2 -49 V
2 -63 V
1 -88 V
2 -149 V
2 -662 V
2 638 V
2 160 V
2 91 V
2 65 V
2 50 V
2 40 V
2 34 V
2 30 V
2 26 V
2 23 V
2 21 V
2 19 V
2 18 V
2 16 V
2 15 V
2 14 V
2 13 V
2 13 V
2 12 V
2 11 V
2 10 V
2 10 V
2 10 V
2 9 V
2 9 V
2 8 V
2 8 V
2 8 V
1 8 V
2 7 V
2 7 V
2 7 V
2 6 V
2 7 V
2 6 V
2 6 V
2 6 V
2 5 V
2 6 V
2 5 V
2 5 V
2 5 V
2 5 V
2 5 V
2 5 V
2 4 V
2 5 V
2 4 V
2 4 V
2 5 V
2 4 V
2 4 V
2 4 V
2 3 V
2 4 V
2 4 V
2 4 V
2 3 V
2 4 V
1 3 V
2 3 V
2 4 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 3 V
2 2 V
2 3 V
2 3 V
2 2 V
2 3 V
2 2 V
2 3 V
2 2 V
2 3 V
2 2 V
2 2 V
2 3 V
2 2 V
2 2 V
2 2 V
2 3 V
2 2 V
1 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 1 V
2 2 V
2 2 V
2 2 V
2 2 V
2 1 V
2 2 V
2 2 V
2 1 V
2 2 V
2 2 V
2 1 V
2 2 V
2 1 V
2 2 V
2 2 V
2 1 V
2 2 V
1 1 V
2 2 V
2 1 V
2 2 V
2 1 V
2 1 V
2 2 V
2 1 V
2 2 V
2 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
1 1 V
currentpoint stroke M
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
currentpoint stroke M
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
LT1
4686 3226 M
(SWITCAP3 ac) Rshow
4770 3226 M
252 0 V
840 3414 M
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
currentpoint stroke M
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
3 0 V
2 -1 V
2 0 V
2 0 V
2 -1 V
2 0 V
3 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
3 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
3 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
3 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
3 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -3 V
3 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -2 V
3 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
3 -4 V
2 -3 V
2 -3 V
2 -4 V
2 -3 V
2 -4 V
3 -3 V
2 -4 V
2 -4 V
2 -3 V
2 -4 V
2 -4 V
2 -4 V
3 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
3 -5 V
2 -4 V
2 -4 V
2 -4 V
2 -5 V
2 -4 V
3 -5 V
2 -4 V
2 -4 V
2 -5 V
2 -5 V
2 -4 V
3 -5 V
2 -4 V
2 -5 V
2 -5 V
currentpoint stroke M
2 -4 V
2 -5 V
3 -5 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -5 V
3 -5 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -5 V
3 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
3 -6 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
3 -5 V
2 -6 V
2 -5 V
2 -5 V
2 -5 V
2 -6 V
3 -5 V
2 -5 V
2 -6 V
2 -5 V
2 -6 V
2 -5 V
3 -5 V
2 -6 V
2 -5 V
2 -6 V
2 -5 V
2 -6 V
3 -6 V
2 -5 V
2 -6 V
2 -6 V
2 -5 V
2 -6 V
2 -6 V
3 -6 V
2 -6 V
2 -5 V
2 -6 V
2 -6 V
2 -6 V
3 -6 V
2 -6 V
2 -7 V
2 -6 V
2 -6 V
2 -6 V
3 -7 V
2 -6 V
2 -6 V
2 -7 V
2 -6 V
2 -7 V
3 -7 V
2 -6 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
3 -7 V
2 -7 V
2 -7 V
2 -8 V
2 -7 V
2 -8 V
3 -7 V
2 -8 V
2 -8 V
2 -8 V
2 -8 V
2 -8 V
3 -9 V
2 -8 V
2 -9 V
2 -9 V
2 -9 V
2 -9 V
3 -9 V
2 -10 V
2 -10 V
2 -10 V
2 -10 V
2 -11 V
3 -11 V
2 -11 V
2 -12 V
2 -11 V
2 -13 V
2 -13 V
3 -13 V
2 -14 V
2 -14 V
2 -15 V
2 -16 V
2 -17 V
3 -17 V
2 -19 V
2 -20 V
2 -21 V
2 -24 V
2 -25 V
3 -27 V
2 -30 V
2 -35 V
2 -38 V
2 -44 V
2 -51 V
3 -56 V
2 -52 V
2 -21 V
2 26 V
2 50 V
2 50 V
2 44 V
3 38 V
2 33 V
2 28 V
2 25 V
2 22 V
2 19 V
3 18 V
2 16 V
2 15 V
2 14 V
2 12 V
2 12 V
3 10 V
2 11 V
2 9 V
2 9 V
2 8 V
2 8 V
3 7 V
2 7 V
2 7 V
2 6 V
2 6 V
2 6 V
3 5 V
2 5 V
2 5 V
2 4 V
2 5 V
2 4 V
3 4 V
2 4 V
2 4 V
2 3 V
2 4 V
2 3 V
3 3 V
2 3 V
2 3 V
2 3 V
2 2 V
2 3 V
3 2 V
2 3 V
2 2 V
2 2 V
2 2 V
2 2 V
3 2 V
2 2 V
2 2 V
2 1 V
2 2 V
2 1 V
3 2 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
3 2 V
2 1 V
2 1 V
2 1 V
2 1 V
2 0 V
3 1 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 -1 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
3 0 V
2 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
3 0 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
3 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
3 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
3 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
3 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
3 -2 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
3 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
3 -2 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
3 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
3 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
3 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
3 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -2 V
3 -1 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
3 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -2 V
3 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
3 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
3 -2 V
2 -2 V
2 -3 V
2 -2 V
2 -2 V
2 -2 V
3 -2 V
2 -3 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
3 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -2 V
2 -3 V
3 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -2 V
3 -3 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -3 V
3 -3 V
2 -3 V
2 -3 V
currentpoint stroke M
2 -3 V
2 -3 V
2 -3 V
3 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -4 V
2 -3 V
3 -3 V
2 -4 V
2 -3 V
2 -3 V
2 -4 V
2 -4 V
3 -3 V
2 -4 V
2 -4 V
2 -3 V
2 -4 V
2 -4 V
3 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -5 V
2 -4 V
3 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
3 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -6 V
2 -5 V
3 -6 V
2 -6 V
2 -6 V
2 -6 V
2 -6 V
2 -7 V
3 -6 V
2 -7 V
2 -7 V
2 -8 V
2 -7 V
2 -8 V
3 -8 V
2 -8 V
2 -8 V
2 -9 V
2 -10 V
2 -9 V
3 -10 V
2 -10 V
2 -11 V
2 -12 V
2 -12 V
2 -12 V
3 -14 V
2 -14 V
2 -15 V
2 -16 V
2 -18 V
2 -18 V
3 -21 V
2 -22 V
2 -24 V
2 -28 V
2 -31 V
2 -35 V
3 -42 V
2 -48 V
2 -58 V
2 -64 V
2 -47 V
2 12 V
3 58 V
2 62 V
2 54 V
2 45 V
2 38 V
2 33 V
3 29 V
2 26 V
2 23 V
2 20 V
2 20 V
2 17 V
3 16 V
2 15 V
2 14 V
2 14 V
2 12 V
2 12 V
3 11 V
2 11 V
2 10 V
2 9 V
2 9 V
2 9 V
3 9 V
2 8 V
2 8 V
2 7 V
2 7 V
2 7 V
2 7 V
3 7 V
2 6 V
2 6 V
2 6 V
2 6 V
2 5 V
3 6 V
2 5 V
2 5 V
2 5 V
2 5 V
2 5 V
3 5 V
2 4 V
2 5 V
2 4 V
2 4 V
2 4 V
3 5 V
2 3 V
2 4 V
2 4 V
2 4 V
2 4 V
3 3 V
2 4 V
2 3 V
2 4 V
2 3 V
2 3 V
3 3 V
2 4 V
2 3 V
2 3 V
2 3 V
2 3 V
3 3 V
2 2 V
2 3 V
2 3 V
2 3 V
2 2 V
3 3 V
2 3 V
2 2 V
2 3 V
2 2 V
2 3 V
3 2 V
2 2 V
2 3 V
2 2 V
2 2 V
2 3 V
3 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
3 2 V
2 3 V
2 2 V
2 1 V
2 2 V
2 2 V
3 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 1 V
3 2 V
2 2 V
2 2 V
2 1 V
2 2 V
2 2 V
2 1 V
3 2 V
2 2 V
2 1 V
2 2 V
2 1 V
2 2 V
3 1 V
2 2 V
2 1 V
2 2 V
2 1 V
2 2 V
3 1 V
2 2 V
2 1 V
2 1 V
2 2 V
2 1 V
3 2 V
2 1 V
2 1 V
2 2 V
2 1 V
2 1 V
3 1 V
2 2 V
2 1 V
2 1 V
2 1 V
2 2 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 2 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 0 V
3 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
3 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
3 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 0 V
3 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
3 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
3 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 0 V
3 1 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
3 0 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
3 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
3 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
3 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
currentpoint stroke M
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
3 0 V
currentpoint stroke M
2 0 V
2 0 V
2 0 V
stroke
grestore
end
showpage
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11.00 mul neg translate

-10.125 671.625 translate 0.562 0.562 scale 0 rotate

/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
672 211 M
0 1230 V
LTb
672 320 M
63 0 V
1194 0 R
-63 0 V
588 320 M
(0.9) Rshow
672 845 M
63 0 V
1194 0 R
-63 0 V
588 845 M
(0.95) Rshow
672 1344 M
63 0 V
1194 0 R
-63 0 V
-1278 0 R
(1) Rshow
964 211 M
0 63 V
0 1167 R
0 -63 V
964 71 M
(1e5) Cshow
1257 211 M
0 63 V
0 1167 R
0 -63 V
1257 71 M
(2e5) Cshow
1549 211 M
0 63 V
0 1167 R
0 -63 V
1549 71 M
(3e5) Cshow
1841 211 M
0 63 V
0 1167 R
0 -63 V
1841 71 M
(4e5) Cshow
672 211 M
1257 0 V
0 1230 V
-1257 0 V
672 211 L
LT0
672 1344 M
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
1 -1 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
1 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
1 0 V
currentpoint stroke M
2 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
1 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 0 V
1 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 1 V
2 0 V
1 0 V
2 0 V
1 1 V
2 0 V
1 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
1 -2 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -2 V
1 -1 V
1 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
1 -2 V
2 -1 V
1 -2 V
2 -1 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -2 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
1 0 V
1 1 V
2 0 V
1 1 V
2 1 V
1 1 V
2 0 V
1 1 V
2 1 V
1 1 V
2 1 V
1 1 V
2 2 V
1 1 V
1 1 V
2 1 V
1 2 V
2 1 V
1 2 V
2 1 V
1 2 V
2 1 V
1 2 V
2 2 V
1 1 V
2 2 V
1 2 V
1 2 V
2 2 V
1 1 V
2 2 V
1 2 V
2 2 V
1 2 V
2 2 V
1 2 V
2 2 V
1 2 V
2 2 V
1 2 V
1 2 V
2 2 V
1 2 V
2 2 V
1 1 V
2 2 V
1 2 V
2 1 V
1 2 V
2 1 V
1 2 V
2 1 V
1 1 V
1 1 V
2 1 V
1 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -2 V
1 -2 V
2 -2 V
1 -3 V
2 -4 V
1 -3 V
2 -4 V
1 -5 V
2 -5 V
1 -6 V
2 -6 V
1 -7 V
2 -7 V
1 -8 V
1 -9 V
2 -10 V
1 -10 V
2 -11 V
currentpoint stroke M
1 -12 V
2 -13 V
1 -14 V
2 -14 V
1 -16 V
2 -17 V
1 -17 V
2 -19 V
1 -20 V
1 -21 V
2 -23 V
1 -24 V
2 -25 V
1 -26 V
2 -28 V
1 -29 V
2 -31 V
1 -33 V
2 -34 V
1 -36 V
2 -37 V
1 -40 V
1 -41 V
2 -43 V
1 -45 V
2 -47 V
1 -48 V
2 -51 V
1 -53 V
1 -17 V
LT1
672 1289 M
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 0 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
currentpoint stroke M
1 1 V
2 0 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
1 1 V
2 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 0 V
1 -1 V
2 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
2 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
2 -1 V
1 -2 V
2 -1 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -1 V
1 -2 V
2 -2 V
1 -1 V
2 -2 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -2 V
2 -1 V
1 -2 V
2 -2 V
1 -2 V
2 -1 V
2 -2 V
1 -2 V
2 -2 V
1 -2 V
2 -1 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -1 V
1 -2 V
2 -2 V
1 -1 V
2 -2 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
2 -1 V
2 -1 V
1 -2 V
2 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
1 1 V
2 1 V
2 2 V
1 1 V
2 2 V
2 1 V
1 2 V
2 1 V
1 2 V
2 1 V
2 2 V
1 1 V
2 2 V
1 2 V
2 1 V
2 2 V
1 1 V
2 2 V
1 1 V
2 2 V
2 1 V
1 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
2 -2 V
1 -3 V
2 -3 V
1 -3 V
2 -4 V
2 -4 V
1 -5 V
2 -5 V
1 -6 V
2 -7 V
2 -7 V
1 -8 V
2 -9 V
1 -10 V
2 -10 V
2 -11 V
1 -13 V
2 -13 V
2 -14 V
1 -16 V
2 -16 V
1 -18 V
2 -19 V
2 -21 V
1 -21 V
2 -23 V
1 -25 V
2 -26 V
2 -28 V
1 -30 V
2 -31 V
1 -33 V
2 -35 V
2 -37 V
1 -39 V
2 -41 V
1 -43 V
2 -46 V
2 -47 V
1 -50 V
2 -53 V
1 -47 V
stroke
grestore
end
showpage
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Nov 17 13:57:44 1998
%%EndDocument

 endTexFig
 1328 4568 a FH(Figure)h(4.11:)43 b(Filter)29 b(frequency)h(resp)s
(onse)p 1093 4898 2044 4 v 1091 5123 4 226 v 1143 5056
a(T)-8 b(ransien)m(t)30 b(sim)m(ulation)e(of)j(bias)e(net)m(w)m(ork)p
2788 5123 V 243 w(9779)j(s)p 3135 5123 V 1093 5127 2044
4 v 1091 5353 4 226 v 1143 5285 a(2000)g(p)s(oin)m(t)d
(frequency-domain)h(sim)m(ulation)p 2788 5353 V 188 w(20)h(s)p
3135 5353 V 1093 5356 2044 4 v eop
%%Page: 87 100
87 99 bop 3809 -200 a FH(87)450 7 y
 26049576 18495194 -65781 44994723 9998827 52164935 startTexFig
 450 7 a
%%BeginDocument: dat/el5_mag_tran.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11.00 mul neg translate

-28.125 657.562 translate 0.562 0.562 scale 0 rotate

/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
840 351 M
0 3218 V
LTb
840 351 M
63 0 V
4266 0 R
-63 0 V
756 351 M
(1e-04) Rshow
840 576 M
31 0 V
4298 0 R
-31 0 V
840 708 M
31 0 V
4298 0 R
-31 0 V
840 801 M
31 0 V
4298 0 R
-31 0 V
840 874 M
31 0 V
4298 0 R
-31 0 V
840 933 M
31 0 V
4298 0 R
-31 0 V
840 983 M
31 0 V
4298 0 R
-31 0 V
840 1027 M
31 0 V
4298 0 R
-31 0 V
840 1065 M
31 0 V
4298 0 R
-31 0 V
840 1099 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-03) Rshow
840 1324 M
31 0 V
4298 0 R
-31 0 V
840 1456 M
31 0 V
4298 0 R
-31 0 V
840 1550 M
31 0 V
4298 0 R
-31 0 V
840 1622 M
31 0 V
4298 0 R
-31 0 V
840 1681 M
31 0 V
4298 0 R
-31 0 V
840 1731 M
31 0 V
4298 0 R
-31 0 V
840 1775 M
31 0 V
4298 0 R
-31 0 V
840 1813 M
31 0 V
4298 0 R
-31 0 V
840 1847 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-02) Rshow
840 2073 M
31 0 V
4298 0 R
-31 0 V
840 2204 M
31 0 V
4298 0 R
-31 0 V
840 2298 M
31 0 V
4298 0 R
-31 0 V
840 2370 M
31 0 V
4298 0 R
-31 0 V
840 2430 M
31 0 V
4298 0 R
-31 0 V
840 2480 M
31 0 V
4298 0 R
-31 0 V
840 2523 M
31 0 V
4298 0 R
-31 0 V
840 2561 M
31 0 V
4298 0 R
-31 0 V
840 2596 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-01) Rshow
840 2821 M
31 0 V
4298 0 R
-31 0 V
840 2953 M
31 0 V
4298 0 R
-31 0 V
840 3046 M
31 0 V
4298 0 R
-31 0 V
840 3119 M
31 0 V
4298 0 R
-31 0 V
840 3178 M
31 0 V
4298 0 R
-31 0 V
840 3228 M
31 0 V
4298 0 R
-31 0 V
840 3271 M
31 0 V
4298 0 R
-31 0 V
840 3310 M
31 0 V
4298 0 R
-31 0 V
840 3344 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e+00) Rshow
840 3569 M
31 0 V
4298 0 R
-31 0 V
840 351 M
0 63 V
0 3155 R
0 -63 V
840 211 M
(0.0e+00) Cshow
1627 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(2.0e+05) Cshow
2414 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(4.0e+05) Cshow
3201 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(6.0e+05) Cshow
3988 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(8.0e+05) Cshow
4775 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(1.0e+06) Cshow
840 351 M
4329 0 V
0 3218 V
-4329 0 V
840 351 L
140 1960 M
currentpoint gsave translate 90 rotate 0 0 M
(|V| Log scale) Cshow
grestore
3004 -69 M
(Freqency Hz) Cshow
3004 3709 M
(Magnitude of output voltage) Cshow
LT0
4686 3366 M
(SWITCAP3 ac) Rshow
4770 3366 M
252 0 V
840 3342 M
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
currentpoint stroke M
2 0 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
3 0 V
2 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
3 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
3 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
3 -1 V
2 -2 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
3 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -2 V
3 -3 V
2 -3 V
2 -4 V
2 -3 V
2 -3 V
2 -4 V
3 -3 V
2 -4 V
2 -4 V
2 -4 V
2 -3 V
2 -5 V
3 -4 V
2 -4 V
2 -4 V
2 -5 V
2 -4 V
2 -5 V
3 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
3 -5 V
2 -5 V
2 -6 V
2 -5 V
2 -6 V
2 -6 V
2 -5 V
3 -6 V
2 -6 V
2 -6 V
2 -6 V
2 -6 V
2 -6 V
3 -6 V
2 -6 V
2 -7 V
2 -6 V
2 -6 V
2 -7 V
3 -6 V
2 -7 V
2 -6 V
2 -7 V
2 -7 V
2 -6 V
3 -7 V
2 -7 V
2 -7 V
2 -6 V
currentpoint stroke M
2 -7 V
2 -7 V
3 -7 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
3 -7 V
2 -8 V
2 -7 V
2 -7 V
2 -7 V
2 -8 V
3 -7 V
2 -7 V
2 -8 V
2 -7 V
2 -7 V
2 -8 V
3 -7 V
2 -8 V
2 -7 V
2 -8 V
2 -7 V
2 -8 V
3 -8 V
2 -7 V
2 -8 V
2 -8 V
2 -7 V
2 -8 V
3 -8 V
2 -8 V
2 -7 V
2 -8 V
2 -8 V
2 -8 V
3 -8 V
2 -8 V
2 -8 V
2 -8 V
2 -9 V
2 -8 V
3 -8 V
2 -8 V
2 -8 V
2 -9 V
2 -8 V
2 -9 V
2 -8 V
3 -9 V
2 -8 V
2 -9 V
2 -8 V
2 -9 V
2 -9 V
3 -9 V
2 -9 V
2 -9 V
2 -9 V
2 -9 V
2 -9 V
3 -9 V
2 -10 V
2 -9 V
2 -9 V
2 -10 V
2 -10 V
3 -9 V
2 -10 V
2 -10 V
2 -10 V
2 -10 V
2 -11 V
3 -10 V
2 -10 V
2 -11 V
2 -11 V
2 -11 V
2 -11 V
3 -11 V
2 -11 V
2 -12 V
2 -12 V
2 -11 V
2 -12 V
3 -13 V
2 -12 V
2 -13 V
2 -13 V
2 -13 V
2 -14 V
3 -13 V
2 -15 V
2 -14 V
2 -15 V
2 -15 V
2 -15 V
3 -16 V
2 -17 V
2 -17 V
2 -17 V
2 -18 V
2 -19 V
3 -20 V
2 -20 V
2 -21 V
2 -22 V
2 -23 V
2 -25 V
3 -26 V
2 -27 V
2 -29 V
2 -32 V
2 -33 V
2 -37 V
3 -40 V
2 -45 V
2 -50 V
2 -56 V
2 -65 V
2 -74 V
3 -82 V
2 -76 V
2 -32 V
2 39 V
2 73 V
2 73 V
2 65 V
3 55 V
2 48 V
2 42 V
2 36 V
2 32 V
2 29 V
3 26 V
2 24 V
2 21 V
2 20 V
2 18 V
2 17 V
3 16 V
2 15 V
2 14 V
2 13 V
2 12 V
2 11 V
3 11 V
2 10 V
2 10 V
2 9 V
2 9 V
2 8 V
3 8 V
2 7 V
2 7 V
2 7 V
2 7 V
2 6 V
3 6 V
2 5 V
2 6 V
2 5 V
2 5 V
2 5 V
3 4 V
2 5 V
2 4 V
2 4 V
2 4 V
2 4 V
3 3 V
2 4 V
2 3 V
2 3 V
2 3 V
2 3 V
3 3 V
2 2 V
2 3 V
2 2 V
2 3 V
2 2 V
3 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
3 1 V
2 2 V
2 2 V
2 1 V
2 1 V
2 2 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 -1 V
3 0 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
3 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 0 V
3 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 0 V
3 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
3 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
3 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -1 V
3 -2 V
2 -1 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
3 -1 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
2 -2 V
3 -1 V
2 -2 V
2 -2 V
2 -2 V
2 -1 V
2 -2 V
3 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
3 -2 V
2 -1 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
3 -3 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
2 -2 V
3 -2 V
2 -2 V
2 -3 V
2 -2 V
2 -2 V
2 -2 V
3 -3 V
2 -2 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
3 -3 V
2 -2 V
2 -2 V
2 -3 V
2 -2 V
2 -3 V
3 -2 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -2 V
3 -3 V
2 -3 V
2 -2 V
2 -3 V
2 -3 V
2 -2 V
3 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -2 V
2 -3 V
3 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -4 V
3 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -3 V
2 -4 V
3 -3 V
2 -3 V
2 -4 V
2 -3 V
2 -3 V
2 -4 V
3 -3 V
2 -4 V
2 -4 V
2 -3 V
2 -4 V
2 -3 V
3 -4 V
2 -4 V
2 -4 V
2 -3 V
2 -4 V
2 -4 V
3 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -4 V
2 -5 V
3 -4 V
2 -4 V
2 -4 V
currentpoint stroke M
2 -5 V
2 -4 V
2 -5 V
3 -4 V
2 -5 V
2 -4 V
2 -5 V
2 -5 V
2 -5 V
3 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
2 -5 V
3 -5 V
2 -6 V
2 -5 V
2 -6 V
2 -5 V
2 -6 V
3 -6 V
2 -6 V
2 -6 V
2 -6 V
2 -6 V
2 -7 V
3 -6 V
2 -7 V
2 -6 V
2 -7 V
2 -7 V
2 -7 V
2 -7 V
3 -8 V
2 -7 V
2 -8 V
2 -8 V
2 -8 V
2 -8 V
3 -8 V
2 -9 V
2 -8 V
2 -9 V
2 -10 V
2 -9 V
3 -10 V
2 -10 V
2 -10 V
2 -11 V
2 -11 V
2 -11 V
3 -12 V
2 -12 V
2 -12 V
2 -13 V
2 -14 V
2 -14 V
3 -15 V
2 -15 V
2 -16 V
2 -16 V
2 -18 V
2 -19 V
3 -19 V
2 -21 V
2 -22 V
2 -24 V
2 -25 V
2 -27 V
3 -30 V
2 -33 V
2 -36 V
2 -40 V
2 -45 V
2 -52 V
3 -61 V
2 -71 V
2 -85 V
2 -93 V
2 -70 V
2 19 V
3 85 V
2 90 V
2 79 V
2 66 V
2 56 V
2 48 V
3 43 V
2 37 V
2 34 V
2 30 V
2 28 V
2 26 V
3 24 V
2 22 V
2 20 V
2 20 V
2 18 V
2 17 V
3 17 V
2 15 V
2 15 V
2 14 V
2 13 V
2 13 V
3 13 V
2 11 V
2 12 V
2 11 V
2 10 V
2 11 V
2 10 V
3 9 V
2 9 V
2 9 V
2 9 V
2 9 V
2 8 V
3 8 V
2 8 V
2 7 V
2 7 V
2 8 V
2 7 V
3 6 V
2 7 V
2 7 V
2 6 V
2 6 V
2 6 V
3 6 V
2 6 V
2 6 V
2 5 V
2 6 V
2 5 V
3 6 V
2 5 V
2 5 V
2 5 V
2 5 V
2 5 V
3 4 V
2 5 V
2 4 V
2 5 V
2 4 V
2 5 V
3 4 V
2 4 V
2 4 V
2 4 V
2 4 V
2 4 V
3 4 V
2 4 V
2 3 V
2 4 V
2 4 V
2 3 V
3 4 V
2 3 V
2 4 V
2 3 V
2 4 V
2 3 V
3 3 V
2 3 V
2 3 V
2 4 V
2 3 V
2 3 V
3 3 V
2 3 V
2 3 V
2 2 V
2 3 V
2 3 V
3 3 V
2 3 V
2 2 V
2 3 V
2 3 V
2 2 V
3 3 V
2 2 V
2 3 V
2 2 V
2 3 V
2 2 V
2 3 V
3 2 V
2 3 V
2 2 V
2 2 V
2 2 V
2 3 V
3 2 V
2 2 V
2 2 V
2 3 V
2 2 V
2 2 V
3 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
3 2 V
2 2 V
2 2 V
2 2 V
2 2 V
2 2 V
3 2 V
2 1 V
2 2 V
2 2 V
2 2 V
2 2 V
3 1 V
2 2 V
2 2 V
2 2 V
2 1 V
2 2 V
3 2 V
2 1 V
2 2 V
2 2 V
2 1 V
2 2 V
3 1 V
2 2 V
2 1 V
2 2 V
2 2 V
2 1 V
3 2 V
2 1 V
2 2 V
2 1 V
2 1 V
2 2 V
3 1 V
2 2 V
2 1 V
2 1 V
2 2 V
2 1 V
3 2 V
2 1 V
2 1 V
2 2 V
2 1 V
2 1 V
3 1 V
2 2 V
2 1 V
2 1 V
2 2 V
2 1 V
2 1 V
3 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 2 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 2 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 0 V
3 1 V
2 1 V
2 1 V
2 1 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
3 1 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
3 1 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
3 1 V
2 1 V
2 0 V
2 1 V
2 1 V
2 1 V
3 0 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
3 1 V
2 0 V
2 1 V
2 1 V
2 1 V
2 0 V
2 1 V
3 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
3 1 V
2 0 V
2 1 V
2 1 V
2 0 V
2 1 V
3 0 V
2 1 V
2 1 V
2 0 V
2 1 V
2 1 V
3 0 V
2 1 V
2 0 V
2 1 V
2 1 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 1 V
3 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
3 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 1 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
3 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 1 V
3 0 V
2 1 V
currentpoint stroke M
2 0 V
2 1 V
2 0 V
2 1 V
3 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 1 V
2 0 V
3 0 V
2 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
3 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 1 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 1 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -1 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
currentpoint stroke M
2 0 V
2 0 V
2 0 V
LT1
4686 3226 M
(SWITCAP3 tran/FFT) Rshow
4854 3226 D
1470 3337 D
1863 3339 D
2257 3334 D
2414 3314 D
2650 2706 D
3044 2079 D
3595 829 D
4775 2013 D
LT2
4686 3086 M
(HSPICE tran/FFT) Rshow
4854 3086 A
1470 3335 A
1863 3339 A
2257 3338 A
2414 3310 A
2650 2743 A
3044 1994 A
3595 1205 A
4775 1932 A
stroke
grestore
end
showpage
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11.00 mul neg translate

-10.125 671.625 translate 0.562 0.562 scale 0 rotate

/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
672 211 M
0 1230 V
LTb
672 320 M
63 0 V
1194 0 R
-63 0 V
588 320 M
(0.9) Rshow
672 845 M
63 0 V
1194 0 R
-63 0 V
588 845 M
(0.95) Rshow
672 1344 M
63 0 V
1194 0 R
-63 0 V
-1278 0 R
(1) Rshow
964 211 M
0 63 V
0 1167 R
0 -63 V
964 71 M
(1e5) Cshow
1257 211 M
0 63 V
0 1167 R
0 -63 V
1257 71 M
(2e5) Cshow
1549 211 M
0 63 V
0 1167 R
0 -63 V
1549 71 M
(3e5) Cshow
1841 211 M
0 63 V
0 1167 R
0 -63 V
1841 71 M
(4e5) Cshow
672 211 M
1257 0 V
0 1230 V
-1257 0 V
672 211 L
LT0
672 1289 M
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 0 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
currentpoint stroke M
1 1 V
2 0 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
1 1 V
2 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 0 V
1 -1 V
2 0 V
2 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -2 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
2 -1 V
2 -2 V
1 -1 V
2 -2 V
1 -1 V
2 -2 V
2 -1 V
1 -2 V
2 -1 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -1 V
1 -2 V
2 -2 V
1 -1 V
2 -2 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -2 V
2 -1 V
1 -2 V
2 -2 V
1 -2 V
2 -1 V
2 -2 V
1 -2 V
2 -2 V
1 -2 V
2 -1 V
2 -2 V
1 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -1 V
1 -2 V
2 -2 V
1 -1 V
2 -2 V
2 -1 V
1 -2 V
2 -1 V
1 -2 V
2 -1 V
2 -1 V
1 -2 V
2 -1 V
2 -1 V
1 -2 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
1 1 V
2 1 V
2 2 V
1 1 V
2 2 V
2 1 V
1 2 V
2 1 V
1 2 V
2 1 V
2 2 V
1 1 V
2 2 V
1 2 V
2 1 V
2 2 V
1 1 V
2 2 V
1 1 V
2 2 V
2 1 V
1 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 0 V
2 1 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 -1 V
2 -1 V
1 -2 V
2 -1 V
2 -2 V
1 -3 V
2 -3 V
1 -3 V
2 -4 V
2 -4 V
1 -5 V
2 -5 V
1 -6 V
2 -7 V
2 -7 V
1 -8 V
2 -9 V
1 -10 V
2 -10 V
2 -11 V
1 -13 V
2 -13 V
2 -14 V
1 -16 V
2 -16 V
1 -18 V
2 -19 V
2 -21 V
1 -21 V
2 -23 V
1 -25 V
2 -26 V
2 -28 V
1 -30 V
2 -31 V
1 -33 V
2 -35 V
2 -37 V
1 -39 V
2 -41 V
1 -43 V
2 -46 V
2 -47 V
1 -50 V
2 -53 V
1 -47 V
LT1
1140 1129 D
1432 1212 D
1724 1045 D
1841 441 D
LT2
1140 1071 A
1432 1190 A
1724 1158 A
1841 347 A
stroke
grestore
end
showpage
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Nov 17 18:42:01 1998
%%EndDocument

 endTexFig
 815 2546 a FH(Figure)30 b(4.12:)42 b(Sim)m(ulating)28
b(frequency)i(resp)s(onse)g(using)e(transien)m(t/FFT)300
2826 y(The)44 b(solid)e(curv)m(e)j(is)e(the)h(result)g(of)g(the)g
(frequency-domain)f(sim)m(ulation)g(in)f(SWITCAP3)i(\(same)300
3052 y(curv)m(e)38 b(as)g(in)f(Fig.)h(4.11.\))64 b(Note,)41
b(that)e(the)f(p)s(oin)m(ts)e(from)i(SWITCAP3)f(sim)m(ulation)f(matc)m
(h)i(closely)300 3278 y(to)d(the)f(frequency-domain)f(sim)m(ulation)f
(curv)m(e,)j(while)d(p)s(oin)m(ts)h(from)h(HSPICE)e(sim)m(ulation)g
(deviate.)300 3504 y(Although,)j(the)g(sim)m(ulation)d(in)h(HSPICE)h
(is)f(more)i(detailed,)g(the)f(deviation)g(is)g(mostly)g(due)f(to)j
(the)300 3729 y(n)m(umerical)26 b(error)i(in)m(tro)s(duced)e(b)m(y)i
(the)g(n)m(umerical)e(in)m(tegration)i(algorithm.)38
b(A)m(t)29 b(700)g(kHz)g(the)f(error)f(is)300 3955 y(more)j
(signi\014can)m(t)f(since)g(the)h(magnitude)f(is)g(small.)39
b(If)29 b(the)h(maxim)m(um)f(time)h(step)g(for)f(the)h(n)m(umerical)300
4181 y(in)m(tegration)g(algorithm)f(is)f(reduced,)i(\(b)m(y)g(setting)g
(the)g Fw(delmax)e FH(option)h(in)f(HSPICE,\))i(the)g(results)e(in)300
4407 y(HSPICE)34 b(b)s(ecome)i(closer)f(to)i(those)f(from)f(SWITCAP3.)
55 b(Ho)m(w)m(ev)m(er,)39 b(reducing)34 b(the)i(time)f(step,)i(de-)300
4633 y(creases)32 b(the)g(sim)m(ulation)d(sp)s(eed)i(dramatically)-8
b(.)43 b(The)30 b(columns)g(2)i(and)f(3)h(of)f(T)-8 b(able)31
b(4.1)i(list)d(the)h(CPU)300 4859 y(time)h(for)h(SWITCAP3)f(and)g
(HSPICE)f(transien)m(t)h(sim)m(ulations,)g(resp)s(ectiv)m(ely)-8
b(.)47 b(The)32 b Fw(delmax)e FH(option)300 5084 y(w)m(as)25
b FC(not)h FH(set)g(for)e(the)i(HSPICE)e(sim)m(ulations.)36
b(The)25 b(sim)m(ulations)e(in)h(SWITCAP3)g(are)i(appro)m(ximately)300
5310 y(10)31 b(times)f(faster)h(than)f(in)f(HSPICE.)p
eop
%%Page: 88 101
88 100 bop 3809 -200 a FH(88)884 153 y(T)-8 b(able)30
b(4.1:)41 b(Comparison)29 b(of)i(CPU)f(time)g(for)g(transien)m(t)g(sim)
m(ulation.)p 977 183 2247 4 v 975 352 4 170 v 1026 301
a(F)-8 b(req.)p 1276 352 V 110 w(Switcap3)p 1743 352
V 127 w(HSPICE)p 2211 352 V 98 w(Start)p 2563 352 V 150
w(Stop)p 2915 352 V 170 w(Step)p 3222 352 V 975 521 V
1071 471 a(kHz)p 1276 521 V 100 w(CPU)30 b(sec.)p 1743
521 V 101 w(CPU)g(sec.)p 2211 521 V 100 w FG(\026)p FH(sec)p
2563 521 V 181 w FG(\026)p FH(sec)p 2915 521 V 181 w
FG(n)p FH(sec)p 3222 521 V 977 525 2247 4 v 977 541 V
975 711 4 170 v 1091 660 a(160)p 1276 711 V 287 w(3170)p
1743 711 V 242 w(35258)p 2211 711 V 102 w(80.250)p 2563
711 V 102 w(143.75)p 2915 711 V 102 w(15.26)p 3222 711
V 977 714 2247 4 v 975 883 4 170 v 1091 833 a(260)p 1276
883 V 287 w(3305)p 1743 883 V 242 w(36841)p 2211 883
V 102 w(80.769)p 2563 883 V 102 w(138.46)p 2915 883 V
102 w(14.09)p 3222 883 V 977 887 2247 4 v 975 1056 4
170 v 1091 1005 a(360)p 1276 1056 V 287 w(3489)p 1743
1056 V 242 w(38933)p 2211 1056 V 102 w(83.333)p 2563
1056 V 102 w(141.66)p 2915 1056 V 102 w(14.24)p 3222
1056 V 977 1059 2247 4 v 975 1229 4 170 v 1091 1178 a(400)p
1276 1229 V 287 w(3335)p 1743 1229 V 242 w(40172)p 2211
1229 V 102 w(80.0)p 2563 1229 V 192 w(140.0)p 2915 1229
V 147 w(14.65)p 3222 1229 V 977 1232 2247 4 v 975 1401
4 170 v 1091 1351 a(460)p 1276 1401 V 287 w(3319)p 1743
1401 V 242 w(38100)p 2211 1401 V 102 w(80.435)p 2563
1401 V 102 w(139.13)p 2915 1401 V 102 w(14.33)p 3222
1401 V 977 1405 2247 4 v 975 1574 4 170 v 1091 1523 a(560)p
1276 1574 V 287 w(3322)p 1743 1574 V 242 w(34996)p 2211
1574 V 102 w(80.357)p 2563 1574 V 102 w(139.28)p 2915
1574 V 102 w(14.39)p 3222 1574 V 977 1577 2247 4 v 975
1747 4 170 v 1091 1696 a(700)p 1276 1747 V 287 w(3413)p
1743 1747 V 242 w(35051)p 2211 1747 V 102 w(80.0)p 2563
1747 V 192 w(140.0)p 2915 1747 V 147 w(14.65)p 3222 1747
V 977 1750 2247 4 v 975 1919 4 170 v 1046 1869 a(1000)p
1276 1919 V 287 w(3686)p 1743 1919 V 242 w(34239)p 2211
1919 V 102 w(80.0)p 2563 1919 V 192 w(140.0)p 2915 1919
V 147 w(14.65)p 3222 1919 V 977 1923 2247 4 v 977 1939
V 585 2101 3030 4 v 583 2270 4 170 v 1704 2220 a(HSPICE)f(OPTIONS)p
3613 2270 V 585 2274 3030 4 v 585 2290 V 583 2460 4 170
v 635 2409 a(absv=5e-12)p 1141 2460 V 101 w(relv=1e-12)p
1667 2460 V 101 w(gmin)g(=)h(1e-12)p 2393 2460 V 193
w(dcon=2)p 2922 2460 V 226 w(itl1=10000)p 3613 2460 V
585 2463 3030 4 v 583 2632 4 170 v 635 2582 a(absi=1e-12)p
1141 2632 V 123 w(reli=1e-12)p 1667 2632 V 123 w(gmindc)f(=)h(1e-12)p
2393 2632 V 102 w(gramp)g(=)g(6)p 2922 2632 V 100 w(limpts=500000)p
3613 2632 V 585 2636 3030 4 v 300 2893 a Fx(4.3.3)112
b(Distortion)36 b(sim)m(ulation)300 3178 y FH(Practical)f(SC)f(net)m(w)
m(orks)i(and)f(esp)s(ecially)e(SI)h(net)m(w)m(orks)i(con)m(tain)g
(nonlinearities.)52 b(In)34 b(addition,)h(the)300 3403
y(input)i(signal)h(can)h(b)s(e)g(20)h(p)s(ercen)m(t)f(of)g(the)g(bias)f
(signals,)i(or)g(ev)m(en)f(larger.)67 b(Hence,)42 b(the)d(frequency)300
3629 y(resp)s(onse)31 b(computed)h(under)e(the)i(small-signal)e
(assumption)g(is)h(only)g(an)h(appro)m(ximation.)44 b(It)32
b(is)f(also)300 3855 y(imp)s(ortan)m(t)h(to)i(consider)e(the)h
(distortion)e(due)h(to)i(the)f(nonlinearities.)45 b(The)33
b(distortion)e(can)j(b)s(e)e(sim-)300 4081 y(ulated)e(b)m(y)g(p)s
(erforming)e(a)j(transien)m(t)f(sim)m(ulation)f(with)g(a)h(sin)m
(usoidal)e(input)h(of)h(a)h(desired)e(frequency)-8 b(,)300
4307 y(taking)42 b(the)g(FFT)g(of)g(the)g(output)f(w)m(a)m(v)m(eform,)
46 b(and)41 b(examining)g(the)h(resulting)e(sp)s(ectrum)g(for)i(the)300
4532 y(desired)29 b(frequency)h(range.)536 4758 y(In)k(this)g(example,)
i(the)f(input)e(frequency)h(w)m(as)i(set)f(at)h(160)g(kHz.)55
b(The)34 b(the)h(sample-and-hold)300 4984 y(circuit,)43
b(at)f(the)f(input)f(of)h(the)h(\014lter,)h(w)m(as)f(adjusted)e(suc)m
(h)h(that)h(the)f(input)f(signal)g(curren)m(t)h(is)f(20)300
5210 y(p)s(ercen)m(t)27 b(of)g(the)g(bias)f(curren)m(ts.)40
b(The)26 b(transien)m(t)h(sim)m(ulation)e(included)f(13)k(cycles)f(of)g
(the)g(input)e(signal)p eop
%%Page: 89 102
89 101 bop 3809 -200 a FH(89)450 281 y
 26049576 17974197 3289088 3289088 21050163 15721840 startTexFig
 450 281 a
%%BeginDocument: dat/el5_tran.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
840 1960 M
4329 0 V
LTb
840 497 M
63 0 V
4266 0 R
-63 0 V
756 497 M
(-1) Rshow
840 1229 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(-0.5) Rshow
840 1960 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(0) Rshow
840 2691 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(0.5) Rshow
840 3423 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1) Rshow
840 351 M
0 63 V
0 3155 R
0 -63 V
840 211 M
(5.70e-04) Cshow
2172 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(5.72e-04) Cshow
3504 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(5.74e-04) Cshow
4836 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(5.76e-04) Cshow
840 351 M
4329 0 V
0 3218 V
-4329 0 V
840 351 L
140 1960 M
currentpoint gsave translate 90 rotate 0 0 M
(Voltage) Cshow
grestore
3004 -69 M
(seconds) Cshow
3004 3709 M
(One period of output waveform \(160 kHz\)) Cshow
LT0
4686 3366 M
(SWITCAP3) Rshow
4770 3366 M
252 0 V
840 2303 M
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 335 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 293 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 231 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 157 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 71 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 -19 V
3 0 V
2 0 V
3 0 V
currentpoint stroke M
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 -107 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 -189 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 -259 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 -313 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 -348 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 -360 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
currentpoint stroke M
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 -349 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 -317 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 -264 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 -196 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 -114 V
2 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 -27 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
currentpoint stroke M
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 63 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 149 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
2 226 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 289 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
2 333 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 357 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
currentpoint stroke M
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 358 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 251 V
LT1
4686 3226 M
(HSPICE) Rshow
4770 3226 M
252 0 V
840 1931 M
3 206 V
2 195 V
3 67 V
2 -48 V
3 -65 V
3 -32 V
2 -4 V
3 27 V
2 34 V
3 2 V
2 -26 V
3 -15 V
2 9 V
3 12 V
2 0 V
3 -5 V
2 -1 V
3 1 V
3 -1 V
2 0 V
3 2 V
2 0 V
3 -1 V
2 -1 V
3 1 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 -1 V
2 1 V
3 14 V
3 225 V
2 168 V
3 13 V
2 -51 V
3 -31 V
2 -23 V
3 -12 V
2 23 V
3 34 V
2 -2 V
3 -26 V
2 -10 V
3 11 V
3 9 V
2 -2 V
3 -4 V
2 1 V
3 0 V
2 -1 V
3 0 V
2 1 V
3 1 V
2 -1 V
3 -1 V
2 1 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 21 V
2 234 V
3 106 V
2 -17 V
3 -23 V
2 -12 V
3 -32 V
2 -22 V
3 28 V
3 37 V
2 -5 V
3 -27 V
2 -8 V
3 13 V
2 7 V
3 -4 V
2 -3 V
3 2 V
2 0 V
3 -2 V
2 0 V
3 2 V
3 1 V
2 -2 V
3 0 V
2 0 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 -1 V
2 1 V
3 -89 V
2 128 V
3 198 V
2 35 V
3 -7 V
3 12 V
2 -21 V
3 -53 V
2 -11 V
3 43 V
2 31 V
3 -18 V
2 -26 V
3 2 V
2 13 V
3 2 V
2 -5 V
3 0 V
3 2 V
2 -1 V
3 -2 V
2 1 V
3 2 V
2 0 V
3 -2 V
2 0 V
3 1 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 -159 V
3 204 V
3 116 V
2 10 V
3 26 V
2 19 V
3 -43 V
2 -60 V
3 5 V
2 54 V
3 19 V
2 -26 V
3 -21 V
3 8 V
2 12 V
3 -2 V
2 -5 V
3 2 V
2 2 V
3 -2 V
2 -2 V
3 1 V
2 2 V
3 0 V
2 -2 V
3 0 V
3 1 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 -127 V
2 -41 V
3 180 V
2 42 V
3 30 V
2 55 V
3 -5 V
2 -73 V
3 -45 V
2 36 V
3 51 V
3 -2 V
2 -33 V
3 -7 V
2 13 V
3 6 V
2 -6 V
3 -1 V
2 4 V
3 0 V
2 -4 V
3 0 V
3 2 V
2 1 V
3 -1 V
2 -1 V
3 1 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 -276 V
3 108 V
2 92 V
3 30 V
currentpoint stroke M
2 65 V
3 48 V
3 -39 V
2 -84 V
3 -18 V
2 57 V
3 38 V
2 -21 V
3 -28 V
2 3 V
3 13 V
2 0 V
3 -5 V
2 2 V
3 3 V
3 -2 V
2 -3 V
3 1 V
2 2 V
3 0 V
2 -1 V
3 -1 V
2 1 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 -98 V
3 -216 V
3 100 V
2 38 V
3 58 V
2 85 V
3 12 V
2 -77 V
3 -68 V
2 23 V
3 63 V
2 9 V
3 -33 V
2 -14 V
3 12 V
3 7 V
2 -4 V
3 -2 V
2 4 V
3 0 V
2 -4 V
3 -1 V
2 3 V
3 1 V
2 -1 V
3 -1 V
2 0 V
3 1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 -304 V
3 -33 V
2 43 V
3 42 V
2 87 V
3 67 V
2 -27 V
3 -88 V
2 -38 V
3 50 V
3 49 V
2 -12 V
3 -31 V
2 -2 V
3 12 V
2 1 V
3 -3 V
2 1 V
3 3 V
2 -3 V
3 -3 V
2 2 V
3 2 V
3 0 V
2 -2 V
3 0 V
2 1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 -44 V
3 -328 V
2 -13 V
3 20 V
2 73 V
3 94 V
2 28 V
3 -63 V
3 -76 V
2 5 V
3 58 V
2 21 V
3 -25 V
2 -18 V
3 6 V
2 7 V
3 -2 V
2 0 V
3 3 V
3 -1 V
2 -4 V
3 0 V
2 3 V
3 1 V
2 -2 V
3 -1 V
2 1 V
3 1 V
2 -1 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 -241 V
2 -163 V
3 -33 V
3 36 V
2 90 V
3 69 V
2 -4 V
3 -69 V
2 -49 V
3 26 V
2 45 V
3 5 V
2 -23 V
3 -9 V
2 6 V
3 3 V
3 0 V
2 1 V
3 1 V
2 -2 V
3 -2 V
2 1 V
3 2 V
2 0 V
3 -1 V
2 -1 V
3 1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 -6 V
3 -314 V
2 -126 V
3 -22 V
2 69 V
3 83 V
2 34 V
3 -28 V
2 -58 V
3 -20 V
2 31 V
3 30 V
3 -5 V
2 -18 V
3 -4 V
2 5 V
3 2 V
2 0 V
3 2 V
2 0 V
3 -2 V
2 -2 V
3 2 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 -125 V
2 -231 V
3 -113 V
2 14 V
3 77 V
2 53 V
3 13 V
3 -26 V
2 -41 V
3 -11 V
2 25 V
currentpoint stroke M
3 22 V
2 -5 V
3 -14 V
2 -3 V
3 4 V
2 2 V
3 0 V
2 1 V
3 0 V
3 -2 V
2 -1 V
3 1 V
2 1 V
3 0 V
2 -1 V
3 0 V
2 1 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 -1 V
2 -175 V
3 -208 V
3 -69 V
2 46 V
3 53 V
2 27 V
3 12 V
2 -19 V
3 -35 V
2 -7 V
3 24 V
2 17 V
3 -8 V
2 -12 V
3 0 V
3 5 V
2 0 V
3 0 V
2 0 V
3 1 V
2 -2 V
3 -1 V
2 1 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 1 V
3 -1 V
3 12 V
2 -216 V
3 -171 V
2 -17 V
3 41 V
2 22 V
3 22 V
2 23 V
3 -15 V
2 -38 V
3 -7 V
3 25 V
2 15 V
3 -9 V
2 -10 V
3 1 V
2 4 V
3 0 V
2 -1 V
3 1 V
2 1 V
3 -2 V
2 -1 V
3 1 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 1 V
3 0 V
2 -1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 1 V
2 16 V
3 -235 V
2 -100 V
3 13 V
2 7 V
3 6 V
2 41 V
3 28 V
3 -29 V
2 -40 V
3 4 V
2 28 V
3 8 V
2 -13 V
3 -6 V
2 4 V
3 2 V
2 -2 V
3 0 V
3 2 V
2 0 V
3 -2 V
2 0 V
3 1 V
2 1 V
3 -1 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 2 V
3 -2 V
2 117 V
3 -114 V
2 -189 V
3 -37 V
3 -3 V
2 -21 V
3 18 V
2 58 V
3 21 V
2 -43 V
3 -37 V
2 14 V
3 28 V
2 2 V
3 -14 V
2 -3 V
3 5 V
3 1 V
2 -3 V
3 0 V
2 3 V
3 0 V
2 -2 V
3 -1 V
2 2 V
3 0 V
2 0 V
3 -1 V
3 0 V
2 1 V
3 0 V
2 -1 V
3 1 V
2 0 V
3 0 V
2 -1 V
3 1 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 -1 V
3 1 V
2 194 V
3 -196 V
2 -105 V
3 -12 V
2 -41 V
3 -24 V
2 50 V
3 65 V
2 -7 V
3 -56 V
2 -19 V
3 27 V
3 21 V
2 -9 V
3 -11 V
2 3 V
3 4 V
2 -3 V
3 -2 V
2 3 V
3 2 V
2 -2 V
3 -2 V
2 1 V
3 1 V
3 0 V
2 -1 V
3 0 V
2 1 V
3 0 V
2 -1 V
3 0 V
2 1 V
3 0 V
2 0 V
3 -1 V
3 1 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 1 V
3 -1 V
2 150 V
3 51 V
2 -160 V
3 -40 V
2 -38 V
3 -60 V
2 2 V
3 74 V
3 52 V
2 -34 V
3 -56 V
2 1 V
3 32 V
2 10 V
3 -14 V
2 -6 V
3 6 V
2 1 V
currentpoint stroke M
3 -3 V
2 -1 V
3 4 V
3 1 V
2 -3 V
3 -1 V
2 1 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 297 V
2 -87 V
3 -78 V
2 -32 V
3 -78 V
3 -50 V
2 47 V
3 85 V
2 15 V
3 -60 V
2 -36 V
3 23 V
2 27 V
3 -4 V
2 -13 V
3 1 V
3 5 V
2 -2 V
3 -3 V
2 3 V
3 2 V
2 -1 V
3 -3 V
2 1 V
3 1 V
2 1 V
3 -1 V
2 -1 V
3 1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 115 V
3 222 V
2 -76 V
3 -35 V
2 -64 V
3 -85 V
2 -15 V
3 74 V
2 72 V
3 -21 V
2 -62 V
3 -13 V
3 32 V
2 16 V
3 -11 V
2 -7 V
3 3 V
2 2 V
3 -4 V
2 0 V
3 4 V
2 1 V
3 -3 V
2 -1 V
3 1 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 1 V
2 -1 V
3 0 V
2 0 V
3 1 V
2 -1 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 310 V
2 54 V
3 -25 V
2 -46 V
3 -94 V
2 -65 V
3 31 V
2 88 V
3 34 V
3 -51 V
2 -45 V
3 13 V
2 28 V
3 2 V
2 -11 V
3 -1 V
2 3 V
3 -3 V
2 -1 V
3 3 V
3 2 V
2 -2 V
3 -2 V
2 0 V
3 2 V
2 0 V
3 -1 V
2 0 V
3 1 V
2 0 V
3 -1 V
2 0 V
3 1 V
3 -1 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 58 V
2 314 V
3 35 V
2 -11 V
3 -71 V
3 -90 V
2 -30 V
3 55 V
2 72 V
3 1 V
2 -52 V
3 -24 V
2 21 V
3 18 V
2 -3 V
3 -7 V
2 1 V
3 0 V
3 -3 V
2 1 V
3 3 V
2 1 V
3 -3 V
2 -1 V
3 1 V
2 1 V
3 0 V
2 -1 V
3 1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 237 V
2 171 V
3 49 V
2 -37 V
3 -90 V
2 -64 V
3 6 V
2 63 V
3 43 V
2 -21 V
3 -41 V
2 -6 V
3 20 V
3 9 V
2 -4 V
3 -4 V
2 1 V
3 -2 V
2 -1 V
3 2 V
2 2 V
3 -1 V
2 -2 V
3 0 V
2 2 V
3 0 V
3 -1 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 1 V
2 -1 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 9 V
2 292 V
3 144 V
2 30 V
3 -67 V
2 -76 V
3 -32 V
2 20 V
3 49 V
3 24 V
2 -22 V
3 -29 V
2 -1 V
3 15 V
2 7 V
3 -4 V
2 -3 V
3 0 V
2 -1 V
3 0 V
2 2 V
3 1 V
3 -1 V
2 -1 V
3 0 V
currentpoint stroke M
2 1 V
3 0 V
2 -1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 104 V
3 234 V
2 123 V
3 -14 V
2 -70 V
3 -44 V
3 -15 V
2 16 V
3 37 V
2 16 V
3 -20 V
2 -23 V
3 2 V
2 14 V
3 4 V
2 -5 V
3 -2 V
3 1 V
2 -1 V
3 0 V
2 1 V
3 1 V
2 -1 V
3 -1 V
2 1 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 859 2754 a FH(Figure)30 b(4.13:)43 b(T)-8 b(ransien)m(t)29
b(sim)m(ulation)g(with)g(160)j(kHz)e(input)f(sin)m(usoid)p
862 2933 2476 4 v 860 3114 4 181 v 1704 3060 a(HSPICE)g(OPTIONS)p
3336 3114 V 862 3117 2476 4 v 862 3134 V 860 3314 4 181
v 912 3260 a(absv=5e-12)p 1552 3314 V 235 w(relv=1e-12)p
2081 3314 V 103 w(gmin)h(=)g(1e-12)p 2807 3314 V 192
w(dcon=2)p 3336 3314 V 862 3318 2476 4 v 860 3498 4 181
v 912 3444 a(absi=1e-12)p 1552 3498 V 257 w(reli=1e-12)p
2081 3498 V 125 w(gmindc)f(=)h(1e-12)p 2807 3498 V 102
w(gramp)g(=)g(6)p 3336 3498 V 862 3502 2476 4 v 860 3682
4 181 v 912 3628 a(limpts=500000)p 1552 3682 V 100 w(itl1=10000)p
2081 3682 V 2081 3682 V 420 w(delmax=1)g(ns)p 3336 3682
V 862 3686 2476 4 v 860 3866 4 181 v 912 3812 a(.tran)h
Fn(STEP)e FH(=)h(30.518e-9)k Fn(STOP)p FH(=5.8125e-4)f
Fn(ST)-7 b(AR)g(T)p FH(=8.125e-5)p 3336 3866 V 862 3870
2476 4 v 1753 4031 1024 4 v 1751 4212 4 181 v 2030 4158
a(CPU)30 b(TIME)p 2775 4212 V 1753 4215 1024 4 v 1753
4232 V 1751 4413 4 181 v 1803 4358 a(SWITCAP3)p 2335
4413 V 99 w(HSPICE)p 2775 4413 V 1753 4416 1024 4 v 1751
4597 4 181 v 2335 4597 V 2775 4597 V 1751 4777 V 1898
4723 a(16582)j(s)p 2335 4777 V 195 w(475808)g(s)p 2775
4777 V 1751 4958 V 2335 4958 V 2775 4958 V 1753 4961
1024 4 v 953 5116 a(Figure)d(4.14:)42 b(HSPICE)29 b(options)h(and)g
(CPU)g(time)g(comparison)p eop
%%Page: 90 103
90 102 bop 3809 -200 a FH(90)450 137 y
 26049576 17974197 3289088 3289088 21050163 15721840 startTexFig
 450 137 a
%%BeginDocument: dat/el5_spect_sp.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
856 351 M
0 3218 V
LTb
LTa
840 351 M
4329 0 V
LTb
840 351 M
63 0 V
4266 0 R
-63 0 V
756 351 M
(1e-07) Rshow
LTa
840 484 M
4329 0 V
LTb
840 484 M
31 0 V
4298 0 R
-31 0 V
LTa
840 659 M
4329 0 V
LTb
840 659 M
31 0 V
4298 0 R
-31 0 V
LTa
840 749 M
4329 0 V
LTb
840 749 M
31 0 V
4298 0 R
-31 0 V
LTa
840 792 M
4329 0 V
LTb
840 792 M
63 0 V
4266 0 R
-63 0 V
756 792 M
(1e-06) Rshow
LTa
840 924 M
4329 0 V
LTb
840 924 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1100 M
4329 0 V
LTb
840 1100 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1190 M
4329 0 V
LTb
840 1190 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1233 M
4329 0 V
LTb
840 1233 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-05) Rshow
LTa
840 1365 M
4329 0 V
LTb
840 1365 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1541 M
4329 0 V
LTb
840 1541 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1631 M
4329 0 V
LTb
840 1631 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1673 M
4329 0 V
LTb
840 1673 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-04) Rshow
LTa
840 1806 M
4329 0 V
LTb
840 1806 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1981 M
4329 0 V
LTb
840 1981 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2071 M
4329 0 V
LTb
840 2071 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2114 M
4329 0 V
LTb
840 2114 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-03) Rshow
LTa
840 2247 M
4329 0 V
LTb
840 2247 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2422 M
4329 0 V
LTb
840 2422 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2512 M
4329 0 V
LTb
840 2512 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2555 M
4329 0 V
LTb
840 2555 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-02) Rshow
LTa
840 2687 M
4329 0 V
LTb
840 2687 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2863 M
4329 0 V
LTb
840 2863 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2953 M
4329 0 V
LTb
840 2953 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2996 M
4329 0 V
LTb
840 2996 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-01) Rshow
LTa
840 3128 M
4329 0 V
LTb
840 3128 M
31 0 V
4298 0 R
-31 0 V
LTa
840 3304 M
4329 0 V
LTb
840 3304 M
31 0 V
4298 0 R
-31 0 V
LTa
840 3394 M
4329 0 V
LTb
840 3394 M
31 0 V
4298 0 R
-31 0 V
LTa
840 3436 M
4329 0 V
LTb
840 3436 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e+00) Rshow
LTa
840 3569 M
4329 0 V
LTb
840 3569 M
31 0 V
4298 0 R
-31 0 V
LTa
856 351 M
0 3218 V
LTb
856 351 M
0 63 V
0 3155 R
0 -63 V
856 211 M
(0e+00) Cshow
LTa
1640 351 M
0 3218 V
LTb
1640 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(2e+05) Cshow
LTa
2424 351 M
0 3218 V
LTb
2424 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(4e+05) Cshow
LTa
3208 351 M
0 3218 V
LTb
3208 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(6e+05) Cshow
LTa
3993 351 M
0 3218 V
LTb
3993 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(8e+05) Cshow
LTa
4777 351 M
0 3218 V
LTb
4777 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(1e+06) Cshow
840 351 M
4329 0 V
0 3218 V
-4329 0 V
840 351 L
140 1960 M
currentpoint gsave translate 90 rotate 0 0 M
(|V| Log scale) Cshow
grestore
3004 -69 M
(Freqency Hz) Cshow
3004 3709 M
(FFT of output waveform for 160 kHz input) Cshow
LT0
4686 3366 M
(HSPICE) Rshow
4770 3366 M
252 0 V
856 1243 M
8 -69 V
7 68 V
8 -38 V
8 9 V
8 25 V
8 18 V
8 80 V
7 83 V
8 -119 V
8 -51 V
8 -74 V
8 -26 V
8 -5 V
7 42 V
8 -39 V
8 20 V
8 -26 V
8 48 V
8 -46 V
8 21 V
7 -1 V
8 18 V
8 -20 V
8 42 V
8 -16 V
8 -31 V
7 -12 V
8 36 V
8 -56 V
8 51 V
8 -12 V
8 -12 V
7 41 V
8 -30 V
8 29 V
8 24 V
8 -12 V
8 -7 V
8 26 V
7 -39 V
8 46 V
8 -22 V
8 17 V
8 -8 V
8 9 V
7 -24 V
8 -6 V
8 -17 V
8 79 V
8 -12 V
8 -14 V
7 25 V
8 -7 V
8 22 V
8 -17 V
8 19 V
8 11 V
8 9 V
7 4 V
8 17 V
8 -15 V
8 14 V
8 33 V
8 23 V
7 -9 V
8 20 V
8 -14 V
8 31 V
8 20 V
8 10 V
7 32 V
8 15 V
8 8 V
8 42 V
8 18 V
8 38 V
8 43 V
7 55 V
8 65 V
8 1688 V
8 -1686 V
8 -64 V
8 -53 V
7 -59 V
8 -37 V
8 -37 V
8 -13 V
8 -45 V
8 -28 V
8 -8 V
7 -7 V
8 -13 V
8 -4 V
8 -48 V
8 -2 V
8 -48 V
7 4 V
8 16 V
8 -10 V
8 -40 V
8 29 V
8 -28 V
7 19 V
8 -34 V
8 2 V
8 -19 V
8 -9 V
8 11 V
8 -17 V
7 -18 V
8 -89 V
8 116 V
8 -115 V
8 84 V
8 -13 V
7 -10 V
8 14 V
8 41 V
8 -78 V
8 -20 V
8 -80 V
7 73 V
8 17 V
8 2 V
8 -2 V
8 -28 V
8 36 V
8 31 V
7 -49 V
8 -52 V
8 28 V
8 -45 V
8 51 V
8 -23 V
7 -28 V
8 73 V
8 -4 V
8 4 V
8 -10 V
8 14 V
7 -46 V
8 29 V
8 34 V
8 -7 V
8 -70 V
8 94 V
8 14 V
7 7 V
8 10 V
8 58 V
8 63 V
8 63 V
8 -128 V
7 -162 V
8 -119 V
8 -81 V
8 20 V
8 110 V
8 149 V
7 100 V
8 -73 V
8 -38 V
8 -67 V
8 -155 V
8 43 V
8 30 V
7 57 V
8 -177 V
8 -86 V
8 84 V
8 -85 V
8 9 V
7 99 V
8 11 V
8 56 V
8 -37 V
8 64 V
8 -391 V
7 342 V
8 -106 V
8 -75 V
8 -215 V
8 313 V
8 1 V
8 -16 V
7 115 V
8 -6 V
8 -123 V
8 148 V
8 -5 V
8 -59 V
7 6 V
8 -330 V
8 216 V
8 -53 V
8 34 V
8 162 V
7 -82 V
8 -9 V
8 -34 V
8 84 V
8 124 V
8 -178 V
8 -34 V
7 102 V
8 -103 V
8 -66 V
8 359 V
8 -204 V
8 -134 V
7 105 V
8 -103 V
8 120 V
8 -155 V
8 92 V
8 59 V
7 -204 V
8 174 V
8 -87 V
8 83 V
8 7 V
8 -129 V
8 269 V
7 513 V
8 -660 V
8 77 V
8 32 V
8 -131 V
8 4 V
7 113 V
8 72 V
8 -58 V
8 -205 V
8 302 V
8 -158 V
7 220 V
8 -10 V
8 28 V
8 74 V
8 767 V
8 -687 V
8 -68 V
7 -63 V
8 -65 V
8 -32 V
8 -19 V
8 36 V
8 -100 V
7 -55 V
8 31 V
8 54 V
8 -49 V
8 103 V
8 -231 V
7 25 V
8 131 V
8 -123 V
8 106 V
8 -26 V
8 -315 V
8 311 V
7 -110 V
8 100 V
8 -26 V
8 -226 V
8 249 V
8 -152 V
7 82 V
8 90 V
8 -118 V
8 -78 V
8 232 V
8 -38 V
8 -40 V
7 -53 V
8 -73 V
8 -8 V
8 150 V
8 -119 V
8 -44 V
7 186 V
8 -56 V
8 -143 V
8 131 V
8 33 V
8 -149 V
7 81 V
8 38 V
8 127 V
8 -223 V
8 -13 V
8 -105 V
8 202 V
7 -90 V
8 140 V
8 -44 V
8 37 V
8 -43 V
8 -27 V
7 41 V
8 -65 V
8 -56 V
8 187 V
8 -6 V
8 -66 V
7 -94 V
8 17 V
8 104 V
8 -178 V
8 -41 V
8 139 V
8 54 V
7 40 V
8 -48 V
8 -45 V
8 -55 V
8 199 V
8 -92 V
7 77 V
8 116 V
8 -176 V
8 120 V
8 -120 V
8 -102 V
7 29 V
8 48 V
8 61 V
7 -591 V
2 0 R
7 564 V
8 -214 V
8 56 V
7 95 V
8 -15 V
8 -133 V
8 123 V
8 22 V
8 106 V
7 -147 V
8 -3 V
8 -153 V
8 130 V
8 -82 V
8 169 V
7 41 V
8 20 V
8 -58 V
8 69 V
8 -300 V
8 253 V
8 -263 V
7 347 V
8 -17 V
8 -230 V
8 194 V
8 -387 V
8 131 V
7 211 V
8 -146 V
8 -48 V
8 176 V
8 -186 V
8 256 V
7 -191 V
8 -12 V
8 -156 V
8 250 V
8 127 V
8 226 V
8 -236 V
7 -113 V
8 130 V
8 -89 V
8 -68 V
8 -449 V
8 494 V
7 -73 V
8 111 V
8 -115 V
8 14 V
8 -128 V
8 172 V
7 26 V
8 13 V
8 162 V
8 -485 V
8 178 V
8 239 V
8 -97 V
7 1 V
8 -28 V
8 13 V
8 -62 V
8 148 V
8 -114 V
7 135 V
8 -232 V
currentpoint stroke M
8 259 V
8 -6 V
8 59 V
8 22 V
7 -41 V
8 -67 V
8 -96 V
8 -15 V
8 -121 V
8 221 V
8 -179 V
7 35 V
8 -215 V
8 231 V
8 128 V
8 -131 V
8 138 V
7 -132 V
8 91 V
8 159 V
8 -267 V
8 -40 V
8 109 V
7 -106 V
8 151 V
8 -203 V
8 128 V
8 -156 V
8 -88 V
8 261 V
7 -171 V
8 186 V
8 67 V
8 -81 V
8 -67 V
8 -104 V
7 122 V
8 -39 V
8 72 V
8 -217 V
8 68 V
8 215 V
7 -47 V
8 -18 V
8 39 V
8 -137 V
8 -145 V
8 222 V
8 23 V
7 59 V
8 -160 V
8 73 V
8 131 V
8 -192 V
8 -241 V
7 266 V
8 162 V
8 -120 V
8 -34 V
8 63 V
8 -6 V
8 -137 V
7 -116 V
8 113 V
8 -122 V
8 -63 V
8 225 V
8 148 V
7 -22 V
8 -184 V
8 -16 V
8 214 V
8 -180 V
8 37 V
7 -160 V
8 144 V
8 150 V
8 -19 V
8 -92 V
8 -175 V
8 305 V
7 -133 V
8 151 V
8 121 V
8 -61 V
8 23 V
8 -235 V
7 24 V
8 89 V
8 -186 V
8 166 V
8 -323 V
8 338 V
7 -230 V
8 165 V
8 -61 V
8 146 V
8 -66 V
8 -229 V
8 413 V
7 -112 V
8 -34 V
8 -45 V
8 -261 V
8 207 V
8 -363 V
7 496 V
8 -30 V
8 74 V
8 -109 V
8 -47 V
8 12 V
7 25 V
8 -162 V
8 274 V
8 63 V
8 -271 V
8 88 V
8 -113 V
7 -78 V
8 163 V
8 -5 V
8 45 V
8 74 V
8 -78 V
7 64 V
8 -289 V
8 307 V
8 -134 V
8 -80 V
8 112 V
7 174 V
8 -135 V
8 -54 V
8 14 V
8 91 V
8 -146 V
8 -148 V
7 208 V
8 -48 V
8 108 V
8 -171 V
8 -19 V
8 10 V
7 102 V
8 86 V
8 -256 V
8 409 V
8 -352 V
8 177 V
7 -3 V
8 -76 V
8 34 V
8 -22 V
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 655 2610 a FH(Figure)30 b(4.15:)43 b(Sp)s(ectrum)28
b(of)j(the)g(output)f(w)m(a)m(v)m(eform)h(from)f(HSPICE)f(sim)m
(ulation)450 2786 y
 26049576 17974197 3289088 3289088 21050163 15721840 startTexFig
 450 2786 a
%%BeginDocument: dat/el5_spect_sw3.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
856 351 M
0 3218 V
LTb
LTa
840 351 M
4329 0 V
LTb
840 351 M
63 0 V
4266 0 R
-63 0 V
756 351 M
(1e-07) Rshow
LTa
840 484 M
4329 0 V
LTb
840 484 M
31 0 V
4298 0 R
-31 0 V
LTa
840 659 M
4329 0 V
LTb
840 659 M
31 0 V
4298 0 R
-31 0 V
LTa
840 749 M
4329 0 V
LTb
840 749 M
31 0 V
4298 0 R
-31 0 V
LTa
840 792 M
4329 0 V
LTb
840 792 M
63 0 V
4266 0 R
-63 0 V
756 792 M
(1e-06) Rshow
LTa
840 924 M
4329 0 V
LTb
840 924 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1100 M
4329 0 V
LTb
840 1100 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1190 M
4329 0 V
LTb
840 1190 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1233 M
4329 0 V
LTb
840 1233 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-05) Rshow
LTa
840 1365 M
4329 0 V
LTb
840 1365 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1541 M
4329 0 V
LTb
840 1541 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1631 M
4329 0 V
LTb
840 1631 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1673 M
4329 0 V
LTb
840 1673 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-04) Rshow
LTa
840 1806 M
4329 0 V
LTb
840 1806 M
31 0 V
4298 0 R
-31 0 V
LTa
840 1981 M
4329 0 V
LTb
840 1981 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2071 M
4329 0 V
LTb
840 2071 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2114 M
4329 0 V
LTb
840 2114 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-03) Rshow
LTa
840 2247 M
4329 0 V
LTb
840 2247 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2422 M
4329 0 V
LTb
840 2422 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2512 M
4329 0 V
LTb
840 2512 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2555 M
4329 0 V
LTb
840 2555 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-02) Rshow
LTa
840 2687 M
4329 0 V
LTb
840 2687 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2863 M
4329 0 V
LTb
840 2863 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2953 M
4329 0 V
LTb
840 2953 M
31 0 V
4298 0 R
-31 0 V
LTa
840 2996 M
4329 0 V
LTb
840 2996 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e-01) Rshow
LTa
840 3128 M
4329 0 V
LTb
840 3128 M
31 0 V
4298 0 R
-31 0 V
LTa
840 3304 M
4329 0 V
LTb
840 3304 M
31 0 V
4298 0 R
-31 0 V
LTa
840 3394 M
4329 0 V
LTb
840 3394 M
31 0 V
4298 0 R
-31 0 V
LTa
840 3436 M
4329 0 V
LTb
840 3436 M
63 0 V
4266 0 R
-63 0 V
-4350 0 R
(1e+00) Rshow
LTa
840 3569 M
4329 0 V
LTb
840 3569 M
31 0 V
4298 0 R
-31 0 V
LTa
856 351 M
0 3218 V
LTb
856 351 M
0 63 V
0 3155 R
0 -63 V
856 211 M
(0e+00) Cshow
LTa
1640 351 M
0 3218 V
LTb
1640 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(2e+05) Cshow
LTa
2424 351 M
0 3218 V
LTb
2424 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(4e+05) Cshow
LTa
3208 351 M
0 3218 V
LTb
3208 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(6e+05) Cshow
LTa
3993 351 M
0 3218 V
LTb
3993 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(8e+05) Cshow
LTa
4777 351 M
0 3218 V
LTb
4777 351 M
0 63 V
0 3155 R
0 -63 V
0 -3295 R
(1e+06) Cshow
840 351 M
4329 0 V
0 3218 V
-4329 0 V
840 351 L
140 1960 M
currentpoint gsave translate 90 rotate 0 0 M
(|V| Log scale) Cshow
grestore
3004 -69 M
(Freqency Hz) Cshow
3004 3709 M
(FFT of output waveform for 160 kHz input) Cshow
LT0
4686 3366 M
(SWITCAP3) Rshow
4770 3366 M
252 0 V
856 1609 M
8 -382 V
7 -205 V
8 145 V
8 -48 V
8 52 V
8 12 V
8 -21 V
7 24 V
8 -29 V
8 23 V
8 -8 V
8 -52 V
8 49 V
7 -141 V
8 197 V
8 261 V
8 -252 V
8 -199 V
8 139 V
8 -44 V
7 48 V
8 15 V
8 -15 V
8 37 V
8 -31 V
8 14 V
7 -6 V
8 -50 V
8 46 V
8 -122 V
8 163 V
8 -28 V
7 51 V
8 -171 V
8 115 V
8 -36 V
8 40 V
8 18 V
8 -14 V
7 36 V
8 -25 V
8 12 V
8 0 V
8 -41 V
8 39 V
7 -89 V
8 112 V
8 31 V
8 8 V
8 -127 V
8 84 V
7 -22 V
8 29 V
8 19 V
8 -8 V
8 32 V
8 -14 V
8 11 V
7 7 V
8 -24 V
8 31 V
8 -46 V
8 53 V
8 585 V
7 -527 V
8 -61 V
8 50 V
8 1 V
8 22 V
8 25 V
7 10 V
8 30 V
8 16 V
8 25 V
8 31 V
8 26 V
8 49 V
7 48 V
8 57 V
8 1733 V
8 -1721 V
8 -65 V
8 -67 V
7 -41 V
8 -46 V
8 -39 V
8 -26 V
8 -41 V
8 -13 V
8 -27 V
7 -18 V
8 3 V
8 -38 V
8 33 V
8 -14 V
8 129 V
7 -208 V
8 49 V
8 -71 V
8 14 V
8 -22 V
8 -49 V
7 16 V
8 -69 V
8 25 V
8 -20 V
8 -12 V
8 57 V
8 -65 V
7 107 V
8 34 V
8 142 V
8 -248 V
8 52 V
8 -114 V
7 36 V
8 -6 V
8 -102 V
8 57 V
8 -114 V
8 29 V
7 -6 V
8 -34 V
8 131 V
8 -115 V
8 188 V
8 77 V
8 354 V
7 -447 V
8 4 V
8 -147 V
8 47 V
8 21 V
8 -161 V
7 99 V
8 -82 V
8 -66 V
8 58 V
8 -152 V
8 250 V
7 -172 V
8 274 V
8 112 V
8 400 V
8 -485 V
8 -36 V
8 -147 V
7 27 V
8 71 V
8 -133 V
8 87 V
8 9 V
8 -353 V
7 215 V
8 -91 V
8 138 V
8 -215 V
8 362 V
8 142 V
7 300 V
8 -363 V
8 -85 V
8 -148 V
8 -13 V
8 122 V
8 -126 V
7 47 V
8 33 V
8 -288 V
8 214 V
8 -82 V
8 60 V
7 -117 V
8 280 V
8 164 V
8 129 V
8 -185 V
8 -114 V
7 -120 V
8 -62 V
8 165 V
8 -93 V
8 22 V
8 52 V
8 -204 V
7 133 V
8 -53 V
8 -50 V
8 -4 V
8 198 V
8 184 V
7 216 V
8 -264 V
8 -143 V
8 -86 V
8 -124 V
8 218 V
7 -72 V
8 7 V
8 67 V
8 -163 V
8 94 V
8 -39 V
8 -148 V
7 106 V
8 122 V
8 207 V
8 585 V
8 -625 V
8 -178 V
7 -39 V
8 -202 V
8 280 V
8 -45 V
8 -12 V
8 71 V
7 -123 V
8 76 V
8 -29 V
8 -215 V
8 190 V
8 6 V
8 260 V
7 701 V
8 -730 V
8 -269 V
8 92 V
8 -182 V
8 236 V
7 0 V
8 -17 V
8 79 V
8 -58 V
8 42 V
8 17 V
7 -74 V
8 113 V
8 -61 V
8 50 V
8 853 V
8 -675 V
8 -93 V
7 -173 V
8 37 V
8 -93 V
8 -209 V
8 122 V
8 -153 V
7 24 V
8 -101 V
8 200 V
8 54 V
8 -553 V
8 691 V
7 122 V
8 164 V
8 -197 V
8 -103 V
8 -208 V
8 19 V
8 120 V
7 -125 V
8 39 V
8 66 V
8 -236 V
8 149 V
8 -2 V
7 -52 V
8 -80 V
8 285 V
8 163 V
8 413 V
8 -446 V
8 -134 V
7 -151 V
8 -75 V
8 190 V
8 -92 V
8 5 V
8 73 V
7 -188 V
8 127 V
8 -21 V
8 -109 V
8 21 V
8 209 V
7 179 V
8 437 V
8 -471 V
8 -149 V
8 -115 V
8 -116 V
8 223 V
7 -74 V
8 13 V
8 78 V
8 -164 V
8 78 V
8 -12 V
7 -188 V
8 105 V
8 163 V
8 191 V
8 284 V
8 -314 V
7 -163 V
8 -97 V
8 -165 V
8 262 V
8 -62 V
8 -4 V
8 80 V
7 -151 V
8 78 V
8 -15 V
8 -208 V
8 137 V
8 139 V
7 199 V
8 130 V
8 -159 V
8 -171 V
8 -83 V
8 -203 V
7 295 V
8 -57 V
8 -9 V
8 81 V
8 -148 V
8 77 V
8 -13 V
7 -229 V
8 161 V
8 124 V
8 203 V
8 238 V
8 -265 V
7 -177 V
8 -73 V
8 -222 V
8 310 V
8 -50 V
8 -12 V
7 84 V
8 -144 V
8 69 V
8 -9 V
8 -262 V
8 194 V
8 112 V
7 207 V
8 523 V
8 -548 V
8 -183 V
8 -68 V
8 -242 V
7 327 V
8 -48 V
8 -20 V
8 82 V
8 -137 V
8 77 V
7 -15 V
8 -255 V
8 193 V
8 104 V
8 211 V
8 571 V
8 -597 V
7 -188 V
8 -55 V
8 -249 V
8 331 V
8 -44 V
8 -16 V
7 83 V
8 -131 V
8 63 V
8 -13 V
8 -283 V
8 223 V
7 87 V
8 218 V
8 165 V
8 -191 V
8 -193 V
8 -47 V
8 -261 V
7 341 V
8 -41 V
8 -15 V
8 83 V
8 -127 V
8 64 V
7 -13 V
8 -303 V
8 258 V
currentpoint stroke M
8 39 V
8 237 V
8 99 V
7 -109 V
8 -201 V
8 -73 V
8 -307 V
8 396 V
8 -39 V
8 -20 V
7 91 V
8 -131 V
8 65 V
8 -6 V
8 -335 V
8 270 V
7 87 V
8 214 V
8 464 V
8 -484 V
8 -195 V
8 -58 V
7 -296 V
8 379 V
8 -41 V
8 -26 V
8 86 V
8 -126 V
8 70 V
7 -10 V
8 -312 V
8 250 V
8 80 V
8 220 V
8 465 V
7 -487 V
8 -198 V
8 -45 V
8 -281 V
8 360 V
8 -41 V
7 -15 V
8 88 V
8 -128 V
8 59 V
8 -10 V
8 -331 V
8 270 V
7 71 V
8 223 V
8 263 V
8 -284 V
8 -202 V
8 -39 V
7 -294 V
8 369 V
8 -36 V
8 -22 V
8 88 V
8 -124 V
8 61 V
7 -11 V
8 -331 V
8 273 V
8 64 V
8 225 V
8 127 V
7 -148 V
8 -204 V
8 -36 V
8 -297 V
8 373 V
8 -35 V
7 -21 V
8 85 V
8 -123 V
8 59 V
8 -9 V
8 -340 V
8 283 V
7 59 V
8 227 V
8 255 V
8 -276 V
8 -207 V
8 -30 V
7 -305 V
8 380 V
8 -33 V
8 -19 V
8 86 V
8 -123 V
7 52 V
8 -6 V
8 -359 V
8 299 V
8 58 V
8 228 V
8 481 V
7 -500 V
8 -211 V
8 -31 V
8 -324 V
8 398 V
8 -32 V
7 -29 V
8 85 V
8 -120 V
8 65 V
8 -12 V
8 -332 V
7 277 V
8 56 V
8 229 V
8 492 V
8 -512 V
8 -209 V
8 -27 V
7 -310 V
8 382 V
8 -30 V
8 -23 V
8 85 V
8 -118 V
7 54 V
8 -8 V
8 -340 V
8 286 V
8 46 V
8 232 V
7 156 V
8 -176 V
8 -214 V
8 -20 V
8 -309 V
8 381 V
8 -30 V
7 -25 V
8 86 V
8 -118 V
8 56 V
8 -10 V
8 -341 V
7 288 V
8 42 V
8 234 V
8 163 V
8 -182 V
8 -216 V
7 -18 V
8 -314 V
8 385 V
8 -31 V
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 584 5259 a FH(Figure)h(4.16:)42 b(Sp)s(ectrum)29 b(of)i(the)f(output)g
(w)m(a)m(v)m(eform)i(from)e(SWITCAP3)g(sim)m(ulation)p
eop
%%Page: 91 104
91 103 bop 3809 -200 a FH(91)962 153 y(T)-8 b(able)30
b(4.2:)42 b(V)-8 b(alues)30 b(for)g(the)h(p)s(eaks)f(in)f(Fig.)h(4.15)i
(and)e(Fig.)h(4.16)p 1229 183 1743 4 v 1227 352 4 170
v 1760 352 V 1894 301 a(HSPICE)p 2365 352 V 191 w(SWITCAP3)p
2969 352 V 1227 521 V 1279 471 a(F)-8 b(req)31 b(\(kHz\))p
1760 521 V 164 w(Mag.)42 b(\(V\))p 2365 521 V 237 w(Mag.)f(\(v\))p
2969 521 V 1229 525 1743 4 v 1229 541 V 1227 711 4 170
v 1437 660 a(0.0)p 1760 711 V 260 w(1.056015e-05)p 2365
711 V 104 w(7.133313e-05)p 2969 711 V 1229 714 1743 4
v 1227 883 4 170 v 1427 833 a(160)p 1760 883 V 250 w(9.730618e-01)p
2365 883 V 104 w(9.778695e-01)p 2969 883 V 1229 887 1743
4 v 1227 1056 4 170 v 1427 1005 a(320)p 1760 1056 V 250
w(1.158161e-05)p 2365 1056 V 104 w(3.692646e-05)p 2969
1056 V 1229 1059 1743 4 v 1227 1229 4 170 v 1427 1178
a(480)p 1760 1229 V 250 w(5.235536e-04)p 2365 1229 V
104 w(4.692050e-04)p 2969 1229 V 1229 1232 1743 4 v 1227
1401 4 170 v 1427 1351 a(640)p 1760 1401 V 250 w(4.565840e-06)p
2365 1401 V 104 w(1.431172e-05)p 2969 1401 V 1229 1405
1743 4 v 1227 1574 4 170 v 1427 1523 a(800)p 1760 1574
V 250 w(3.998173e-06)p 2365 1574 V 104 w(1.190152e-05)p
2969 1574 V 1229 1577 1743 4 v 300 1835 a(during)21 b(whic)m(h)g(the)j
(\014lter)e(settled)h(to)g(a)h(steady-state)h(and)d(additional)f(80)j
(cycles)f(on)g(whic)m(h)f(a)h(2)3595 1802 y FA(17)3693
1835 y FH(p)s(oin)m(t)300 2061 y(FFT)35 b(w)m(as)f(p)s(erformed.)52
b(The)33 b(sim)m(ulations)g(w)m(ere)i(p)s(erformed)d(in)i(b)s(oth,)g
(SWITCAP3)g(and)g(HSPICE)300 2286 y(and)e(the)g(results)g(are)h
(compared)f(b)s(elo)m(w.)46 b(In)32 b(order)g(to)h(reduce)f(the)h(n)m
(umerical)e(in)m(tegration)h(error)g(in)300 2512 y(HSPICE,)f(the)i
Fw(delmax)d FH(option)i(w)m(as)g(set)h(to)g(1)f(ns.)46
b(\(This)31 b(option)g(sets)i(the)f(maxim)m(um)f(time)h(step)g(in)300
2738 y(the)f(n)m(umerical)d(in)m(tegration)j(algorithm.\))536
2964 y(Fig.)42 b(4.13)h(illustrates)d(one)i(cycle)g(of)g(the)g(output)f
(w)m(a)m(v)m(eform)i(at)g(the)f(end)f(of)g(the)h(transien)m(t)300
3190 y(sim)m(ulation)19 b(in)h(HSPICE)h(and)f(SWITCAP3.)38
b(Note,)24 b(that)e(the)g(settling)f(p)s(oin)m(ts)f(within)f(eac)m(h)j
(switc)m(hing)300 3416 y(in)m(terv)-5 b(al)23 b(matc)m(h,)k(ho)m(w)m
(ev)m(er)f(the)e(HSPICE)f(w)m(a)m(v)m(eform)j(includes)c(the)j
(\014nite)e(settling)g(e\013ects.)41 b(The)23 b(CPU)300
3641 y(time)f(required)f(for)h(the)h(HSPICE)e(sim)m(ulation)g(w)m(as)h
(475808)j(s,)g(while)20 b(for)i(the)h(SWITCAP3)f(sim)m(ulation)300
3867 y(it)30 b(w)m(as)i(16582)h(s,)e(whic)m(h)e(is)h(appro)m(ximately)g
(30)i(times)e(faster.)43 b(Note)32 b(that)f(this)f(HSPICE)g(sim)m
(ulation)300 4093 y(is)f(slo)m(w)m(er)i(than)f(the)h(ones)f(in)f(Sec.)i
(4.3.2)h(since)e(the)h Fw(delmax)d FH(option)i(w)m(as)h(set.)536
4319 y(The)25 b(results)f(of)i(the)f(FFT)h(are)f(sho)m(wn)g(in)f(Fig.)i
(4.15)h(for)e(HSPICE)f(sim)m(ulation)f(and)i(in)f(Fig.)h(4.16)300
4545 y(for)k(SWITCAP3)f(sim)m(ulation.)38 b(The)29 b(v)-5
b(alues)28 b(of)h(the)g(p)s(eaks)f(at)i(DC)f(and)f(at)i(the)f
(harmonics)e(are)i(listed)300 4770 y(in)35 b(T)-8 b(able)35
b(4.2.)59 b(Note)38 b(that)e(the)g(3)1501 4737 y FB(r)r(d)1612
4770 y FH(order)g(harmonic)f(at)h(480)i(kHz)e(is)f(sligh)m(tly)g
(higher)f(in)h(HSPICE)300 4996 y(sim)m(ulation)d(than)i(in)f(SWITCAP3.)
51 b(The)33 b(rest)h(of)h(the)f(harmonics)f(are)h(higher)f(in)f
(SWITCAP3.)52 b(In)300 5222 y(addition,)39 b(the)f(sp)s(ectrum)f(from)h
(SWITCAP3)g(sim)m(ulation)e(con)m(tains)i(p)s(eaks)g(at)h(regular)e
(frequency)p eop
%%Page: 92 105
92 104 bop 3809 -200 a FH(92)300 99 y(in)m(terv)-5 b(als)28
b(whic)m(h)g(do)h(not)g(app)s(ear)f(in)g(the)h(HSPICE)f(sim)m(ulation.)
38 b(This)27 b(is)h(due)h(to)h(the)f(fact)h(in)d(SWIT-)300
324 y(CAP3)k(sim)m(ulation,)d(the)j(time)f(constan)m(ts)i(are)f(zero,)g
(and)f(the)h(higher)e(order)h(harmonic)f(distortion)g(is)300
550 y(not)h(\014ltered)e(out)h(as)h(it)f(is)f(in)g(a)i(real)f(net)m(w)m
(ork.)41 b(Due)30 b(to)g(the)f(foldo)m(v)m(er)h(e\013ect)h(of)e(the)h
(sampled)e(system,)300 776 y(the)g(higher)f(order)g(harmonics)g(are)h
(mo)s(dulated)f(bac)m(k)i(in)m(to)f(the)g(baseband.)39
b(Although)27 b(it)h(is)f(not)h(clear)300 1002 y(from)f(this)f
(example,)h(the)h(\014nite)e(settling)g(e\013ects)i(ma)m(y)g(b)s(e)f
(dep)s(enden)m(t)f(on)h(the)g(input)e(signal)h(and)g(ma)m(y)300
1228 y(con)m(tribute)i(some)h(energy)g(at)h(the)f(baseband)e
(frequencies.)39 b(Therefore,)29 b(the)g(SWITCAP3)f(distortion)300
1453 y(sim)m(ulation)g(should)h(probably)f(b)s(e)i(used)g(only)f(as)i
(an)f(estimate.)300 1740 y FL(4.4)135 b(SI)45 b(Sigma-Delta)i(Mo)t
(dulator)300 2056 y FH(An)37 b(SI)g(implemen)m(tation)f(of)h(a)h
(second-order)g(sigma-delta)f(mo)s(dulator)f(used)h(for)g(A/D)i(con)m
(v)m(ersion)300 2282 y([68)q(])28 b(is)e(sho)m(wn)h(in)f(Fig.)h(4.17.)
42 b(The)26 b(mo)s(dulator)h(has)g(t)m(w)m(o)h(SI)f(in)m(tegrators,)i
(eac)m(h)f(con)m(taining)f(t)m(w)m(o)i(fully-)300 2507
y(balanced)d(transconductor)g(cells)g([68)q(])h(sho)m(wn)f(in)f(Fig.)i
(4.18.)41 b(The)26 b(c)m(harge)i(storage)g(in)d(the)i(in)m(tegrators)
300 2733 y(is)h(ac)m(hiev)m(ed)i(b)m(y)g(the)f(non-linear)f(MOS)g
(capacitors)i(as)g(sho)m(wn)f(in)f(Fig.)h(4.17.)42 b(The)29
b(output)g(curren)m(t)g(of)300 2959 y(the)34 b(second)f(in)m(tegrator)i
(is)e(con)m(v)m(erted)i(to)f(v)m(oltage)h(with)e(an)g(MOS)g(transistor)
g(biased)g(in)f(the)i(trio)s(de)300 3185 y(region.)44
b(This)30 b(v)m(oltage)j(is)e(then)g(sensed)g(b)m(y)h(a)g(comparator)h
(whic)m(h)d(pro)s(duces)g(a)i(logic)g(output)f(signal.)300
3411 y(The)25 b(di\013eren)m(tial)g(opamp)g(and)g(the)h(D-t)m(yp)s(e)h
(\015ip-\015op)d(that)i(mak)m(e)h(up)e(the)h(comparator)h(w)m(ere)f(mo)
s(deled)300 3636 y(b)m(y)j(the)g(ideal)f(latc)m(hed-comparator)j(of)e
(Sec.)h(2.1.)41 b(The)29 b(feedbac)m(k)h(and)e(scaling)g(of)i(the)f
(digital)e(output)300 3862 y(is)38 b(p)s(erformed)g(b)m(y)h(t)m(w)m(o)i
(D/A)f(con)m(v)m(erters)h(of)f(Fig.)f(4.19.)69 b(D)m(A)m(C2)41
b(\(Fig.)68 b(4.17\))41 b(pro)m(vides)e Fz(\006)p FH(300)h
FG(\026)p FH(A)300 4088 y(curren)m(t)27 b(while)e(D)m(A)m(C1)k(pro)m
(vides)d(a)i Fz(\006)p FH(150)g FG(\026)p FH(A)f(curren)m(t)g(whic)m(h)
f(is)g(the)h(reference)h(curren)m(t)f(lev)m(el)g(for)g(the)300
4314 y(mo)s(dulator.)47 b(The)33 b(switc)m(h)f(sym)m(b)s(ols)g
(represen)m(t)h(the)g(same)h(CMOS)e(switc)m(hes)g(describ)s(ed)f(in)h
(Sec.)i(4.2.)300 4540 y(The)d(clo)s(c)m(k)i(w)m(a)m(v)m(eforms)g(are)f
(sho)m(wn)g(in)e(Fig.)i(4.17.)47 b(The)32 b(b)s(o)s(olean)f(functions)f
(for)i FG(\036)3238 4554 y FA(5)3309 4540 y FH(and)f
FG(\036)3541 4554 y FA(6)3613 4540 y FH(and)g(for)300
4766 y(the)g(\\AND")h(gate)g(in)d(Fig.)h(4.19)i(w)m(ere)f(implemen)m
(ted)e(b)m(y)h(ideal)f(logic)h(elemen)m(ts.)536 4991
y(The)40 b(transien)m(t)h(analyses)f(has)g(b)s(een)g(p)s(erformed)f(in)
g(SWITCAP3)h(with)g(a)g(clo)s(c)m(k)h(frequency)300 5217
y(of)c(1)f(MHz)i(\()p FC(i.)g(e.)58 b FG(T)48 b FH(=)36
b(1)g FG(\026)p FH(s\))h(and)f(an)g(input)e(sin)m(usoidal)g(signal)h
(with)h(frequency)g(of)g(2)h(kHz.)59 b(The)p eop
%%Page: 93 106
93 105 bop 3809 -200 a FH(93)330 16 y
 27944062 11736504 0 36837785 35653713 52164935 startTexFig
 330 16 a
%%BeginDocument: figs/sdcir.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      163 88 moveto
      150 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      163 120 moveto
      150 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      203 112 moveto
      214 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      203 96 moveto
      214 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      110 136 moveto
      142 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      114 136 moveto
      114 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      138 136 moveto
      138 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      110 132 moveto
      142 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      126 132 moveto
      126 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      114 152 moveto
      138 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      138 148 moveto
      134 140 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      138 148 moveto
      142 140 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      78 104 moveto
      110 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      82 104 moveto
      82 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      106 104 moveto
      106 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      78 100 moveto
      110 100 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      94 100 moveto
      94 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      82 120 moveto
      106 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      106 116 moveto
      102 108 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      106 116 moveto
      110 108 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      126 120 moveto
      150 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      94 88 moveto
      150 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      126 152 moveto
      126 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      94 120 moveto
      94 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 94 120 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 94 120 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 126 152 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 126 152 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      78 168 moveto
      142 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 126 168 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 126 168 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 94 168 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 94 168 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      110 168 moveto
      110 176 lineto
      118 176 lineto
      110 184 lineto
      102 176 lineto
      110 176 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 110 168 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 110 168 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      158 152 moveto
      162 148 lineto
      174 148 lineto
      174 156 lineto
      162 156 lineto
      158 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      150 120 moveto
      150 152 lineto
      158 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      174 152 moveto
      214 152 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 150 120 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 150 120 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      166 156 moveto
      166 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      150 88 moveto
      150 56 lineto
      158 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      158 56 moveto
      162 60 lineto
      174 60 lineto
      174 52 lineto
      162 52 lineto
      158 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      166 52 moveto
      166 40 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      174 56 moveto
      214 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      214 96 moveto
      230 112 lineto
      238 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      214 112 moveto
      230 96 lineto
      238 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      214 24 moveto
      214 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      214 112 moveto
      214 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 214 152 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 214 152 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 214 112 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 214 112 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 214 56 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 214 56 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 214 96 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 214 96 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      134 24 moveto
      138 20 lineto
      146 20 lineto
      150 24 lineto
      146 28 lineto
      138 28 lineto
      134 24 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 150 88 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 150 88 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      150 24 moveto
      418 24 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      134 24 moveto
      38 24 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      142 28 moveto
      142 40 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 214 24 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 214 24 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      134 200 moveto
      138 204 lineto
      146 204 lineto
      150 200 lineto
      146 196 lineto
      138 196 lineto
      134 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      142 196 moveto
      142 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      150 200 moveto
      418 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      134 200 moveto
      38 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 214 200 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 214 200 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      54 96 moveto
      58 100 lineto
      58 108 lineto
      54 112 lineto
      50 108 lineto
      50 100 lineto
      54 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      54 113 moveto
      54 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      54 24 moveto
      54 95 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      38 104 moveto
      50 104 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 54 24 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 54 24 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 54 200 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 54 200 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      337 232 moveto
      337 24 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 337 24 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 337 24 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      278 152 moveto
      274 148 lineto
      262 148 lineto
      262 156 lineto
      274 156 lineto
      278 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      268 156 moveto
      268 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      214 152 moveto
      262 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      278 152 moveto
      338 152 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 337 152 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 337 152 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      446 88 moveto
      434 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      445 120 moveto
      434 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      486 112 moveto
      517 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      486 96 moveto
      518 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      394 136 moveto
      426 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      398 136 moveto
      398 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      422 136 moveto
      422 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      394 132 moveto
      426 132 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      410 132 moveto
      410 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      398 152 moveto
      422 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      422 148 moveto
      418 140 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      422 148 moveto
      426 140 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      362 104 moveto
      394 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      366 104 moveto
      366 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      390 104 moveto
      390 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      362 100 moveto
      394 100 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      378 100 moveto
      378 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      366 120 moveto
      390 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      390 116 moveto
      386 108 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      390 116 moveto
      394 108 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      410 120 moveto
      434 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      378 88 moveto
      434 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      410 152 moveto
      410 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      378 120 moveto
      378 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 378 120 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 378 120 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 410 152 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 410 152 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      362 168 moveto
      426 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 410 168 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 410 168 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 378 168 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 378 168 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      394 168 moveto
      394 176 lineto
      402 176 lineto
      394 184 lineto
      386 176 lineto
      394 176 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 394 168 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 394 168 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      442 152 moveto
      446 148 lineto
      458 148 lineto
      458 156 lineto
      446 156 lineto
      442 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      434 120 moveto
      434 152 lineto
      442 152 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      458 152 moveto
      498 152 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 434 120 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 434 120 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      452 156 moveto
      452 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      434 88 moveto
      434 56 lineto
      442 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      442 56 moveto
      446 60 lineto
      458 60 lineto
      458 52 lineto
      446 52 lineto
      442 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      452 52 moveto
      452 40 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      458 56 moveto
      498 56 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      498 24 moveto
      498 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      498 112 moveto
      498 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 498 152 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 498 152 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 498 112 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 498 112 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 498 56 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 498 56 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 498 96 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 498 96 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      418 24 moveto
      422 20 lineto
      430 20 lineto
      434 24 lineto
      430 28 lineto
      422 28 lineto
      418 24 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 434 88 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 434 88 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      434 24 moveto
      646 24 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      426 28 moveto
      426 40 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 498 24 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 498 24 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      418 200 moveto
      422 204 lineto
      430 204 lineto
      434 200 lineto
      430 196 lineto
      422 196 lineto
      418 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      426 196 moveto
      426 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      434 200 moveto
      646 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 498 200 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 498 200 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 610 24 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 610 24 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      646 24 moveto
      650 20 lineto
      658 20 lineto
      662 24 lineto
      658 28 lineto
      650 28 lineto
      646 24 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      654 28 moveto
      654 40 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      646 200 moveto
      650 204 lineto
      658 204 lineto
      662 200 lineto
      658 196 lineto
      650 196 lineto
      646 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      654 196 moveto
      654 184 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      662 24 moveto
      684 24 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      662 200 moveto
      684 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      669 88 moveto
      669 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      669 92 moveto
      685 92 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      669 116 moveto
      685 116 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      665 88 moveto
      665 120 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      665 104 moveto
      653 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      677 104 moveto
      685 100 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      677 104 moveto
      685 108 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      685 24 moveto
      685 92 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      684 116 moveto
      684 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      758 64 moveto
      758 144 lineto
      814 104 lineto
      758 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      686 80 moveto
      758 80 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      684 128 moveto
      758 128 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      790 88 moveto
      838 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      790 120 moveto
      822 120 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      762 90 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      782 119 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      762 130 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      782 100 moveto (-) show
   grestore

% OVAL
newpath 685 80 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 685 80 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 684 128 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 684 128 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      145 280 moveto
      134 280 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      146 312 moveto
      134 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      94 328 moveto
      126 328 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      98 328 moveto
      98 344 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      122 328 moveto
      122 344 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      94 324 moveto
      126 324 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      110 324 moveto
      110 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      98 344 moveto
      122 344 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      122 340 moveto
      118 332 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      122 340 moveto
      126 332 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      62 296 moveto
      94 296 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      66 296 moveto
      66 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      90 296 moveto
      90 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      62 292 moveto
      94 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      78 292 moveto
      78 280 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      66 312 moveto
      90 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      90 308 moveto
      86 300 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      90 308 moveto
      94 300 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      110 312 moveto
      134 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      78 280 moveto
      134 280 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      110 344 moveto
      110 360 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      78 312 moveto
      78 360 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 78 312 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 78 312 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 110 344 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 110 344 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      62 360 moveto
      126 360 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 110 360 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 110 360 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 78 360 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 78 360 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      94 360 moveto
      94 368 lineto
      102 368 lineto
      94 376 lineto
      86 368 lineto
      94 368 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 94 360 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 94 360 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      142 344 moveto
      146 340 lineto
      158 340 lineto
      158 348 lineto
      146 348 lineto
      142 344 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      134 312 moveto
      134 344 lineto
      142 344 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 134 312 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 134 312 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      150 348 moveto
      150 360 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      134 280 moveto
      134 248 lineto
      142 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      142 248 moveto
      146 252 lineto
      158 252 lineto
      158 244 lineto
      146 244 lineto
      142 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      150 244 moveto
      150 232 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 134 280 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 134 280 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 304 moveto
      338 304 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      187 288 moveto
      262 288 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      158 344 moveto
      198 344 lineto
      198 304 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 198 304 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 198 304 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      158 248 moveto
      198 248 lineto
      198 288 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 198 288 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 198 288 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      214 248 moveto
      218 244 lineto
      218 236 lineto
      214 232 lineto
      210 236 lineto
      210 244 lineto
      214 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      218 240 moveto
      230 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      214 288 moveto
      214 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      214 232 moveto
      214 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 214 288 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 214 288 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      262 288 moveto
      266 284 lineto
      274 284 lineto
      278 288 lineto
      274 292 lineto
      266 292 lineto
      262 288 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      278 288 moveto
      336 288 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      337 248 moveto
      333 244 lineto
      333 236 lineto
      337 232 lineto
      341 236 lineto
      341 244 lineto
      337 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      332 240 moveto
      320 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      270 272 moveto
      270 284 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      337 248 moveto
      337 304 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 337 288 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 337 288 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      435 280 moveto
      422 280 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      434 312 moveto
      422 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      382 328 moveto
      414 328 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      386 328 moveto
      386 344 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      410 328 moveto
      410 344 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      382 324 moveto
      414 324 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      398 324 moveto
      398 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      386 344 moveto
      410 344 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      410 340 moveto
      406 332 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      410 340 moveto
      414 332 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      350 296 moveto
      382 296 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      354 296 moveto
      354 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      378 296 moveto
      378 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      350 292 moveto
      382 292 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      366 292 moveto
      366 280 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      354 312 moveto
      378 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      378 308 moveto
      374 300 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      378 308 moveto
      382 300 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      398 312 moveto
      422 312 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      366 280 moveto
      422 280 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      398 344 moveto
      398 360 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      366 312 moveto
      366 360 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 366 312 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 366 312 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 398 344 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 398 344 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      350 360 moveto
      414 360 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 398 360 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 398 360 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 366 360 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 366 360 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      382 360 moveto
      382 368 lineto
      390 368 lineto
      382 376 lineto
      374 368 lineto
      382 368 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 382 360 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 382 360 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      430 344 moveto
      434 340 lineto
      446 340 lineto
      446 348 lineto
      434 348 lineto
      430 344 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      422 312 moveto
      422 344 lineto
      430 344 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 422 312 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 422 312 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      438 348 moveto
      438 360 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      422 280 moveto
      422 248 lineto
      430 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      430 248 moveto
      434 252 lineto
      446 252 lineto
      446 244 lineto
      434 244 lineto
      430 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      438 244 moveto
      438 232 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 422 280 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 422 280 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      446 344 moveto
      486 344 lineto
      486 304 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 486 304 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 486 304 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      446 248 moveto
      486 248 lineto
      486 288 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 486 288 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 486 288 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      613 232 moveto
      613 24 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      475 304 moveto
      614 304 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      475 288 moveto
      547 288 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      498 248 moveto
      502 244 lineto
      502 236 lineto
      498 232 lineto
      494 236 lineto
      494 244 lineto
      498 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      502 240 moveto
      514 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      498 288 moveto
      498 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      498 232 moveto
      498 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      613 248 moveto
      609 244 lineto
      609 236 lineto
      613 232 lineto
      617 236 lineto
      617 244 lineto
      613 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      609 240 moveto
      597 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      613 248 moveto
      613 304 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 613 288 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 613 288 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      547 288 moveto
      551 284 lineto
      559 284 lineto
      563 288 lineto
      559 292 lineto
      551 292 lineto
      547 288 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      555 272 moveto
      555 284 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      563 288 moveto
      611 288 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      838 72 moveto 886 72 lineto 886 152 lineto 838 152 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      838 136 moveto
      822 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      886 88 moveto
      902 88 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      886 136 moveto
      902 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      838 132 moveto
      842 136 lineto
      838 140 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      520 98 moveto (DAC2) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      242 99 moveto (DAC1) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      5 43 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      18 52 moveto (IN) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      13 26 moveto (+) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      5 215 moveto (I) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      16 227 moveto (IN) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      16 199 moveto (-) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      18 116 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      34 127 moveto (1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      18 92 moveto
      37 92 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      171 46 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      184 52 moveto (1) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      308 102 moveto (q) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      308 124 moveto (q) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      324 133 moveto (n) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      621 111 moveto (V) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      634 119 moveto (DD) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      697 104 moveto
      697 112 lineto
      705 112 lineto
      697 120 lineto
      689 112 lineto
      697 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      669 104 moveto
      697 104 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      270 247 moveto
      287 247 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      556 246 moveto
      570 246 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      117 47 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      130 58 moveto (1) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      171 178 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      184 184 moveto (1) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      147 187 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      160 197 moveto (1) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      308 72 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      321 82 moveto (1) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      276 183 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      289 193 moveto (4) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      396 48 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      409 58 moveto (3) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      458 44 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      471 54 moveto (3) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      460 174 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      473 184 moveto (3) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      433 187 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      446 197 moveto (3) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      238 56 moveto 289 56 lineto 289 136 lineto 238 136 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      289 97 moveto
      305 97 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      289 67 moveto
      305 67 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      289 120 moveto
      305 120 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      517 56 moveto 568 56 lineto 568 136 lineto 517 136 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      568 97 moveto
      584 97 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      568 67 moveto
      584 67 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      568 120 moveto
      584 120 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      584 98 moveto (q) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      584 120 moveto (q) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      600 129 moveto (n) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      585 70 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      598 80 moveto (3) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      644 165 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      660 176 moveto (5) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      805 154 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      818 164 moveto (3) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      905 92 moveto (q) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      905 145 moveto (q) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      921 154 moveto (n) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      756 210 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      769 220 moveto (1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 310 moveto
      948 310 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      896 310 moveto
      896 296 lineto
      930 296 lineto
      930 310 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      862 281 moveto
      862 265 lineto
      896 265 lineto
      896 281 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      829 252 moveto
      829 236 lineto
      862 236 lineto
      862 252 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 207 moveto
      829 207 lineto
      829 221 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 221 moveto
      948 221 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 252 moveto
      948 252 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 281 moveto
      948 281 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 192 moveto
      792 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 192 moveto
      796 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      948 310 moveto
      944 306 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      948 310 moveto
      944 314 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      948 281 moveto
      944 276 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      948 281 moveto
      944 284 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      948 252 moveto
      944 247 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      948 252 moveto
      944 255 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      948 221 moveto
      944 218 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      948 221 moveto
      944 225 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 310 moveto
      794 288 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 281 moveto
      794 257 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 251 moveto
      794 229 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 221 moveto
      794 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 229 moveto
      792 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 229 moveto
      796 236 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 257 moveto
      792 265 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 257 moveto
      796 265 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 288 moveto
      792 296 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      794 288 moveto
      796 296 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      829 200 moveto
      829 317 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      862 200 moveto
      862 317 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      896 200 moveto
      896 317 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      930 200 moveto
      930 317 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      756 241 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      769 251 moveto (2) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      756 270 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      769 280 moveto (3) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      756 301 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      769 311 moveto (4) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      923 332 moveto (T) show
   grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      955 309 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      510 225 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      523 235 moveto (6) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      575 223 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      588 233 moveto (6) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      444 233 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      457 243 moveto (4) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      450 367 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      463 377 moveto (4) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      556 269 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      569 279 moveto (6) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      226 225 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      239 235 moveto (5) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      300 226 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      313 236 moveto (5) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      272 268 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      285 278 moveto (5) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      440 303 moveto (Gm) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      475 313 moveto
      475 280 lineto
      434 264 lineto
      434 329 lineto
      475 313 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      458 314 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      439 284 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      438 319 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      458 290 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      451 110 moveto (Gm) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      486 120 moveto
      486 87 lineto
      445 71 lineto
      445 136 lineto
      486 120 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      469 121 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      450 91 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      449 126 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      469 97 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      168 109 moveto (Gm) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      203 119 moveto
      203 86 lineto
      162 70 lineto
      162 135 lineto
      203 119 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      186 120 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      167 90 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      166 125 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      186 96 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      151 302 moveto (Gm) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      186 312 moveto
      186 279 lineto
      145 263 lineto
      145 328 lineto
      186 312 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      169 313 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      150 283 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      149 318 moveto (-) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      169 289 moveto (-) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      156 233 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      171 239 moveto (2) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      156 369 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      171 375 moveto (2) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      758 352 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      772 362 moveto (5) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      806 352 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      819 362 moveto (1) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      833 351 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      787 351 moveto (=) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      850 352 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      863 362 moveto (2) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      759 392 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      773 402 moveto (6) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      808 393 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      821 403 moveto (3) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      835 390 moveto (+) show
   grestore

% TEXT
0 setgray
/Courier-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      789 390 moveto (=) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      852 393 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      865 403 moveto (4) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      847 119 moveto (DFF) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      642 62 moveto (f) show
   grestore

% TEXT
0 setgray
/Helvetica-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      658 73 moveto (5) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      736 48 moveto 948 48 lineto 948 172 lineto 736 172 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Helvetica findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      760 42 moveto (Latched comparator) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Oct 29 10:39:56 1998
%%EndDocument

 endTexFig
 1214 1699 a FH(Figure)29 b(4.17:)43 b(SI)29 b(second-order)i(\006\001)
e(mo)s(dulator)1050 1725 y
 16577004 12761662 1184071 3091742 17761075 15853404 startTexFig
 1050 1725 a
%%BeginDocument: figs/sdgm.eps
% Procedure for outline box
/o {2 copy moveto 4 1 roll 2 copy exch lineto
    pop 2 copy lineto pop exch lineto closepath stroke} def
% Procedure for filled box
/b {2 copy moveto 4 1 roll 2 copy exch lineto
    pop 2 copy lineto pop exch lineto closepath fill} def
% Procedure for outline circle
/h {0 360 arc closepath stroke} def
% Procedure for filled circle
/c {0 360 arc closepath fill} def
% Procedure for an outline polygon
/po {3 1 roll moveto 1 sub {lineto} repeat closepath stroke} def
% Procedure for a filled polygon
/pf {3 1 roll moveto 1 sub {lineto} repeat closepath fill} def
% Procedure for a filled wire
/wf {gsave setlinecap setlinejoin setmiterlimit setlinewidth
     3 1 roll moveto 1 sub {lineto} repeat stroke grestore} def
% Procedure for a outline wire
/wo {gsave grestore} def
% Procedure to set linestyles
/wfno_dash {[] 0 setdash} def
/wfgrid_dash {[1 1] 0 setdash} def
/wfsolid_dash {[] 0 setdash} def
/wflittle_even_dash {[3 3] 0 setdash} def
/wfbig_even_dash {[7 7] 0 setdash} def
/wfdot_dash {[1 2] 0 setdash} def
/wfbig_little_dash {[5 3 1 5] 0 setdash} def
% Procedure to draw a line
/l {moveto lineto stroke} def
% Define font for port names
/f /Courier findfont [0.7 0 0 1 0 0] makefont def
% Procedure to show port names
/s {gsave f exch scalefont setfont moveto rotate n show grestore} def
/l0 {0.0000 setgray} def
/l1_1O {0.0000 setgray} def
/l1_1P {0.0000 setgray} def
/l1_1T {0.0000 setgray} def
0.5 setlinewidth
newpath
18 47 moveto
252 0 rlineto
0 194 rlineto
252 neg 0 rlineto
closepath clip newpath

l1_1O 201.206 87.773 
203.817 85.162 
206.429 87.773 
3 po 
203.817 87.773 
203.817 92.996 
2 0.300 1.415 0 2 wf
201.206 124.333 
203.817 121.722 
206.429 124.333 
3 po 
203.817 124.333 
203.817 129.556 
2 0.300 1.415 0 2 wf
224.709 90.385 
227.320 87.773 
229.931 90.385 
3 po 
227.320 90.385 
227.320 95.608 
2 0.300 1.415 0 2 wf
224.709 124.333 
227.320 121.722 
229.931 124.333 
3 po 
227.320 124.333 
227.320 129.556 
2 0.300 1.415 0 2 wf
52.356 124.333 
54.968 121.722 
57.579 124.333 
3 po 
54.968 124.333 
54.968 129.556 
2 0.300 1.415 0 2 wf
52.356 90.385 
54.968 87.773 
57.579 90.385 
3 po 
54.968 90.385 
54.968 95.608 
2 0.300 1.415 0 2 wf
96.750 90.385 
99.361 87.773 
101.973 90.385 
3 po 
99.361 90.385 
99.361 95.608 
2 0.300 1.415 0 2 wf
221.444 71.452 
224.056 72.105 
221.444 72.758 
3 po 
224.709 72.105 
219.486 72.105 
2 0.300 1.415 0 2 wf
226.014 74.716 
229.931 74.716 
2 0.300 1.415 0 2 wf
222.097 70.799 
222.097 66.882 
2 0.300 1.415 0 2 wf
224.709 70.799 
222.097 70.799 
2 0.300 1.415 0 2 wf
222.097 78.633 
222.097 82.551 
2 0.300 1.415 0 2 wf
224.709 78.633 
222.097 78.633 
2 0.300 1.415 0 2 wf
224.709 78.633 
224.709 70.799 
2 0.300 1.415 0 2 wf
226.014 78.633 
226.014 70.799 
2 0.300 1.415 0 2 wf
222.097 66.882 1.000 c 
199.247 71.452 
196.636 72.105 
199.247 72.758 
3 po 
195.983 72.105 
201.206 72.105 
2 0.300 1.415 0 2 wf
194.677 74.716 
190.760 74.716 
2 0.300 1.415 0 2 wf
198.595 70.799 
198.595 66.882 
2 0.300 1.415 0 2 wf
195.983 70.799 
198.595 70.799 
2 0.300 1.415 0 2 wf
198.595 78.633 
198.595 82.551 
2 0.300 1.415 0 2 wf
195.983 78.633 
198.595 78.633 
2 0.300 1.415 0 2 wf
195.983 78.633 
195.983 70.799 
2 0.300 1.415 0 2 wf
194.677 78.633 
194.677 70.799 
2 0.300 1.415 0 2 wf
198.595 66.882 1.000 c 
222.750 94.955 
220.139 95.608 
222.750 96.260 
3 po 
219.486 95.608 
224.709 95.608 
2 0.300 1.415 0 2 wf
218.180 98.219 
214.263 98.219 
2 0.300 1.415 0 2 wf
222.097 94.302 
222.097 90.385 
2 0.300 1.415 0 2 wf
219.486 94.302 
222.097 94.302 
2 0.300 1.415 0 2 wf
222.097 102.136 
222.097 106.053 
2 0.300 1.415 0 2 wf
219.486 102.136 
222.097 102.136 
2 0.300 1.415 0 2 wf
219.486 102.136 
219.486 94.302 
2 0.300 1.415 0 2 wf
218.180 102.136 
218.180 94.302 
2 0.300 1.415 0 2 wf
199.247 94.955 
196.636 95.608 
199.247 96.260 
3 po 
195.983 95.608 
201.206 95.608 
2 0.300 1.415 0 2 wf
194.677 98.219 
190.760 98.219 
2 0.300 1.415 0 2 wf
198.595 94.302 
198.595 90.385 
2 0.300 1.415 0 2 wf
195.983 94.302 
198.595 94.302 
2 0.300 1.415 0 2 wf
198.595 102.136 
198.595 106.053 
2 0.300 1.415 0 2 wf
195.983 102.136 
198.595 102.136 
2 0.300 1.415 0 2 wf
195.983 102.136 
195.983 94.302 
2 0.300 1.415 0 2 wf
194.677 102.136 
194.677 94.302 
2 0.300 1.415 0 2 wf
190.760 98.219 1.000 c 
222.750 128.903 
220.139 129.556 
222.750 130.209 
3 po 
219.486 129.556 
224.709 129.556 
2 0.300 1.415 0 2 wf
218.180 132.167 
214.263 132.167 
2 0.300 1.415 0 2 wf
222.097 128.250 
222.097 124.333 
2 0.300 1.415 0 2 wf
219.486 128.250 
222.097 128.250 
2 0.300 1.415 0 2 wf
222.097 136.084 
222.097 140.001 
2 0.300 1.415 0 2 wf
219.486 136.084 
222.097 136.084 
2 0.300 1.415 0 2 wf
219.486 136.084 
219.486 128.250 
2 0.300 1.415 0 2 wf
218.180 136.084 
218.180 128.250 
2 0.300 1.415 0 2 wf
199.247 128.903 
196.636 129.556 
199.247 130.209 
3 po 
195.983 129.556 
201.206 129.556 
2 0.300 1.415 0 2 wf
194.677 132.167 
190.760 132.167 
2 0.300 1.415 0 2 wf
198.595 128.250 
198.595 124.333 
2 0.300 1.415 0 2 wf
195.983 128.250 
198.595 128.250 
2 0.300 1.415 0 2 wf
198.595 136.084 
198.595 140.001 
2 0.300 1.415 0 2 wf
195.983 136.084 
198.595 136.084 
2 0.300 1.415 0 2 wf
195.983 136.084 
195.983 128.250 
2 0.300 1.415 0 2 wf
194.677 136.084 
194.677 128.250 
2 0.300 1.415 0 2 wf
190.760 132.167 1.000 c 
220.791 166.768 
223.403 167.421 
220.791 168.074 
3 po 
219.486 167.421 
224.709 167.421 
2 0.300 1.415 0 2 wf
216.222 164.810 
214.263 164.810 
2 0.300 1.415 0 2 wf
217.201 164.810 1.000 h 
222.097 160.892 
222.097 156.975 
2 0.300 1.415 0 2 wf
219.486 160.892 
222.097 160.892 
2 0.300 1.415 0 2 wf
222.097 168.727 
222.097 172.644 
2 0.300 1.415 0 2 wf
219.486 168.727 
222.097 168.727 
2 0.300 1.415 0 2 wf
219.486 168.727 
219.486 160.892 
2 0.300 1.415 0 2 wf
218.180 168.727 
218.180 160.892 
2 0.300 1.415 0 2 wf
222.097 172.644 1.000 c 
197.289 166.768 
199.900 167.421 
197.289 168.074 
3 po 
195.983 167.421 
201.206 167.421 
2 0.300 1.415 0 2 wf
192.719 164.810 
190.760 164.810 
2 0.300 1.415 0 2 wf
193.698 164.810 1.000 h 
198.595 160.892 
198.595 156.975 
2 0.300 1.415 0 2 wf
195.983 160.892 
198.595 160.892 
2 0.300 1.415 0 2 wf
198.595 168.727 
198.595 172.644 
2 0.300 1.415 0 2 wf
195.983 168.727 
198.595 168.727 
2 0.300 1.415 0 2 wf
195.983 168.727 
195.983 160.892 
2 0.300 1.415 0 2 wf
194.677 168.727 
194.677 160.892 
2 0.300 1.415 0 2 wf
198.595 172.644 1.000 c 
190.760 164.810 1.000 c 
220.791 186.354 
223.403 187.006 
220.791 187.659 
3 po 
219.486 187.006 
224.709 187.006 
2 0.300 1.415 0 2 wf
216.222 184.395 
214.263 184.395 
2 0.300 1.415 0 2 wf
217.201 184.395 1.000 h 
222.097 180.478 
222.097 176.561 
2 0.300 1.415 0 2 wf
219.486 180.478 
222.097 180.478 
2 0.300 1.415 0 2 wf
222.097 188.312 
222.097 192.229 
2 0.300 1.415 0 2 wf
219.486 188.312 
222.097 188.312 
2 0.300 1.415 0 2 wf
219.486 188.312 
219.486 180.478 
2 0.300 1.415 0 2 wf
218.180 188.312 
218.180 180.478 
2 0.300 1.415 0 2 wf
222.097 192.229 1.000 c 
197.289 186.354 
199.900 187.006 
197.289 187.659 
3 po 
195.983 187.006 
201.206 187.006 
2 0.300 1.415 0 2 wf
192.719 184.395 
190.760 184.395 
2 0.300 1.415 0 2 wf
193.698 184.395 1.000 h 
198.595 180.478 
198.595 176.561 
2 0.300 1.415 0 2 wf
195.983 180.478 
198.595 180.478 
2 0.300 1.415 0 2 wf
198.595 188.312 
198.595 192.229 
2 0.300 1.415 0 2 wf
195.983 188.312 
198.595 188.312 
2 0.300 1.415 0 2 wf
195.983 188.312 
195.983 180.478 
2 0.300 1.415 0 2 wf
194.677 188.312 
194.677 180.478 
2 0.300 1.415 0 2 wf
198.595 192.229 1.000 c 
190.760 184.395 1.000 c 
223.403 217.690 
220.791 218.343 
223.403 218.996 
3 po 
224.709 218.343 
219.486 218.343 
2 0.300 1.415 0 2 wf
227.973 215.732 
229.931 215.732 
2 0.300 1.415 0 2 wf
226.994 215.732 1.000 h 
222.097 211.815 
222.097 207.898 
2 0.300 1.415 0 2 wf
224.709 211.815 
222.097 211.815 
2 0.300 1.415 0 2 wf
222.097 219.649 
222.097 223.566 
2 0.300 1.415 0 2 wf
224.709 219.649 
222.097 219.649 
2 0.300 1.415 0 2 wf
224.709 219.649 
224.709 211.815 
2 0.300 1.415 0 2 wf
226.014 219.649 
226.014 211.815 
2 0.300 1.415 0 2 wf
197.289 217.690 
199.900 218.343 
197.289 218.996 
3 po 
195.983 218.343 
201.206 218.343 
2 0.300 1.415 0 2 wf
192.719 215.732 
190.760 215.732 
2 0.300 1.415 0 2 wf
193.698 215.732 1.000 h 
198.595 211.815 
198.595 207.898 
2 0.300 1.415 0 2 wf
195.983 211.815 
198.595 211.815 
2 0.300 1.415 0 2 wf
198.595 219.649 
198.595 223.566 
2 0.300 1.415 0 2 wf
195.983 219.649 
198.595 219.649 
2 0.300 1.415 0 2 wf
195.983 219.649 
195.983 211.815 
2 0.300 1.415 0 2 wf
194.677 219.649 
194.677 211.815 
2 0.300 1.415 0 2 wf
139.838 217.690 
142.449 218.343 
139.838 218.996 
3 po 
138.532 218.343 
143.755 218.343 
2 0.300 1.415 0 2 wf
135.268 215.732 
133.310 215.732 
2 0.300 1.415 0 2 wf
136.247 215.732 1.000 h 
141.144 211.815 
141.144 207.898 
2 0.300 1.415 0 2 wf
138.532 211.815 
141.144 211.815 
2 0.300 1.415 0 2 wf
141.144 219.649 
141.144 223.566 
2 0.300 1.415 0 2 wf
138.532 219.649 
141.144 219.649 
2 0.300 1.415 0 2 wf
138.532 219.649 
138.532 211.815 
2 0.300 1.415 0 2 wf
137.227 219.649 
137.227 211.815 
2 0.300 1.415 0 2 wf
139.838 186.354 
142.449 187.006 
139.838 187.659 
3 po 
138.532 187.006 
143.755 187.006 
2 0.300 1.415 0 2 wf
135.268 184.395 
133.310 184.395 
2 0.300 1.415 0 2 wf
136.247 184.395 1.000 h 
141.144 180.478 
141.144 176.561 
2 0.300 1.415 0 2 wf
138.532 180.478 
141.144 180.478 
2 0.300 1.415 0 2 wf
141.144 188.312 
141.144 192.229 
2 0.300 1.415 0 2 wf
138.532 188.312 
141.144 188.312 
2 0.300 1.415 0 2 wf
138.532 188.312 
138.532 180.478 
2 0.300 1.415 0 2 wf
137.227 188.312 
137.227 180.478 
2 0.300 1.415 0 2 wf
141.144 192.229 1.000 c 
133.310 184.395 1.000 c 
154.201 147.183 
151.589 147.835 
154.201 148.488 
3 po 
155.506 147.835 
150.284 147.835 
2 0.300 1.415 0 2 wf
158.771 145.224 
160.729 145.224 
2 0.300 1.415 0 2 wf
157.791 145.224 1.000 h 
152.895 141.307 
152.895 137.390 
2 0.300 1.415 0 2 wf
155.506 141.307 
152.895 141.307 
2 0.300 1.415 0 2 wf
152.895 149.141 
152.895 153.058 
2 0.300 1.415 0 2 wf
155.506 149.141 
152.895 149.141 
2 0.300 1.415 0 2 wf
155.506 149.141 
155.506 141.307 
2 0.300 1.415 0 2 wf
156.812 149.141 
156.812 141.307 
2 0.300 1.415 0 2 wf
126.781 147.183 
129.392 147.835 
126.781 148.488 
3 po 
125.475 147.835 
130.698 147.835 
2 0.300 1.415 0 2 wf
122.211 145.224 
120.253 145.224 
2 0.300 1.415 0 2 wf
123.190 145.224 1.000 h 
128.087 141.307 
128.087 137.390 
2 0.300 1.415 0 2 wf
125.475 141.307 
128.087 141.307 
2 0.300 1.415 0 2 wf
128.087 149.141 
128.087 153.058 
2 0.300 1.415 0 2 wf
125.475 149.141 
128.087 149.141 
2 0.300 1.415 0 2 wf
125.475 149.141 
125.475 141.307 
2 0.300 1.415 0 2 wf
124.170 149.141 
124.170 141.307 
2 0.300 1.415 0 2 wf
95.444 166.768 
92.833 167.421 
95.444 168.074 
3 po 
96.750 167.421 
91.527 167.421 
2 0.300 1.415 0 2 wf
100.014 164.810 
101.973 164.810 
2 0.300 1.415 0 2 wf
99.035 164.810 1.000 h 
94.139 160.892 
94.139 156.975 
2 0.300 1.415 0 2 wf
96.750 160.892 
94.139 160.892 
2 0.300 1.415 0 2 wf
94.139 168.727 
94.139 172.644 
2 0.300 1.415 0 2 wf
96.750 168.727 
94.139 168.727 
2 0.300 1.415 0 2 wf
96.750 168.727 
96.750 160.892 
2 0.300 1.415 0 2 wf
98.056 168.727 
98.056 160.892 
2 0.300 1.415 0 2 wf
94.139 172.644 1.000 c 
94.139 156.975 1.000 c 
95.444 186.354 
92.833 187.006 
95.444 187.659 
3 po 
96.750 187.006 
91.527 187.006 
2 0.300 1.415 0 2 wf
100.014 184.395 
101.973 184.395 
2 0.300 1.415 0 2 wf
99.035 184.395 1.000 h 
94.139 180.478 
94.139 176.561 
2 0.300 1.415 0 2 wf
96.750 180.478 
94.139 180.478 
2 0.300 1.415 0 2 wf
94.139 188.312 
94.139 192.229 
2 0.300 1.415 0 2 wf
96.750 188.312 
94.139 188.312 
2 0.300 1.415 0 2 wf
96.750 188.312 
96.750 180.478 
2 0.300 1.415 0 2 wf
98.056 188.312 
98.056 180.478 
2 0.300 1.415 0 2 wf
94.139 192.229 1.000 c 
94.139 176.561 1.000 c 
92.833 217.690 
95.444 218.343 
92.833 218.996 
3 po 
91.527 218.343 
96.750 218.343 
2 0.300 1.415 0 2 wf
88.263 215.732 
86.304 215.732 
2 0.300 1.415 0 2 wf
89.242 215.732 1.000 h 
94.139 211.815 
94.139 207.898 
2 0.300 1.415 0 2 wf
91.527 211.815 
94.139 211.815 
2 0.300 1.415 0 2 wf
94.139 219.649 
94.139 223.566 
2 0.300 1.415 0 2 wf
91.527 219.649 
94.139 219.649 
2 0.300 1.415 0 2 wf
91.527 219.649 
91.527 211.815 
2 0.300 1.415 0 2 wf
90.222 219.649 
90.222 211.815 
2 0.300 1.415 0 2 wf
86.304 215.732 1.000 c 
94.791 94.955 
92.180 95.608 
94.791 96.260 
3 po 
91.527 95.608 
96.750 95.608 
2 0.300 1.415 0 2 wf
90.222 98.219 
86.304 98.219 
2 0.300 1.415 0 2 wf
94.139 94.302 
94.139 90.385 
2 0.300 1.415 0 2 wf
91.527 94.302 
94.139 94.302 
2 0.300 1.415 0 2 wf
94.139 102.136 
94.139 106.053 
2 0.300 1.415 0 2 wf
91.527 102.136 
94.139 102.136 
2 0.300 1.415 0 2 wf
91.527 102.136 
91.527 94.302 
2 0.300 1.415 0 2 wf
90.222 102.136 
90.222 94.302 
2 0.300 1.415 0 2 wf
86.304 98.219 1.000 c 
94.791 71.452 
92.180 72.105 
94.791 72.758 
3 po 
91.527 72.105 
96.750 72.105 
2 0.300 1.415 0 2 wf
90.222 74.716 
86.304 74.716 
2 0.300 1.415 0 2 wf
94.139 70.799 
94.139 66.882 
2 0.300 1.415 0 2 wf
91.527 70.799 
94.139 70.799 
2 0.300 1.415 0 2 wf
94.139 78.633 
94.139 82.551 
2 0.300 1.415 0 2 wf
91.527 78.633 
94.139 78.633 
2 0.300 1.415 0 2 wf
91.527 78.633 
91.527 70.799 
2 0.300 1.415 0 2 wf
90.222 78.633 
90.222 70.799 
2 0.300 1.415 0 2 wf
94.139 66.882 1.000 c 
41.911 61.659 
44.522 59.048 
47.133 61.659 
3 po 
44.522 61.659 
44.522 66.882 
2 0.300 1.415 0 2 wf
60.843 71.452 
58.232 72.105 
60.843 72.758 
3 po 
57.579 72.105 
62.802 72.105 
2 0.300 1.415 0 2 wf
56.273 74.716 
52.356 74.716 
2 0.300 1.415 0 2 wf
60.190 70.799 
60.190 66.882 
2 0.300 1.415 0 2 wf
57.579 70.799 
60.190 70.799 
2 0.300 1.415 0 2 wf
60.190 78.633 
60.190 82.551 
2 0.300 1.415 0 2 wf
57.579 78.633 
60.190 78.633 
2 0.300 1.415 0 2 wf
57.579 78.633 
57.579 70.799 
2 0.300 1.415 0 2 wf
56.273 78.633 
56.273 70.799 
2 0.300 1.415 0 2 wf
60.190 66.882 1.000 c 
52.356 74.716 1.000 c 
59.538 94.955 
62.149 95.608 
59.538 96.260 
3 po 
62.802 95.608 
57.579 95.608 
2 0.300 1.415 0 2 wf
64.108 98.219 
68.025 98.219 
2 0.300 1.415 0 2 wf
60.190 94.302 
60.190 90.385 
2 0.300 1.415 0 2 wf
62.802 94.302 
60.190 94.302 
2 0.300 1.415 0 2 wf
60.190 102.136 
60.190 106.053 
2 0.300 1.415 0 2 wf
62.802 102.136 
60.190 102.136 
2 0.300 1.415 0 2 wf
62.802 102.136 
62.802 94.302 
2 0.300 1.415 0 2 wf
64.108 102.136 
64.108 94.302 
2 0.300 1.415 0 2 wf
59.538 128.903 
62.149 129.556 
59.538 130.209 
3 po 
62.802 129.556 
57.579 129.556 
2 0.300 1.415 0 2 wf
64.108 132.167 
68.025 132.167 
2 0.300 1.415 0 2 wf
60.190 128.250 
60.190 124.333 
2 0.300 1.415 0 2 wf
62.802 128.250 
60.190 128.250 
2 0.300 1.415 0 2 wf
60.190 136.084 
60.190 140.001 
2 0.300 1.415 0 2 wf
62.802 136.084 
60.190 136.084 
2 0.300 1.415 0 2 wf
62.802 136.084 
62.802 128.250 
2 0.300 1.415 0 2 wf
64.108 136.084 
64.108 128.250 
2 0.300 1.415 0 2 wf
58.885 205.939 
61.496 206.592 
58.885 207.245 
3 po 
57.579 206.592 
62.802 206.592 
2 0.300 1.415 0 2 wf
54.315 203.981 
52.356 203.981 
2 0.300 1.415 0 2 wf
55.294 203.981 1.000 h 
60.190 200.063 
60.190 196.146 
2 0.300 1.415 0 2 wf
57.579 200.063 
60.190 200.063 
2 0.300 1.415 0 2 wf
60.190 207.898 
60.190 211.815 
2 0.300 1.415 0 2 wf
57.579 207.898 
60.190 207.898 
2 0.300 1.415 0 2 wf
57.579 207.898 
57.579 200.063 
2 0.300 1.415 0 2 wf
56.273 207.898 
56.273 200.063 
2 0.300 1.415 0 2 wf
60.190 211.815 1.000 c 
37.994 228.626 
37.994 226.177 
2 0.300 1.415 0 2 wf
35.382 228.626 40.605 228.789 o 
24.937 69.494 45.828 81.245 o 
22.325 188.312 52.356 200.063 o 
23.631 210.509 44.522 222.260 o 
198.595 155.670 1.000 c 
198.595 155.670 
248.211 155.670 
2 0.300 1.415 0 2 wf
248.211 155.670 1.000 c 
248.211 151.753 263.880 162.198 o 
248.211 138.696 263.880 149.141 o 
165.952 141.307 181.620 151.753 o 
98.056 141.307 115.030 151.753 o 
52.356 203.981 
52.356 193.535 
2 0.300 1.415 0 2 wf
52.356 193.535 1.000 c 
52.356 74.716 1.000 c 
52.356 74.716 
45.828 74.716 
2 0.300 1.415 0 2 wf
45.828 74.716 1.000 c 
248.211 142.613 1.000 c 
248.211 142.613 
240.377 142.613 
2 0.300 1.415 0 2 wf
240.377 142.613 1.000 c 
165.952 145.224 1.000 c 
165.952 145.224 
160.729 145.224 
2 0.300 1.415 0 2 wf
120.253 145.224 
115.030 145.224 
2 0.300 1.415 0 2 wf
115.030 145.224 1.000 c 
203.817 92.996 
203.817 95.608 
201.206 95.608 
3 0.300 1.415 0 2 wf
203.817 129.556 
201.206 129.556 
2 0.300 1.415 0 2 wf
227.320 95.608 
224.709 95.608 
2 0.300 1.415 0 2 wf
227.320 129.556 
224.709 129.556 
2 0.300 1.415 0 2 wf
57.579 129.556 
54.968 129.556 
2 0.300 1.415 0 2 wf
57.579 95.608 
54.968 95.608 
2 0.300 1.415 0 2 wf
99.361 95.608 
96.750 95.608 
2 0.300 1.415 0 2 wf
105.890 164.810 1.000 c 
105.890 164.810 
190.760 164.810 
2 0.300 1.415 0 2 wf
190.760 164.810 1.000 c 
190.760 164.810 1.000 c 
190.760 164.810 
214.263 164.810 
2 0.300 1.415 0 2 wf
214.263 184.395 
190.760 184.395 
2 0.300 1.415 0 2 wf
190.760 184.395 1.000 c 
198.595 117.804 1.000 c 
198.595 117.804 
152.895 117.804 
152.895 137.390 
3 0.300 1.415 0 2 wf
222.097 111.276 1.000 c 
222.097 111.276 
128.087 111.276 
128.087 137.390 
3 0.300 1.415 0 2 wf
222.097 106.053 
222.097 111.276 
2 0.300 1.415 0 2 wf
222.097 111.276 1.000 c 
222.097 111.276 1.000 c 
222.097 111.276 
222.097 124.333 
2 0.300 1.415 0 2 wf
198.595 106.053 
198.595 117.804 
2 0.300 1.415 0 2 wf
198.595 117.804 1.000 c 
198.595 117.804 1.000 c 
198.595 117.804 
198.595 124.333 
2 0.300 1.415 0 2 wf
141.144 176.561 
141.144 153.058 
2 0.300 1.415 0 2 wf
141.144 153.058 1.000 c 
229.931 74.716 
240.377 74.716 
240.377 142.613 
3 0.300 1.415 0 2 wf
240.377 142.613 1.000 c 
240.377 142.613 1.000 c 
240.377 142.613 
240.377 215.732 
229.931 215.732 
3 0.300 1.415 0 2 wf
198.595 155.670 1.000 c 
198.595 155.670 
186.843 155.670 
2 0.300 1.415 0 2 wf
186.843 155.670 1.000 c 
186.843 155.670 1.000 c 
186.843 155.670 
186.843 74.716 
190.760 74.716 
3 0.300 1.415 0 2 wf
186.843 155.670 1.000 c 
186.843 155.670 
186.843 215.732 
190.760 215.732 
3 0.300 1.415 0 2 wf
198.595 82.551 
210.346 82.551 
2 0.300 1.415 0 2 wf
210.346 82.551 1.000 c 
210.346 82.551 1.000 c 
210.346 82.551 
222.097 82.551 
2 0.300 1.415 0 2 wf
201.206 66.882 1.000 c 
201.206 66.882 
198.595 66.882 
2 0.300 1.415 0 2 wf
198.595 66.882 1.000 c 
198.595 66.882 1.000 c 
198.595 66.882 
96.750 66.882 
2 0.300 1.415 0 2 wf
96.750 66.882 1.000 c 
201.206 66.882 1.000 c 
201.206 66.882 
201.206 72.105 
2 0.300 1.415 0 2 wf
201.206 66.882 1.000 c 
201.206 66.882 
219.486 66.882 
2 0.300 1.415 0 2 wf
219.486 66.882 1.000 c 
219.486 66.882 1.000 c 
219.486 66.882 
219.486 72.105 
2 0.300 1.415 0 2 wf
219.486 66.882 1.000 c 
219.486 66.882 
222.097 66.882 
2 0.300 1.415 0 2 wf
222.097 66.882 1.000 c 
222.097 66.882 1.000 c 
222.097 66.882 
237.766 66.882 
2 0.300 1.415 0 2 wf
237.766 66.882 1.000 h 
210.346 82.551 1.000 c 
210.346 82.551 
210.346 90.385 
2 0.300 1.415 0 2 wf
210.346 90.385 1.000 c 
210.346 90.385 1.000 c 
210.346 90.385 
198.595 90.385 
2 0.300 1.415 0 2 wf
210.346 90.385 1.000 c 
210.346 90.385 
222.097 90.385 
2 0.300 1.415 0 2 wf
60.190 111.276 1.000 c 
60.190 111.276 
73.247 111.276 
73.247 98.219 
3 0.300 1.415 0 2 wf
73.247 98.219 1.000 c 
73.247 98.219 1.000 c 
73.247 98.219 
68.025 98.219 
2 0.300 1.415 0 2 wf
73.247 98.219 1.000 c 
73.247 98.219 
86.304 98.219 
2 0.300 1.415 0 2 wf
86.304 98.219 1.000 c 
86.304 98.219 1.000 c 
86.304 98.219 
190.760 98.219 
2 0.300 1.415 0 2 wf
190.760 98.219 1.000 c 
190.760 98.219 1.000 c 
190.760 98.219 
214.263 98.219 
2 0.300 1.415 0 2 wf
60.190 143.918 1.000 c 
60.190 143.918 
60.190 196.146 
2 0.300 1.415 0 2 wf
240.377 142.613 1.000 c 
240.377 142.613 
222.097 142.613 
2 0.300 1.415 0 2 wf
222.097 142.613 1.000 c 
222.097 140.001 
222.097 142.613 
2 0.300 1.415 0 2 wf
222.097 142.613 1.000 c 
222.097 142.613 1.000 c 
222.097 142.613 
222.097 156.975 
2 0.300 1.415 0 2 wf
214.263 132.167 
190.760 132.167 
2 0.300 1.415 0 2 wf
190.760 132.167 1.000 c 
190.760 132.167 1.000 c 
190.760 132.167 
72.595 132.167 
2 0.300 1.415 0 2 wf
72.595 132.167 1.000 c 
198.595 140.001 
198.595 155.670 
2 0.300 1.415 0 2 wf
198.595 155.670 1.000 c 
198.595 155.670 1.000 c 
198.595 155.670 
198.595 156.975 
2 0.300 1.415 0 2 wf
222.097 176.561 
222.097 172.644 
2 0.300 1.415 0 2 wf
222.097 172.644 1.000 c 
222.097 172.644 1.000 c 
222.097 172.644 
224.709 172.644 
224.709 167.421 
3 0.300 1.415 0 2 wf
201.206 167.421 
201.206 172.644 
198.595 172.644 
3 0.300 1.415 0 2 wf
198.595 172.644 1.000 c 
198.595 172.644 1.000 c 
198.595 172.644 
198.595 176.561 
2 0.300 1.415 0 2 wf
224.709 187.006 
224.709 192.229 
222.097 192.229 
3 0.300 1.415 0 2 wf
222.097 192.229 1.000 c 
222.097 192.229 1.000 c 
222.097 192.229 
222.097 198.758 
210.346 198.758 
3 0.300 1.415 0 2 wf
210.346 198.758 1.000 c 
210.346 205.286 1.000 c 
210.346 205.286 
210.346 198.758 
2 0.300 1.415 0 2 wf
210.346 198.758 1.000 c 
210.346 198.758 1.000 c 
210.346 198.758 
198.595 198.758 
198.595 192.229 
3 0.300 1.415 0 2 wf
198.595 192.229 1.000 c 
198.595 192.229 1.000 c 
198.595 192.229 
201.206 192.229 
201.206 187.006 
3 0.300 1.415 0 2 wf
222.097 207.898 
222.097 205.286 
210.346 205.286 
3 0.300 1.415 0 2 wf
210.346 205.286 1.000 c 
210.346 205.286 1.000 c 
210.346 205.286 
198.595 205.286 
198.595 207.898 
3 0.300 1.415 0 2 wf
143.755 187.006 
143.755 192.229 
141.144 192.229 
3 0.300 1.415 0 2 wf
141.144 192.229 1.000 c 
141.144 192.229 1.000 c 
141.144 192.229 
141.144 207.898 
2 0.300 1.415 0 2 wf
94.139 207.898 
94.139 192.229 
2 0.300 1.415 0 2 wf
94.139 192.229 1.000 c 
94.139 192.229 1.000 c 
94.139 192.229 
91.527 192.229 
91.527 187.006 
3 0.300 1.415 0 2 wf
105.890 184.395 1.000 c 
105.890 184.395 
133.310 184.395 
2 0.300 1.415 0 2 wf
133.310 184.395 1.000 c 
133.310 184.395 1.000 c 
133.310 184.395 
190.760 184.395 
2 0.300 1.415 0 2 wf
190.760 184.395 1.000 c 
198.595 223.566 
198.595 226.177 
2 0.300 1.415 0 2 wf
198.595 226.177 1.000 c 
198.595 226.177 1.000 c 
198.595 226.177 
201.206 226.177 
2 0.300 1.415 0 2 wf
201.206 226.177 1.000 c 
201.206 226.177 1.000 c 
201.206 226.177 
201.206 218.343 
2 0.300 1.415 0 2 wf
201.206 226.177 1.000 c 
201.206 226.177 
219.486 226.177 
2 0.300 1.415 0 2 wf
219.486 226.177 1.000 c 
219.486 226.177 1.000 c 
219.486 226.177 
219.486 218.343 
2 0.300 1.415 0 2 wf
219.486 226.177 1.000 c 
219.486 226.177 
222.097 226.177 
2 0.300 1.415 0 2 wf
222.097 226.177 1.000 c 
222.097 226.177 1.000 c 
222.097 226.177 
222.097 223.566 
2 0.300 1.415 0 2 wf
222.097 226.177 1.000 c 
222.097 226.177 
246.905 226.177 
2 0.300 1.415 0 2 wf
246.905 226.177 1.000 h 
94.139 176.561 1.000 c 
94.139 176.561 
105.890 176.561 
105.890 184.395 
3 0.300 1.415 0 2 wf
105.890 184.395 1.000 c 
105.890 184.395 1.000 c 
105.890 184.395 
101.973 184.395 
2 0.300 1.415 0 2 wf
94.139 176.561 1.000 c 
94.139 176.561 
94.139 172.644 
2 0.300 1.415 0 2 wf
94.139 172.644 1.000 c 
94.139 172.644 1.000 c 
94.139 172.644 
91.527 172.644 
91.527 167.421 
3 0.300 1.415 0 2 wf
96.750 226.177 1.000 c 
96.750 226.177 
141.144 226.177 
2 0.300 1.415 0 2 wf
141.144 226.177 1.000 c 
143.755 226.177 1.000 c 
143.755 226.177 
198.595 226.177 
2 0.300 1.415 0 2 wf
198.595 226.177 1.000 c 
141.144 223.566 
141.144 226.177 
2 0.300 1.415 0 2 wf
141.144 226.177 1.000 c 
141.144 226.177 1.000 c 
141.144 226.177 
143.755 226.177 
2 0.300 1.415 0 2 wf
143.755 226.177 1.000 c 
143.755 226.177 1.000 c 
143.755 226.177 
143.755 218.343 
2 0.300 1.415 0 2 wf
44.522 215.732 1.000 c 
44.522 215.732 
86.304 215.732 
2 0.300 1.415 0 2 wf
86.304 215.732 1.000 c 
86.304 215.732 1.000 c 
86.304 215.732 
133.310 215.732 
2 0.300 1.415 0 2 wf
150.284 153.058 1.000 c 
150.284 153.058 
141.144 153.058 
2 0.300 1.415 0 2 wf
141.144 153.058 1.000 c 
141.144 153.058 1.000 c 
141.144 153.058 
130.698 153.058 
2 0.300 1.415 0 2 wf
130.698 153.058 1.000 c 
152.895 153.058 
150.284 153.058 
2 0.300 1.415 0 2 wf
150.284 153.058 1.000 c 
150.284 153.058 1.000 c 
150.284 153.058 
150.284 147.835 
2 0.300 1.415 0 2 wf
128.087 153.058 
130.698 153.058 
2 0.300 1.415 0 2 wf
130.698 153.058 1.000 c 
130.698 153.058 1.000 c 
130.698 153.058 
130.698 147.835 
2 0.300 1.415 0 2 wf
101.973 164.810 
105.890 164.810 
2 0.300 1.415 0 2 wf
105.890 164.810 1.000 c 
105.890 164.810 1.000 c 
105.890 164.810 
105.890 156.975 
94.139 156.975 
3 0.300 1.415 0 2 wf
94.139 156.975 1.000 c 
94.139 156.975 1.000 c 
94.139 156.975 
94.139 106.053 
2 0.300 1.415 0 2 wf
37.994 226.177 
60.190 226.177 
2 0.300 1.415 0 2 wf
60.190 226.177 1.000 c 
60.190 226.177 1.000 c 
60.190 226.177 
60.190 211.815 
2 0.300 1.415 0 2 wf
60.190 211.815 1.000 c 
60.190 211.815 1.000 c 
60.190 211.815 
62.802 211.815 
62.802 206.592 
3 0.300 1.415 0 2 wf
60.190 226.177 1.000 c 
60.190 226.177 
94.139 226.177 
2 0.300 1.415 0 2 wf
94.139 226.177 1.000 c 
94.139 226.177 1.000 c 
94.139 226.177 
94.139 223.566 
2 0.300 1.415 0 2 wf
94.139 226.177 1.000 c 
94.139 226.177 
96.750 226.177 
2 0.300 1.415 0 2 wf
96.750 226.177 1.000 c 
96.750 226.177 1.000 c 
96.750 226.177 
96.750 218.343 
2 0.300 1.415 0 2 wf
94.139 82.551 
94.139 90.385 
2 0.300 1.415 0 2 wf
96.750 66.882 1.000 c 
96.750 66.882 
94.139 66.882 
2 0.300 1.415 0 2 wf
94.139 66.882 1.000 c 
94.139 66.882 1.000 c 
94.139 66.882 
62.802 66.882 
2 0.300 1.415 0 2 wf
62.802 66.882 1.000 c 
96.750 66.882 1.000 c 
96.750 66.882 
96.750 72.105 
2 0.300 1.415 0 2 wf
86.304 74.716 
52.356 74.716 
2 0.300 1.415 0 2 wf
52.356 74.716 1.000 c 
44.522 66.882 
60.190 66.882 
2 0.300 1.415 0 2 wf
60.190 66.882 1.000 c 
60.190 66.882 1.000 c 
60.190 66.882 
62.802 66.882 
2 0.300 1.415 0 2 wf
62.802 66.882 1.000 c 
62.802 66.882 1.000 c 
62.802 66.882 
62.802 72.105 
2 0.300 1.415 0 2 wf
60.190 82.551 
60.190 90.385 
2 0.300 1.415 0 2 wf
60.190 140.001 
60.190 143.918 
2 0.300 1.415 0 2 wf
60.190 143.918 1.000 c 
60.190 143.918 1.000 c 
60.190 143.918 
72.595 143.918 
72.595 132.167 
3 0.300 1.415 0 2 wf
72.595 132.167 1.000 c 
72.595 132.167 1.000 c 
72.595 132.167 
68.025 132.167 
2 0.300 1.415 0 2 wf
60.190 124.333 
60.190 111.276 
2 0.300 1.415 0 2 wf
60.190 111.276 1.000 c 
60.190 111.276 1.000 c 
60.190 111.276 
60.190 106.053 
2 0.300 1.415 0 2 wf
l1_1P 45.828 74.716 1.000 c 
44.522 215.732 1.000 c 
52.356 193.535 1.000 c 
248.211 155.670 1.000 c 
248.211 142.613 1.000 c 
165.952 145.224 1.000 c 
115.030 145.224 1.000 c 
222.097 66.882 1.000 c 
198.595 66.882 1.000 c 
190.760 98.219 1.000 c 
190.760 132.167 1.000 c 
222.097 172.644 1.000 c 
198.595 172.644 1.000 c 
190.760 164.810 1.000 c 
222.097 192.229 1.000 c 
198.595 192.229 1.000 c 
190.760 184.395 1.000 c 
141.144 192.229 1.000 c 
133.310 184.395 1.000 c 
94.139 172.644 1.000 c 
94.139 156.975 1.000 c 
94.139 192.229 1.000 c 
94.139 176.561 1.000 c 
86.304 215.732 1.000 c 
86.304 98.219 1.000 c 
94.139 66.882 1.000 c 
60.190 66.882 1.000 c 
52.356 74.716 1.000 c 
60.190 211.815 1.000 c 
l1_1T /n (Vcm ) def
0 26.487 73.784 10.446 s 
/n (Vcm ) def
0 25.181 214.799 10.446 s 
/n (Vbias ) def
0 24.120 192.602 10.446 s 
/n ( I+) def
0 249.027 154.737 10.446 s 
/n ( I-) def
0 249.027 141.680 10.446 s 
/n ( V-) def
0 166.768 144.291 10.446 s 
/n (V+ ) def
0 100.177 144.291 10.446 s 
222.097 66.882 1.000 c 
198.595 66.882 1.000 c 
190.760 98.219 1.000 c 
190.760 132.167 1.000 c 
222.097 172.644 1.000 c 
198.595 172.644 1.000 c 
190.760 164.810 1.000 c 
222.097 192.229 1.000 c 
198.595 192.229 1.000 c 
190.760 184.395 1.000 c 
141.144 192.229 1.000 c 
133.310 184.395 1.000 c 
94.139 172.644 1.000 c 
94.139 156.975 1.000 c 
94.139 192.229 1.000 c 
94.139 176.561 1.000 c 
86.304 215.732 1.000 c 
86.304 98.219 1.000 c 
94.139 66.882 1.000 c 
60.190 66.882 1.000 c 
52.356 74.716 1.000 c 
60.190 211.815 1.000 c 
showpage



%%EndDocument

 endTexFig
 1224 3537 a FH(Figure)h(4.18:)43 b(F)-8 b(ully)29 b(balanced)g
(transconductor)1050 3563 y
 16577004 12761662 1184071 3091742 17761075 15853404 startTexFig
 1050 3563 a
%%BeginDocument: figs/sddac.eps
% Procedure for outline box
/o {2 copy moveto 4 1 roll 2 copy exch lineto
    pop 2 copy lineto pop exch lineto closepath stroke} def
% Procedure for filled box
/b {2 copy moveto 4 1 roll 2 copy exch lineto
    pop 2 copy lineto pop exch lineto closepath fill} def
% Procedure for outline circle
/h {0 360 arc closepath stroke} def
% Procedure for filled circle
/c {0 360 arc closepath fill} def
% Procedure for an outline polygon
/po {3 1 roll moveto 1 sub {lineto} repeat closepath stroke} def
% Procedure for a filled polygon
/pf {3 1 roll moveto 1 sub {lineto} repeat closepath fill} def
% Procedure for a filled wire
/wf {gsave setlinecap setlinejoin setmiterlimit setlinewidth
     3 1 roll moveto 1 sub {lineto} repeat stroke grestore} def
% Procedure for a outline wire
/wo {gsave grestore} def
% Procedure to set linestyles
/wfno_dash {[] 0 setdash} def
/wfgrid_dash {[1 1] 0 setdash} def
/wfsolid_dash {[] 0 setdash} def
/wflittle_even_dash {[3 3] 0 setdash} def
/wfbig_even_dash {[7 7] 0 setdash} def
/wfdot_dash {[1 2] 0 setdash} def
/wfbig_little_dash {[5 3 1 5] 0 setdash} def
% Procedure to draw a line
/l {moveto lineto stroke} def
% Define font for port names
/f /Courier findfont [0.7 0 0 1 0 0] makefont def
% Procedure to show port names
/s {gsave f exch scalefont setfont moveto rotate n show grestore} def
/l0 {0.0000 setgray} def
/l1_1O {0.0000 setgray} def
/l1_1P {0.0000 setgray} def
/l1_1T {0.0000 setgray} def
0.5 setlinewidth
newpath
18 47 moveto
252 0 rlineto
0 194 rlineto
252 neg 0 rlineto
closepath clip newpath

l1_1O 105.123 100.062 
105.123 98.338 
2 0.300 1.415 0 2 wf
105.985 98.338 
104.262 98.338 
2 0.300 1.415 0 2 wf
105.985 98.338 
108.569 97.477 
109.862 96.615 
110.723 95.754 
111.585 94.462 
112.015 92.738 
6 0.300 1.415 0 2 wf
104.262 98.338 
101.677 97.477 
100.385 96.615 
99.523 95.754 
98.662 94.462 
98.231 92.738 
6 0.300 1.415 0 2 wf
108.569 82.831 
101.677 82.831 
2 0.300 1.415 0 2 wf
112.015 92.738 
112.015 82.831 
108.569 82.831 
3 0.300 1.415 0 2 wf
108.569 79.385 
108.569 82.831 
2 0.300 1.415 0 2 wf
98.231 92.738 
98.231 82.831 
101.677 82.831 
3 0.300 1.415 0 2 wf
101.677 79.385 
101.677 82.831 
2 0.300 1.415 0 2 wf
105.123 189.662 
105.123 191.385 
2 0.300 1.415 0 2 wf
105.985 191.385 
104.262 191.385 
2 0.300 1.415 0 2 wf
105.985 191.385 
108.569 192.246 
109.862 193.108 
110.723 193.969 
111.585 195.262 
112.015 196.985 
6 0.300 1.415 0 2 wf
104.262 191.385 
101.677 192.246 
100.385 193.108 
99.523 193.969 
98.662 195.262 
98.231 196.985 
6 0.300 1.415 0 2 wf
108.569 206.892 
101.677 206.892 
2 0.300 1.415 0 2 wf
112.015 196.985 
112.015 206.892 
108.569 206.892 
3 0.300 1.415 0 2 wf
108.569 210.338 
108.569 206.892 
2 0.300 1.415 0 2 wf
98.231 196.985 
98.231 206.892 
101.677 206.892 
3 0.300 1.415 0 2 wf
101.677 210.338 
101.677 206.892 
2 0.300 1.415 0 2 wf
101.677 124.185 
98.231 124.185 
2 0.300 1.415 0 2 wf
94.785 134.523 
94.785 131.077 
2 0.300 1.415 0 2 wf
94.785 113.846 
94.785 117.292 
2 0.300 1.415 0 2 wf
94.785 117.292 
91.338 120.738 
91.338 127.631 
94.785 131.077 
98.231 127.631 
98.231 120.738 
94.785 117.292 
7 0.300 1.415 0 2 wf
101.677 165.538 
98.231 165.538 
2 0.300 1.415 0 2 wf
94.785 175.877 
94.785 172.431 
2 0.300 1.415 0 2 wf
94.785 155.200 
94.785 158.646 
2 0.300 1.415 0 2 wf
94.785 158.646 
91.338 162.092 
91.338 168.985 
94.785 172.431 
98.231 168.985 
98.231 162.092 
94.785 158.646 
7 0.300 1.415 0 2 wf
122.354 124.185 
125.800 124.185 
2 0.300 1.415 0 2 wf
129.246 134.523 
129.246 131.077 
2 0.300 1.415 0 2 wf
129.246 113.846 
129.246 117.292 
2 0.300 1.415 0 2 wf
129.246 117.292 
132.692 120.738 
132.692 127.631 
129.246 131.077 
125.800 127.631 
125.800 120.738 
129.246 117.292 
7 0.300 1.415 0 2 wf
122.354 165.538 
125.800 165.538 
2 0.300 1.415 0 2 wf
129.246 175.877 
129.246 172.431 
2 0.300 1.415 0 2 wf
129.246 155.200 
129.246 158.646 
2 0.300 1.415 0 2 wf
129.246 158.646 
132.692 162.092 
132.692 168.985 
129.246 172.431 
125.800 168.985 
125.800 162.092 
129.246 158.646 
7 0.300 1.415 0 2 wf
160.262 144.862 
156.815 144.862 
2 0.300 1.415 0 2 wf
153.369 155.200 
153.369 151.754 
2 0.300 1.415 0 2 wf
153.369 134.523 
153.369 137.969 
2 0.300 1.415 0 2 wf
153.369 137.969 
149.923 141.415 
149.923 148.308 
153.369 151.754 
156.815 148.308 
156.815 141.415 
153.369 137.969 
7 0.300 1.415 0 2 wf
160.262 144.862 1.000 c 
215.400 143.138 
215.400 146.585 
2 0.300 1.415 0 2 wf
215.400 163.815 
215.400 160.369 
2 0.300 1.415 0 2 wf
215.400 153.477 6.000 h 
215.400 149.169 
215.400 157.785 
2 0.300 1.415 0 2 wf
216.262 152.615 
215.400 149.169 
214.538 152.615 
3 po 
179.215 214.646 
182.662 215.508 
179.215 216.369 
3 po 
177.492 215.508 
184.385 215.508 
2 0.300 1.415 0 2 wf
173.185 212.062 
170.600 212.062 
2 0.300 1.415 0 2 wf
174.477 212.062 1.000 h 
180.938 206.892 
180.938 201.723 
2 0.300 1.415 0 2 wf
177.492 206.892 
180.938 206.892 
2 0.300 1.415 0 2 wf
180.938 217.231 
180.938 222.400 
2 0.300 1.415 0 2 wf
177.492 217.231 
180.938 217.231 
2 0.300 1.415 0 2 wf
177.492 217.231 
177.492 206.892 
2 0.300 1.415 0 2 wf
175.769 217.231 
175.769 206.892 
2 0.300 1.415 0 2 wf
180.938 222.400 1.000 c 
180.938 201.723 1.000 c 
179.215 193.969 
182.662 194.831 
179.215 195.692 
3 po 
177.492 194.831 
184.385 194.831 
2 0.300 1.415 0 2 wf
173.185 191.385 
170.600 191.385 
2 0.300 1.415 0 2 wf
174.477 191.385 1.000 h 
180.938 186.215 
180.938 181.046 
2 0.300 1.415 0 2 wf
177.492 186.215 
180.938 186.215 
2 0.300 1.415 0 2 wf
180.938 196.554 
180.938 201.723 
2 0.300 1.415 0 2 wf
177.492 196.554 
180.938 196.554 
2 0.300 1.415 0 2 wf
177.492 196.554 
177.492 186.215 
2 0.300 1.415 0 2 wf
175.769 196.554 
175.769 186.215 
2 0.300 1.415 0 2 wf
180.938 201.723 1.000 c 
180.938 181.046 1.000 c 
153.369 232.523 
153.369 229.292 
2 0.300 1.415 0 2 wf
149.923 232.523 156.815 232.738 o 
153.369 229.292 1.000 c 
155.092 214.646 
151.646 215.508 
155.092 216.369 
3 po 
156.815 215.508 
149.923 215.508 
2 0.300 1.415 0 2 wf
161.123 212.062 
163.708 212.062 
2 0.300 1.415 0 2 wf
159.831 212.062 1.000 h 
153.369 206.892 
153.369 201.723 
2 0.300 1.415 0 2 wf
156.815 206.892 
153.369 206.892 
2 0.300 1.415 0 2 wf
153.369 217.231 
153.369 222.400 
2 0.300 1.415 0 2 wf
156.815 217.231 
153.369 217.231 
2 0.300 1.415 0 2 wf
156.815 217.231 
156.815 206.892 
2 0.300 1.415 0 2 wf
158.538 217.231 
158.538 206.892 
2 0.300 1.415 0 2 wf
153.369 222.400 1.000 c 
153.369 201.723 1.000 c 
155.092 193.969 
151.646 194.831 
155.092 195.692 
3 po 
156.815 194.831 
149.923 194.831 
2 0.300 1.415 0 2 wf
161.123 191.385 
163.708 191.385 
2 0.300 1.415 0 2 wf
159.831 191.385 1.000 h 
153.369 186.215 
153.369 181.046 
2 0.300 1.415 0 2 wf
156.815 186.215 
153.369 186.215 
2 0.300 1.415 0 2 wf
153.369 196.554 
153.369 201.723 
2 0.300 1.415 0 2 wf
156.815 196.554 
153.369 196.554 
2 0.300 1.415 0 2 wf
156.815 196.554 
156.815 186.215 
2 0.300 1.415 0 2 wf
158.538 196.554 
158.538 186.215 
2 0.300 1.415 0 2 wf
153.369 201.723 1.000 c 
153.369 181.046 1.000 c 
216.262 71.631 
212.815 72.492 
216.262 73.354 
3 po 
211.954 72.492 
218.846 72.492 
2 0.300 1.415 0 2 wf
210.231 75.938 
205.062 75.938 
2 0.300 1.415 0 2 wf
215.400 70.769 
215.400 65.600 
2 0.300 1.415 0 2 wf
211.954 70.769 
215.400 70.769 
2 0.300 1.415 0 2 wf
215.400 81.108 
215.400 86.277 
2 0.300 1.415 0 2 wf
211.954 81.108 
215.400 81.108 
2 0.300 1.415 0 2 wf
211.954 81.108 
211.954 70.769 
2 0.300 1.415 0 2 wf
210.231 81.108 
210.231 70.769 
2 0.300 1.415 0 2 wf
215.400 65.600 1.000 c 
215.400 86.277 1.000 c 
218.846 72.492 1.000 c 
216.262 92.308 
212.815 93.169 
216.262 94.031 
3 po 
211.954 93.169 
218.846 93.169 
2 0.300 1.415 0 2 wf
210.231 96.615 
205.062 96.615 
2 0.300 1.415 0 2 wf
215.400 91.446 
215.400 86.277 
2 0.300 1.415 0 2 wf
211.954 91.446 
215.400 91.446 
2 0.300 1.415 0 2 wf
215.400 101.785 
215.400 106.954 
2 0.300 1.415 0 2 wf
211.954 101.785 
215.400 101.785 
2 0.300 1.415 0 2 wf
211.954 101.785 
211.954 91.446 
2 0.300 1.415 0 2 wf
210.231 101.785 
210.231 91.446 
2 0.300 1.415 0 2 wf
215.400 86.277 1.000 c 
180.077 71.631 
183.523 72.492 
180.077 73.354 
3 po 
184.385 72.492 
177.492 72.492 
2 0.300 1.415 0 2 wf
186.108 75.938 
191.277 75.938 
2 0.300 1.415 0 2 wf
180.938 70.769 
180.938 65.600 
2 0.300 1.415 0 2 wf
184.385 70.769 
180.938 70.769 
2 0.300 1.415 0 2 wf
180.938 81.108 
180.938 86.277 
2 0.300 1.415 0 2 wf
184.385 81.108 
180.938 81.108 
2 0.300 1.415 0 2 wf
184.385 81.108 
184.385 70.769 
2 0.300 1.415 0 2 wf
186.108 81.108 
186.108 70.769 
2 0.300 1.415 0 2 wf
180.938 65.600 1.000 c 
191.277 75.938 1.000 c 
177.492 72.492 1.000 c 
180.077 92.308 
183.523 93.169 
180.077 94.031 
3 po 
184.385 93.169 
177.492 93.169 
2 0.300 1.415 0 2 wf
186.108 96.615 
191.277 96.615 
2 0.300 1.415 0 2 wf
180.938 91.446 
180.938 86.277 
2 0.300 1.415 0 2 wf
184.385 91.446 
180.938 91.446 
2 0.300 1.415 0 2 wf
180.938 101.785 
180.938 106.954 
2 0.300 1.415 0 2 wf
184.385 101.785 
180.938 101.785 
2 0.300 1.415 0 2 wf
184.385 101.785 
184.385 91.446 
2 0.300 1.415 0 2 wf
186.108 101.785 
186.108 91.446 
2 0.300 1.415 0 2 wf
191.277 96.615 1.000 c 
149.923 58.708 
153.369 55.262 
156.815 58.708 
3 po 
153.369 58.708 
153.369 65.600 
2 0.300 1.415 0 2 wf
153.369 65.600 1.000 c 
152.508 71.631 
155.954 72.492 
152.508 73.354 
3 po 
156.815 72.492 
149.923 72.492 
2 0.300 1.415 0 2 wf
158.538 75.938 
163.708 75.938 
2 0.300 1.415 0 2 wf
153.369 70.769 
153.369 65.600 
2 0.300 1.415 0 2 wf
156.815 70.769 
153.369 70.769 
2 0.300 1.415 0 2 wf
153.369 81.108 
153.369 86.277 
2 0.300 1.415 0 2 wf
156.815 81.108 
153.369 81.108 
2 0.300 1.415 0 2 wf
156.815 81.108 
156.815 70.769 
2 0.300 1.415 0 2 wf
158.538 81.108 
158.538 70.769 
2 0.300 1.415 0 2 wf
153.369 65.600 1.000 c 
149.923 72.492 1.000 c 
152.508 92.308 
155.954 93.169 
152.508 94.031 
3 po 
156.815 93.169 
149.923 93.169 
2 0.300 1.415 0 2 wf
158.538 96.615 
163.708 96.615 
2 0.300 1.415 0 2 wf
153.369 91.446 
153.369 86.277 
2 0.300 1.415 0 2 wf
156.815 91.446 
153.369 91.446 
2 0.300 1.415 0 2 wf
153.369 101.785 
153.369 106.954 
2 0.300 1.415 0 2 wf
156.815 101.785 
153.369 101.785 
2 0.300 1.415 0 2 wf
156.815 101.785 
156.815 91.446 
2 0.300 1.415 0 2 wf
158.538 101.785 
158.538 91.446 
2 0.300 1.415 0 2 wf
153.369 106.954 1.000 c 
105.123 165.538 1.000 c 
105.123 165.538 
112.015 165.538 
112.015 124.185 
122.354 124.185 
4 0.300 1.415 0 2 wf
105.123 100.062 
105.123 124.185 
2 0.300 1.415 0 2 wf
105.123 124.185 1.000 c 
101.677 75.938 1.000 c 
101.677 75.938 
101.677 79.385 
2 0.300 1.415 0 2 wf
108.569 79.385 
108.569 75.938 
2 0.300 1.415 0 2 wf
108.569 75.938 1.000 c 
108.569 213.785 1.000 c 
108.569 213.785 
108.569 210.338 
2 0.300 1.415 0 2 wf
101.677 213.785 1.000 c 
101.677 213.785 
101.677 210.338 
2 0.300 1.415 0 2 wf
101.677 165.538 
105.123 165.538 
2 0.300 1.415 0 2 wf
105.123 165.538 1.000 c 
105.123 165.538 1.000 c 
105.123 165.538 
105.123 189.662 
2 0.300 1.415 0 2 wf
122.354 165.538 
115.462 165.538 
115.462 144.862 
108.569 144.862 
108.569 124.185 
105.123 124.185 
6 0.300 1.415 0 2 wf
105.123 124.185 1.000 c 
105.123 124.185 1.000 c 
105.123 124.185 
101.677 124.185 
2 0.300 1.415 0 2 wf
94.785 151.754 1.000 c 
94.785 151.754 
94.785 155.200 
2 0.300 1.415 0 2 wf
129.246 137.969 1.000 c 
129.246 137.969 
129.246 155.200 
2 0.300 1.415 0 2 wf
77.554 137.969 1.000 c 
77.554 137.969 
129.246 137.969 
2 0.300 1.415 0 2 wf
129.246 137.969 1.000 c 
129.246 106.954 1.000 c 
129.246 106.954 
94.785 106.954 
94.785 113.846 
3 0.300 1.415 0 2 wf
94.785 134.523 
94.785 151.754 
2 0.300 1.415 0 2 wf
94.785 151.754 1.000 c 
94.785 151.754 1.000 c 
94.785 151.754 
77.554 151.754 
2 0.300 1.415 0 2 wf
77.554 151.754 1.000 c 
129.246 181.046 1.000 c 
129.246 181.046 
129.246 175.877 
2 0.300 1.415 0 2 wf
129.246 106.954 1.000 c 
129.246 106.954 
129.246 113.846 
2 0.300 1.415 0 2 wf
129.246 137.969 1.000 c 
129.246 137.969 
129.246 134.523 
2 0.300 1.415 0 2 wf
129.246 181.046 1.000 c 
129.246 181.046 
153.369 181.046 
2 0.300 1.415 0 2 wf
153.369 181.046 1.000 c 
153.369 181.046 1.000 c 
153.369 181.046 
153.369 155.200 
2 0.300 1.415 0 2 wf
129.246 181.046 1.000 c 
129.246 181.046 
94.785 181.046 
94.785 175.877 
3 0.300 1.415 0 2 wf
177.492 65.600 1.000 c 
177.492 65.600 
177.492 72.492 
2 0.300 1.415 0 2 wf
177.492 72.492 1.000 c 
177.492 72.492 1.000 c 
177.492 72.492 
177.492 93.169 
2 0.300 1.415 0 2 wf
153.369 65.600 1.000 c 
153.369 65.600 
149.923 65.600 
149.923 72.492 
3 0.300 1.415 0 2 wf
149.923 72.492 1.000 c 
149.923 72.492 1.000 c 
149.923 72.492 
149.923 93.169 
2 0.300 1.415 0 2 wf
215.400 143.138 
215.400 108.246 
2 0.300 1.415 0 2 wf
215.400 108.246 1.000 c 
215.400 108.246 1.000 c 
215.400 108.246 
215.400 106.954 
2 0.300 1.415 0 2 wf
180.938 229.292 1.000 c 
180.938 229.292 
153.369 229.292 
2 0.300 1.415 0 2 wf
153.369 229.292 1.000 c 
180.938 229.292 1.000 c 
180.938 229.292 
215.400 229.292 
215.400 163.815 
3 0.300 1.415 0 2 wf
180.938 229.292 1.000 c 
180.938 229.292 
180.938 222.400 
2 0.300 1.415 0 2 wf
180.938 222.400 1.000 c 
180.938 222.400 1.000 c 
180.938 222.400 
184.385 222.400 
184.385 215.508 
3 0.300 1.415 0 2 wf
168.877 212.062 1.000 c 
168.877 212.062 
168.877 201.723 
180.938 201.723 
3 0.300 1.415 0 2 wf
180.938 201.723 1.000 c 
170.600 212.062 
168.877 212.062 
2 0.300 1.415 0 2 wf
168.877 212.062 1.000 c 
168.877 212.062 1.000 c 
168.877 212.062 
163.708 212.062 
2 0.300 1.415 0 2 wf
180.938 106.954 
180.938 181.046 
2 0.300 1.415 0 2 wf
180.938 181.046 1.000 c 
180.938 181.046 1.000 c 
180.938 181.046 
168.877 181.046 
168.877 191.385 
3 0.300 1.415 0 2 wf
168.877 191.385 1.000 c 
170.600 191.385 
168.877 191.385 
2 0.300 1.415 0 2 wf
168.877 191.385 1.000 c 
168.877 191.385 1.000 c 
168.877 191.385 
163.708 191.385 
2 0.300 1.415 0 2 wf
180.938 201.723 1.000 c 
180.938 201.723 
184.385 201.723 
184.385 194.831 
3 0.300 1.415 0 2 wf
149.923 215.508 
149.923 222.400 
153.369 222.400 
3 0.300 1.415 0 2 wf
153.369 222.400 1.000 c 
153.369 222.400 1.000 c 
153.369 222.400 
153.369 229.292 
2 0.300 1.415 0 2 wf
153.369 229.292 1.000 c 
153.369 201.723 1.000 c 
153.369 201.723 
149.923 201.723 
149.923 194.831 
3 0.300 1.415 0 2 wf
215.400 108.246 1.000 c 
215.400 108.246 
201.615 108.246 
201.615 96.615 
3 0.300 1.415 0 2 wf
201.615 96.615 1.000 c 
205.062 96.615 
201.615 96.615 
2 0.300 1.415 0 2 wf
201.615 96.615 1.000 c 
163.708 96.615 
191.277 96.615 
2 0.300 1.415 0 2 wf
191.277 96.615 1.000 c 
191.277 96.615 1.000 c 
191.277 96.615 
201.615 96.615 
2 0.300 1.415 0 2 wf
201.615 96.615 1.000 c 
215.400 86.277 1.000 c 
215.400 86.277 
201.615 86.277 
201.615 75.938 
3 0.300 1.415 0 2 wf
201.615 75.938 1.000 c 
205.062 75.938 
201.615 75.938 
2 0.300 1.415 0 2 wf
201.615 75.938 1.000 c 
163.708 75.938 
191.277 75.938 
2 0.300 1.415 0 2 wf
191.277 75.938 1.000 c 
191.277 75.938 1.000 c 
191.277 75.938 
201.615 75.938 
2 0.300 1.415 0 2 wf
201.615 75.938 1.000 c 
215.400 65.600 1.000 c 
215.400 65.600 
180.938 65.600 
2 0.300 1.415 0 2 wf
180.938 65.600 1.000 c 
180.938 65.600 1.000 c 
180.938 65.600 
177.492 65.600 
2 0.300 1.415 0 2 wf
177.492 65.600 1.000 c 
215.400 65.600 1.000 c 
215.400 65.600 
218.846 65.600 
218.846 72.492 
3 0.300 1.415 0 2 wf
218.846 72.492 1.000 c 
218.846 72.492 1.000 c 
218.846 72.492 
218.846 93.169 
2 0.300 1.415 0 2 wf
177.492 65.600 1.000 c 
177.492 65.600 
153.369 65.600 
2 0.300 1.415 0 2 wf
153.369 65.600 1.000 c 
129.246 106.954 1.000 c 
129.246 106.954 
153.369 106.954 
2 0.300 1.415 0 2 wf
153.369 106.954 1.000 c 
153.369 106.954 1.000 c 
153.369 106.954 
153.369 134.523 
2 0.300 1.415 0 2 wf
l1_1P 160.262 144.862 1.000 c 
77.554 137.969 1.000 c 
77.554 151.754 1.000 c 
117.185 67.323 117.185 67.323 o 
101.677 75.938 1.000 c 
108.569 75.938 1.000 c 
108.569 213.785 1.000 c 
101.677 213.785 1.000 c 
160.262 144.862 1.000 c 
180.938 222.400 1.000 c 
180.938 201.723 1.000 c 
180.938 201.723 1.000 c 
180.938 181.046 1.000 c 
153.369 229.292 1.000 c 
153.369 222.400 1.000 c 
153.369 201.723 1.000 c 
153.369 201.723 1.000 c 
153.369 181.046 1.000 c 
215.400 65.600 1.000 c 
215.400 86.277 1.000 c 
218.846 72.492 1.000 c 
215.400 86.277 1.000 c 
180.938 65.600 1.000 c 
191.277 75.938 1.000 c 
177.492 72.492 1.000 c 
191.277 96.615 1.000 c 
153.369 65.600 1.000 c 
153.369 65.600 1.000 c 
149.923 72.492 1.000 c 
153.369 106.954 1.000 c 
l1_1T /n (CKn) def
0 161.338 147.815 13.785 s 
/n (Iin) def
0 63.662 127.138 13.785 s 
/n (Iout) def
0 59.138 154.708 13.785 s 
/n (n) def
0 117.185 66.400 10.338 s 
/n (CK) def
0 88.000 65.108 13.785 s 
/n (q) def
0 109.646 65.108 13.785 s 
/n (q) def
0 109.646 215.262 6.892 s 
/n (CK) def
0 94.246 215.262 6.892 s 
160.262 144.862 1.000 c 
180.938 222.400 1.000 c 
180.938 201.723 1.000 c 
180.938 201.723 1.000 c 
180.938 181.046 1.000 c 
153.369 229.292 1.000 c 
153.369 222.400 1.000 c 
153.369 201.723 1.000 c 
153.369 201.723 1.000 c 
153.369 181.046 1.000 c 
215.400 65.600 1.000 c 
215.400 86.277 1.000 c 
218.846 72.492 1.000 c 
215.400 86.277 1.000 c 
180.938 65.600 1.000 c 
191.277 75.938 1.000 c 
177.492 72.492 1.000 c 
191.277 96.615 1.000 c 
153.369 65.600 1.000 c 
153.369 65.600 1.000 c 
149.923 72.492 1.000 c 
153.369 106.954 1.000 c 
showpage



%%EndDocument

 endTexFig
 1553 5376 a FH(Figure)h(4.19:)42 b(D/A)31 b(con)m(v)m(erter)p
eop
%%Page: 94 107
94 106 bop 3809 -200 a FH(94)450 7 y
 26049576 18234699 -65781 42692362 13353697 52164935 startTexFig
 450 7 a
%%BeginDocument: dat/sd_dat.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11.00 mul neg translate

-28.125 622.125 translate 0.562 0.562 scale 0 rotate

/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
1076 351 M
0 4478 V
LTb
840 586 M
63 0 V
6066 0 R
-63 0 V
756 586 M
(-140) Rshow
840 1246 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(-120) Rshow
840 1906 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(-100) Rshow
840 2566 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(-80) Rshow
840 3227 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(-60) Rshow
840 3887 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(-40) Rshow
840 4547 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(-20) Rshow
1076 351 M
0 63 V
0 4415 R
0 -63 V
0 -4555 R
(0) Cshow
2254 351 M
0 63 V
0 4415 R
0 -63 V
0 -4555 R
(5e4) Cshow
3433 351 M
0 63 V
0 4415 R
0 -63 V
0 -4555 R
(1e5) Cshow
4612 351 M
0 63 V
0 4415 R
0 -63 V
0 -4555 R
(1.5e5) Cshow
5790 351 M
0 63 V
0 4415 R
0 -63 V
0 -4555 R
(2e5) Cshow
6969 351 M
0 63 V
0 4415 R
0 -63 V
0 -4555 R
(2.5e5) Cshow
840 351 M
6129 0 V
0 4478 V
-6129 0 V
840 351 L
140 2590 M
currentpoint gsave translate 90 rotate 0 0 M
(Mag.  dB) Cshow
grestore
3904 -69 M
(Frequency  Hz) Cshow
3904 4969 M
(FFT of output  \(f_s = 1 MHz, f_in=2KHz, 8000 points\)) Cshow
LT0
1079 1541 M
3 169 V
3 149 V
3 -59 V
2 -273 V
3 26 V
3 220 V
3 58 V
3 -238 V
3 -329 V
3 470 V
3 94 V
3 17 V
3 -168 V
3 2478 V
3 525 V
3 149 V
3 -149 V
3 -525 V
3 -3804 V
3 1329 V
3 101 V
3 -484 V
2 572 V
3 -4 V
3 -199 V
3 122 V
3 -48 V
3 71 V
3 -110 V
3 95 V
3 -273 V
3 -133 V
3 89 V
3 338 V
3 58 V
3 -191 V
3 -89 V
3 -254 V
3 448 V
3 229 V
2 100 V
3 -139 V
3 -39 V
3 200 V
3 -161 V
3 -61 V
3 403 V
3 128 V
3 -151 V
3 -311 V
3 174 V
3 -136 V
3 -444 V
3 365 V
3 66 V
3 -121 V
3 -136 V
3 -39 V
3 133 V
2 139 V
3 0 V
3 110 V
3 119 V
3 -137 V
3 -163 V
3 -14 V
3 146 V
3 -204 V
3 313 V
3 116 V
3 -52 V
3 215 V
3 -84 V
3 -373 V
3 55 V
3 169 V
3 -277 V
3 152 V
2 -188 V
3 479 V
3 7 V
3 -66 V
3 -18 V
3 -233 V
3 -50 V
3 147 V
3 69 V
3 134 V
3 -21 V
3 -445 V
3 443 V
3 113 V
3 115 V
3 -36 V
3 -111 V
3 -326 V
3 274 V
2 60 V
3 -20 V
3 118 V
3 33 V
3 -20 V
3 -123 V
3 -14 V
3 223 V
3 48 V
3 -42 V
3 6 V
3 -22 V
3 48 V
3 99 V
3 -73 V
3 -243 V
3 -118 V
3 32 V
2 -79 V
3 83 V
3 304 V
3 5 V
3 -183 V
3 -140 V
3 -341 V
3 333 V
3 322 V
3 -101 V
3 -419 V
3 310 V
3 -10 V
3 -75 V
3 109 V
3 -7 V
3 -94 V
3 117 V
3 -97 V
2 267 V
3 95 V
3 118 V
3 -18 V
3 -143 V
3 -132 V
3 -151 V
3 16 V
3 -32 V
3 78 V
3 37 V
3 28 V
3 5 V
3 -102 V
3 150 V
3 98 V
3 -83 V
3 45 V
3 39 V
2 -139 V
3 3 V
3 107 V
3 -152 V
3 81 V
3 98 V
3 -21 V
3 -313 V
3 -157 V
3 143 V
3 -75 V
3 498 V
3 166 V
3 -70 V
3 -192 V
3 211 V
3 -8 V
3 -93 V
2 13 V
3 -85 V
3 -298 V
3 169 V
3 97 V
3 42 V
3 -32 V
3 138 V
3 116 V
3 -5 V
3 -61 V
3 -168 V
3 22 V
3 177 V
3 90 V
3 -78 V
3 -67 V
3 -78 V
3 -245 V
2 379 V
3 104 V
3 -52 V
3 7 V
3 52 V
3 19 V
3 6 V
3 -25 V
3 -141 V
3 -384 V
3 214 V
3 161 V
3 14 V
3 -83 V
3 -291 V
3 311 V
3 -40 V
3 98 V
3 67 V
2 -89 V
3 128 V
3 104 V
3 -174 V
3 -96 V
3 85 V
3 119 V
3 67 V
3 -58 V
3 -278 V
3 33 V
3 -98 V
3 -61 V
3 273 V
3 73 V
3 0 V
3 -206 V
3 -270 V
3 145 V
2 -510 V
3 446 V
3 82 V
3 348 V
3 158 V
3 -40 V
3 -245 V
3 -163 V
3 -794 V
3 1010 V
3 16 V
3 -528 V
3 32 V
3 237 V
3 59 V
3 -152 V
3 157 V
3 -443 V
2 492 V
3 61 V
3 112 V
3 -203 V
3 67 V
3 157 V
3 -119 V
3 18 V
3 225 V
3 -57 V
3 -538 V
3 311 V
3 8 V
3 -58 V
3 129 V
3 106 V
3 -11 V
3 -719 V
3 660 V
2 -85 V
3 57 V
3 112 V
3 -32 V
3 -155 V
3 15 V
3 148 V
3 -196 V
3 -326 V
3 366 V
3 156 V
3 -25 V
3 -102 V
3 -42 V
3 172 V
3 49 V
3 -215 V
3 -281 V
3 79 V
2 2 V
3 183 V
3 200 V
3 87 V
3 -110 V
3 -316 V
3 55 V
3 248 V
3 -93 V
3 -122 V
3 294 V
3 85 V
3 17 V
3 -60 V
3 -225 V
3 -129 V
3 247 V
3 75 V
3 88 V
2 67 V
3 -172 V
3 -469 V
3 178 V
3 102 V
3 195 V
3 55 V
3 -97 V
3 -184 V
3 -49 V
3 190 V
3 118 V
3 23 V
3 -134 V
3 52 V
3 166 V
3 -74 V
3 -108 V
2 89 V
3 -42 V
3 9 V
3 29 V
3 -270 V
3 181 V
3 151 V
3 -70 V
3 -60 V
3 -485 V
3 538 V
3 -237 V
3 227 V
3 -1 V
3 22 V
3 10 V
3 -41 V
3 -42 V
3 105 V
2 -19 V
3 0 V
3 61 V
3 -9 V
3 -144 V
3 171 V
3 65 V
3 -76 V
3 -37 V
3 -242 V
3 -20 V
3 55 V
3 -24 V
3 195 V
3 119 V
3 -179 V
3 20 V
3 217 V
3 29 V
2 -68 V
3 -266 V
3 -8 V
3 38 V
3 -21 V
3 245 V
3 -9 V
3 14 V
3 2 V
3 -162 V
3 -288 V
3 318 V
3 87 V
3 -249 V
3 -90 V
3 -13 V
3 -89 V
3 336 V
3 181 V
2 26 V
3 20 V
3 -20 V
3 -17 V
3 57 V
3 73 V
3 -81 V
3 -194 V
3 116 V
3 -16 V
3 6 V
3 -95 V
3 156 V
3 -31 V
3 -69 V
3 21 V
3 70 V
3 -50 V
2 -25 V
3 -34 V
3 -194 V
currentpoint stroke M
3 126 V
3 26 V
3 -159 V
3 -24 V
3 162 V
3 17 V
3 60 V
3 -181 V
3 116 V
3 98 V
3 58 V
3 -151 V
3 -77 V
3 182 V
3 -185 V
3 248 V
2 55 V
3 -63 V
3 -292 V
3 -174 V
3 210 V
3 291 V
3 85 V
3 -124 V
3 -366 V
3 251 V
3 -65 V
3 32 V
3 9 V
3 -309 V
3 424 V
3 50 V
3 57 V
3 -122 V
3 -246 V
2 164 V
3 -124 V
3 151 V
3 237 V
3 -70 V
3 -96 V
3 10 V
3 65 V
3 67 V
3 -43 V
3 -106 V
3 77 V
3 104 V
3 54 V
3 -174 V
3 -95 V
3 -34 V
3 -254 V
3 307 V
2 13 V
3 -35 V
3 47 V
3 -1 V
3 105 V
3 146 V
3 -55 V
3 -175 V
3 -119 V
3 -154 V
3 124 V
3 140 V
3 -141 V
3 -12 V
3 -217 V
3 278 V
3 -11 V
3 123 V
2 91 V
3 -201 V
3 10 V
3 215 V
3 -100 V
3 -412 V
3 311 V
3 -103 V
3 87 V
3 125 V
3 -18 V
3 71 V
3 74 V
3 28 V
3 -146 V
3 -260 V
3 -144 V
3 437 V
3 29 V
2 -166 V
3 -162 V
3 196 V
3 6 V
3 19 V
3 -310 V
3 322 V
3 1 V
3 -104 V
3 105 V
3 83 V
3 -303 V
3 251 V
3 76 V
3 14 V
3 -338 V
3 297 V
3 62 V
3 -309 V
2 -138 V
3 216 V
3 -152 V
3 227 V
3 -39 V
3 0 V
3 95 V
3 -60 V
3 -228 V
3 16 V
3 278 V
3 88 V
3 94 V
3 -57 V
3 -255 V
3 222 V
3 15 V
3 -161 V
3 47 V
2 114 V
3 48 V
3 123 V
3 5 V
3 -143 V
3 -173 V
3 -77 V
3 65 V
3 68 V
3 -216 V
3 289 V
3 52 V
3 -11 V
3 -175 V
3 -103 V
3 168 V
3 -44 V
3 198 V
2 8 V
3 -220 V
3 55 V
3 198 V
3 -102 V
3 -135 V
3 128 V
3 -34 V
3 42 V
3 -180 V
3 226 V
3 104 V
3 -55 V
3 -102 V
3 -145 V
3 -241 V
3 282 V
3 227 V
3 -45 V
2 -377 V
3 34 V
3 -29 V
3 360 V
3 125 V
3 66 V
3 -42 V
3 -201 V
3 -440 V
3 171 V
3 241 V
3 32 V
3 -190 V
3 -2 V
3 138 V
3 20 V
3 108 V
3 -166 V
3 -103 V
2 -78 V
3 309 V
3 35 V
3 -21 V
3 -270 V
3 242 V
3 86 V
3 -86 V
3 15 V
3 -77 V
3 -80 V
3 213 V
3 -22 V
3 -269 V
3 -146 V
3 -6 V
3 447 V
3 129 V
2 -44 V
3 -97 V
3 -117 V
3 -290 V
3 231 V
3 104 V
3 30 V
3 35 V
3 -171 V
3 -351 V
3 400 V
3 245 V
3 -79 V
3 1 V
3 -400 V
3 89 V
3 168 V
3 81 V
3 -208 V
2 114 V
3 210 V
3 -26 V
3 -185 V
3 268 V
3 -13 V
3 -78 V
3 -53 V
3 -25 V
3 -283 V
3 88 V
3 179 V
3 119 V
3 76 V
3 -29 V
3 -228 V
3 19 V
3 0 V
3 18 V
2 158 V
3 -43 V
3 -232 V
3 -110 V
3 50 V
3 288 V
3 -26 V
3 -254 V
3 241 V
3 -47 V
3 -408 V
3 184 V
3 157 V
3 41 V
3 110 V
3 28 V
3 -24 V
3 -27 V
3 -225 V
2 42 V
3 205 V
3 34 V
3 -227 V
3 58 V
3 127 V
3 7 V
3 -68 V
3 -30 V
3 -35 V
3 119 V
3 143 V
3 7 V
3 -82 V
3 -119 V
3 -199 V
3 -8 V
3 236 V
2 13 V
3 -200 V
3 -209 V
3 151 V
3 221 V
3 179 V
3 -36 V
3 -77 V
3 -13 V
3 -215 V
3 97 V
3 64 V
3 156 V
3 -6 V
3 -382 V
3 327 V
3 -81 V
3 -42 V
3 8 V
2 45 V
3 155 V
3 21 V
3 -20 V
3 -10 V
3 -49 V
3 -109 V
3 178 V
3 -62 V
3 -503 V
3 -94 V
3 51 V
3 395 V
3 69 V
3 -72 V
3 -387 V
3 94 V
3 207 V
3 121 V
2 -97 V
3 177 V
3 84 V
3 -140 V
3 65 V
3 -17 V
3 105 V
3 60 V
3 -291 V
3 31 V
3 13 V
3 -284 V
3 241 V
3 37 V
3 137 V
3 15 V
3 -95 V
3 -25 V
3 -108 V
2 -73 V
3 229 V
3 -132 V
3 -346 V
3 183 V
3 67 V
3 276 V
3 175 V
3 -41 V
3 -153 V
3 -167 V
3 -138 V
3 -79 V
3 308 V
3 -81 V
3 -93 V
3 121 V
3 182 V
2 -255 V
3 -25 V
3 128 V
3 216 V
3 -44 V
3 -321 V
3 -24 V
3 184 V
3 -157 V
3 -113 V
3 159 V
3 58 V
3 30 V
3 282 V
3 6 V
3 -140 V
3 -246 V
3 93 V
3 242 V
2 63 V
3 -13 V
3 31 V
3 29 V
3 -82 V
3 -567 V
3 464 V
3 -8 V
3 -26 V
3 -10 V
3 -289 V
3 81 V
3 237 V
3 245 V
3 8 V
3 -148 V
3 -250 V
3 9 V
3 46 V
2 45 V
3 -119 V
3 -427 V
3 640 V
3 23 V
3 -156 V
3 70 V
3 100 V
3 11 V
currentpoint stroke M
3 -50 V
3 -278 V
3 61 V
3 155 V
3 141 V
3 -45 V
3 -319 V
3 257 V
3 93 V
3 39 V
2 -111 V
3 -377 V
3 444 V
3 -56 V
3 -246 V
3 262 V
3 -9 V
3 -150 V
3 128 V
3 11 V
3 63 V
3 58 V
3 -57 V
3 -170 V
3 -318 V
3 229 V
3 290 V
3 -168 V
2 -101 V
3 123 V
3 104 V
3 -90 V
3 -40 V
3 -82 V
3 119 V
3 103 V
3 -50 V
3 -408 V
3 -533 V
3 718 V
3 277 V
3 149 V
3 27 V
3 -127 V
3 -203 V
3 -78 V
3 -41 V
2 81 V
3 189 V
3 28 V
3 -60 V
3 -172 V
3 17 V
3 230 V
3 55 V
3 22 V
3 -13 V
3 -183 V
3 -123 V
3 283 V
3 15 V
3 -166 V
3 -279 V
3 192 V
3 -4 V
3 22 V
2 23 V
3 -198 V
3 178 V
3 -70 V
3 21 V
3 -170 V
3 66 V
3 114 V
3 -10 V
3 -449 V
3 540 V
3 -30 V
3 -95 V
3 -3 V
3 152 V
3 -420 V
3 262 V
3 -38 V
3 -192 V
2 279 V
3 112 V
3 -86 V
3 -183 V
3 86 V
3 -235 V
3 247 V
3 -21 V
3 -497 V
3 442 V
3 -115 V
3 131 V
3 72 V
3 -46 V
3 -32 V
3 151 V
3 -262 V
3 81 V
2 319 V
3 133 V
3 -29 V
3 -130 V
3 -381 V
3 278 V
3 -20 V
3 -108 V
3 226 V
3 119 V
3 -187 V
3 -167 V
3 138 V
3 224 V
3 -125 V
3 -382 V
3 4 V
3 24 V
3 170 V
2 255 V
3 66 V
3 -60 V
3 -192 V
3 -285 V
3 393 V
3 191 V
3 2 V
3 -72 V
3 -63 V
3 -19 V
3 171 V
3 11 V
3 -201 V
3 86 V
3 -7 V
3 -154 V
3 -279 V
3 362 V
2 -142 V
3 83 V
3 142 V
3 -207 V
3 39 V
3 158 V
3 -4 V
3 -133 V
3 61 V
3 72 V
3 -72 V
3 -87 V
3 49 V
3 -65 V
3 -175 V
3 -43 V
3 71 V
3 148 V
3 -21 V
2 14 V
3 -149 V
3 39 V
3 83 V
3 -537 V
3 769 V
3 76 V
3 -79 V
3 -155 V
3 -212 V
3 -67 V
3 215 V
3 232 V
3 -2 V
3 -16 V
3 -75 V
3 -30 V
3 -60 V
2 -8 V
3 115 V
3 -52 V
3 -85 V
3 63 V
3 -438 V
3 328 V
3 -9 V
3 -150 V
3 296 V
3 -21 V
3 -118 V
3 -149 V
3 -31 V
3 313 V
3 -182 V
3 -71 V
3 42 V
3 -361 V
2 -14 V
3 389 V
3 -418 V
3 519 V
3 122 V
3 75 V
3 -42 V
3 -167 V
3 -244 V
3 309 V
3 90 V
3 -187 V
3 -73 V
3 12 V
3 360 V
3 77 V
3 -104 V
3 -232 V
3 -324 V
2 358 V
3 -185 V
3 184 V
3 190 V
3 -32 V
3 -70 V
3 112 V
3 110 V
3 -76 V
3 -26 V
3 -53 V
3 -229 V
3 -102 V
3 257 V
3 198 V
3 -41 V
3 -64 V
3 51 V
2 152 V
3 43 V
3 -130 V
3 -346 V
3 102 V
3 160 V
3 51 V
3 -138 V
3 -70 V
3 102 V
3 24 V
3 -96 V
3 -22 V
3 -325 V
3 0 V
3 179 V
3 -301 V
3 34 V
3 244 V
2 127 V
3 -141 V
3 -96 V
3 405 V
3 -27 V
3 -579 V
3 482 V
3 42 V
3 -213 V
3 -35 V
3 247 V
3 27 V
3 -59 V
3 30 V
3 28 V
3 23 V
3 -1 V
3 -165 V
3 -371 V
2 199 V
3 7 V
3 -199 V
3 247 V
3 179 V
3 63 V
3 -101 V
3 58 V
3 -6 V
3 -67 V
3 104 V
3 181 V
3 -258 V
3 -53 V
3 221 V
3 81 V
3 -57 V
3 -70 V
3 41 V
2 -97 V
3 -267 V
3 41 V
3 -103 V
3 300 V
3 -164 V
3 169 V
3 222 V
3 0 V
3 -30 V
3 -144 V
3 41 V
3 188 V
3 69 V
3 -42 V
3 -83 V
3 -159 V
3 -429 V
2 134 V
3 -118 V
3 350 V
3 -45 V
3 42 V
3 130 V
3 -27 V
3 -149 V
3 -145 V
3 157 V
3 60 V
3 -16 V
3 3 V
3 13 V
3 -44 V
3 89 V
3 -137 V
3 23 V
3 -87 V
2 17 V
3 -105 V
3 59 V
3 125 V
3 -21 V
3 -6 V
3 74 V
3 -237 V
3 177 V
3 -33 V
3 -80 V
3 139 V
3 117 V
3 1 V
3 -164 V
3 80 V
3 -96 V
3 -556 V
3 485 V
2 155 V
3 -381 V
3 336 V
3 84 V
3 -152 V
3 143 V
3 230 V
3 23 V
3 -77 V
3 -211 V
3 -167 V
3 35 V
3 81 V
3 -9 V
3 81 V
3 167 V
3 -130 V
3 -337 V
3 313 V
2 66 V
3 -139 V
3 8 V
3 71 V
3 20 V
3 -110 V
3 -212 V
3 261 V
3 107 V
3 50 V
3 -189 V
3 -24 V
3 117 V
3 -100 V
3 165 V
3 125 V
3 -5 V
3 -154 V
2 -85 V
3 155 V
3 0 V
3 -91 V
3 81 V
3 -106 V
3 -163 V
3 -27 V
3 -368 V
3 500 V
3 -63 V
3 -211 V
3 193 V
3 213 V
3 -6 V
3 -300 V
currentpoint stroke M
3 -44 V
3 -207 V
3 362 V
2 109 V
3 8 V
3 132 V
3 -163 V
3 -109 V
3 234 V
3 15 V
3 -133 V
3 -244 V
3 148 V
3 -52 V
3 -119 V
3 350 V
3 161 V
3 -57 V
3 -209 V
3 -115 V
3 63 V
3 57 V
2 -105 V
3 -301 V
3 272 V
3 -206 V
3 90 V
3 28 V
3 18 V
3 236 V
3 -10 V
3 -3 V
3 -38 V
3 -36 V
3 95 V
3 29 V
3 -54 V
3 -92 V
3 -94 V
3 262 V
3 52 V
2 -104 V
3 -148 V
3 79 V
3 321 V
3 124 V
3 -41 V
3 -152 V
3 -78 V
3 -111 V
3 29 V
3 69 V
3 -100 V
3 -44 V
3 200 V
3 16 V
3 -124 V
3 89 V
3 -38 V
2 -39 V
3 -4 V
3 126 V
3 92 V
3 -56 V
3 -158 V
3 -313 V
3 212 V
3 117 V
3 54 V
3 46 V
3 -126 V
3 -42 V
3 -95 V
3 -95 V
3 162 V
3 -184 V
3 121 V
3 -81 V
2 219 V
3 -164 V
3 -216 V
3 57 V
3 276 V
3 -67 V
3 -506 V
3 484 V
3 242 V
3 -58 V
3 -77 V
3 175 V
3 11 V
3 -198 V
3 215 V
3 83 V
3 -74 V
3 -77 V
3 -101 V
2 -119 V
3 200 V
3 -242 V
3 -357 V
3 387 V
3 50 V
3 -20 V
3 -63 V
3 -228 V
3 276 V
3 10 V
3 219 V
3 62 V
3 -40 V
3 5 V
3 -85 V
3 -261 V
3 -154 V
3 -192 V
2 460 V
3 -15 V
3 -500 V
3 374 V
3 216 V
3 131 V
3 67 V
3 -78 V
3 -301 V
3 -411 V
3 122 V
3 281 V
3 266 V
3 -142 V
3 151 V
3 165 V
3 13 V
3 -40 V
2 -137 V
3 -209 V
3 -13 V
3 98 V
3 -9 V
3 -16 V
3 82 V
3 162 V
3 -70 V
3 -487 V
3 252 V
3 -58 V
3 -136 V
3 150 V
3 -81 V
3 21 V
3 144 V
3 184 V
3 -131 V
2 -425 V
3 -218 V
3 295 V
3 -9 V
3 221 V
3 -120 V
3 -101 V
3 394 V
3 -68 V
3 -48 V
3 170 V
3 -38 V
3 -46 V
3 -3 V
3 37 V
3 -33 V
3 -137 V
3 151 V
3 38 V
2 -263 V
3 43 V
3 -20 V
3 -391 V
3 440 V
3 -79 V
3 168 V
3 92 V
3 -66 V
3 17 V
3 147 V
3 12 V
3 -33 V
3 -60 V
3 -142 V
3 92 V
3 27 V
3 48 V
2 26 V
3 28 V
3 -100 V
3 -534 V
3 296 V
3 156 V
3 -17 V
3 71 V
3 -89 V
3 -249 V
3 311 V
3 132 V
3 -146 V
3 -499 V
3 615 V
3 125 V
3 -218 V
3 139 V
3 184 V
2 -26 V
3 -144 V
3 -91 V
3 27 V
3 -12 V
3 38 V
3 -122 V
3 -396 V
3 322 V
3 -19 V
3 129 V
3 130 V
3 -52 V
3 -208 V
3 -2 V
3 267 V
3 -6 V
3 -268 V
3 354 V
2 -13 V
3 -94 V
3 -88 V
3 -221 V
3 272 V
3 180 V
3 -64 V
3 -311 V
3 -12 V
3 276 V
3 8 V
3 108 V
3 42 V
3 -243 V
3 -220 V
3 69 V
3 -201 V
3 90 V
3 -54 V
2 -109 V
3 230 V
3 47 V
3 75 V
3 2 V
3 -122 V
3 -4 V
3 -62 V
3 403 V
3 70 V
3 -313 V
3 75 V
3 123 V
3 -85 V
3 -284 V
3 -121 V
3 8 V
3 338 V
2 -61 V
3 107 V
3 43 V
3 -51 V
3 -9 V
3 -14 V
3 89 V
3 262 V
3 -92 V
3 -205 V
3 -136 V
3 -66 V
3 -75 V
3 112 V
3 -80 V
3 -362 V
3 191 V
3 -407 V
3 164 V
2 449 V
3 -506 V
3 744 V
3 237 V
3 75 V
3 -51 V
3 -72 V
3 -79 V
3 -143 V
3 -103 V
3 -13 V
3 -568 V
3 564 V
3 26 V
3 -64 V
3 52 V
3 113 V
3 49 V
3 -26 V
2 299 V
3 138 V
3 -108 V
3 -362 V
3 -375 V
3 104 V
3 -255 V
3 479 V
3 60 V
3 -287 V
3 -258 V
3 275 V
3 225 V
3 -549 V
3 670 V
3 -22 V
3 56 V
3 186 V
3 -149 V
2 -167 V
3 58 V
3 -69 V
3 -93 V
3 -526 V
3 327 V
3 264 V
3 -23 V
3 16 V
3 58 V
3 117 V
3 33 V
3 -25 V
3 199 V
3 100 V
3 -185 V
3 -460 V
3 48 V
2 27 V
3 25 V
3 6 V
3 -240 V
3 151 V
3 -87 V
3 300 V
3 47 V
3 -415 V
3 412 V
3 -15 V
3 168 V
3 84 V
3 -181 V
3 -172 V
3 -7 V
3 -92 V
3 85 V
3 188 V
2 41 V
3 -242 V
3 -144 V
3 118 V
3 -158 V
3 -46 V
3 25 V
3 213 V
3 216 V
3 141 V
3 -196 V
3 -50 V
3 155 V
3 -204 V
3 -599 V
3 389 V
3 -148 V
3 -953 V
3 1178 V
2 176 V
3 44 V
3 -88 V
3 -283 V
3 96 V
3 286 V
3 38 V
3 -144 V
3 -391 V
3 207 V
3 252 V
3 15 V
3 -303 V
3 4 V
3 145 V
3 170 V
3 -151 V
3 -288 V
3 -94 V
2 -45 V
3 193 V
3 297 V
currentpoint stroke M
3 160 V
3 -27 V
3 -119 V
3 2 V
3 -165 V
3 27 V
3 200 V
3 -78 V
3 -104 V
3 -115 V
3 118 V
3 -81 V
3 158 V
3 66 V
3 -60 V
2 13 V
3 -25 V
3 -5 V
3 36 V
3 21 V
3 -8 V
3 -5 V
3 -13 V
3 2 V
3 -18 V
3 -212 V
3 -34 V
3 -59 V
3 208 V
3 -101 V
3 -144 V
3 452 V
3 160 V
3 -107 V
2 -167 V
3 58 V
3 33 V
3 53 V
3 35 V
3 -48 V
3 -217 V
3 -84 V
3 79 V
3 -165 V
3 237 V
3 47 V
3 -425 V
3 615 V
3 83 V
3 -168 V
3 -188 V
3 -269 V
3 218 V
2 162 V
3 100 V
3 21 V
3 -130 V
3 -249 V
3 -59 V
3 -110 V
3 150 V
3 92 V
3 155 V
3 277 V
3 80 V
3 -141 V
3 -197 V
3 2 V
3 -269 V
3 228 V
3 166 V
3 -33 V
2 -154 V
3 60 V
3 5 V
3 -193 V
3 -71 V
3 -41 V
3 272 V
3 -98 V
3 130 V
3 19 V
3 -294 V
3 -158 V
3 279 V
3 -44 V
3 -71 V
3 201 V
3 57 V
3 101 V
2 -50 V
3 -331 V
3 97 V
3 44 V
3 64 V
3 315 V
3 135 V
3 -152 V
3 -441 V
3 176 V
3 23 V
3 -109 V
3 53 V
3 -34 V
3 -153 V
3 333 V
3 16 V
3 -108 V
3 -356 V
2 25 V
3 170 V
3 308 V
3 -4 V
3 -305 V
3 -193 V
3 331 V
3 -32 V
3 194 V
3 -6 V
3 -230 V
3 -218 V
3 217 V
3 111 V
3 -19 V
3 -17 V
3 40 V
3 -23 V
3 -98 V
2 -33 V
3 -9 V
3 -72 V
3 183 V
3 -55 V
3 49 V
3 23 V
3 -129 V
3 86 V
3 132 V
3 -74 V
3 -146 V
3 -58 V
3 80 V
3 -239 V
3 422 V
3 149 V
3 -83 V
3 -130 V
2 -174 V
3 107 V
3 234 V
3 -55 V
3 -323 V
3 86 V
3 245 V
3 95 V
3 -36 V
3 -243 V
3 -54 V
3 92 V
3 92 V
3 251 V
3 -114 V
3 -266 V
3 89 V
3 54 V
2 -63 V
3 -171 V
3 68 V
3 58 V
3 71 V
3 -74 V
3 -7 V
3 128 V
3 -66 V
3 -956 V
3 931 V
3 30 V
3 -177 V
3 30 V
3 45 V
3 -248 V
3 126 V
3 78 V
3 18 V
2 250 V
3 63 V
3 -198 V
3 -278 V
3 302 V
3 2 V
3 9 V
3 237 V
3 65 V
3 -255 V
3 -676 V
3 226 V
3 256 V
3 -236 V
3 196 V
3 106 V
3 -22 V
3 56 V
3 93 V
2 53 V
3 -145 V
3 -179 V
3 -60 V
3 334 V
3 174 V
3 -81 V
3 -210 V
3 -83 V
3 77 V
3 -162 V
3 -108 V
3 344 V
3 164 V
3 -82 V
3 -407 V
3 229 V
3 150 V
2 -174 V
3 95 V
3 109 V
3 -11 V
3 -35 V
3 -321 V
3 112 V
3 21 V
3 -57 V
3 228 V
3 25 V
3 -80 V
3 -174 V
3 -446 V
3 682 V
3 72 V
3 -314 V
3 159 V
3 132 V
2 -42 V
3 -65 V
3 -120 V
3 45 V
3 -53 V
3 25 V
3 116 V
3 114 V
3 15 V
3 -50 V
3 -91 V
3 -63 V
3 191 V
3 -55 V
3 -400 V
3 449 V
3 229 V
3 -38 V
3 -239 V
2 -373 V
3 -12 V
3 124 V
3 -9 V
3 234 V
3 29 V
3 -102 V
3 50 V
3 89 V
3 62 V
3 -78 V
3 -275 V
3 362 V
3 163 V
3 -151 V
3 -364 V
3 -130 V
3 -47 V
3 127 V
2 167 V
3 88 V
3 53 V
3 -41 V
3 -102 V
3 121 V
3 100 V
3 -190 V
3 -36 V
3 174 V
3 62 V
3 -380 V
3 -44 V
3 242 V
3 -159 V
3 99 V
3 149 V
3 -43 V
2 -99 V
3 15 V
3 116 V
3 -96 V
3 -199 V
3 -158 V
3 89 V
3 154 V
3 -56 V
3 -39 V
3 204 V
3 144 V
3 -73 V
3 -86 V
3 140 V
3 -46 V
3 -62 V
3 64 V
3 69 V
2 -87 V
3 -189 V
3 60 V
3 152 V
3 -254 V
3 -163 V
3 272 V
3 181 V
3 114 V
3 -36 V
3 -447 V
3 270 V
3 -202 V
3 -42 V
3 305 V
3 76 V
3 -180 V
3 -120 V
3 158 V
2 -79 V
3 -247 V
3 -328 V
3 462 V
3 144 V
3 89 V
3 -97 V
3 -865 V
3 859 V
3 12 V
3 195 V
3 82 V
3 -19 V
3 -120 V
3 -82 V
3 91 V
3 -15 V
3 80 V
3 163 V
2 -63 V
3 -96 V
3 33 V
3 -30 V
3 -144 V
3 -191 V
3 140 V
3 89 V
3 -353 V
3 268 V
3 38 V
3 -34 V
3 -178 V
3 -164 V
3 436 V
3 188 V
3 -121 V
3 -252 V
2 93 V
3 -14 V
3 4 V
3 112 V
3 -87 V
3 24 V
3 138 V
3 -66 V
3 -183 V
3 5 V
3 -258 V
3 -128 V
3 498 V
3 197 V
3 -276 V
3 175 V
3 122 V
3 -105 V
3 -133 V
2 69 V
3 -34 V
3 -139 V
3 -86 V
3 51 V
3 -141 V
3 108 V
3 290 V
3 -42 V
3 -45 V
currentpoint stroke M
stroke
grestore
end
showpage
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11.00 mul neg translate

61.875 634.500 translate 0.562 0.562 scale 0 rotate

/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
672 211 M
0 2238 V
LTb
672 211 M
63 0 V
2634 0 R
-63 0 V
588 211 M
(-120) Rshow
672 584 M
63 0 V
2634 0 R
-63 0 V
588 584 M
(-100) Rshow
672 957 M
63 0 V
2634 0 R
-63 0 V
588 957 M
(-80) Rshow
672 1330 M
63 0 V
2634 0 R
-63 0 V
-2718 0 R
(-60) Rshow
672 1703 M
63 0 V
2634 0 R
-63 0 V
-2718 0 R
(-40) Rshow
672 2076 M
63 0 V
2634 0 R
-63 0 V
-2718 0 R
(-20) Rshow
672 2449 M
63 0 V
2634 0 R
-63 0 V
-2718 0 R
(0) Rshow
1057 211 M
0 63 V
0 2175 R
0 -63 V
1057 71 M
(2e3) Cshow
1828 211 M
0 63 V
0 2175 R
0 -63 V
1828 71 M
(6e3) Cshow
2598 211 M
0 63 V
0 2175 R
0 -63 V
2598 71 M
(10e3) Cshow
3369 211 M
0 63 V
0 2175 R
0 -63 V
3369 71 M
(14e3) Cshow
672 211 M
2697 0 V
0 2238 V
-2697 0 V
672 211 L
LT0
696 378 M
24 95 V
24 84 V
24 -33 V
792 370 L
24 14 V
25 125 V
24 32 V
889 407 L
913 221 L
24 266 V
24 53 V
24 9 V
24 -94 V
24 1400 V
24 296 V
24 84 V
24 -84 V
25 -296 V
1148 211 L
22 0 R
8 245 V
24 57 V
24 -273 V
24 323 V
24 -3 V
24 -112 V
24 69 V
24 -27 V
24 40 V
24 -62 V
24 53 V
25 -154 V
24 -75 V
24 50 V
24 192 V
24 32 V
24 -107 V
24 -51 V
24 -144 V
24 254 V
24 129 V
24 57 V
24 -79 V
25 -22 V
24 113 V
24 -91 V
24 -35 V
24 228 V
24 73 V
24 -86 V
24 -175 V
24 98 V
24 -77 V
24 -251 V
24 207 V
25 37 V
24 -69 V
24 -76 V
24 -23 V
24 76 V
24 78 V
24 0 V
24 62 V
24 68 V
24 -78 V
24 -92 V
24 -8 V
24 83 V
25 -116 V
24 177 V
24 66 V
24 -30 V
24 122 V
24 -48 V
24 -210 V
24 31 V
24 95 V
24 -157 V
24 87 V
24 -106 V
25 270 V
24 4 V
24 -37 V
24 -10 V
24 -132 V
24 -28 V
24 83 V
24 39 V
24 75 V
24 -11 V
24 -252 V
24 250 V
24 64 V
25 65 V
24 -20 V
24 -63 V
24 -184 V
24 155 V
24 34 V
24 -11 V
24 66 V
24 19 V
24 -12 V
24 -69 V
24 -8 V
25 126 V
24 27 V
24 -24 V
24 4 V
24 -12 V
24 26 V
24 56 V
stroke
grestore
end
showpage
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Oct 29 14:57:22 1998
%%EndDocument

 endTexFig
 1130 2513 a FH(Figure)30 b(4.20:)43 b(Sp)s(ectrum)28
b(of)j(the)g(comparator)g(output)300 2788 y(magnitude)26
b(of)h(the)h(input)d(signal)g(w)m(as)j(100)g FG(\026)p
FH(A.)f(Fig.)40 b(4.20)29 b(sho)m(ws)d(the)i(sp)s(ectrum)e(of)h(the)g
(comparator)300 3014 y(output)45 b(computed)g(b)m(y)h(taking)f(an)h
(FFT)f(with)g(a)g(Blac)m(kman)i(windo)m(w)c(o)m(v)m(er)k(8000)g(p)s
(oin)m(ts.)85 b(The)300 3240 y(sim)m(ulation)34 b(time)i(w)m(as)g(16.5)
h(s)f(p)s(er)f(sampling)f(p)s(erio)s(d)g(\(or)i(p)s(er)f(p)s(oin)m
(t\).)56 b(A)36 b(sim)m(ulation)e(in)h(HSPICE)300 3466
y(w)m(as)e(not)h(p)s(erformed,)e(ho)m(w)m(ev)m(er,)k(similar)30
b(increase)j(in)f(sim)m(ulation)f(sp)s(eed)h(as)i(for)f(the)g(\014lter)
f(example)300 3691 y(is)e(exp)s(ected.)43 b(Since)31
b(the)g(latc)m(hed)g(comparator)h(and)f(the)g(logic)g(elemen)m(ts)g
(are)h(ideal,)e(the)h(increase)g(in)300 3917 y(sim)m(ulation)d(sp)s
(eed)i(ma)m(y)h(b)s(e)f(greater.)536 4143 y(Note,)35
b(that)e(a)f(useful)f(application)g(of)h(the)h(transien)m(t)f(analyses)
g(in)f(SWITCAP3)h(w)m(ould)f(b)s(e)h(to)300 4369 y(sim)m(ulate)k(the)g
(sigma-delta)h(mo)s(dulator)e(on)i(the)f(b)s(eha)m(vioral)g(lev)m(el)g
(where)g(all)f(of)i(the)g(elemen)m(ts)g(are)300 4595
y(ideal.)72 b(In)41 b(that)g(case,)46 b(the)41 b(sim)m(ulation)e(sp)s
(eed)i(is)f(orders)g(of)i(magnitude)e(greater.)75 b(\(Just)41
b(lik)m(e)f(for)300 4821 y(sim)m(ulations)28 b(of)j(SC)e(sigma-delta)i
(mo)s(dulators)e(in)g(SWITCAP2)h([69)q(]\))p eop
%%Page: 95 108
95 107 bop 3809 -200 a FH(95)300 99 y FL(4.5)135 b(Conclusion)300
414 y FH(It)35 b(w)m(as)h(sho)m(wn)e(that)i(the)f(time-)g(and)f
(frequency-domain)g(sim)m(ulations)f(under)h(the)h(instan)m(t)g
(settling)300 640 y(appro)m(ximation)40 b(can)h(greatly)h(reduce)e(the)
i(sim)m(ulation)d(time)h(of)h(SI)g(an)f(SC)h(net)m(w)m(orks.)73
b(Although)300 866 y(only)30 b(SI)h(examples)g(w)m(ere)g(giv)m(en,)h
(the)g(pro)s(cedure)e(for)h(SC)f(net)m(w)m(ork)i(sim)m(ulation)e(is)g
(the)h(same.)44 b(It)32 b(w)m(as)300 1092 y(sho)m(wn)25
b(that)h(it)g(is)e(still)g(necessary)i(to)g(use)g(a)g(con)m(tin)m
(uous-time)f(sim)m(ulator)g(suc)m(h)g(as)h(HSPICE,)f(in)f(order)300
1318 y(to)39 b(v)m(erify)f(that)i(the)f(net)m(w)m(ork)g(settles)g
(within)d(eac)m(h)k(switc)m(hing)d(in)m(terv)-5 b(al.)65
b(Once)39 b(this)e(is)h(done,)j(the)300 1543 y(time-domain)25
b(sim)m(ulation)g(in)g(SWITCAP3)h(can)g(b)s(e)g(used,)h(whic)m(h)e(is)g
(10,)k(or)d(more,)h(times)f(faster)h(than)300 1769 y(the)i(con)m(tin)m
(uous-time)f(sim)m(ulation)f(\(dep)s(ending)g(on)h(the)h(n)m(umerical)f
(in)m(tegration)g(time)h(step)f(tak)m(en)i(in)300 1995
y(the)h(con)m(tin)m(uous)f(time)g(algorithm\).)536 2221
y(The)41 b(frequency-domain)e(sim)m(ulation)h(of)h(an)g(SI)f(\014lter)g
(w)m(as)h(demonstrated.)73 b(It)41 b(w)m(as)h(sho)m(wn)300
2447 y(that)28 b(the)g(\014lters)e(can)i(b)s(e)e(sp)s(eci\014ed)g(at)i
(the)g(transistor)e(lev)m(el,)i(and)f(that)h(the)g(small-signal)d
(parameters)300 2673 y(required)30 b(for)i(the)g(computation)g(of)g
(the)h(frequency)e(resp)s(onse)g(are)i(extracted)g(automatically)-8
b(.)46 b(Once)300 2898 y(the)38 b(small-signal)e(parameters)i(are)h
(obtained,)h(the)e(time)g(for)g(the)g(computation)g(of)g(the)g
(frequency)300 3124 y(resp)s(onse)24 b(is)g(negligible)f(compared)i(to)
h(the)f(time)g(required)e(for)i(obtaining)f(the)h(bias)f(p)s(oin)m(ts.)
38 b(Ho)m(w)m(ev)m(er,)300 3350 y(the)e(total)h(time)f(of)h(computing)e
(the)i(bias)e(p)s(oin)m(ts)g(and)h(the)g(frequency)g(resp)s(onse)f(is)g
(still)f(m)m(uc)m(h)j(less)300 3576 y(than)28 b(using)e(the)j(transien)
m(t/FFT)f(metho)s(d.)40 b(Note,)30 b(for)e(net)m(w)m(orks)g(with)f
(linear)g(elemen)m(ts,)i(there)f(is)f(no)300 3802 y(need)35
b(to)i(compute)f(the)g(bias)e(p)s(oin)m(ts,)i(therefore,)i(the)e
(computation)f(of)h(the)g(frequency)f(resp)s(onse)g(is)300
4027 y(practically)e(instan)m(t.)52 b(The)34 b(frequency)g(resp)s(onse)
f(computed)h(b)m(y)h(SWITCAP3)e(w)m(as)i(sho)m(wn)f(to)h(b)s(e)f(a)300
4253 y(close)27 b(appro)m(ximation)f(to)h(the)g(resp)s(onse)f(computed)
g(through)g(transien)m(t/FFT)h(metho)s(d)f(in)g(HSPICE.)536
4479 y(Finally)-8 b(,)47 b(the)d(transien)m(t)g(analyses)h(w)m(as)f
(applied)f(to)i(sim)m(ulate)e(distortion)g(in)g(the)i(SI)f(\014lter.)
300 4705 y(Ho)m(w)m(ev)m(er)38 b(it)d(can)i(only)e(giv)m(e)h(an)g
(appro)m(ximation)f(to)h(the)g(true)g(distortion)e(since)i(the)g
(\014nite)f(settling)300 4931 y(e\013ects)24 b(can)g(con)m(tribute)e
(signi\014can)m(tly)g(and)g(the)h(high)f(order)g(harmonics)g(of)h(the)h
(signal)d(are)j(not)f(\014ltered)300 5157 y(out)31 b(as)f(they)h(w)m
(ould)e(b)s(e)h(in)f(a)h(real)h(net)m(w)m(ork.)p eop
%%Page: 96 109
96 108 bop 3809 -200 a FH(96)300 721 y FM(Chapter)65
b(5)300 1095 y(Noise)h(Analysis)i(of)c(Ideal)300 1302
y(Switc)-5 b(hed-Capacitor)65 b(Net)-5 b(w)g(orks)300
1784 y FL(5.1)135 b(In)l(tro)t(duction)300 2100 y FH(In)33
b(this)g(c)m(hapter,)i(the)f(noise)f(analysis)g(for)g(\\ideal")h(switc)
m(hed-capacitor)g(net)m(w)m(orks)h(\(SCN's\))e(is)g(pre-)300
2326 y(sen)m(ted.)63 b(In)37 b([56)r(])g(it)h(w)m(as)g(sho)m(wn)f(that)
h(if)f(the)h(losses,)i(suc)m(h)d(as)h(\014nite)f(resistance)h(of)g
(switc)m(hes,)h(in)e(a)300 2551 y(\\real")f(SCN)f(are)h(reduced)e(to)j
(zero)f(b)m(y)f(using)f(a)i(limit-v)-5 b(alue)33 b(computation,)k(the)f
(resulting)d(\\ideal")300 2777 y(SCN)i(has)h(a)g(w)m(ell-de\014ned)e
(output)h(noise)h(PSD.)g(Ho)m(w)m(ev)m(er,)j(the)d(form)m(ulation)f(in)
f([56)q(])j(required)d(t)m(w)m(o)300 3003 y(sets)25 b(of)f(net)m(w)m
(ork)h(equations.)39 b(First,)25 b(a)g(set)g(of)f(algebraic)g
(equations)g(represen)m(ting)g(the)g(net)m(w)m(ork)h(under)300
3229 y(the)33 b(instan)m(t)g(settling)g(appro)m(ximation,)g(and)f
(second,)i(the)g(di\013eren)m(tial)d(equations)i(that)h(include)d(the)
300 3455 y(losses)j(and)g(mo)s(del)f(the)i(\014nite)e(settling)h
(e\013ects.)54 b(Explicit)32 b(expressions)h(for)i(the)f(output)g
(noise)g(PSD)300 3680 y(w)m(ere)c(deriv)m(ed,)f(ho)m(w)m(ev)m(er,)i(it)
e(w)m(as)h(necessary)g(to)g(ev)-5 b(aluate)31 b(eigen)m(v)-5
b(alues)29 b(or)g(matrix)g(exp)s(onen)m(tials)g(and)300
3906 y(to)41 b(solv)m(e)g(bilateral)e(matrix)h(equations)h(of)f(the)h
(form)f FD(Ax)28 b FH(+)e FD(xB)43 b FH(=)f FD(C)e FH(where)g
FD(A)p FH(,)k FD(B)p FH(,)f(and)d FD(C)h FH(are)300 4132
y(constan)m(t)32 b(matrices)e(and)g FD(x)g FH(is)g(an)g(unkno)m(wn)f(v)
m(ector.)536 4358 y(The)e(form)m(ulation)f(presen)m(ted)h(in)f(this)g
(c)m(hapter)i([57)q(,)g(58)q(])f(also)g(deriv)m(es)g(explicit)e
(expressions)h(for)300 4584 y(the)39 b(output)f(noise)g(PSD)g(b)m(y)g
(reducing)f(the)i(losses)f(to)h(zero)g(through)f(a)h(limit-v)-5
b(alue)36 b(computation.)300 4810 y(Ho)m(w)m(ev)m(er,)h(the)d(need)f
(for)h(a)g(lossy)f(description)f(of)i(the)f(SCN)g(is)g(a)m(v)m(oided)h
(and)g(similarly)-8 b(,)31 b(there)j(is)f(no)300 5035
y(need)38 b(to)i(compute)e(matrix)g(exp)s(onen)m(tials)g(or)g(eigen)m
(v)-5 b(alues,)41 b(or)d(solv)m(e)h(bilateral)e(matrix)h(equations.)300
5261 y(This)d(is)i(accomplished)f(b)m(y)h(assuming)f(that)i(the)f(net)m
(w)m(ork)h(has)f(only)g(one)g(noisy)g(comp)s(onen)m(t.)61
b(The)p eop
%%Page: 97 110
97 109 bop 3809 -200 a FH(97)300 99 y(expression)32 b(for)i(the)g
(output)f(noise)g(PSD)h(of)g(the)f(SCN)g(with)g(one)h(loss)f(corresp)s
(onding)f(to)i(the)g(noisy)300 324 y(comp)s(onen)m(t)40
b(can)f(then)g(b)s(e)g(deriv)m(ed.)66 b(Then,)41 b(b)m(y)e(taking)h
(the)f(limit)e(as)j(the)f(loss)g(approac)m(hes)h(zero,)300
550 y(an)f(expression)g(for)g(the)h(output)f(noise)g(PSD)g(of)h(the)g
(ideal)e(net)m(w)m(ork)j(is)d(obtained.)68 b(The)39 b(resulting)300
776 y(expression)25 b(is)f(a)j(function)d(of)i(ideal)e(net)m(w)m(ork)j
(parameters)f(and)f(the)h(parameters)g(of)g(the)g(noise)g(source.)536
1002 y(The)33 b(form)m(ulation)e(can)j(b)s(e)e(e\016cien)m(tly)h
(extended)g(to)g(handle)f(m)m(ultiple)e(noise)j(sources)g(b)m(y)g(uti-)
300 1228 y(lizing)40 b(v)-5 b(arious)41 b(net)m(w)m(ork)i(analysis)e
(tec)m(hniques,)k(under)40 b(the)j(assumption)d(that)j(noise)e(sources)
i(are)300 1453 y(statistically)29 b(indep)s(enden)m(t)g(and)g(that)i
(the)g(sup)s(erp)s(osition)c(principle)g(can)j(b)s(e)g(applied.)536
1679 y(The)38 b(c)m(hapter)h(is)e(organized)h(as)h(follo)m(ws.)64
b(In)37 b(Sec.)i(5.2,)i(the)e(de\014nitions)d(of)i(the)h(elemen)m(ts)f
(in)300 1905 y(a)i(\\real")f(and)g(\\ideal")g(SCN)f(are)h(giv)m(en.)67
b(In)39 b(Sec.)g(5.3,)k(the)c(basic)g(principles)d(for)i(computing)h
(the)300 2131 y(output)g(noise)f(PSD)h(of)g(ideal)f(SCN's)h(are)h
(summarized.)65 b(Sec.)40 b(5.4)g(presen)m(ts)f(the)g(form)m(ulation)f
(for)300 2357 y(the)h(white)f(noise)g(input.)63 b(In)38
b(Sec.)h(5.5)h(it)e(is)g(sho)m(wn)g(that)h(the)g(the)f(output)h(noise)f
(PSD)g(computed)300 2583 y(for)33 b(an)f(\\ideal")h(SCN)f(is)f(a)i(go)s
(o)s(d)g(appro)m(ximation)f(to)h(the)g(output)f(noise)h(PSD)f(of)h(a)g
(\\real")g(SCN.)g(In)300 2808 y(Sec.)i(5.6,)h(three)f(examples)e(are)i
(presen)m(ted)f(in)f(whic)m(h)g(the)i(prop)s(osed)d(form)m(ulation)h
(is)h(con\014rmed)f(b)m(y)300 3034 y(ph)m(ysical)28 b(measuremen)m(ts.)
41 b(In)29 b(Sec.)h(5.7,)h(the)f(noise)e(form)m(ulation)h(for)g(1)p
FG(=f)40 b FH(noise)29 b(source)g(is)g(presen)m(ted)300
3260 y(together)h(with)e(an)h(example)f(con)m(taining)h(ph)m(ysical)e
(measuremen)m(ts.)41 b(The)28 b(tec)m(hniques)h(for)f(e\016cien)m(tly)
300 3486 y(computing)h(output)h(noise)g(PSD)g(due)g(to)h(m)m(ultiple)d
(noise)i(sources)g(are)h(discussed)e(in)g(Sec.)i(5.8.)300
3772 y FL(5.2)135 b(Net)l(w)l(ork)47 b(de\014nitions)300
4088 y FH(The)34 b(net)m(w)m(ork)h(elemen)m(ts)f(considered)f(in)g
(this)g(form)m(ulation)g(are)i(sho)m(wn)e(in)g(Fig.)i(5.1.)53
b(A)34 b(distinction)300 4314 y(is)c(made)h(b)s(et)m(w)m(een)h(the)f
(\\ideal")g(SCN)f(and)h(\\real")g(or)h(\\lossy")f(SCN.)f(The)h
(\\ideal")g(SCN)f(consists)h(of)300 4540 y(ideal)f(switc)m(hes,)h
(capacitors)h(and)e(opamps.)43 b(The)30 b(opamp)h(can)g(b)s(e)g(mo)s
(deled)e(as)j(a)f(V)m(CVS)g(with)f(\014nite)300 4766
y(gain)i(or)h(as)g(an)g(ideal)e(opamp)h(with)g(in\014nite)e(gain.)48
b(In)32 b(a)h(\\real")g(SCN,)f(the)h(elemen)m(ts,)h(other)f(than)g(a)
300 4991 y(capacitor,)e(ha)m(v)m(e)g(a)f(\\loss")h FG(\025)e
FH(asso)s(ciated)i(with)d(them.)41 b(\(See)30 b(Fig.)g(5.1.\))42
b(Eac)m(h)31 b(lossy)e(elemen)m(t)h(will)e(b)s(e)300
5217 y(discussed)g(in)g(detail)h(b)s(elo)m(w.)40 b(Note)31
b(that)g(when)e FG(\025)h FH(is)e(set)j(to)f(zero,)h(the)g(lossy)e
(elemen)m(ts)h(b)s(ecome)g(ideal)p eop
%%Page: 98 111
98 110 bop 3809 -200 a FH(98)300 99 y(elemen)m(ts.)536
324 y(The)28 b(noise)g(sources)h(considered)e(in)g(this)g(form)m
(ulation)h(are)h(the)f(noise)g(from)g(the)h(series)f(resistor)300
550 y(of)g(a)h(switc)m(h)f(and)g(the)g(input-referred)e(noise)i(of)g
(the)h(opamp)f(as)h(sho)m(wn)e(in)g(Fig.)i(5.2.)41 b(The)28
b(switc)m(h)g(and)300 776 y(the)f(opamp)g(b)s(oth)f(ha)m(v)m(e)j(a)e
(white)g(noise)f(comp)s(onen)m(t)h(whose)g(PSD)g(is)f(denoted)i(as)f
FG(S)3235 791 y FB(w)r(hite)3441 776 y FH(and)g(has)g(the)300
1002 y(general)j(form)1792 1228 y FG(S)1848 1243 y FB(w)r(hite)2052
1228 y FH(=)25 b(4)2195 1204 y(^)2193 1228 y FG(k)2262
1205 y FH(^)2244 1228 y FG(T)13 b(\022)s(\025)1304 b
FH(\(5.1\))300 1496 y(where)564 1472 y(^)562 1496 y FG(k)33
b FH(is)28 b(the)i(Boltzmann-constan)m(t,)1760 1473 y(^)1742
1496 y FG(T)42 b FH(is)29 b(the)h(absolute)f(temp)s(erature)g(in)f
(Kelvins,)g FG(\022)k FH(is)c(a)i(device)300 1722 y(dep)s(enden)m(t)36
b(constan)m(t,)k(and)d FG(\025)g FH(is)f(the)h(\\loss")g(of)g(the)h
(device.)60 b(The)37 b(opamp,)h(also)f(has)g(a)g(1)p
FG(=f)48 b FH(noise)300 1948 y(comp)s(onen)m(t)31 b(whose)f(PSD)g(is)f
(denoted)i(b)m(y)f FG(S)1862 1966 y FA(1)p FB(=f)2008
1948 y FH(and)g(has)g(the)h(form)1888 2242 y FG(S)1944
2260 y FA(1)p FB(=f)2085 2242 y FH(=)2217 2180 y FG(\013)p
2191 2221 111 4 v 2191 2304 a Fz(j)p FG(!)s Fz(j)3713
2242 y FH(\(5.2\))300 2536 y(where)i FG(\013)h FH(is)f(a)h(pro)s(cess)f
(dep)s(enden)m(t)g(constan)m(t)i(of)f(the)g(opamp)f(and)g
FG(!)k FH(is)c(the)h(frequency)f(in)f(radians.)300 2762
y(It)i(is)g(imp)s(ortan)m(t)f(to)i(note)g(that)g(the)f(white)g(noise)g
(comp)s(onen)m(t)g(is)f(dep)s(enden)m(t)h(on)g(the)g(loss)g
FG(\025)g FH(and)g(is)300 2987 y FC(zer)-5 b(o)33 b FH(in)e(the)h
(ideal)e(SCN,)i(while)e(the)i(1)p FG(=f)42 b FH(comp)s(onen)m(t)32
b(is)f(indep)s(enden)m(t)e(of)j(the)h(loss)e(and)g(is)g(not)h(zero)300
3213 y(in)d(the)i(ideal)e(SCN.)300 3439 y FD(Ideal)34
b(SCN)h(equations.)p 300 3470 1020 4 v 300 3665 a FH(The)g(ideal)f(SCN)
h(is)g(represen)m(ted)g(b)m(y)g(the)h(state)h(c)m(harge)g(v)-5
b(ariable)34 b(equations)h(that)h(w)m(ere)g(de\014ned)e(in)300
3891 y(Sec.)d(3.3.)1287 4185 y FD(q)1342 4199 y FB(nN)7
b FA(+)p FB(i)1615 4185 y FH(=)82 b FD(A)1847 4199 y
FB(i)1876 4185 y FD(q)1931 4199 y FB(nN)7 b FA(+)p FB(i)p
Fv(\000)p FA(1)2230 4185 y FH(+)20 b FD(b)2379 4199 y
FB(i)2407 4185 y FG(u)p FH(\()p FG(nT)33 b FH(+)20 b
FG(t)2759 4199 y FB(i)p Fv(\000)p FA(1)2877 4185 y FH(\))801
b(\(5.3\))1380 4436 y FG(y)s FH(\()p FG(t)p FH(\))84
b(=)e FD(c)1814 4398 y FB(t)1814 4458 y(i)1844 4436 y
FD(q)1899 4450 y FB(nN)7 b FA(+)p FB(i)2109 4436 y FH(+)20
b FG(D)2275 4450 y FB(i)2303 4436 y FG(u)p FH(\()p FG(t)p
FH(\))p FG(;)1230 b FH(\(5.4\))300 4730 y(where)38 b
FG(u)p FH(\()p FG(t)p FH(\))g(represen)m(ts)g(the)g(noise)g(input)e
(with)g(PSD)i FG(S)2340 4744 y FB(u)2423 4730 y FH(and)f
FG(y)s FH(\()p FG(t)p FH(\))i(represen)m(ts)f(the)g(noise)f(output)300
4956 y(with)26 b(PSD)h FG(S)769 4970 y FB(y)810 4956
y FH(.)40 b(In)27 b(this)f(form)m(ulation,)h(only)g(one)g(noise)g
(input)f(and)h(output)g(is)f(considered,)h(therefore,)300
5181 y(the)37 b(matrices)g FD(B)908 5195 y FB(i)974 5181
y FH(and)g FD(C)1234 5195 y FB(i)1298 5181 y FH(in)f(\(3.24\))k(and)c
(\(3.25\))k(b)s(ecome)d(v)m(ectors)i FD(b)2840 5195 y
FB(i)2905 5181 y FH(and)d FD(c)3134 5195 y FB(i)3163
5181 y FH(,)j(while)c(the)j(matrix)300 5407 y FD(D)380
5421 y FB(i)441 5407 y FH(b)s(ecomes)33 b(the)g(scalar)g
FG(D)1300 5421 y FB(i)1328 5407 y FH(.)48 b(The)32 b(switc)m(hing)g(is)
g(p)s(erio)s(dic)e(as)j(de\014ned)e(in)h(Sec.)h(3.1)h(where)e
FG(T)46 b FH(is)32 b(the)p eop
%%Page: 99 112
99 111 bop 3809 -200 a FH(99)404 506 y
 26773176 20392346 526254 31312117 27299430 51704463 startTexFig
 404 506 a
%%BeginDocument: figs/noise_elm.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      696 312 moveto (1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      225 96 moveto
      197 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      273 96 moveto
      305 96 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 271 96 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 271 96 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 223 96 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 223 96 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      225 96 moveto
      265 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      259 168 moveto
      256.33 184.67 256.33 201.67
      259 219 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      211 193 moveto
      245 193 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      245 168 moveto
      245 219 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      257 193 moveto
      291 193 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      24 102 moveto (Switch) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      24 198 moveto (Capacitor) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      24 406 moveto (Opamp) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      686 106 moveto (R) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      707 348 moveto (0) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      691 342 moveto (w) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      680 320 moveto
      728 320 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      696 472 moveto (1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      680 480 moveto
      728 480 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      691 504 moveto (G) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      564 96 moveto
      577 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      564 96 moveto
      551 96 lineto
      547 87 lineto
      541 105 lineto
      537 87 lineto
      530 105 lineto
      524 87 lineto
      519 105 lineto
      512 87 lineto
      507 105 lineto
      503 96 lineto
      492 96 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      518 82 moveto (R) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      419 96 moveto
      391 96 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      467 96 moveto
      499 96 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 465 96 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 465 96 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 417 96 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 417 96 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      419 96 moveto
      459 72 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      492 168 moveto
      489.33 184.67 489.33 201.67
      492 219 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      444 193 moveto
      478 193 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      478 168 moveto
      478 219 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      490 193 moveto
      524 193 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      444 288 moveto
      508 320 lineto
      444 352 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      508 320 moveto
      540 320 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      444 308 moveto
      420 308 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      444 332 moveto
      420 332 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      446 314 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      449 329 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      492 380 moveto (0) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      478 373 moveto (A) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      519 380 moveto (0) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      503 374 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      535 412 moveto (0) show
   grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      479 406 moveto (w + w) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      468 405 moveto ( j) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      468 384 moveto
      548 384 lineto
   stroke
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      461 448 moveto
      501 464 lineto
      501 496 lineto
      461 512 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      501 480 moveto
      525 480 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      461 467 moveto
      437 467 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      461 496 moveto
      437 496 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      466 492 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      463 472 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      480 488 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      469 542 moveto (VCCS) show
   grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      215 440 moveto
      279 472 lineto
      215 504 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      279 472 moveto
      311 472 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      215 460 moveto
      191 460 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      215 484 moveto
      191 484 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      217 466 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      220 481 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      239 534 moveto (ideal) show
   grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      215 288 moveto
      279 320 lineto
      215 352 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      279 320 moveto
      311 320 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      215 308 moveto
      191 308 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      215 332 moveto
      191 332 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      217 314 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      220 329 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      231 374 moveto (VCVS) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      24 38 moveto (Element) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      200 38 moveto (Ideal SCN) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      424 38 moveto (Real SCN) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      632 38 moveto (Loss) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 16 moveto
      128 560 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      16 48 moveto
      736 48 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      352 16 moveto
      352 560 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      608 16 moveto
      608 560 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      136 400 moveto
      -40 40 atan dup cos 8 mul 176 exch sub
      exch sin 8 mul 360 exch sub lineto
   stroke
grestore
gsave
   newpath
      176 360 8 3 40 -40 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      136 408 moveto
      32 40 atan dup cos 8 mul 176 exch sub
      exch sin 8 mul 440 exch sub lineto
   stroke
grestore
gsave
   newpath
      176 440 8 3 40 32 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Symbol findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      691 38 moveto (l) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      244 332 moveto (0) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      230 325 moveto (A) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Sep 11 10:42:34 1998
%%EndDocument

 endTexFig
 704 3435 a FH(Figure)30 b(5.1:)41 b(De\014nition)29
b(of)i(elemen)m(ts)g(considered)e(in)g(the)h(noise)g(form)m(ulation)325
3611 y
 28023030 7367557 131563 43810652 28154593 51178209 startTexFig
 325 3611 a
%%BeginDocument: figs/noise_src.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      234 112 moveto
      247 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      234 112 moveto
      221 112 lineto
      217 103 lineto
      211 121 lineto
      207 103 lineto
      200 121 lineto
      194 103 lineto
      189 121 lineto
      182 103 lineto
      177 121 lineto
      173 112 lineto
      162 112 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      188 98 moveto (R) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      35 112 moveto
      7 112 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      83 112 moveto
      115 112 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 81 112 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 81 112 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 33 112 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 33 112 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      35 112 moveto
      75 88 lineto
   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      663 94 moveto
      727 126 lineto
      663 158 lineto
   closepath stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      727 126 moveto
      759 126 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      663 114 moveto
      639 114 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      663 138 moveto
      639 138 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      665 120 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      668 135 moveto (_) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 136 112 24 24 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      108 210 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      123 214 moveto (white) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      100 49 moveto (Switch) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      516 49 moveto (Opamp) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 472 114 24 24 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 568 114 24 24 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      496 114 moveto
      544 114 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      592 114 moveto
      640 114 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      400 114 moveto
      448 114 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      436 210 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      451 214 moveto (white) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      548 210 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      563 214 moveto (1/f) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      456 184 moveto
      -40 16 atan dup cos 10 mul 472 exch sub
      exch sin 10 mul 144 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      472 144 10 4 16 -40 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      560 184 moveto
      -40 8 atan dup cos 10 mul 568 exch sub
      exch sin 10 mul 144 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      568 144 10 4 8 -40 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 184 moveto
      -40 8 atan dup cos 10 mul 136 exch sub
      exch sin 10 mul 144 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      136 144 10 4 8 -40 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Sep 11 10:44:49 1998
%%EndDocument

 endTexFig
 634 4891 a FH(Figure)f(5.2:)42 b(De\014nition)29 b(of)i(noise)f
(sources)g(considered)f(in)g(the)i(noise)f(form)m(ulation)p
eop
%%Page: 100 113
100 112 bop 3764 -200 a FH(100)1025 7 y
 16971694 7630684 5328322 40126873 22300016 47757557 startTexFig
 1025 7 a
%%BeginDocument: figs/noise_net.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      256 168 moveto 544 168 lineto 544 320 lineto 256 320 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 200 240 16 16 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 224 moveto
      200 192 lineto
      256 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 256 moveto
      200 288 lineto
      256 288 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      148 247 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      162 253 moveto (u) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      530 213 moveto
      60 0 atan dup cos 10 mul 530 exch sub
      exch sin 10 mul 273 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      530 273 10 4 0 60 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      484 243 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      517 235 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      503 235 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      503 244 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      536 191 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      536 278 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      282 213 moveto
      60 0 atan dup cos 10 mul 282 exch sub
      exch sin 10 mul 273 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      282 273 10 4 0 60 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      300 243 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      333 235 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      319 235 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      319 244 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      288 191 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      288 278 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      544 192 moveto
      600 192 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      544 288 moveto
      600 288 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      376 214 moveto (A) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      396 217 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      416 214 moveto (B) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      436 217 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      376 254 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      396 257 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      416 254 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      436 257 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      400 294 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      412 297 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      312 142 moveto (Original ideal SCN) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      572 247 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      586 253 moveto (y) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sun Oct 25 16:11:01 1998
%%EndDocument

 endTexFig
 860 1320 a FH(Figure)30 b(5.3:)42 b(Ideal)30 b(SCN)f(with)g(net)m(w)m
(ork)j(equations)e(\(5.4\))i(and)e(\(5.3\))300 1600 y(switc)m(hing)23
b(p)s(erio)s(d,)g FG(N)34 b FH(is)24 b(the)g(n)m(um)m(b)s(er)f(of)i
(phases,)g FG(i)g Fz(2)g(f)p FH(1)p FG(;)15 b FH(2)p
FG(;)g(:)g(:)g(:)k(;)c(N)10 b Fz(g)25 b FH(and)e FG(n)i
Fz(2)g(f)p FH(0)p FG(;)15 b Fz(\006)p FH(1)p FG(;)g Fz(\006)p
FH(2)p FG(;)g(:)g(:)g(:)s Fz(g)p FH(.)39 b(The)300 1826
y(v)m(ector)31 b FD(q)627 1840 y FB(nN)7 b FA(+)p FB(i)845
1826 y FH(is)28 b(the)h(state)i(c)m(harge)f(v)-5 b(ariable)28
b(v)m(ector)j(\(3.19\))g(during)c(in)m(terv)-5 b(al)29
b FG(I)3124 1840 y FB(nN)7 b FA(+)p FB(i)3313 1826 y
FH(.)40 b(This)27 b(net)m(w)m(ork)300 2052 y(is)i(illustrated)g(in)g
(Fig.)h(5.3)i(and)d(it)h(will)e(b)s(e)i(referred)f(to)j(as)e(the)h
FC(original)g FH(ideal)e(SCN.)300 2277 y FD(Lossy)36
b(Switc)m(h.)p 300 2308 669 4 v 300 2503 a FH(A)41 b(lossy)f(switc)m(h)
g(is)f(mo)s(deled)h(b)m(y)g(an)h(ideal)e(switc)m(h)h(in)f(series)h
(with)g(a)h(resistor)e(of)i(v)-5 b(alue)40 b FG(R)i FH(and)e(a)300
2729 y(v)m(oltage)34 b(noise)e(source)h(with)e(single-sided)g(PSD)h(of)
h FG(S)2200 2744 y FB(w)r(hite)2408 2729 y FH(=)c(4)2555
2705 y(^)2553 2729 y FG(k)2621 2706 y FH(^)2603 2729
y FG(T)13 b(R)q FH(.)47 b(In)32 b(an)g(ideal)g(SCN,)g
FG(R)h FH(is)f(zero,)300 2955 y(therefore,)f(it)f(is)f(considered)h(as)
g(the)h(loss.)40 b(The)30 b(parameters)g(in)f(\(5.1\))k(for)d(the)g
(case)i(of)e(a)h(switc)m(h)f(are)1513 3272 y FG(\025)c
FH(=)f FG(R)273 b FH(and)f FG(\022)28 b FH(=)d(1)p FG(:)1027
b FH(\(5.5\))300 3815 y FD(Lossy)36 b(opamp)e({)h(V)m(CVS.)p
300 3846 1069 4 v 300 4041 a FH(A)30 b(lossy)g(V)m(CVS)g(is)g(mo)s
(deled)f(b)m(y)h(an)h(opamp)f(with)f(a)h(single)f(p)s(ole)h(transfer)g
(function)1998 4296 y FG(A)2066 4310 y FA(0)2106 4296
y FG(!)2163 4310 y FA(0)p 1945 4337 310 4 v 1945 4420
a FG(j)5 b(!)24 b FH(+)c FG(!)2216 4434 y FA(0)3713 4358
y FH(\(5.6\))300 4675 y(where)34 b FG(A)635 4689 y FA(0)709
4675 y FH(is)f(the)i(DC)f(gain)g(and)g FG(!)1573 4689
y FA(0)1647 4675 y FH(is)f(the)i(p)s(ole)e(frequency)-8
b(.)53 b(The)34 b(white)f(noise)h(comp)s(onen)m(t)h(of)g(its)300
4901 y(input)c(referred)i(noise)f(has)h(a)h(single-sided)d(PSD)i
FG(S)2119 4916 y FB(w)r(hite)2328 4901 y FH(=)d(4)2476
4877 y(^)2474 4901 y FG(k)2542 4878 y FH(^)2524 4901
y FG(T)13 b(\027)6 b(=!)2743 4915 y FA(0)2782 4901 y
FH(,)34 b(where)f FG(\027)39 b FH(is)32 b(a)i(constan)m(t)g(that)300
5127 y(dep)s(ends)i(on)i(the)h(top)s(ology)f(of)g(the)h(opamp)e(and)h
(the)g(tec)m(hnology)-8 b(.)66 b(In)37 b(Sec.)i(5.5)g(it)f(will)d(b)s
(e)j(sho)m(wn)300 5352 y(that)g(it)g(is)f(not)h(necessary)g(to)g(kno)m
(w)g(the)g(v)-5 b(alue)37 b(for)h FG(\027)43 b FH(as)38
b(long)g(as)g(the)g(v)-5 b(alues)37 b(for)h FG(S)3373
5367 y FB(w)r(hite)3590 5352 y FH(and)f(the)p eop
%%Page: 101 114
101 113 bop 3764 -200 a FH(101)300 99 y(gain-bandwidth)30
b(pro)s(duct)i FG(A)1366 113 y FA(0)1405 99 y FG(!)1462
113 y FA(0)1534 99 y FH(are)i(giv)m(en.)48 b(In)32 b(the)h(ideal)f(net)
m(w)m(ork)i FG(!)2870 113 y FA(0)2938 99 y FH(=)c Fz(1)p
FH(,)j(therefore,)h(the)g(loss)300 324 y(is)29 b(de\014ned)h(as)g(1)p
FG(=!)963 338 y FA(0)1003 324 y FH(.)41 b(The)30 b(parameters)g(in)f
(\(5.1\))k(for)d(the)g(case)i(of)e(the)h(V)m(CVS)f(are)1455
641 y FG(\025)25 b FH(=)g(1)p FG(=!)1776 655 y FA(0)2089
641 y FH(and)272 b FG(\022)27 b FH(=)e FG(\027)q(:)968
b FH(\(5.7\))300 959 y(The)29 b(1)p FG(=f)40 b FH(comp)s(onen)m(t)29
b(of)h(the)g(input)d(referred)i(noise)g(is)g(simply)e(giv)m(en)i(b)m(y)
h(\(5.2\))h(where)e(the)h(constan)m(t)300 1184 y FG(\013)h
FH(m)m(ust)f(b)s(e)g(sp)s(eci\014ed.)300 1410 y FD(Lossy)36
b(opamp)e({)h(V)m(CCS.)p 300 1441 1066 4 v 300 1636 a
FH(The)29 b(ideal)f(opamp)h(of)h(the)g(ideal)e(SCN,)h(corresp)s(onds)f
(to)i(a)g(v)m(oltage-con)m(trolled)h(curren)m(t)f(source)f(with)300
1862 y(a)k(\014nite)e(transconductance)i FG(G)f FH(in)f(the)i(lossy)f
(net)m(w)m(ork.)47 b(The)32 b(white)g(noise)g(comp)s(onen)m(t)g(of)h
(its)f(input)300 2088 y(referred)f(noise)g(has)g(a)h(single-sided)d
(PSD)j FG(S)1864 2103 y FB(w)r(hite)2070 2088 y FH(=)27
b(4)2215 2064 y(^)2213 2088 y FG(k)2281 2065 y FH(^)2264
2088 y FG(T)12 b(\027)6 b(=G)32 b FH(where)f(the)h(noise)f(factor)h
FG(\027)37 b FH(is)31 b(a)h(giv)m(en)300 2314 y(tec)m(hnology)e(dep)s
(enden)m(t)d(parameter.)40 b(In)28 b(the)h(ideal)e(net)m(w)m(ork)i
FG(G)c FH(=)g Fz(1)j FH(therefore,)h(the)g(loss)f(is)f(de\014ned)300
2539 y(as)k(1)p FG(=G)p FH(.)41 b(The)30 b(parameters)g(in)f(\(5.1\))j
(for)f(the)f(case)i(of)e(the)h(ideal)e(opamp)h(are)1467
2856 y FG(\025)25 b FH(=)g(1)p FG(=G)273 b FH(and)g FG(\022)27
b FH(=)e FG(\027)q(:)980 b FH(\(5.8\))300 3174 y(Just)33
b(lik)m(e)f(in)h(the)g(case)i(of)e(the)h(V)m(CVS,)f(the)h(1)p
FG(=f)44 b FH(comp)s(onen)m(t)33 b(of)h(the)g(input)d(referred)i(noise)
f(is)h(giv)m(en)300 3399 y(b)m(y)d(\(5.2\).)300 3686
y FL(5.3)135 b(Basic)45 b(principles)300 4002 y FH(Giv)m(en)37
b(a)g(linear)e(p)s(erio)s(dically)f(time)i(v)-5 b(arying)36
b(\(LPTV\))h(system)g(with)f(p)s(erio)s(d)e FG(T)13 b
FH(,)39 b(if)d(the)h(input)e(is)h(a)300 4228 y(stationary)25
b(sto)s(c)m(hastic)g(pro)s(cess)f(whose)g(PSD)g(is)g(de\014ned)f(as)h
FG(S)2474 4242 y FB(u)2519 4228 y FH(\()p FG(!)s FH(\),)i(the)f(output)
f(is)f(a)i(cyclostationary)300 4453 y(pro)s(cess)30 b(whose)g(PSD)g
FG(S)1153 4467 y FB(y)1194 4453 y FH(\()p FG(!)s FH(\))h(is)f([21)q(,)g
(28)q(,)h(70)q(])1354 4771 y FG(S)1410 4785 y FB(y)1451
4771 y FH(\()p FG(!)s FH(\))26 b(=)1780 4665 y Fv(1)1755
4690 y Ft(X)1703 4868 y FB(n)p FA(=)p Fv(\0001)1942 4771
y Fz(j)p FG(H)2043 4785 y FB(n)2089 4771 y FH(\()p FG(!)s
FH(\))p Fz(j)2245 4729 y FA(2)2300 4771 y FG(S)2356 4785
y FB(u)2401 4771 y FH(\()p FG(!)d Fz(\000)d FG(n!)2719
4785 y FB(s)2755 4771 y FH(\))30 b(,)868 b(\(5.9\))300
5088 y(where)35 b FG(!)625 5102 y FB(s)695 5088 y FH(=)e(2)p
FG(\031)s(=T)49 b FH(and)35 b FG(H)1304 5102 y FB(n)1351
5088 y FH(\()p FG(!)s FH(\))h(is)e(the)i(frequency)f(domain)f(transfer)
h(function)f(de\014ned)g(the)i(same)300 5313 y(w)m(a)m(y)g(as)g(in)e
(\(3.39\))k(for)d(frequency-domain)f(analysis)g(\(Chapter)h(3\).)56
b(The)35 b(expression)f(for)h FG(H)3626 5327 y FB(n)3673
5313 y FH(\()p FG(!)s FH(\))h(is)p eop
%%Page: 102 115
102 114 bop 3764 -200 a FH(102)300 99 y([66)q(])1373
324 y FG(H)1449 338 y FB(n)1496 324 y FH(\()p FG(!)s
FH(\))26 b(=)1768 263 y(1)p 1757 303 66 4 v 1757 387
a FG(T)1848 209 y Ft(Z)1931 236 y FB(t)1894 398 y FA(0)1976
324 y FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))p
FG(e)2321 287 y FB(j)t FA(\()p FB(!)r Fv(\000)p FB(n!)2569
295 y Fu(s)2603 287 y FA(\))p FB(\034)2674 324 y FG(d\034)41
b FH(,)841 b(\(5.10\))300 590 y(where)27 b FG(H)7 b FH(\()p
FG(!)s(;)15 b(\034)10 b FH(\))28 b(is)f(the)h(F)-8 b(ourier)27
b(transform)f(of)i FG(h)p FH(\()p FG(t;)15 b(\034)10
b FH(\),)30 b(whic)m(h)c(is)h(the)g(system)h(resp)s(onse)e(to)j(a)f
(dela)m(y)m(ed)300 816 y(delta)38 b(function)f FG(\016)s
FH(\()p FG(t)26 b Fz(\000)f FG(\034)10 b FH(\).)65 b(When)37
b(the)i(input)d(noise)h(is)h(white,)h FC(i.e.)63 b FG(S)2856
830 y FB(u)2901 816 y FH(\()p FG(!)s FH(\))38 b(=)g FG(S)3234
830 y FB(u)3279 816 y FH(,)i(the)f(P)m(arsev)-5 b(al's)300
1042 y(relation)30 b([71)q(])g(can)h(b)s(e)f(applied)e(and)i(\(5.9\))i
(can)e(b)s(e)g(expressed)g(as)h([72)q(];)1480 1331 y
FG(S)1536 1345 y FB(y)1578 1331 y FH(\()p FG(!)s FH(\))25
b(=)g FG(S)1885 1345 y FB(x)1949 1269 y FH(1)p 1939 1310
V 1939 1393 a FG(T)2030 1216 y Ft(Z)2113 1242 y FB(t)2076
1404 y FA(0)2158 1331 y Fz(j)p FG(H)7 b FH(\()p FG(!)s(;)15
b(\034)10 b FH(\))p Fz(j)2512 1289 y FA(2)2567 1331 y
FG(d\034)40 b FH(.)949 b(\(5.11\))300 1620 y(F)-8 b(or)27
b(a)g(p)s(erio)s(dically)c(switc)m(hed)j(net)m(w)m(ork)h(suc)m(h)f(as)h
(the)f(\\real")h(SCN)f(or)h(the)f(ideal)f(SCN,)h(a)h(closed-form)300
1846 y(expression)33 b(for)g(\(5.11\))j(can)f(b)s(e)e(obtained.)50
b(In)33 b(App)s(endix)f(C)h(it)g(is)g(sho)m(wn)h(that)g(for)g(suc)m(h)f
(a)i(system,)300 2071 y FG(S)356 2085 y FB(y)427 2071
y FH(can)c(b)s(e)f(expressed)g(as;)1622 2297 y FG(S)1678
2311 y FB(y)1719 2297 y FH(\()p FG(!)s FH(\))c(=)1986
2274 y(^)1971 2297 y FG(S)2027 2311 y FB(y)2068 2297
y FH(\()p FG(!)s FH(\))21 b(+)2325 2274 y(~)2310 2297
y FG(S)2366 2311 y FB(y)2407 2297 y FH(\()p FG(!)s FH(\))p
FG(;)1106 b FH(\(5.12\))300 2563 y(where)586 2540 y(^)571
2563 y FG(S)627 2577 y FB(y)668 2563 y FH(\()p FG(!)s
FH(\))39 b(represen)m(ts)g(the)g(part)f(of)h(the)f(output)h(noise)f
(due)g(to)h(the)g(con)m(tin)m(uous)f(input-output)300
2789 y(path)30 b(and)704 2766 y(~)689 2789 y FG(S)745
2803 y FB(y)786 2789 y FH(\()p FG(!)s FH(\))h(represen)m(ts)f(the)h
(sampled-and-held)d(noise)h(comp)s(onen)m(t.)536 3015
y(When)h(the)h(input)d(is)i(a)h(stationary)f(white)g(noise)609
3281 y(^)593 3304 y FG(S)649 3318 y FB(y)691 3304 y FH(\()p
FG(!)s FH(\))25 b(=)g FG(S)998 3318 y FB(u)1063 3242
y FH(1)p 1053 3283 V 1053 3366 a FG(T)1177 3198 y FB(N)1148
3223 y Ft(X)1144 3407 y FB(k)r FA(=1)1288 3189 y Ft(Z)1371
3215 y FB(t)1396 3227 y Fu(k)1334 3377 y FB(\034)8 b
FA(=)p FB(t)1453 3389 y Fu(k)q Fr(\000)p Fs(1)1589 3185
y Ft(\022)1650 3206 y(\014)1650 3256 y(\014)1650 3306
y(\014)1702 3281 y FH(^)1678 3304 y FG(H)1754 3319 y
FB(k)1796 3304 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))2016
3206 y Ft(\014)2016 3256 y(\014)2016 3306 y(\014)2045
3233 y FA(2)2104 3304 y FH(+)20 b(2)p Fz(<)2321 3210
y Ft(n)2401 3281 y FH(~)2377 3304 y FG(H)2453 3319 y
FB(k)2495 3304 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))2740
3281 y(^)2715 3304 y FG(H)2798 3266 y Fv(\003)2791 3326
y FB(k)2838 3304 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))3058
3210 y Ft(o)3115 3185 y(\023)3191 3304 y FG(d\034)41
b FH(,)324 b(\(5.13\))300 3593 y(and)1344 3796 y(~)1329
3819 y FG(S)1385 3833 y FB(y)1426 3819 y FH(\()p FG(!)s
FH(\))26 b(=)f FG(S)1734 3833 y FB(u)1799 3757 y FH(1)p
1789 3798 V 1789 3881 a FG(T)1912 3713 y FB(N)1884 3738
y Ft(X)1879 3922 y FB(k)r FA(=1)2023 3704 y Ft(Z)2106
3730 y FB(t)2131 3742 y Fu(k)2069 3892 y FB(\034)8 b
FA(=)p FB(t)2188 3904 y Fu(k)q Fr(\000)p Fs(1)2325 3721
y Ft(\014)2325 3771 y(\014)2325 3821 y(\014)2376 3796
y FH(~)2352 3819 y FG(H)2428 3834 y FB(k)2470 3819 y
FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))2690 3721 y Ft(\014)2690
3771 y(\014)2690 3821 y(\014)2719 3747 y FA(2)2774 3819
y FG(d\034)807 b FH(\(5.14\))300 4084 y(where)28 b(sup)s(erscript)e
Fz(\003)j FH(denotes)h(complex)e(conjugate)i(and)e Fz(<f\001g)i
FH(represen)m(ts)e(the)h(real)f(part)h(of)g(a)g(com-)300
4310 y(plex)g(v)-5 b(alue.)536 4536 y(When)30 b(the)h(input)d(pro)s
(cess)i(is)g(a)g(stationary)h FC(non)p FH(-white)864
4802 y(^)849 4825 y FG(S)905 4839 y FB(y)946 4825 y FH(\()p
FG(!)s FH(\))25 b(=)1274 4719 y Fv(1)1249 4744 y Ft(X)1197
4923 y FB(n)p FA(=)p Fv(\0001)1436 4706 y Ft(\022)1497
4728 y(\014)1497 4777 y(\014)1497 4827 y(\014)1548 4802
y FH(^)1525 4825 y FG(H)1601 4839 y FB(n)1647 4825 y
FH(\()p FG(!)s FH(\))1777 4728 y Ft(\014)1777 4777 y(\014)1777
4827 y(\014)1805 4754 y FA(2)1865 4825 y FH(+)20 b(2)p
Fz(<)2082 4731 y Ft(n)2161 4802 y FH(^)2137 4825 y FG(H)2213
4839 y FB(n)2260 4825 y FH(\()p FG(!)s FH(\))2414 4802
y(~)2390 4825 y FG(H)2473 4788 y Fv(\003)2466 4848 y
FB(n)2513 4825 y FH(\()p FG(!)s FH(\))2643 4731 y Ft(o)2699
4706 y(\023)2775 4825 y FG(S)2831 4839 y FB(u)2891 4825
y FH(\()q FG(!)j Fz(\000)c FG(n!)3209 4839 y FB(s)3245
4825 y FH(\))46 b(,)317 b(\(5.15\))300 5114 y(and)1380
5317 y(~)1365 5340 y FG(S)1421 5354 y FB(y)1462 5340
y FH(\()p FG(!)s FH(\))26 b(=)1790 5234 y Fv(1)1765 5259
y Ft(X)1713 5438 y FB(n)p FA(=)p Fv(\0001)1952 5243 y
Ft(\014)1952 5292 y(\014)1952 5342 y(\014)2003 5317 y
FH(~)1979 5340 y FG(H)2055 5354 y FB(n)2102 5340 y FH(\()p
FG(!)s FH(\))2232 5243 y Ft(\014)2232 5292 y(\014)2232
5342 y(\014)2260 5269 y FA(2)2315 5340 y FG(S)2371 5354
y FB(u)2431 5340 y FH(\()p FG(!)d Fz(\000)d FG(n!)2749
5354 y FB(s)2785 5340 y FH(\))848 b(\(5.16\))p eop
%%Page: 103 116
103 115 bop 3764 -200 a FH(103)536 99 y(In)21 b([55)q(,)h(56)q(],)i
(the)e(expressions)e(for)1736 76 y(^)1712 99 y FG(H)1788
114 y FB(k)1830 99 y FH(\()p FG(!)s(;)15 b(\034)10 b
FH(\),)2124 76 y(~)2100 99 y FG(H)2176 114 y FB(k)2218
99 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\),)2512 76 y(^)2488
99 y FG(H)2564 113 y FB(n)2610 99 y FH(\()p FG(!)s FH(\))22
b(and)2954 76 y(~)2930 99 y FG(H)3006 113 y FB(n)3053
99 y FH(\()p FG(!)s FH(\))g(ha)m(v)m(e)h(b)s(een)e(deriv)m(ed)300
324 y(for)28 b(the)h(case)g(of)g(a)f(real)g(SCN.)g(In)g(App)s(endix)d
(B,)30 b(these)f(expressions)d(are)j(deriv)m(ed)f(for)g(the)g(ideal)f
(SCN.)300 606 y FL(5.4)135 b(Noise)46 b(analysis:)62
b(white)46 b(noise)f(input)300 812 y Fx(5.4.1)112 b(Using)38
b(the)f(ideal)f(net)m(w)m(ork)i(represen)m(tation)300
1096 y FH(In)c(this)f(section,)j(it)e(is)f(sho)m(wn)h(that)h(the)f
(expressions)f(for)h(the)h(output)f(noise)g(PSD)g FG(S)3352
1110 y FB(y)3393 1096 y FH(\()p FG(!)s FH(\))h(in)e(\(5.13\))300
1322 y(and)39 b(\(5.14\))i(for)e(the)h(ideal)e(SCN)g(in)g(Fig.)i(5.3)g
(cannot)g(b)s(e)f(deriv)m(ed)f(directly)g(from)h(the)g(ideal)g(state)
300 1548 y(equations)30 b(in)f(\(5.3\))j(and)e(\(5.4\).)536
1774 y(In)g(App)s(endix)e(B)i(it)g(is)g(sho)m(wn)f(that)i(for)f(the)h
(ideal)e(SCN,)843 2035 y(^)819 2058 y FG(H)895 2073 y
FB(k)937 2058 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))84
b(=)f FG(D)1470 2073 y FB(k)1513 2058 y FG(e)1555 2021
y Fv(\000)p FB(j)t(!)r(\034)1914 2058 y FH(and)1607 b(\(5.17\))843
2286 y(~)819 2309 y FG(H)895 2324 y FB(k)937 2309 y FH(\()p
FG(!)s(;)15 b(\034)10 b FH(\))84 b(=)f FD(f)1437 2272
y FB(t)1427 2332 y(k)1469 2309 y FH(\()p FG(!)s FH(\))p
FD(q)1654 2324 y FB(k)r FA(+1)1788 2309 y FH(\()p FG(\034)10
b FH(\))183 b(where)29 b FD(q)2408 2324 y FB(k)r FA(+1)2541
2309 y FH(\()p FG(\034)10 b FH(\))26 b(=)f FD(b)2841
2324 y FB(k)r FA(+1)2974 2309 y FG(\016)s FH(\()p FG(t)3085
2324 y FB(k)3149 2309 y Fz(\000)20 b FG(\034)10 b FH(\))31
b(.)287 b(\(5.18\))300 2594 y(Since)39 b(only)f(a)i(single)f(output)g
(is)g(considered)f(the)i(matrix)f FD(F)2502 2561 y FB(t)2502
2620 y(k)2544 2594 y FH(\()p FG(!)s FH(\))h(in)f(\(B.35\))j(b)s(ecomes)
d(the)h(v)m(ector)300 2819 y FD(f)342 2786 y FB(t)332
2846 y(k)375 2819 y FH(\()p FG(!)s FH(\))30 b(in)g(\(5.18\).)43
b(Substituting)27 b(\(5.17\))33 b(and)d(\(5.18\))i(in)m(to)f(\(5.13\))h
(and)e(\(5.14\))j(results)c(in)687 3197 y(^)672 3220
y FG(S)728 3234 y FB(y)769 3220 y FH(\()p FG(!)s FH(\))84
b(=)e FG(S)1192 3234 y FB(u)2299 2984 y FH(\014nite)1343
3036 y Ft(z)p 1380 3036 983 10 v 983 w(}|)p 2437 3036
V 983 w({)1363 3159 y FH(1)p 1353 3199 66 4 v 1353 3283
a FG(T)1477 3114 y FB(N)1448 3139 y Ft(X)1444 3324 y
FB(k)r FA(=1)1588 3126 y Ft(h)1627 3220 y Fz(j)p FG(D)1727
3235 y FB(k)1770 3220 y Fz(j)1796 3178 y FA(2)1850 3220
y FH(\()p FG(t)1918 3235 y FB(k)1981 3220 y Fz(\000)20
b FG(t)2105 3235 y FB(k)r Fv(\000)p FA(1)2238 3220 y
FH(\))2273 3183 y FA(2)2333 3220 y FH(+)g(2)p Fz(<)2550
3126 y Ft(n)2605 3220 y FG(D)2680 3235 y FB(k)2723 3220
y FD(f)2765 3183 y FB(t)2755 3243 y(k)2798 3220 y FH(\()p
FG(!)s FH(\))p FD(b)2986 3235 y FB(k)r FA(+1)3119 3220
y FG(e)3161 3183 y Fv(\000)p FB(j)t(!)r(t)3320 3195 y
Fu(k)3363 3126 y Ft(oi)3503 3220 y FH(,)140 b(\(5.19\))687
3502 y(~)672 3525 y FG(S)728 3539 y FB(y)769 3525 y FH(\()p
FG(!)s FH(\))84 b(=)e FG(S)1192 3539 y FB(u)1363 3463
y FH(1)p 1353 3504 V 1353 3587 a FG(T)1477 3419 y FB(N)1448
3444 y Ft(X)1444 3628 y FB(k)r FA(=1)1588 3427 y Ft(\014)1588
3477 y(\014)1588 3527 y(\014)1616 3525 y FD(f)1658 3487
y FB(t)1648 3547 y(k)1690 3525 y FH(\()p FG(!)s FH(\))p
FD(b)1878 3540 y FB(k)r FA(+1)2012 3427 y Ft(\014)2012
3477 y(\014)2012 3527 y(\014)2039 3454 y FA(2)2094 3410
y Ft(Z)2177 3436 y FB(t)2202 3448 y Fu(k)2140 3598 y
FB(\034)8 b FA(=)p FB(t)2259 3610 y Fu(k)q Fr(\000)p
Fs(1)2395 3525 y Fz(j)p FG(\016)s FH(\()p FG(t)2531 3540
y FB(k)2595 3525 y Fz(\000)20 b FG(\034)10 b FH(\))p
Fz(j)2797 3483 y FA(2)2851 3525 y FG(d\034)1343 3672
y Ft(|)p 1380 3672 729 10 v 729 w({z)p 2183 3672 V 729
w(})2007 3773 y FH(in\014nite)2994 3525 y(.)649 b(\(5.20\))536
3935 y(It)30 b(can)g(b)s(e)f(seen)h(from)f(\(5.19\))j(that)1807
3912 y(^)1792 3935 y FG(S)1848 3949 y FB(y)1889 3935
y FH(\()p FG(!)s FH(\))e(is)f(\014nite)g(if)f(the)i(input)e(noise)h
(PSD)g FG(S)3346 3949 y FB(u)3421 3935 y FH(is)f(\014nite.)40
b(On)300 4161 y(the)24 b(other)g(hand)f Fz(j)p FG(\016)s
FH(\()p FG(t)1038 4176 y FB(k)1102 4161 y Fz(\000)d FG(\034)10
b FH(\))p Fz(j)1304 4119 y FA(2)1367 4161 y FH(in)23
b(\(5.20\))j(manifests)d(to)h(the)h(w)m(ell-kno)m(wn)d(result)h(that)i
(the)f(output)f(PSD)300 4386 y(of)32 b(the)f(sampled)f(noise)1162
4364 y(~)1146 4386 y FG(S)1202 4400 y FB(y)1243 4386
y FH(\()p FG(!)s FH(\))i(is)f(in\014nite)e(for)i(an)m(y)h(\014nite)e
FG(S)2409 4400 y FB(u)2454 4386 y FH(.)44 b(Ho)m(w)m(ev)m(er,)34
b(as)e(sho)m(wn)f(in)f(Sec.)i(5.2,)h(the)300 4612 y(input-referred)28
b(noise)i(of)g FC(ide)-5 b(al)32 b FH(noise)e(sources)g(is)f(zero,)j
FC(i.)41 b(e.)g FG(S)2537 4626 y FB(u)2607 4612 y FH(=)25
b(0.)41 b(In)29 b(that)i(case,)h(from)e(\(5.19\),)1890
4874 y(^)1875 4897 y FG(S)1931 4911 y FB(y)1972 4897
y FH(\()p FG(!)s FH(\))c(=)f(0)31 b(,)1343 b(\(5.21\))300
5181 y(while)23 b(the)i(output)g(PSD)g(of)g(the)h(sampled)e(noise)2019
5158 y(~)2004 5181 y FG(S)2060 5195 y FB(y)2101 5181
y FH(\()p FG(!)s FH(\))i(in)e(\(5.20\))j(is)d(exp)s(ected)i(to)g(tak)m
(e)h(a)e(\014nite)f(v)-5 b(alue.)300 5407 y(In)m(tuitiv)m(ely)32
b(it)h(mak)m(es)i(sense)f(that)g(ev)m(en)g(if)f(the)h(input)e(noise)h
(PSD)g(go)s(es)h(to)h(zero,)g(the)f(output)g(noise)p
eop
%%Page: 104 117
104 116 bop 3764 -200 a FH(104)300 99 y(PSD)39 b(ma)m(y)h(b)s(e)f
(\014nite)g(due)g(to)h(the)f(in\014nite)f(foldo)m(v)m(er)i(e\013ect)h
(of)e(the)h(ideal)e(SCN)h(\(see)h(\(5.9\)\).)71 b(This)300
324 y(conjecture)26 b(will)d(b)s(e)i(pro)m(v)m(en)g(in)f(Sec.)i(5.4.3)i
(where)c(the)i(actual)g(expression)e(for)3063 301 y(~)3048
324 y FG(S)3104 338 y FB(y)3145 324 y FH(\()p FG(!)s
FH(\))i(will)d(b)s(e)i(deriv)m(ed.)536 550 y(T)-8 b(o)27
b(deriv)m(e)f(the)g(expression)f(for)1666 527 y(~)1651
550 y FG(S)1707 564 y FB(y)1748 550 y FH(\()p FG(!)s
FH(\))i(for)f(an)g(ideal)f(SCN,)h(the)g(losses)g(will)e(b)s(e)h(in)m
(tro)s(duced)g(in)m(to)300 776 y(the)33 b(form)m(ulation)g(and)f(then)h
(the)h(limit)d(as)i(the)h(losses)f(are)h(approac)m(hed)f(to)h(zero)g
(will)d(b)s(e)h(ev)-5 b(aluated.)300 1002 y(There)27
b(is)f(no)i(need)f(to)h(deriv)m(e)f(an)g(expression)f(for)2064
979 y(^)2048 1002 y FG(S)2104 1016 y FB(y)2145 1002 y
FH(\()p FG(!)s FH(\),)j(since)e(it)g(w)m(as)g(sho)m(wn)g(that)h(in)e
(an)h(ideal)g(SCN)300 1228 y(it)39 b(is)f(zero.)68 b(Note,)43
b(this)38 b(do)s(es)h FC(not)h FH(mean)f(that)h(the)f(form)m(ulation)f
(is)g(v)-5 b(alid)38 b(only)g(for)h(SCN's)f(where)300
1453 y FG(D)375 1467 y FB(i)429 1453 y FH(=)25 b(0.)41
b(\(This)29 b(p)s(oin)m(t)g(will)f(b)s(e)i(discussed)e(in)h(detail)h
(in)f(Example)g(3)i(of)f(Sec.)h(5.6\).)300 1697 y Fx(5.4.2)112
b(SCN)38 b(with)e(one)i(lossy)f(elemen)m(t)300 1981 y
FH(This)28 b(section)j(de\014nes)e(the)i(net)m(w)m(ork)g(equations)f
(of)g(the)g(SCN)g(in)f(whic)m(h)g(the)h(single)f(noisy)g(elemen)m(t)i
(is)300 2207 y(lossy)-8 b(,)30 b(while)f(the)h(rest)h(of)f(the)h
(elemen)m(ts)g(are)f(ideal.)536 2433 y(Fig.)c(5.4)g(illustrates)d(the)i
(noisy)f(comp)s(onen)m(t)i(with)d(its)i(loss,)g(its)g(noise)f(source,)j
(and)d(the)i(remain-)300 2659 y(ing)j(ideal)g(part)g(of)i(the)f(SCN,)f
(for)h(the)g(three)g(t)m(yp)s(es)g(of)g(noisy)f(elemen)m(ts)h
(considered)f(here.)40 b(The)30 b(noise)300 2885 y(input)e(is)i
(represen)m(ted)g(b)m(y)g(the)h(v)m(oltage)h(source)f
FG(u)p FH(\()p FG(t)p FH(\),)g(and)f(the)g(output)g(noise)g(is)f
FG(y)s FH(\()p FG(t)p FH(\).)536 3110 y(The)g(ideal)g(part)h(of)g(the)g
(SCN)f(can)h(b)s(e)f(c)m(haracterized)i(b)m(y)e(a)i(new)e(set)h(of)g
(state)h(c)m(harge)g(v)-5 b(ariable)300 3336 y(equations)27
b(with)g FG(z)t FH(\()p FG(t)p FH(\))h(as)g(input,)f(and)g
FG(w)r FH(\()p FG(t)p FH(\))i(and)e FG(y)s FH(\()p FG(t)p
FH(\))h(as)g(outputs.)40 b(T)-8 b(o)28 b(emphasize)f(their)g(dep)s
(endence)300 3562 y(on)38 b(the)g(loss)f FG(\025)p FH(,)j(the)e
(notation)g FG(z)t FH(\()p FG(t;)15 b(\025)p FH(\),)41
b FG(w)r FH(\()p FG(t;)15 b(\025)p FH(\),)41 b(and)c
FG(y)s FH(\()p FG(t;)15 b(\025)p FH(\))39 b(will)c(b)s(e)i(used.)62
b(Similarly)-8 b(,)37 b(the)h(input)300 3788 y(PSD)30
b FG(S)568 3802 y FB(u)643 3788 y FH(will)e(b)s(e)i(denoted)g(as)h
FG(S)1450 3802 y FB(u)1494 3788 y FH(\()p FG(\025)p FH(\).)42
b(The)30 b(state)h(equations)f(are;)1092 4105 y FD(q)1147
4119 y FB(nN)7 b FA(+)p FB(i)1336 4105 y FH(\()p FG(\025)p
FH(\))84 b(=)1713 4082 y(\024)1697 4105 y FD(A)1776 4119
y FB(i)1804 4105 y FD(q)1859 4119 y FB(nN)7 b FA(+)p
FB(i)p Fv(\000)p FA(1)2138 4105 y FH(\()p FG(\025)p FH(\))21
b(+)2379 4081 y(\024)2373 4105 y FD(b)2431 4119 y FB(i)2459
4105 y FG(z)t FH(\()p FG(nT)33 b FH(+)20 b FG(t)2805
4119 y FB(i)p Fv(\000)p FA(1)2924 4105 y FG(;)15 b(\025)p
FH(\))31 b(,)560 b(\(5.22\))1215 4356 y FG(y)s FH(\()p
FG(t;)15 b(\025)p FH(\))84 b(=)1697 4355 y(\024)1697
4356 y FD(c)1743 4318 y FB(t)1743 4378 y(i)1773 4356
y FD(q)1828 4370 y FB(nN)7 b FA(+)p FB(i)2017 4356 y
FH(\()p FG(\025)p FH(\))21 b(+)2273 4333 y(\024)2252
4356 y FG(D)2327 4370 y FB(i)2355 4356 y FG(z)t FH(\()p
FG(t;)15 b(\025)p FH(\))32 b(,)1014 b(\(5.23\))1195 4607
y FG(w)r FH(\()p FG(t;)15 b(\025)p FH(\))85 b(=)1697
4606 y(\023)1697 4607 y FD(c)1743 4569 y FB(t)1743 4629
y(i)1773 4607 y FD(q)1828 4621 y FB(nN)7 b FA(+)p FB(i)2017
4607 y FH(\()p FG(\025)p FH(\))21 b(+)2273 4584 y(\023)2252
4607 y FG(D)2327 4621 y FB(i)2355 4607 y FG(z)t FH(\()p
FG(t;)15 b(\025)p FH(\))1071 b(\(5.24\))300 4924 y(where)30
b FG(t)25 b Fz(2)g FG(I)747 4938 y FB(n;i)837 4924 y
FH(,)31 b(and)f FD(q)1125 4938 y FB(nN)7 b FA(+)p FB(i)1314
4924 y FH(\()p FG(\025)p FH(\))31 b(is)e(the)i(state)h(c)m(harge)f(v)m
(ector)h(b)s(elonging)d(to)i(the)f(lossy)g(SCN.)536 5150
y(The)e(single)e(noisy)i(elemen)m(t)g(and)f(its)h(loss)f(can)i(b)s(e)e
(represen)m(ted)h(b)m(y)g(the)g(\014rst-order)g(di\013eren)m(tial)p
eop
%%Page: 105 118
105 117 bop 3764 -200 a FH(105)954 310 y
 18089984 5262541 2105016 44797378 20195000 50059919 startTexFig
 954 310 a
%%BeginDocument: figs/noise_r.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
gsave
   2 setlinewidth
   newpath 129 109 16 16 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      129 141 moveto
      121 145 lineto
      137 149 lineto
      121 153 lineto
      137 157 lineto
      121 161 lineto
      137 165 lineto
      129 169 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      129 125 moveto
      129 137 lineto
      129 141 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      129 93 moveto
      129 65 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      129 65 moveto
      197 65 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      129 169 moveto
      129 185 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      129 185 moveto
      197 185 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      136 96 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      137 111 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      105 90 moveto
      48 0 atan dup cos 10 mul 105 exch sub
      exch sin 10 mul 138 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      105 138 10 4 0 48 tgifarrowtip
   closepath fill
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      281 57 moveto 465 57 lineto 465 193 lineto 281 193 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      385 117 moveto (Ideal) tgifcentertext show
      385 139 moveto (part) tgifcentertext show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      300 67 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      300 166 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      294 89 moveto
      60 0 atan dup cos 10 mul 294 exch sub
      exch sin 10 mul 149 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      294 149 10 4 0 60 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      193 106 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      210 109 moveto (in,i) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      197 117 moveto
      237 117 lineto
      229 109 lineto
      273 121 lineto
      229 133 lineto
      237 125 lineto
      197 125 lineto
      197 117 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      197 65 moveto
      281 65 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      105 166 moveto (R) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      299 118 moveto (z) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      321 118 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      62 117 moveto (u) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      84 117 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      465 65 moveto
      529 65 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      465 185 moveto
      529 185 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      197 185 moveto
      281 185 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      498 93 moveto
      60 0 atan dup cos 10 mul 498 exch sub
      exch sin 10 mul 153 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      498 153 10 4 0 60 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      508 131 moveto (y) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      527 132 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      456 63 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      456 166 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% OVAL
newpath 175 65 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 175 65 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 223 65 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 223 65 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      336 109 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      543 123 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      99 109 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      68 90 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      78 94 moveto (u) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sun Oct 18 14:26:23 1998
%%EndDocument

 endTexFig
 1502 1322 a FH(a\))31 b(SCN)f(with)f(one)i(lossy)e(switc)m(h.)1108
1473 y
 15656059 9998828 1315635 40850472 16971694 50849300 startTexFig
 1108 1473 a
%%BeginDocument: figs/noise_ota.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      380 150 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      291 150 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      160 40 moveto 392 40 lineto 392 176 lineto 160 176 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      288 90 moveto (Ideal) tgifcentertext show
      288 112 moveto (part) tgifcentertext show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      179 46 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      179 145 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      176 72 moveto
      60 0 atan dup cos 8 mul 176 exch sub
      exch sin 8 mul 132 exch sub lineto
   stroke
grestore
gsave
   newpath
      176 132 8 3 0 60 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      89 85 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      106 88 moveto (in,i) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      72 100 moveto
      112 100 lineto
      104 92 lineto
      148 104 lineto
      104 116 lineto
      112 108 lineto
      72 108 lineto
      72 100 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      161 160 moveto
      96 160 lineto
      96 188 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      240 188 moveto
      240 280 lineto
      176 268 lineto
      176 204 lineto
      240 188 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      160 52 moveto
      40 52 lineto
      40 232 lineto
      176 232 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      88 188 moveto
      104 188 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      201 242 moveto (G) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      136 246 moveto
      0 -52 atan dup cos 8 mul 84 exch sub
      exch sin 8 mul 246 exch sub lineto
   stroke
grestore
gsave
   newpath
      84 246 8 3 -52 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      336 290 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      346 294 moveto (u) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      232 258 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      236 197 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      240 200 moveto
      288 200 lineto
      288 176 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      240 268 moveto
      364 268 lineto
      364 176 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      358 158 moveto
      0 -60 atan dup cos 8 mul 298 exch sub
      exch sin 8 mul 158 exch sub lineto
   stroke
grestore
gsave
   newpath
      298 158 8 3 -60 0 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 314 268 22 22 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 314 268 22 22 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      280 236 moveto
      0 56 atan dup cos 8 mul 336 exch sub
      exch sin 8 mul 236 exch sub lineto
   stroke
grestore
gsave
   newpath
      336 236 8 3 56 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      392 52 moveto
      456 52 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      405 72 moveto
      60 0 atan dup cos 8 mul 405 exch sub
      exch sin 8 mul 132 exch sub lineto
   stroke
grestore
gsave
   newpath
      405 132 8 3 0 60 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      392 164 moveto
      456 164 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      40 280 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      56 278 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      157 278 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      118 270 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      330 260 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      309 262 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      380 41 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      183 102 moveto (z) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      205 102 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      294 225 moveto (u) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      316 225 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      420 103 moveto (y) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      439 104 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      220 93 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      455 95 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      331 217 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      121 279 moveto (u) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      143 279 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      158 271 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      66 279 moveto (w) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      91 279 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      106 270 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      314 151 moveto (w) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      339 151 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      354 142 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sun Oct 18 14:27:56 1998
%%EndDocument

 endTexFig
 1326 3086 a FH(b\))h(SCN)g(with)f(one)i(lossy)f(transconductor.)1113
3237 y
 15590277 10327736 460472 41574072 16050749 51901808 startTexFig
 1113 3237 a
%%BeginDocument: figs/noise_opamp.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      348 146 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      156 8 moveto 368 8 lineto 368 144 lineto 156 144 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      266 60 moveto (Ideal) tgifcentertext show
      266 83 moveto (part) tgifcentertext show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      175 14 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      175 113 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      171 40 moveto
      60 0 atan dup cos 10 mul 171 exch sub
      exch sin 10 mul 100 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      171 100 10 4 0 60 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      156 128 moveto
      72 128 lineto
      72 156 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 156 moveto
      80 156 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      333 130 moveto
      0 -60 atan dup cos 10 mul 273 exch sub
      exch sin 10 mul 130 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      273 130 10 4 -60 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      16 20 moveto
      16 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      16 208 moveto
      120 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      16 20 moveto
      156 20 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      332 220 moveto
      0 -44 atan dup cos 10 mul 288 exch sub
      exch sin 10 mul 220 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      288 220 10 4 -44 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      228 248 moveto
      356 248 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      356 248 moveto
      356 144 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      290 118 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      332 108 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      313 108 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      316 119 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      139 194 moveto

   stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      120 208 moveto
      228 156 lineto
      228 260 lineto
   closepath stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      174 198 moveto (A) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      185 202 moveto (0) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      164 220 moveto (j) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      194 208 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      170 218 moveto (w) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      194 197 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      206 202 moveto (0) show
   grestore

% TEXT
0 setgray
/Symbol findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      198 218 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      211 221 moveto (0) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      167 204 moveto
      215 204 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      220 230 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      223 169 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      228 168 moveto
      260 168 lineto
      260 144 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      339 270 moveto (S) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      350 274 moveto (u) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      368 16 moveto
      432 16 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      381 40 moveto
      60 0 atan dup cos 10 mul 381 exch sub
      exch sin 10 mul 100 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      381 100 10 4 0 60 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      368 132 moveto
      432 132 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      356 113 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      356 14 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      280 145 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% OVAL
newpath 308 248 20 20 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   2 setlinewidth
   newpath 308 248 20 20 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      309 241 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      324 243 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      179 70 moveto (z) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      201 70 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      290 205 moveto (u) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      312 205 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      388 71 moveto (y) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      407 72 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      216 60 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      423 62 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      327 196 moveto 180 rotate (\(  \)) show
      -180 rotate 
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Sep 11 15:26:42 1998
%%EndDocument

 endTexFig
 1496 4891 a FH(c\))h(SCN)f(with)f(one)h(lossy)g(opamp.)690
5087 y(Figure)g(5.4:)42 b(An)30 b(ideal)f(SCN)h(with)f(one)i(lossy)e
(elemen)m(t)i(and)f(the)g(noise)g(source)p eop
%%Page: 106 119
106 118 bop 3764 -200 a FH(106)300 99 y(equation;)1205
324 y FG(\025)1285 263 y(d)p 1268 303 81 4 v 1268 387
a(dt)1358 324 y(z)t FH(\()p FG(t;)15 b(\025)p FH(\))27
b(=)e FG(p)1769 338 y FA(1)p FB(;i)1852 324 y FG(z)t
FH(\()p FG(t;)15 b(\025)p FH(\))21 b(+)f FG(p)2252 338
y FA(2)p FB(;i)2335 324 y FG(u)p FH(\()p FG(t)p FH(\))h(+)e
FG(p)2647 338 y FA(3)p FB(;i)2730 324 y FG(w)r FH(\()p
FG(t;)c(\025)p FH(\))675 b(\(5.25\))300 599 y(where)38
b(the)h(co)s(e\016cien)m(ts)h FG(p)1251 613 y FA(1)p
FB(;i)1334 599 y FH(,)h FG(p)1446 613 y FA(2)p FB(;i)1568
599 y FH(and)d FG(p)1799 613 y FA(3)p FB(;i)1921 599
y FH(are)h(indep)s(enden)m(t)d(of)k FG(\025)p FH(,)h(and)d(are)h(p)s
(erio)s(dic)e(in)g FG(i)i FH(with)300 825 y(p)s(erio)s(d)h
FG(N)10 b FH(.)77 b(Note,)47 b(that)d(a)f(\014rst)e(order)h(di\013eren)
m(tial)f(equation)i(is)e(su\016cien)m(t)h(to)i(mo)s(del)d(the)i(lossy)
300 1050 y(elemen)m(ts)31 b(considered)e(here.)40 b(The)30
b(co)s(e\016cien)m(ts)h(for)g(the)f(sp)s(eci\014c)f(elemen)m(ts)i(are)g
(as)f(follo)m(ws.)300 1276 y FD(Switc)m(h)p 300 1289
336 4 v 300 1502 a FH(The)g(di\013eren)m(tial)f(equation)h(that)h(mo)s
(dels)e(the)h(lossy)g(switc)m(h)g(in)f(Fig.)i(5.4\(a\))h(is)1491
1809 y FG(u)p FH(\()p FG(t)p FH(\))20 b Fz(\000)g FG(R)q(C)1892
1823 y FB(in;i)2033 1747 y FG(d)p 2017 1788 81 4 v 2017
1871 a(dt)2107 1809 y(z)t FH(\()p FG(t)p FH(\))h Fz(\000)f
FG(z)t FH(\()p FG(t)p FH(\))26 b(=)f(0)p FG(:)959 b FH(\(5.26\))300
2115 y(where)31 b FG(C)629 2129 y FB(in;i)774 2115 y
FH(is)f(the)i(input)d(capacitance)j(of)g(the)f(ideal)f(part)h(of)g(the)
g(SCN)g(during)e(phase)h FG(i)p FH(,)i(as)g(sho)m(wn)300
2341 y(in)d(Fig.)i(5.4\(a\).)43 b(Comparing)29 b(\(5.26\))j(with)d
(\(5.25\))k(and)d(using)f FG(\025)c FH(=)g FG(R)q FH(,)30
b(results)f(in)g(the)i(co)s(e\016cien)m(ts:)1063 2648
y FG(p)1109 2662 y FA(1)p FB(;i)1217 2648 y FH(=)25 b
Fz(\000)1461 2586 y FH(1)p 1394 2627 180 4 v 1394 2710
a FG(C)1459 2724 y FB(in;i)1765 2648 y FG(;)198 b(p)2034
2662 y FA(2)p FB(;i)2142 2648 y FH(=)2315 2586 y(1)p
2248 2627 V 2248 2710 a FG(C)2313 2724 y FB(in;i)2619
2648 y FG(;)f(p)2887 2662 y FA(3)p FB(;i)2995 2648 y
FH(=)25 b(0)532 b(\(5.27\))300 2954 y FD(Opamp)33 b({)j
(transconductor.)p 300 2985 1220 4 v 300 3180 a FH(The)30
b(di\013eren)m(tial)f(equation)h(that)h(mo)s(dels)e(the)h(lossy)g
(transconductor)g(in)g(Fig.)g(5.4\(b\))i(is)1522 3487
y FG(C)1587 3501 y FB(in;i)1728 3425 y FG(d)p 1712 3466
81 4 v 1712 3549 a(dt)1802 3487 y(z)t FH(\()p FG(t)p
FH(\))26 b(=)f FG(G)p FH(\()p FG(w)r FH(\()p FG(t)p FH(\))c(+)f
FG(u)p FH(\()p FG(t)p FH(\)\))p FG(:)991 b FH(\(5.28\))300
3793 y(where)31 b FG(C)629 3807 y FB(in;i)774 3793 y
FH(is)f(the)i(input)d(capacitance)j(of)g(the)f(ideal)f(part)h(of)g(the)
g(SCN)g(during)e(phase)h FG(i)p FH(,)i(as)g(sho)m(wn)300
4019 y(in)d(Fig.)i(5.4\(b\).)42 b(Comparing)29 b(\(5.28\))j(with)d
(\(5.25\))k(and)d(using)f FG(\025)c FH(=)g(1)p FG(=G)31
b FH(results)e(in)1099 4326 y FG(p)1145 4340 y FA(1)p
FB(;i)1253 4326 y FH(=)c(0)182 b FG(;)197 b(p)1844 4340
y FA(2)p FB(;i)1952 4326 y FH(=)2125 4264 y(1)p 2058
4305 180 4 v 2058 4388 a FG(C)2123 4402 y FB(in;i)2430
4326 y FG(;)g(p)2698 4340 y FA(3)p FB(;i)2806 4326 y
FH(=)2979 4264 y(1)p 2912 4305 V 2912 4388 a FG(C)2977
4402 y FB(in;i)3668 4326 y FH(\(5.29\))300 4858 y FD(Opamp)33
b({)j(V)m(CVS.)p 300 4889 808 4 v 300 5084 a FH(The)30
b(di\013eren)m(tial)f(equation)h(that)h(mo)s(dels)e(the)h(lossy)g(V)m
(CVS)g(in)g(Fig.)g(5.4\(c\))j(is)1360 5390 y FG(A)1428
5404 y FA(0)1467 5390 y FG(!)1524 5404 y FA(0)1579 5390
y FH(\()p FG(u)p FH(\()p FG(t)p FH(\))21 b(+)f FG(w)r
FH(\()p FG(t)p FH(\)\))26 b(=)2235 5329 y FG(d)p 2218
5369 81 4 v 2218 5453 a(dt)2308 5390 y(z)t FH(\()p FG(t)p
FH(\))21 b(+)f FG(!)2626 5404 y FA(0)2665 5390 y FG(z)t
FH(\()p FG(t)p FH(\))p FG(:)829 b FH(\(5.30\))p eop
%%Page: 107 120
107 119 bop 3764 -200 a FH(107)862 7 y
 19537182 8946320 3815342 37035130 23352524 45981450 startTexFig
 862 7 a
%%BeginDocument: figs/modified_net.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      256 168 moveto 568 168 lineto 568 336 lineto 256 336 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 192 256 16 16 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 240 moveto
      192 208 lineto
      256 208 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 272 moveto
      192 296 lineto
      256 296 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      580 259 moveto (y) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      592 207 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      592 286 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      288 191 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      288 294 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      568 200 moveto
      624 200 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      568 304 moveto
      624 304 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      344 294 moveto (A) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      364 297 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      404 297 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      460 257 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      480 255 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      500 257 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      352 254 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      364 257 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      376 206 moveto (Ideal part) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      390 294 moveto (b) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      446 254 moveto (c) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      108 265 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      126 265 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      150 265 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      127 266 moveto (t,) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      416 336 moveto
      416 376 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      512 336 moveto
      512 376 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      219 245 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      234 248 moveto (in) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      222 268 moveto
      237 268 lineto
      233 263 lineto
      250 271 lineto
      233 279 lineto
      237 274 lineto
      222 274 lineto
      222 268 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      139 267 moveto (l) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      360 266 moveto 180 rotate (^) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      400 266 moveto 180 rotate (^) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      496 226 moveto 180 rotate (^) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      456 226 moveto 180 rotate (^) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      460 297 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      480 295 moveto (D) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      500 297 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-BoldItalic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      446 294 moveto (c) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      378 254 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      394 254 moveto (\)) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      383 256 moveto (l) show
   grestore

% TEXT
0 setgray
/Courier findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      488 283 moveto (') show
   grestore

% TEXT
0 setgray
/Courier findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      448 288 moveto (') show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      598 259 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      622 259 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      599 260 moveto (t,) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      611 261 moveto (l) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      433 393 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      455 393 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      479 393 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      456 394 moveto (t,) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      468 395 moveto (l) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      504 351 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      440 350 moveto 180 rotate (-) show
      -180 rotate 
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sun Oct 25 16:01:36 1998
%%EndDocument

 endTexFig
 1140 1336 a FH(Figure)30 b(5.5:)42 b(Mo)s(di\014ed)29
b(SCN)h(for)g(noise)f(form)m(ulation)300 1593 y(Comparing)g(\(5.30\))k
(with)c(\(5.25\))j(and)e(using)f FG(\025)c FH(=)g(1)p
FG(=!)2238 1607 y FA(0)2308 1593 y FH(mak)m(es)1143 1884
y FG(p)1189 1898 y FA(1)p FB(;i)1297 1884 y FH(=)g Fz(\000)p
FH(1)182 b FG(;)197 b(p)1959 1898 y FA(2)p FB(;i)2067
1884 y FH(=)25 b FG(A)2231 1898 y FA(0)2452 1884 y FG(;)198
b(p)2721 1898 y FA(3)p FB(;i)2829 1884 y FH(=)25 b FG(A)2993
1898 y FA(0)3032 1884 y FG(:)611 b FH(\(5.31\))536 2174
y(All)26 b(three)i(t)m(yp)s(es)f(of)g(net)m(w)m(orks)h(in)e(Fig.)i(5.4)
g(can)g(b)s(e)f(mo)s(deled)f(b)m(y)h(a)g(net)m(w)m(ork)i(in)d(Fig.)h
(5.5)h(where)300 2399 y(the)40 b(noisy)e(elemen)m(t,)k(its)d(loss,)i
(and)e(its)g(noise)g(source)g(are)h(replaced)f(b)m(y)g(a)h(v)m(oltage)h
(source)f FG(z)t FH(\()p FG(t;)15 b(\025)p FH(\),)300
2625 y(whic)m(h)32 b(mo)s(dels)f(the)i(b)s(eha)m(vior)f(of)h(the)g
(noisy)f(elemen)m(t.)49 b(The)32 b(expression)g(for)g
FG(z)t FH(\()p FG(t;)15 b(\025)p FH(\))34 b(is)e(the)h(solution)300
2851 y(to)c(the)g(di\013eren)m(tial)d(equation)i(in)f(\(5.25\))k(and)d
(is)f(giv)m(en)h(in)f(\(D.2\),)k(\(D.3\),)g(and)c(\(D.4\).)42
b(The)28 b(ideal)f(part)300 3077 y(in)37 b(Fig.)i(5.5)g(is)f(mo)s
(deled)f(b)m(y)h(the)g(state)i(equations)e(\(5.22\),)43
b(\(5.23\),)g(and)38 b(\(5.24\).)67 b(The)38 b(net)m(w)m(ork)h(of)300
3303 y(Fig.)31 b(5.5)g(will)d(b)s(e)i(referred)f(to)i(as)g(the)f
FC(mo)-5 b(di\014e)g(d)33 b FH(SCN.)536 3529 y(Note)e(from)d(Fig.)h
(5.4,)i(that)f(if)e(the)h(loss)f(is)h(set)g(to)h(zero,)g(the)g(lossy)e
(net)m(w)m(orks)i(b)s(ecome)f(iden)m(tical)300 3754 y(to)39
b(the)f(original)e(ideal)h(SCN)g(in)g(Fig.)h(5.3.)65
b(Similarly)-8 b(,)37 b(it)g(is)g(sho)m(wn)h(in)e(app)s(endix)g(D,)k
(that)f(for)f(the)300 3980 y(mo)s(di\014ed)c(net)m(w)m(ork,)k
FG(z)t FH(\()p FG(t;)15 b(\025)p FH(\))37 b(b)s(ecomes)f
FG(z)t FH(\()p FG(t)p FH(\))g(of)g(the)g(original)e(ideal)h(SCN)g(and)g
(the)h(mo)s(di\014ed)e(SCN's)300 4206 y(equations)29
b(\(5.22\),)k(\(5.23\),)f(\(5.24\),)g(and)d(\(5.25\))j(b)s(ecome)e(the)
g(original)e(ideal)h(SCN's)g(equations)g(\(5.3\))300
4432 y(and)e(\(5.4\).)42 b(This)26 b(leads)h(to)h(an)g(imp)s(ortan)m(t)
e(conclusion)h(that)h FD(q)2501 4446 y FB(nN)7 b FA(+)p
FB(i)2690 4432 y FH(\(0\))29 b(in)d(\(5.22\))k(is)d(the)h(same)g(as)g
(the)300 4658 y(ideal)h(state)j(v)m(ector)g FD(q)1068
4672 y FB(nN)7 b FA(+)p FB(i)1287 4658 y FH(in)29 b(\(5.3\).)300
4897 y Fx(5.4.3)112 b(Deriv)-6 b(ation)36 b(of)1339 4872
y FK(~)1322 4897 y Fm(S)1382 4912 y FB(y)1423 4897 y
FK(\()p Fm(!)t FK(\))h Fx(b)m(y)g(ev)-6 b(aluating)37
b(a)h(limit)300 5181 y FH(In)28 b(this)g(section,)h(the)g(expression)e
(for)1659 5158 y(~)1644 5181 y FG(S)1700 5195 y FB(y)1741
5181 y FH(\()p FG(!)s FH(\))i(in)f(\(5.14\))j(is)c(deriv)m(ed)h(for)h
(the)f(lossy)g(net)m(w)m(ork)i(describ)s(ed)300 5407
y(in)f(Sec.)i(5.4.2)h(and)e(then)g(the)h(limit)d(as)i(the)h(loss)f
(approac)m(hes)h(zero)g(is)e(ev)-5 b(aluated.)p eop
%%Page: 108 121
108 120 bop 3764 -200 a FH(108)536 99 y(The)27 b(transfer)h(function)
1432 76 y(~)1408 99 y FG(H)1484 114 y FB(k)1526 99 y
FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))29 b(of)e(the)h(lossy)f(system)h
(can)g(b)s(e)f(deriv)m(ed)g(in)f(a)i(similar)d(fashion)300
324 y(as)31 b(done)f(in)f(App)s(endix)f(B)i(and)g(has)g(the)h(form;)f
([56)q(])1543 577 y(~)1519 600 y FG(H)1595 615 y FB(k)1638
600 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))26 b(=)f
FD(f)2022 563 y FB(t)2012 623 y(k)2054 600 y FH(\()p
FG(\025;)15 b(!)s FH(\))p FD(q)2332 615 y FB(k)r FA(+1)2466
600 y FH(\()p FG(\025;)g(\034)10 b FH(\))989 b(\(5.32\))300
876 y(where)47 b FD(q)635 891 y FB(k)r FA(+1)768 876
y FH(\()p FG(\025;)15 b(\034)10 b FH(\))48 b(is)f(the)h(state)g(c)m
(harge)h(v)m(ector)g(during)c(in)m(terv)-5 b(al)47 b
FG(I)2835 891 y FB(k)r FA(+1)3015 876 y FH(when)f(the)i(noise)f(input)
300 1102 y FG(u)p FH(\()p FG(t)p FH(\))26 b(=)f FG(\016)s
FH(\()p FG(t)c Fz(\000)f FG(\034)10 b FH(\))38 b(where)f
FG(t)1226 1117 y FB(k)r Fv(\000)p FA(1)1396 1102 y FG(<)g(\034)47
b Fz(\024)37 b FG(t)1732 1117 y FB(k)1775 1102 y FH(.)62
b(Since)37 b(the)h(lossy)f(net)m(w)m(ork)h(approac)m(hes)g(the)g(ideal)
f(SCN)300 1328 y(when)d(the)g(loss)g(is)g(approac)m(hed)h(to)g(zero,)i
FD(f)1842 1295 y FB(t)1832 1354 y(k)1874 1328 y FH(\()p
FG(\025;)15 b(!)s FH(\))36 b(approac)m(hes)f FD(f)2647
1295 y FB(t)2637 1354 y(k)2680 1328 y FH(\()p FG(!)s
FH(\))g(and)f FD(q)3081 1343 y FB(k)r FA(+1)3214 1328
y FH(\()p FG(\025;)15 b(\034)10 b FH(\))35 b(approac)m(hes)300
1554 y FD(q)355 1569 y FB(k)r FA(+1)488 1554 y FH(\()p
FG(\034)10 b FH(\))29 b(de\014ned)d(in)h(\(5.18\).)42
b(Substituting)25 b(\(5.32\))30 b(in)m(to)e(\(5.14\),)j(using)26
b(\(5.12\))k(and)d(\(5.21\),)k(and)c(then)300 1780 y(taking)j(the)h
(limit)d(as)j FG(\025)25 b Fz(!)g FH(0)31 b(but)f FC(only)h
FH(for)f FD(f)1879 1747 y FB(t)1869 1806 y(k)1912 1780
y FH(\()p FG(\025;)15 b(!)s FH(\))31 b(results)e(in;)1056
2024 y FG(S)1112 2038 y FB(y)1153 2024 y FH(\()p FG(!)s
FH(\))84 b(=)35 b(lim)1463 2084 y FB(\025)p Fv(!)p FA(0)1635
1962 y FG(S)1691 1976 y FB(u)1736 1962 y FH(\()p FG(\025)p
FH(\))p 1635 2003 225 4 v 1714 2086 a FG(T)1917 1918
y FB(N)1889 1943 y Ft(X)1885 2128 y FB(k)r FA(=1)2028
1909 y Ft(Z)2111 1935 y FB(t)2136 1947 y Fu(k)2075 2098
y FB(t)2100 2110 y Fu(k)q Fr(\000)p Fs(1)2236 1926 y
Ft(\014)2236 1976 y(\014)2236 2026 y(\014)2263 2024 y
FD(f)2305 1986 y FB(t)2295 2046 y(k)2338 2024 y FH(\()p
FG(\025;)15 b(!)s FH(\))p FD(q)2616 2039 y FB(k)r FA(+1)2750
2024 y FH(\()p FG(\025;)g(\034)10 b FH(\))2963 1926 y
Ft(\014)2963 1976 y(\014)2963 2026 y(\014)2992 1953 y
FA(2)3047 2024 y FG(d\034)1367 2295 y FH(=)35 b(lim)1463
2355 y FB(\025)p Fv(!)p FA(0)1635 2234 y FG(S)1691 2248
y FB(u)1736 2234 y FH(\()p FG(\025)p FH(\))p 1635 2274
V 1714 2358 a FG(T)1917 2190 y FB(N)1889 2214 y Ft(X)1885
2399 y FB(k)r FA(=1)2028 2180 y Ft(Z)2111 2207 y FB(t)2136
2219 y Fu(k)2075 2369 y FB(t)2100 2381 y Fu(k)q Fr(\000)p
Fs(1)2236 2198 y Ft(\014)2236 2248 y(\014)2236 2297 y(\014)2263
2295 y FD(f)2305 2258 y FB(t)2295 2318 y(k)2338 2295
y FH(\()p FG(!)s FH(\))p FD(q)2523 2310 y FB(k)r FA(+1)2657
2295 y FH(\()p FG(\025;)15 b(\034)10 b FH(\))2870 2198
y Ft(\014)2870 2248 y(\014)2870 2297 y(\014)2899 2224
y FA(2)2953 2295 y FG(d\034)3668 2159 y FH(\(5.33\))300
2534 y(where)30 b(the)g(limit)f(of)h FG(S)1096 2548 y
FB(u)1141 2534 y FH(\()p FG(\025)p FH(\))h(and)f FD(q)1527
2549 y FB(k)r FA(+1)1660 2534 y FH(\()p FG(\025;)15 b(\034)10
b FH(\))31 b(as)g FG(\025)25 b Fz(!)g FH(0)31 b(will)d(b)s(e)h
(computed)i(later.)536 2760 y(The)23 b(partial)f(limit)f(tak)m(en)j(in)
d(\(5.33\))26 b(leads)c(to)i(the)f(main)f(adv)-5 b(an)m(tage)25
b(of)f(this)e(form)m(ulation.)37 b(Note)300 2986 y(that)h
FD(f)546 2953 y FB(t)536 3012 y(k)578 2986 y FH(\()p
FG(!)s FH(\))g(b)s(elongs)e(to)h(the)h(original)d(ideal)h(SCN)g(of)h
(Fig.)g(5.3.)62 b(It)37 b(is)f(a)i(function)e(of)h(the)g(matrices)300
3211 y FD(A)379 3225 y FB(i)438 3211 y FH(and)31 b FD(c)662
3225 y FB(i)722 3211 y FH(in)f(\(5.3\))j(and)e(\(5.4\).)45
b(\(See)32 b(App)s(endix)d(B.\))44 b(Th)m(us,)31 b(the)h(lossy)e
(description)g(of)h(the)h(system)300 3437 y(is)j(only)g(needed)g(for)g
(the)h(deriv)-5 b(ation)35 b(of)g FD(q)1812 3452 y FB(k)r
FA(+1)1946 3437 y FH(\()p FG(\025;)15 b(\034)10 b FH(\).)57
b(There)36 b(is)e(no)i(need)f(to)i(deriv)m(e)e FD(f)3387
3404 y FB(t)3377 3464 y(k)3420 3437 y FH(\()p FG(\025;)15
b(!)s FH(\).)57 b(Also)300 3663 y(note)34 b(that)h FD(f)748
3630 y FB(t)738 3689 y(k)781 3663 y FH(\()p FG(!)s FH(\))f(is)f(common)
h(to)g(all)f(noise)g(sources,)i(unlik)m(e)d(its)i(lossy)f(coun)m
(terpart)h FD(f)3390 3630 y FB(t)3380 3689 y(k)3423 3663
y FH(\()p FG(\025;)15 b(!)s FH(\).)52 b(This)300 3889
y(prop)s(ert)m(y)30 b(is)f(imp)s(ortan)m(t)h(when)f(m)m(ultiple)f
(noise)i(sources)g(are)h(considered)e(as)i(in)e(Sec.)i(5.8.)536
4115 y(In)f(App)s(endix)e(D)i(it)g(is)g(sho)m(wn)f(that)1185
4391 y FD(q)1240 4406 y FB(k)r FA(+1)1373 4391 y FH(\()p
FG(\025;)15 b(\034)10 b FH(\))27 b(=)1722 4329 y(1)p
1719 4370 54 4 v 1719 4453 a FG(\025)1808 4367 y FH(\024)1802
4391 y FD(b)1860 4406 y FB(k)r FA(+1)2013 4391 y FG(p)2059
4406 y FA(2)p FB(;k)2176 4391 y FG(e)2231 4325 y Fs(1)p
2229 4337 37 4 v 2229 4378 a Fu(\025)2275 4358 y FH(\()2311
4352 y FB(p)2347 4364 y Fs(1)p Fu(;k)2434 4352 y FA(+)p
FB(p)2525 4364 y Fs(3)p Fu(;k)2628 4335 y FA(\023)2611
4352 y FB(D)2669 4364 y Fu(k)2707 4358 y FH(\))2743 4352
y FA(\()p FB(t)2795 4364 y Fu(k)2834 4352 y Fv(\000)p
FB(\034)8 b FA(\))2990 4391 y FH(.)653 b(\(5.34\))300
4667 y(Substituting)26 b(\(5.34\))31 b(in)m(to)d(\(5.33\),)k(ev)-5
b(aluating)28 b(the)h(in)m(tegral,)g(and)f(taking)g(the)h(limit)e
(partially)f(giv)m(es;)586 4943 y FG(S)642 4957 y FB(y)683
4943 y FH(\()p FG(!)s FH(\))84 b(=)1093 4881 y(1)p 1061
4922 112 4 v 1061 5005 a(2)p FG(T)1230 4837 y FB(N)1201
4862 y Ft(X)1197 5046 y FB(k)r FA(=1)1351 4943 y FH(lim)1341
5003 y FB(\025)p Fv(!)p FA(0)1513 4881 y FG(S)1569 4895
y FB(u)1614 4881 y FH(\()p FG(\025)p FH(\))p 1513 4922
225 4 v 1599 5005 a FG(\025)1757 4759 y Ft(\014)1757
4809 y(\014)1757 4858 y(\014)1785 4856 y FD(f)1827 4823
y FB(t)1817 4883 y(k)1860 4856 y FH(\()p FG(!)s FH(\))2017
4832 y(\024)2010 4856 y FD(b)2068 4871 y FB(k)r FA(+1)2221
4856 y FG(p)2267 4871 y FA(2)p FB(;k)2365 4759 y Ft(\014)2365
4809 y(\014)2365 4858 y(\014)2392 4785 y FA(2)p 1757
4922 675 4 v 1787 4935 a Ft(\020)1837 5029 y FG(p)1883
5044 y FA(1)p FB(;k)2000 5029 y FH(+)20 b FG(p)2137 5044
y FA(3)p FB(;k)2256 5006 y FH(\023)2234 5029 y FG(D)2309
5044 y FB(k)2352 4935 y Ft(\021)2457 4849 y(\020)2507
4943 y FG(e)2562 4877 y Fs(2)p 2559 4889 37 4 v 2559
4930 a Fu(\025)2605 4910 y FH(\()2641 4904 y FB(p)2677
4916 y Fs(1)p Fu(;k)2764 4904 y FA(+)p FB(p)2855 4916
y Fs(3)p Fu(;k)2958 4887 y FA(\023)2942 4904 y FB(D)3000
4916 y Fu(k)3038 4910 y FH(\))3073 4904 y FA(\()p FB(t)3125
4916 y Fu(k)3164 4904 y Fv(\000)p FB(t)3244 4916 y Fu(k)q
Fr(\000)p Fs(1)3361 4904 y FA(\))3413 4943 y Fz(\000)g
FH(1)3549 4849 y Ft(\021)3668 4943 y FH(\(5.35\))897
5315 y(=)83 b Fz(\000)1164 5253 y FH(1)p 1132 5293 112
4 v 1132 5377 a(2)p FG(T)1268 5195 y Ft(\022)1339 5315
y FH(lim)1329 5374 y FB(\025)p Fv(!)p FA(0)1501 5253
y FG(S)1557 5267 y FB(u)1602 5253 y FH(\()p FG(\025)p
FH(\))p 1501 5293 225 4 v 1587 5377 a FG(\025)1735 5195
y Ft(\023)1844 5209 y FB(N)1816 5234 y Ft(X)1812 5418
y FB(k)r FA(=1)1965 5131 y Ft(\014)1965 5181 y(\014)1965
5230 y(\014)1993 5228 y FD(f)2035 5195 y FB(t)2025 5255
y(k)2068 5228 y FH(\()p FG(!)s FH(\))2225 5204 y(\024)2218
5228 y FD(b)2276 5243 y FB(k)r FA(+1)2430 5228 y FG(p)2476
5243 y FA(2)p FB(;k)2573 5131 y Ft(\014)2573 5181 y(\014)2573
5230 y(\014)2600 5157 y FA(2)p 1965 5293 675 4 v 1995
5307 a Ft(\020)2045 5401 y FG(p)2091 5416 y FA(1)p FB(;k)2208
5401 y FH(+)20 b FG(p)2345 5416 y FA(3)p FB(;k)2464 5378
y FH(\023)2443 5401 y FG(D)2518 5416 y FB(k)2560 5307
y Ft(\021)2680 5315 y FH(,)963 b(\(5.36\))p eop
%%Page: 109 122
109 121 bop 3764 -200 a FH(109)300 99 y(assuming)44 b(that)i
FG(p)968 114 y FA(1)p FB(;k)1096 99 y FH(+)30 b FG(p)1243
114 y FA(3)p FB(;k)1361 76 y FH(\023)1340 99 y FG(D)1415
114 y FB(k)1508 99 y FG(<)51 b FH(0)45 b(if)1825 75 y(\024)1819
99 y FD(b)1877 114 y FB(k)r FA(+1)2060 99 y Fz(6)p FH(=)50
b FD(0)c FH(holds)e(since)h(b)s(oth)g FG(\025)g FH(and)g(\()p
FG(t)3358 114 y FB(k)3431 99 y Fz(\000)30 b FG(t)3565
114 y FB(k)r Fv(\000)p FA(1)3698 99 y FH(\))46 b(are)300
324 y(p)s(ositiv)m(e)29 b(quan)m(tities.)39 b(This)28
b(condition)g(is)h(the)h(same)g(as)g(requiring)d(that)j(within)d(the)j
FG(k)s FH(-th)g(phase,)g(the)300 550 y(eigen)m(v)-5 b(alues)26
b(of)h(the)f(lossy)g(SCN)f(ha)m(v)m(e)j(a)f(negativ)m(e)g(real)f(part.)
39 b(An)m(y)27 b(practical)f(SCN)f(m)m(ust)h(satisfy)g(this)300
776 y(condition)j(.)41 b(T)-8 b(o)30 b(complete)h(the)g(ev)-5
b(aluation)30 b(of)g(the)h(limit,)d(the)j(de\014nition)d(in)h(\(5.1\))j
(is)e(used)f(to)i(get)1743 1093 y(lim)1733 1153 y FB(\025)p
Fv(!)p FA(0)1905 1032 y FG(S)1961 1046 y FB(u)2006 1032
y FH(\()p FG(\025)p FH(\))p 1905 1072 225 4 v 1991 1155
a FG(\025)2165 1093 y FH(=)25 b(4)2308 1069 y(^)2306
1093 y FG(k)2374 1070 y FH(^)2356 1093 y FG(T)13 b(\022)1203
b FH(\(5.37\))300 1410 y(Substituting)28 b(\(5.37\))k(in)m(to)f
(\(5.36\),)i(leads)c(to)i(the)g(\014nal)e(result;)p 497
1536 3207 4 v 497 1924 4 389 v 555 1761 a FG(S)611 1775
y FB(y)652 1761 y FH(\()p FG(!)s FH(\))d(=)f Fz(\000)985
1700 y FH(2)1032 1676 y(^)1030 1700 y FG(k)1098 1677
y FH(^)1080 1700 y FG(T)13 b(\022)p 985 1740 207 4 v
1055 1823 a(T)1249 1655 y FB(N)1221 1680 y Ft(X)1217
1865 y FB(k)r FA(=1)1370 1577 y Ft(\014)1370 1627 y(\014)1370
1677 y(\014)1398 1675 y FD(f)1440 1642 y FB(t)1430 1701
y(k)1473 1675 y FH(\()p FG(!)s FH(\))1609 1651 y(\024)1603
1675 y FD(b)1661 1690 y FB(k)r FA(+1)1794 1675 y FG(p)1840
1690 y FA(2)p FB(;k)1937 1577 y Ft(\014)1937 1627 y(\014)1937
1677 y(\014)1965 1604 y FA(2)p 1370 1740 635 4 v 1380
1753 a Ft(\020)1430 1847 y FG(p)1476 1862 y FA(1)p FB(;k)1593
1847 y FH(+)20 b FG(p)1730 1862 y FA(3)p FB(;k)1849 1824
y FH(\023)1827 1847 y FG(D)1902 1862 y FB(k)1945 1753
y Ft(\021)2105 1761 y FH(where)61 b FG(p)2445 1776 y
FA(1)p FB(;k)2562 1761 y FH(+)20 b FG(p)2699 1776 y FA(3)p
FB(;k)2817 1738 y FH(\023)2796 1761 y FG(D)2871 1776
y FB(k)2939 1761 y FG(<)25 b FH(0)61 b(if)3261 1737 y(\024)3255
1761 y FD(b)3313 1776 y FB(k)r FA(+1)3471 1761 y Fz(6)p
FH(=)25 b FD(0)31 b FH(.)p 3700 1924 4 389 v 497 1927
3207 4 v 3668 2004 a(\(5.38\))300 2230 y(A)m(t)39 b(this)e(p)s(oin)m
(t,)i(it)f(is)f(imp)s(ortan)m(t)g(to)i(consider)e(the)h(situation)f
(when)g(the)h(e\013ect)i(of)e(m)m(ultiple)e(noisy)300
2456 y(elemen)m(ts)31 b(are)h(of)f(in)m(terest.)43 b(While)30
b FD(f)1591 2471 y FB(k)1634 2456 y FH(\()p FG(!)s FH(\))i(is)e(the)h
(indep)s(enden)m(t)e(of)i(whic)m(h)f(elemen)m(t)i(is)e(selected)i(to)g
(b)s(e)300 2682 y(the)h(noisy)e(elemen)m(t,)j(the)e(constan)m(ts)i
FG(p)1669 2696 y FA(1)p FB(;i)1751 2682 y FH(,)g FG(p)1856
2696 y FA(2)p FB(;i)1938 2682 y FH(,)f FG(p)2042 2696
y FA(3)p FB(;i)2125 2682 y FH(,)g(and)2383 2659 y(\023)2362
2682 y FG(D)2437 2696 y FB(i)2498 2682 y FH(and)f(the)g(v)m(ector)3116
2658 y(\024)3110 2682 y FD(b)3168 2697 y FB(k)3243 2682
y FH(are)h(prop)s(erties)e(of)300 2907 y(the)i(mo)s(di\014ed)e(net)m(w)
m(ork)i(in)f(Sec.)h(5.4.2)i(and)d(are)i(di\013eren)m(t)e(for)h(eac)m(h)
h(noisy)d(elemen)m(t.)49 b(In)32 b(Sec.)i(5.8,)g(it)300
3133 y(is)29 b(sho)m(wn)h(ho)m(w)h(these)f(quan)m(tities)g(can)h(b)s(e)
e(computed)i(e\016cien)m(tly)-8 b(.)300 3420 y FL(5.5)135
b(Noise)46 b(analysis)g(for)g(\\real")g(SCN's)300 3736
y FH(The)d(losses)g(in)e(real)i(SCN's)g(are)h(not)f(small)f(enough)h
(to)h(b)s(e)e(negligible.)77 b(F)-8 b(or)44 b(example,)j(the)c
FF(on)p FH(-)300 3961 y(resistance)c(of)f(a)h(real)g(switc)m(h)f
(\(MOS-transistors)f(op)s(erated)i(in)f(the)g(saturated)h(region\))g
(can)g(b)s(e)f(as)300 4187 y(high)d(as)i(50)g(k\012)f([55)q(].)59
b(In)36 b(this)f(section,)j(it)e(will)e(b)s(e)i(sho)m(wn)f(that)i(the)g
(noise)f(PSD)g(of)g(ideal)g(SCN)f(in)300 4413 y(\(5.38\))e(is)c(an)h
(accurate)i(estimate)f(for)f(the)h(output)f(noise)g(PSD)g(of)g(the)h
(corresp)s(onding)d(real)i(SCN.)536 4639 y(Considering)43
b(a)i(\014nite)f FG(\025)p FH(,)49 b(it)44 b(can)i(b)s(e)e(sho)m(wn)
2187 4606 y FA(1)2271 4639 y FH(that)h FD(f)2524 4606
y FB(t)2514 4665 y(k)2557 4639 y FH(\()p FG(\025;)15
b(!)s FH(\))46 b(in)e(\(5.32\))j(dep)s(ends)c(only)h(on)300
4865 y(exp)s(onen)m(tials)29 b(of)i(1)p FG(=\025)p FH(,)g(similar)d(to)
j(the)g(one)f(in)f(\(5.35\).)43 b(These)31 b(exp)s(onen)m(tials)e(can)h
(b)s(e)g(neglected)h(if)1538 5182 y FG(e)1593 5116 y
Fs(2)p 1591 5128 37 4 v 1591 5169 a Fu(\025)1637 5149
y FH(\()1673 5143 y FB(p)1709 5155 y Fs(1)p Fu(;k)1796
5143 y FA(+)p FB(p)1887 5155 y Fs(3)p Fu(;k)1990 5126
y FA(\023)1973 5143 y FB(D)2031 5155 y Fu(k)2069 5149
y FH(\))2105 5143 y FA(\()p FB(t)2157 5155 y Fu(k)2196
5143 y Fv(\000)p FB(t)2276 5155 y Fu(k)q Fr(\000)p Fs(1)2393
5143 y FA(\))2450 5182 y FG(<<)24 b FH(1)1007 b(\(5.39\))p
300 5266 1440 4 v 404 5320 a Fs(1)438 5351 y Fy(A)25
b(rigorous)j(pro)r(of)e(can)g(b)r(e)g(carried)g(out)f(using)h
(\(5.25\),)i(\(5.22\),)f(\(5.23\),)g(and)e(\(5.24\).)p
eop
%%Page: 110 123
110 122 bop 3764 -200 a FH(110)300 99 y(is)32 b(satis\014ed.)46
b(The)32 b(condition)f(in)g(\(5.39\))k(is)c(satis\014ed)h(if)f(the)i
(transien)m(t)f(due)g(to)h(the)g(losses)f(disapp)s(ear)300
324 y(within)g(the)i(switc)m(hing)f(in)m(terv)-5 b(als.)52
b(This)33 b(is)g(referred)h(to)h(as)g FC(fast)i(char)-5
b(ge)37 b(tr)-5 b(ansfer)38 b(assumption)e FH([55)q(].)300
550 y(An)m(y)29 b(SCN's)f(that)h(are)g(in)m(tended)f(to)i(meet)f(a)g
(desired)f(discrete-time)g(transfer)g(function)g(m)m(ust)g(satisfy)300
776 y(this)h(assumption.)39 b(It)31 b(is)e(then)h(v)-5
b(alid)29 b(to)i(mak)m(e)h(the)e(appro)m(ximation;)1581
1093 y FD(f)1623 1056 y FB(t)1613 1116 y(k)1656 1093
y FH(\()p FG(\025;)15 b(!)s FH(\))1905 1068 y Fz(\030)1905
1097 y FH(=)2001 1093 y FD(f)2043 1056 y FB(t)2033 1116
y(k)2076 1093 y FH(\(0)p FG(;)g(!)s FH(\))26 b(=)f FD(f)2455
1056 y FB(t)2445 1116 y(k)2488 1093 y FH(\()p FG(!)s
FH(\))1050 b(\(5.40\))300 1410 y(where)30 b FD(f)605
1377 y FB(t)595 1437 y(k)637 1410 y FH(\()p FG(!)s FH(\))h(b)s(elongs)f
(to)h(the)f(ideal)f(SCN)h(and)g(is)f(giv)m(en)i(in)e(\(B.36\).)536
1636 y(If)34 b FG(\025)g FH(is)f(\014nite,)h(then)1301
1613 y(^)1285 1636 y FG(S)1341 1650 y FB(y)1382 1636
y FH(\()p FG(!)s FH(\))e(=)f(0)j(stated)h(in)e(\(5.21\))j(is)d(not)h
(true,)h FC(i.e.)51 b FH(the)34 b(noise)f(PSD)h(due)f(to)300
1862 y(the)39 b(con)m(tin)m(uous)f(input-output)e(coupling)h(app)s
(ears)g(at)i(the)g(output)f(of)g(the)h(SCN.)f(Ho)m(w)m(ev)m(er,)43
b(since)315 2065 y(^)300 2088 y FG(S)356 2102 y FB(y)397
2088 y FH(\()p FG(!)s FH(\))26 b Fz(!)f FH(0)j(as)f FG(\025)f
Fz(!)f FH(0)j(while)1367 2065 y(~)1352 2088 y FG(S)1408
2102 y FB(y)1449 2088 y FH(\()p FG(!)s FH(\))g(approac)m(hes)g(a)f
(constan)m(t,)j(it)d(is)f(reasonable)h(to)h(assume)f(that,)i(for)300
2314 y(nearly)h(ideal)g(SCN's,)i(the)f(output)g(noise)g(due)f(to)i(the)
g(con)m(tin)m(uous)f(input-output)e(path)i(is)f(negligible)300
2539 y(or)1799 2765 y FG(S)1855 2779 y FB(y)1896 2765
y FH(\()p FG(!)s FH(\))2052 2740 y Fz(\030)2052 2769
y FH(=)2163 2742 y(~)2148 2765 y FG(S)2204 2779 y FB(y)2245
2765 y FH(\()p FG(!)s FH(\))p FG(:)1268 b FH(\(5.41\))300
3045 y(This)29 b(assumption)f(will)g(b)s(e)i(v)m(eri\014ed)f(in)g
(Example)h(2)h(of)f(Sec.)h(5.6.)536 3271 y(Finally)-8
b(,)29 b(an)i(appro)m(ximation)e(is)g(made)i(that)1758
3588 y(lim)1748 3648 y FB(\025)p Fv(!)p FA(0)1920 3526
y FG(S)1976 3540 y FB(u)2021 3526 y FH(\()p FG(\025)p
FH(\))p 1920 3567 225 4 v 2006 3650 a FG(\025)2180 3563
y Fz(\030)2180 3592 y FH(=)2286 3526 y FG(S)2342 3540
y FB(u)p 2286 3567 101 4 v 2310 3650 a FG(\025)2427 3588
y FH(.)1216 b(\(5.42\))300 3905 y(F)-8 b(or)30 b(the)f(elemen)m(ts)g
(considered)f(in)f(Sec.)j(5.2,)g FG(S)1947 3919 y FB(u)1992
3905 y FH(\()p FG(\025)p FH(\))f(is)f(giv)m(en)h(in)f(\(5.1\))j
(therefore,)e(\(5.42\))j(holds)27 b(as)i(an)300 4131
y(equalit)m(y)-8 b(.)60 b(Ho)m(w)m(ev)m(er,)40 b(the)d(appro)m
(ximation)f(is)f(also)i(v)-5 b(alid)35 b(in)g(the)i(case)h(of)e(a)i
(real)e(opamp,)i(when)e(its)300 4357 y(input-referred)22
b(noise)i(is)f(due)g(to)i(man)m(y)g(di\013eren)m(t)f(in)m(ternal)f
(noise)g(sources)h(and)g(the)h(actual)f(expression)300
4583 y(for)30 b FG(S)495 4597 y FB(u)570 4583 y FH(is)g(unkno)m(wn.)536
4808 y(Using)21 b(\(5.35\),)26 b(\(5.39\),)g(\(5.40\),)g(\(5.41\))d
(and)e(\(5.42\),)26 b(the)c(follo)m(wing)e(appro)m(ximation)h(is)f
(obtained:)p 1302 4934 1597 4 v 1302 5322 4 389 v 1360
5159 a FG(S)1416 5173 y FB(y)1457 5159 y FH(\()p FG(!)s
FH(\))1613 5134 y Fz(\030)1613 5163 y FH(=)1709 5159
y Fz(\000)1823 5098 y FH(1)p 1790 5138 112 4 v 1790 5222
a(2)p FG(T)1959 5053 y FB(N)1931 5078 y Ft(X)1926 5263
y FB(k)r FA(=1)2080 5098 y FG(S)2136 5112 y FB(u)p 2080
5138 101 4 v 2104 5222 a FG(\025)2201 4975 y Ft(\014)2201
5025 y(\014)2201 5075 y(\014)2228 5073 y FD(f)2270 5040
y FB(t)2260 5099 y(k)2303 5073 y FH(\()p FG(!)s FH(\))2439
5049 y(\024)2433 5073 y FD(b)2491 5088 y FB(k)r FA(+1)2624
5073 y FG(p)2670 5088 y FA(2)p FB(;k)2768 4975 y Ft(\014)2768
5025 y(\014)2768 5075 y(\014)2795 5002 y FA(2)p 2201
5138 635 4 v 2211 5151 a Ft(\020)2260 5246 y FG(p)2306
5261 y FA(1)p FB(;k)2423 5246 y FH(+)g FG(p)2560 5261
y FA(3)p FB(;k)2679 5223 y FH(\023)2658 5246 y FG(D)2733
5261 y FB(k)2776 5151 y Ft(\021)2845 5159 y FG(:)p 2895
5322 4 389 v 1302 5325 1597 4 v 3668 5151 a FH(\(5.43\))p
eop
%%Page: 111 124
111 123 bop 3764 -200 a FH(111)300 99 y(F)-8 b(rom)22
b(\(5.42\))i(and)c(\(5.37\),)26 b(it)21 b(can)h(b)s(e)e(seen)i(that)g
(\(5.43\))i(is)c(iden)m(tical)g(to)i(\(5.38\).)40 b(Hence,)25
b(it)c(is)f(concluded)300 324 y(that)32 b FG(S)554 338
y FB(y)595 324 y FH(\()p FG(!)s FH(\))g(of)f(real)g(SCN's,)g(can)g(b)s
(e)g(appro)m(ximated)f(b)m(y)h(the)h FG(S)2550 338 y
FB(y)2591 324 y FH(\()p FG(!)s FH(\))f(of)h(ideal)e(SCN's)g(as)i(long)e
(as)i(the)300 550 y(fast)f(c)m(harge)g(transfer)f(assumption)f(is)g
(satis\014ed.)536 776 y(In)h(the)g(case)i(of)e(a)h(resistor,)f
(\(5.43\))j(reduces)d(to)1307 1093 y FG(S)1363 1107 y
FB(y)1405 1093 y FH(\()p FG(!)s FH(\))1560 1068 y Fz(\030)1560
1097 y FH(=)1656 1093 y FG(S)1712 1107 y FB(u)1835 1032
y FH(1)p 1767 1072 181 4 v 1767 1155 a(2)p FG(T)13 b(R)2006
987 y FB(N)1978 1012 y Ft(X)1973 1197 y FB(k)r FA(=1)2201
1032 y FH(1)p 2127 1072 195 4 v 2127 1155 a FG(C)2192
1170 y FB(in;k)2346 996 y Ft(\014)2346 1045 y(\014)2346
1095 y(\014)2374 1093 y FD(f)2416 1056 y FB(t)2406 1116
y(k)2448 1093 y FH(\()p FG(!)s FH(\))2584 1069 y(\024)2578
1093 y FD(b)2636 1108 y FB(k)r FA(+1)2770 996 y Ft(\014)2770
1045 y(\014)2770 1095 y(\014)2798 1022 y FA(2)2852 1093
y FG(;)791 b FH(\(5.44\))300 1410 y(and,)30 b(for)g(an)g(opamp)g(mo)s
(deled)g(b)m(y)g(a)h(V)m(CVS)f(with)f(condition)g Fz(j)p
FG(A)2608 1424 y FA(0)2669 1387 y FH(\023)2648 1410 y
FG(D)2723 1425 y FB(k)2766 1410 y Fz(j)c FG(>>)g FH(1,)582
1727 y FG(S)638 1741 y FB(y)679 1727 y FH(\()p FG(!)s
FH(\))835 1702 y Fz(\030)835 1732 y FH(=)931 1727 y Fz(\000)p
FG(S)1058 1741 y FB(u)1120 1666 y FG(!)1177 1680 y FA(0)p
1112 1706 112 4 v 1112 1790 a FH(2)p FG(T)1282 1622 y
FB(N)1253 1647 y Ft(X)1249 1831 y FB(k)r FA(=1)1403 1544
y Ft(\014)1403 1593 y(\014)1403 1643 y(\014)1430 1641
y FD(f)1472 1608 y FB(t)1462 1667 y(k)1505 1641 y FH(\()p
FG(!)s FH(\))1641 1617 y(\024)1635 1641 y FD(b)1693 1656
y FB(k)r FA(+1)1826 1544 y Ft(\014)1826 1593 y(\014)1826
1643 y(\014)1854 1570 y FA(2)1909 1641 y FG(A)1977 1608
y FA(2)1977 1664 y(0)p 1403 1706 614 4 v 1483 1802 a
Fz(\000)p FH(1)20 b(+)g FG(A)1778 1816 y FA(0)1839 1779
y FH(\023)1818 1802 y FG(D)1893 1817 y FB(k)2051 1702
y Fz(\030)2051 1732 y FH(=)2147 1727 y FG(S)2203 1741
y FB(u)2258 1666 y FG(A)2326 1680 y FA(0)2366 1666 y
FG(!)2423 1680 y FA(0)p 2258 1706 204 4 v 2304 1790 a
FH(2)p FG(T)2520 1622 y FB(N)2491 1647 y Ft(X)2487 1831
y FB(k)r FA(=1)2712 1666 y FH(1)p 2641 1706 189 4 v 2641
1802 a Fz(\000)2733 1779 y FH(\023)2712 1802 y FG(D)2787
1817 y FB(k)2854 1630 y Ft(\014)2854 1680 y(\014)2854
1730 y(\014)2882 1727 y FD(f)2924 1690 y FB(t)2914 1750
y(k)2957 1727 y FH(\()p FG(!)s FH(\))3093 1703 y(\024)3087
1727 y FD(b)3145 1742 y FB(k)r FA(+1)3278 1630 y Ft(\014)3278
1680 y(\014)3278 1730 y(\014)3306 1656 y FA(2)3360 1727
y FG(:)283 b FH(\(5.45\))300 2045 y(Note)36 b(that)f(only)f(the)h
(input-referred)e(noise)h(PSD)h FG(S)2179 2059 y FB(u)2258
2045 y FH(and)f(gain-bandwidth)e(pro)s(duct)i FG(A)3509
2059 y FA(0)3548 2045 y FG(!)3605 2059 y FB(o)3678 2045
y FH(or)h(re-)300 2270 y(sistance)30 b(v)-5 b(alue)30
b(are)h(required.)300 2557 y FL(5.6)135 b(Examples)300
2873 y FH(In)35 b(this)g(section,)i(the)f(output)f(noise)g(PSD)h(of)g
(simple)d(circuits)h(is)h(computed)h(based)f(on)h(\(5.44\))i(and)300
3098 y(\(5.45\),)h(and)34 b(the)h(results)f(are)h(con\014rmed)g(exp)s
(erimen)m(tally)-8 b(.)53 b(The)34 b(exp)s(erimen)m(ts)g(are)i(carried)
e(out)h(b)m(y)300 3324 y(inserting)43 b(an)h(external)g(white)g(noise)g
(source)g(in)f(series)h(with)f(the)i(resistor)f(or)g(one)h(of)f(the)h
(input)300 3550 y(terminals)30 b(of)i(the)h(opamp.)45
b(If)31 b(the)h(noise)f(PSD)h(of)g(the)g(external)g(noise)f(source)i
(is)e(m)m(uc)m(h)h(larger)f(than)300 3776 y(that)f(of)g(the)g(noisy)f
(comp)s(onen)m(t)h(itself,)f(then)h(\(5.43\))i(still)c(can)i(b)s(e)f
(used)g(where)g FG(S)3159 3790 y FB(u)3234 3776 y FH(denotes)h(the)g
(PSD)300 4002 y(of)i(this)e(external)i(source.)44 b(The)31
b(external)g(v)m(oltage)j(source)d(used)g(in)f(the)i(follo)m(wing)e
(exp)s(erimen)m(ts)h(w)m(as)300 4228 y(a)i(NOISE)e(COM)h(\(NC)g(6107\))
j(noise)d(generator,)i(whic)m(h)d(pro)s(duces)g(white)g(noise)h(with)f
(tunable)g(lev)m(el)300 4453 y(in)26 b(the)i(frequency)f(range)h(of)f
(100)i(Hz)f(-100)h(MHz.)41 b(The)27 b(noise)g(lev)m(el)g(drops)f
(rapidly)f(for)j(the)f(frequency)300 4679 y(of)k(more)f(then)g(100)i
(MHz.)536 4905 y(The)h(fact)i(that)f(the)g(noise)f(source)h(is)e
(bandlimited)e(m)m(ust)k(b)s(e)f(carefully)f(examined,)i(since)f(the)
300 5131 y(form)m(ulas)24 b(deriv)m(ed)h(in)e(this)i(pap)s(er)f(are)h
(v)-5 b(alid)24 b(for)h(ideal)f(white)g(noise)h(and)f(they)i(include)d
(foldo)m(v)m(er)i(e\013ect)300 5357 y(\(see)36 b(\(5.9\).\))56
b(A)35 b(bandlimited)c(white)j(noise)g(can)h(b)s(e)g(view)m(ed)f(as)h
(a)g(cascade)i(connection)d(of)h(an)g(ideal)p eop
%%Page: 112 125
112 124 bop 3764 -200 a FH(112)808 7 y
 20392346 6117704 2302361 43679088 22694707 49796792 startTexFig
 808 7 a
%%BeginDocument: figs/noise_bandl.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   newpath
      227 106 moveto
      72 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      227 178 lineto
   stroke
grestore
gsave
   newpath
      227 106 8 3 0 -72 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      163 170 moveto
      0 128 atan dup cos 8 mul 291 exch sub
      exch sin 8 mul 170 exch sub lineto
   stroke
grestore
gsave
   newpath
      291 170 8 3 128 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      179 170 moveto
      195 170 lineto
      195 130 lineto
      251 130 lineto
      259 130 lineto
      259 170 lineto
      275 170 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      259 187 moveto (B) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      174 187 moveto (-B) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      274 167 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      232 124 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      247 123 moveto (\() show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      254 123 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      267 123 moveto (\)) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      144 96 moveto 304 96 lineto 304 192 lineto 144 192 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      149 213 moveto (Ideal lowpass filter) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      437 135 moveto (Lossy SCN) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      432 112 moveto 533 112 lineto 533 176 lineto 432 176 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      304 144 moveto
      0 128 atan dup cos 8 mul 432 exch sub
      exch sin 8 mul 144 exch sub lineto
   stroke
grestore
gsave
   newpath
      432 144 8 3 128 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      64 144 moveto
      0 80 atan dup cos 8 mul 144 exch sub
      exch sin 8 mul 144 exch sub lineto
   stroke
grestore
gsave
   newpath
      144 144 8 3 80 0 tgifarrowtip
   closepath fill
grestore

% BOX
gsave
   1.415 setmiterlimit
   [12 4] 0 setdash
   newpath
      128 64 moveto 544 64 lineto 544 224 lineto 128 224 lineto
   closepath stroke
   [] 0 setdash
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      201 87 moveto (Overall LPTV system of period T) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      69 136 moveto (d) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      80 134 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      117 135 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      88 135 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      107 135 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      96 135 moveto (-) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      452 161 moveto (h) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      464 160 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      495 160 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      472 160 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      485 159 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      480 162 moveto (,) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      544 144 moveto
      0 56 atan dup cos 8 mul 600 exch sub
      exch sin 8 mul 144 exch sub lineto
   stroke
grestore
gsave
   newpath
      600 144 8 3 56 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      551 137 moveto (h) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      574 138 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      604 138 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      582 137 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      595 137 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      590 137 moveto (,) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      563 142 moveto (o) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      330 203 moveto (g) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      340 204 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      356 204 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      348 203 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      367 204 moveto (=) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      401 204 moveto (sinc) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      434 204 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      462 203 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      442 204 moveto (Bt) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      383 198 moveto (B) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      383 216 moveto (p) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      383 198 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      344 134 moveto (g) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      354 135 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      389 135 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      361 134 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      381 133 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      369 134 moveto (-) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Sep 15 14:51:58 1998
%%EndDocument

 endTexFig
 801 978 a FH(Figure)30 b(5.6:)41 b(Mo)s(deling)29 b(the)i(\014nite)e
(bandwidth)f(of)i(the)h(noise)f(generator.)300 1253 y(white)j(noise)h
(source)h(and)e(a)i(lo)m(wpass)f(\014lter)f(with)g(the)i(cuto\013)g
(frequency)f FG(B)5 b FH(,)35 b(as)f(sho)m(wn)g(in)f(Fig.)i(5.6.)300
1479 y(Denoting)24 b(the)g(impulse)d(resp)s(onse)i(of)g(the)h(lo)m
(wpass)f(\014lter)g(as)h FG(g)s FH(\()p FG(t)p FH(\),)i(if)d(an)g
(excitation)h FG(\016)s FH(\()p FG(t)7 b Fz(\000)g FG(\034)j
FH(\))24 b(is)f(applied)300 1705 y(to)31 b(the)f(input)d(of)j(the)g(lo)
m(wpass)g(\014lter,)f(the)h(input)e(to)i(the)g(SCN)f(will)e(b)s(e)j
FG(g)s FH(\()p FG(t)20 b Fz(\000)e FG(\034)10 b FH(\))30
b(instead)g(of)f FG(\016)s FH(\()p FG(t)21 b Fz(\000)d
FG(\034)10 b FH(\).)300 1931 y(Hence,)32 b(the)f(impulse)d(resp)s(onse)
h(of)i(the)g(o)m(v)m(erall)g(system)g(denoted)f(b)m(y)h
FG(h)2830 1945 y FB(o)2868 1931 y FH(\()p FG(t;)15 b(\034)10
b FH(\))32 b(is)e(generally)f(di\013eren)m(t)300 2156
y(from)35 b(the)i(impulse)c(resp)s(onse)i FG(h)p FH(\()p
FG(t;)15 b(\034)10 b FH(\))37 b(of)f(the)h(SCN)e(\(Fig.)h(5.6\).)59
b(When)36 b FG(B)k FH(approac)m(hes)d(to)f(in\014nit)m(y)-8
b(,)300 2382 y FG(g)s FH(\()p FG(t)16 b Fz(\000)g FG(\034)10
b FH(\))28 b(approac)m(hes)h(to)g FG(\016)s FH(\()p FG(t)16
b Fz(\000)g FG(\034)10 b FH(\))28 b([71)q(],)h(and)f(therefore,)h
FG(h)2359 2396 y FB(o)2398 2382 y FH(\()p FG(t;)15 b(\034)10
b FH(\))29 b(b)s(ecomes)f FG(h)p FH(\()p FG(t;)15 b(\034)10
b FH(\).)41 b(Similarly)-8 b(,)26 b(if)h(the)300 2608
y(time)32 b(constan)m(ts)i(within)c(the)j(switc)m(hing)f(in)m(terv)-5
b(als)31 b(of)i(a)g(SCN)f(are)i(larger)e(than)g(the)h(time)g(constan)m
(ts)300 2834 y(of)42 b FG(g)s FH(\()p FG(t)p FH(\),)47
b FG(h)p FH(\()p FG(t;)15 b(\034)10 b FH(\))43 b(and)f
FG(h)1165 2848 y FB(o)1203 2834 y FH(\()p FG(t;)15 b(\034)10
b FH(\))43 b(are)g(close)f(to)h(eac)m(h)g(other)g([71)q(].)76
b(Therefore,)45 b(in)c(order)h(to)g(mak)m(e)i(a)300 3060
y(meaningful)27 b(comparison)i(b)s(et)m(w)m(een)h(the)g(measured)f(and)
f(computed)i(results,)e(the)i(time)f(constan)m(ts)i(of)300
3286 y(the)39 b(SCN)g(ha)m(v)m(e)h(to)g(b)s(e)f(large)g(enough)g(from)g
(the)g(p)s(oin)m(t)f(of)i(view)e(of)h(the)h(\014nite)e(bandwidth)e(of)k
(the)300 3511 y(noise)26 b(source,)i(y)m(et)g(small)e(enough)h(to)g
(satisfy)g(the)g(fast)g(c)m(harge)h(transfer)f(assumption)e(in)h
(\(5.39\).)42 b(This)300 3737 y(requiremen)m(t)31 b(is)f(satis\014ed)h
(if)g Fz(j)p FG(p)1406 3752 y FA(1)p FB(;k)1524 3737
y FH(+)21 b FG(p)1662 3752 y FA(3)p FB(;k)1780 3714 y
FH(\023)1759 3737 y FG(D)1834 3752 y FB(k)1877 3737 y
Fz(j)p FG(=\025)32 b FH(is)f(less)g(than)g(the)h(bandwidth)d
FG(B)36 b FH(but)30 b(large)i(enough)300 3963 y(to)f(satisfy)f
(\(5.39\).)536 4189 y(The)j(nonlinearities)d(in)i(SCN's)g(also)i
(a\013ect)g(the)g(output)e(noise)h(PSD.)g(E\013ort)h(has)e(b)s(een)h
(made)300 4415 y(to)39 b(minimize)c(them.)63 b(Finally)-8
b(,)39 b(the)f(input)d(noise)j(PSD)f(lev)m(el)h(used)f(for)h
(computations)f(is)g(the)h(lev)m(el)300 4640 y(displa)m(y)m(ed)29
b(on)h(the)h(sp)s(ectrum)e(analyzer)1708 4607 y FA(2)1748
4640 y FH(.)p 300 4720 1440 4 v 404 4773 a Fs(2)438 4805
y Fy(The)d(curv)n(e)f(sho)n(wn)g(b)n(y)g(the)g(screen)h(of)g(the)f
(analyzer)h(\(HP)f(3585A)h(in)g(our)f(exp)r(erimen)n(t\))f(is)i
(di\013eren)n(t)f(from)g(the)g(real)300 4896 y(PSD)d(of)h(the)f(noise)h
(source,)h(it)f(dep)r(ends)e(on)i(the)f(analyzer's)h(settings)h
(\(resolution)f(bandwidth,)g(video)f(bandwidth,)h(etc.\))p
eop
%%Page: 113 126
113 125 bop 3764 -200 a FH(113)300 99 y FD(Example)34
b(1)536 324 y FH(Figure)26 b(5.7)i(sho)m(ws)e(a)h(\014rst-order)f
(highpass)f(\014lter)h([61)q(].)40 b(Switc)m(hes)26 b
FG(S)2923 338 y FA(1)2988 324 y FH(and)g FG(S)3217 338
y FA(2)3283 324 y FH(are)h(op)s(erated)g(b)m(y)300 550
y(non-o)m(v)m(erlapping)c(clo)s(c)m(k)h(signals)f FG(\036)h
FH(and)1729 526 y(\026)1717 550 y FG(\036)p FH(.)39 b(The)23
b(output)h(noise)f(PSD)h(due)f(to)i FG(S)3060 564 y FA(2)3123
550 y FH(is)e(to)i(b)s(e)e(determined.)300 776 y(The)i(net)m(w)m(ork)i
(is)d(separated)i(in)m(to)g(one)g(lossy)f(comp)s(onen)m(t)g({)h(namely)
f(switc)m(h)g FG(S)3046 790 y FA(2)3111 776 y FH({)h(and)f(the)h
(remaining)300 1002 y(ideal)j(part)i(as)g(describ)s(ed)e(in)g(Sec.)i
(5.4.2)i(and)d(Fig.)h(5.4\(a\).)44 b(The)30 b(remaining)f(ideal)g(part)
i(of)g(the)f(SCN,)300 1228 y(for)k(eac)m(h)i(clo)s(c)m(k)f(phase,)g(is)
f(sho)m(wn)g(in)f(Fig.)i(5.8\(a\))i(and)c(\(b\).)54 b(Note)36
b(that)f(a)g(source)f FG(z)t FH(\()p FG(t)p FH(\))i(mo)s(dels)d(the)300
1453 y(e\013ect)f(of)e(the)h(lossy)f(switc)m(h)g FG(S)1358
1467 y FA(2)1427 1453 y FH(as)h(in)e(\(5.26\).)43 b(The)30
b(original)e(signal)h(input)g(of)h(the)h(\014lter)e(is)h(shorted.)536
1679 y(T)-8 b(o)27 b(ev)-5 b(aluate)27 b(\(5.44\),)i(it)d(is)f(\014rst)
h(necessary)g(to)h(generate)h(the)e(state)i(matrices)e(in)f(\(5.22\),)k
(\(5.23\),)300 1905 y(and)36 b(\(5.24\))i(for)e(the)h(equiv)-5
b(alen)m(t)36 b(circuits.)57 b(In)36 b(the)g(\014rst)g(phase)g(\()p
FG(nT)48 b(<)35 b(t)g Fz(\024)g FG(nT)h FH(+)24 b FG(t)3347
1919 y FA(1)3386 1905 y FH(\),)39 b(the)d(circuit)300
2131 y(equations)30 b(are)h(\(see)g(Fig.)41 b(5.8\(a\)\))1380
2406 y FG(q)1421 2420 y FB(n;)p FA(1)1548 2406 y FH(=)25
b FG(C)1709 2420 y FA(1)1748 2406 y FG(v)1792 2420 y
FA(1)1832 2406 y FH(\()p FG(t)p FH(\))20 b(+)g FG(C)2111
2420 y FA(2)2151 2406 y FG(v)2195 2420 y FA(2)2234 2406
y FH(\()p FG(t)p FH(\))p FG(;)1380 2632 y(v)1424 2646
y FA(1)1464 2632 y FH(\()p FG(t)p FH(\))25 b(=)g FG(v)1732
2646 y FA(2)1772 2632 y FH(\()p FG(t)p FH(\))p FG(;)107
b FH(and)181 b FG(y)s FH(\()p FG(t)p FH(\))26 b(=)f FG(v)2652
2646 y FA(1)2691 2632 y FH(\()p FG(t)p FH(\))p FG(:)3668
2496 y FH(\(5.46\))300 2862 y(In)30 b(the)g(second)h(phase)f(\()p
FG(nT)j FH(+)19 b FG(t)1416 2876 y FA(1)1481 2862 y FG(<)25
b(t)g Fz(\024)g FG(nT)32 b FH(+)20 b FG(T)13 b FH(\))31
b(\(Fig.)41 b(5.8\(b\)\),)1350 3137 y FG(q)1391 3151
y FB(n;)p FA(2)1518 3137 y FH(=)25 b FG(C)1679 3151 y
FA(1)1718 3137 y FG(v)1762 3151 y FA(1)1802 3137 y FH(\()p
FG(t)p FH(\))p FG(;)1350 3363 y(v)1394 3377 y FA(2)1434
3363 y FH(\()p FG(t)p FH(\))h(=)f FG(u)p FH(\()p FG(t)p
FH(\))p FG(;)197 b FH(and)182 b FG(y)s FH(\()p FG(t)p
FH(\))25 b(=)g FG(v)2681 3377 y FA(1)2721 3363 y FH(\()p
FG(t)p FH(\))p FG(:)3668 3227 y FH(\(5.47\))300 3593
y(These)30 b(equations)g(can)h(b)s(e)f(arranged)g(according)g(to)h
(\(5.23\);)1115 3903 y(\024)1114 3904 y FD(c)1160 3867
y FB(t)1160 3927 y FA(1)1225 3904 y FH(=)1469 3843 y(1)p
1331 3883 320 4 v 1331 3967 a FG(C)1396 3981 y FA(1)1456
3967 y FH(+)20 b FG(C)1612 3981 y FA(2)1752 3904 y FG(;)1884
3903 y FH(\024)1883 3904 y FD(c)1929 3867 y FB(t)1929
3927 y FA(2)1995 3904 y FH(=)2130 3843 y(1)p 2101 3883
105 4 v 2101 3967 a FG(C)2166 3981 y FA(1)2306 3904 y
FH(and)2564 3881 y(\024)2543 3904 y FG(D)2618 3918 y
FA(1)2683 3904 y FH(=)2800 3881 y(\024)2779 3904 y FG(D)2854
3918 y FA(2)2919 3904 y FH(=)25 b(0)p FG(:)583 b FH(\(5.48\))300
4216 y(T)-8 b(o)34 b(get)h(the)g(state)g(parameters)f(in)f(\(5.22\))j
(it)d(is)g(necessary)i(to)f(relate)h(state)g(c)m(harge)g(v)m(ectors)h
(in)c(con-)300 4442 y(secutiv)m(e)f(phases.)40 b(F)-8
b(or)31 b(the)g(\014rst)f(phase,)1534 4753 y FG(q)1575
4767 y FB(n;)p FA(1)1701 4753 y FH(=)25 b FG(C)1862 4767
y FA(1)1902 4753 y FG(v)1946 4767 y FA(1)1985 4753 y
FH(\()p FG(nT)13 b FH(\))20 b(+)g FG(C)2352 4767 y FA(2)2392
4753 y FG(v)2436 4767 y FA(2)2475 4753 y FH(\()p FG(nT)13
b FH(\))300 5065 y(where)30 b FG(v)607 5079 y FA(1)646
5065 y FH(\()p FG(nT)13 b FH(\))31 b(and)e FG(v)1088
5079 y FA(2)1128 5065 y FH(\()p FG(nT)13 b FH(\))30 b(are)h(determined)
e(b)m(y)h(the)h(equations)f(of)h(the)f(second)h(phase)f(\(5.47\),)i
(i.e.)1161 5377 y FG(v)1205 5391 y FA(1)1245 5377 y FH(\()p
FG(nT)13 b FH(\))25 b(=)1567 5307 y FG(q)1608 5326 y
FA(\()p FB(n)p Fv(\000)p FA(1\))p FB(;)p FA(2)p 1567
5356 288 4 v 1659 5439 a FG(C)1724 5453 y FA(1)2046 5377
y FH(and)182 b FG(v)2419 5391 y FA(2)2458 5377 y FH(\()p
FG(nT)13 b FH(\))25 b(=)g FG(u)p FH(\()p FG(nT)13 b FH(\))p
FG(:)p eop
%%Page: 114 127
114 126 bop 3764 -200 a FH(114)446 247 y
 26115359 7433339 394690 44600033 26510049 52033372 startTexFig
 446 247 a
%%BeginDocument: figs/hpass.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
newpath
   410 12 moveto 427 12 lineto 427 39 lineto 410 39 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      412 33 moveto (f) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      16 18 moveto
      104 18 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      104 2 moveto
      104 34 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      112 2 moveto
      112 34 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      112 18 moveto
      160 18 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      160 18 moveto
      160 50 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      160 82 moveto
      160 122 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      144 122 moveto
      176 122 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      144 130 moveto
      176 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
newpath
   160 130 moveto
   160.00 162.00 160.00 180.67
   160 186 curveto
closepath 1 setgray eofill
0 setgray
gsave
   newpath
      160 130 moveto
      160.00 162.00 160.00 180.67
      160 186 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      16 186 moveto
      232 186 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      232 186 moveto
      232 146 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      232 98 moveto
      160 98 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      160 18 moveto
      280 18 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      232 186 moveto
      280 186 lineto
   stroke
grestore

% OVAL
newpath 20 186 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 20 186 4 4 tgifellipse stroke
grestore

% OVAL
newpath 20 18 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 20 18 4 4 tgifellipse stroke
grestore

% OVAL
newpath 284 18 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 284 18 4 4 tgifellipse stroke
grestore

% OVAL
newpath 284 186 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 284 186 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      16 34 moveto
      136 0 atan dup cos 8 mul 16 exch sub
      exch sin 8 mul 170 exch sub lineto
   stroke
grestore
gsave
   newpath
      16 170 8 3 0 136 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      288 34 moveto
      136 0 atan dup cos 8 mul 288 exch sub
      exch sin 8 mul 170 exch sub lineto
   stroke
grestore
gsave
   newpath
      288 170 8 3 0 136 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      160 50 moveto
      184 66 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      232 114 moveto
      256 130 lineto
   stroke
grestore

% TEXT
0 setgray
newpath
   36 86 moveto 59 86 lineto 59 118 lineto 36 118 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      38 111 moveto (in) show
   grestore

% TEXT
0 setgray
newpath
   308 78 moveto 342 78 lineto 342 110 lineto 308 110 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      310 103 moveto (out) show
   grestore

% TEXT
0 setgray
newpath
   135 52 moveto 152 52 lineto 152 79 lineto 135 79 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      137 73 moveto (f) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      418 186 moveto
      0 280 atan dup cos 8 mul 698 exch sub
      exch sin 8 mul 186 exch sub lineto
   stroke
grestore
gsave
   newpath
      698 186 8 3 280 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      426 90 moveto
      0 272 atan dup cos 8 mul 698 exch sub
      exch sin 8 mul 90 exch sub lineto
   stroke
grestore
gsave
   newpath
      698 90 8 3 272 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      434 194 moveto
      -88 0 atan dup cos 8 mul 434 exch sub
      exch sin 8 mul 106 exch sub lineto
   stroke
grestore
gsave
   newpath
      434 106 8 3 0 -88 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      434 98 moveto
      -88 0 atan dup cos 8 mul 434 exch sub
      exch sin 8 mul 10 exch sub lineto
   stroke
grestore
gsave
   newpath
      434 10 8 3 0 -88 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
newpath
   704 168 moveto 714 168 lineto 714 199 lineto 704 199 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      706 192 moveto (t) show
   grestore

% TEXT
0 setgray
newpath
   704 73 moveto 714 73 lineto 714 104 lineto 704 104 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      706 97 moveto (t) show
   grestore

% TEXT
0 setgray
newpath
   440 153 moveto 455 153 lineto 455 185 lineto 440 185 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      442 178 moveto (0) show
   grestore

% TEXT
0 setgray
newpath
   440 59 moveto 455 59 lineto 455 91 lineto 440 91 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      442 84 moveto (0) show
   grestore

% POLY/OPEN-SPLINE
newpath
   426 90 moveto
   474 90 lineto
   482 34 lineto
   530 34 lineto
   538 90 lineto
   602 90 lineto
   610 34 lineto
   658 34 lineto
   666 90 lineto
   682 90 lineto
closepath 1 setgray eofill
0 setgray
gsave
   3 setlinewidth
   newpath
      426 90 moveto
      474 90 lineto
      482 34 lineto
      530 34 lineto
      538 90 lineto
      602 90 lineto
      610 34 lineto
      658 34 lineto
      666 90 lineto
      682 90 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
newpath
   434 130 moveto
   466 130 lineto
   474 186 lineto
   538 186 lineto
   546 130 lineto
   594 130 lineto
   602 186 lineto
   666 186 lineto
   674 130 lineto
   682 130 lineto
closepath 1 setgray eofill
0 setgray
gsave
   3 setlinewidth
   newpath
      434 130 moveto
      466 130 lineto
      474 186 lineto
      538 186 lineto
      546 130 lineto
      594 130 lineto
      602 186 lineto
      666 186 lineto
      674 130 lineto
      682 130 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
newpath
   294 73 moveto 309 73 lineto 309 104 lineto 294 104 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      296 97 moveto (v) show
   grestore

% TEXT
0 setgray
newpath
   22 80 moveto 37 80 lineto 37 111 lineto 22 111 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      24 104 moveto (v) show
   grestore

% TEXT
0 setgray
newpath
   192 40 moveto 207 40 lineto 207 71 lineto 192 71 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      194 64 moveto (1) show
   grestore

% TEXT
0 setgray
newpath
   182 32 moveto 197 32 lineto 197 63 lineto 182 63 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      184 56 moveto (S) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      232 114 moveto
      232 98 lineto
   stroke
grestore

% TEXT
0 setgray
newpath
   205 121 moveto 222 121 lineto 222 148 lineto 205 148 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      207 142 moveto (f) show
   grestore

% TEXT
0 setgray
newpath
   206 95 moveto 222 95 lineto 222 122 lineto 206 122 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      208 116 moveto (_) show
   grestore

% TEXT
0 setgray
newpath
   410 112 moveto 427 112 lineto 427 139 lineto 410 139 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      412 133 moveto (f) show
   grestore

% TEXT
0 setgray
newpath
   411 87 moveto 427 87 lineto 427 114 lineto 411 114 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      413 108 moveto (_) show
   grestore

% TEXT
0 setgray
newpath
   60 24 moveto 79 24 lineto 79 55 lineto 60 55 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      62 48 moveto (C) show
   grestore

% TEXT
0 setgray
newpath
   79 32 moveto 94 32 lineto 94 63 lineto 79 63 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      81 56 moveto (1) show
   grestore

% TEXT
0 setgray
newpath
   264 99 moveto 279 99 lineto 279 130 lineto 264 130 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      266 123 moveto (2) show
   grestore

% TEXT
0 setgray
newpath
   249 91 moveto 264 91 lineto 264 122 lineto 249 122 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      251 115 moveto (S) show
   grestore

% TEXT
0 setgray
newpath
   102 88 moveto 121 88 lineto 121 119 lineto 102 119 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      104 112 moveto (C) show
   grestore

% TEXT
0 setgray
newpath
   122 96 moveto 137 96 lineto 137 127 lineto 122 127 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      124 120 moveto (2) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Sep 15 15:23:30 1998
%%EndDocument

 endTexFig
 1345 1384 a FH(Figure)30 b(5.7:)42 b(First)29 b(order)h(highpass)f
(\014lter.)367 1530 y
 13287916 9012101 4670504 38482329 17958420 47494430 startTexFig
 367 1530 a
%%BeginDocument: figs/hpass1.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      220 162 moveto
      220.00 194.00 219.83 215.17 219.50 225.50 curveto
      219.17 235.83 218.50 242.33 217.50 245.00 curveto
      216.50 247.67 217.17 251.83 219.50 257.50 curveto
      221.83 263.17 224.33 267.33 227.00 270.00 curveto
      229.67 272.67 232.50 276.50 235.50 281.50 curveto
      238.50 286.50 240.17 289.83 240.50 291.50 curveto
      240.83 293.17 244.50 295.17 251.50 297.50 curveto
      258.50 299.83 265.33 301.33 272.00 302.00 curveto
      278.67 302.67 287.83 301.17 299.50 297.50 curveto
      311.17 293.83 319.50 289.83 324.50 285.50 curveto
      329.50 281.17 339.83 274.50 355.50 265.50 curveto
      371.17 256.50 384.17 249.50 394.50 244.50 curveto
      404.83 239.50 415.83 233.17 427.50 225.50 curveto
      439.17 217.83 445.67 212.83 447.00 210.50 curveto
      448.33 208.17 449.83 205.17 451.50 201.50 curveto
      453.17 197.83 454.17 195.17 454.50 193.50 curveto
      454.83 191.83 453.83 189.17 451.50 185.50 curveto
      449.17 181.83 446.50 179.00 443.50 177.00 curveto
      440.50 175.00 437.83 172.50 435.50 169.50 curveto
      433.17 166.50 432.33 164.33 433.00 163.00 curveto
      433.67 161.67 423.83 158.50 403.50 153.50 curveto
      383.17 148.50 362.67 143.83 342.00 139.50 curveto
      321.33 135.17 299.17 131.83 275.50 129.50 curveto
      251.83 127.17 238.67 126.83 236.00 128.50 curveto
      233.33 130.17 230.50 133.17 227.50 137.50 curveto
      224.50 141.83 222.00 150.00
      220 162 curveto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 192 moveto
      216 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      216 176 moveto
      216 208 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      224 176 moveto
      224 208 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      224 192 moveto
      272 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 192 moveto
      272 224 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 256 moveto
      272 296 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      256 296 moveto
      288 296 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      256 304 moveto
      288 304 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 304 moveto
      272.00 336.00 272.00 354.67
      272 360 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 360 moveto
      344 360 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 360 moveto
      368 320 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 288 moveto
      368 272 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 192 moveto
      392 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      344 360 moveto
      392 360 lineto
   stroke
grestore

% OVAL
gsave
   newpath 436 192 4 4 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 436 360 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      440 232 moveto
      112 0 atan dup cos 8 mul 440 exch sub
      exch sin 8 mul 344 exch sub lineto
   stroke
grestore
gsave
   newpath
      440 344 8 3 0 112 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      232 175 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      245 180 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      240 279 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      253 284 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 192 moveto
      128 360 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 224 moveto
      272 264 lineto
   stroke
grestore

% OVAL
gsave
   newpath 368 308 20 20 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      189 241 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      197 236 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      213 236 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      204 236 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      213 337 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      221 332 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      237 332 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      228 332 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      307 324 moveto (z ) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      316 324 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      332 324 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      323 324 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      452 276 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      461 276 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      477 276 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      468 276 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      176 216 moveto
      0 64 atan dup cos 8 mul exch sin 8 mul rmoveto
      240 216 lineto
   stroke
grestore
gsave
   newpath
      176 216 8 3 -64 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      342 288 moveto
      56 0 atan dup cos 8 mul 342 exch sub
      exch sin 8 mul 344 exch sub lineto
   stroke
grestore
gsave
   newpath
      342 344 8 3 0 56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      248 288 moveto
      56 0 atan dup cos 8 mul 248 exch sub
      exch sin 8 mul 344 exch sub lineto
   stroke
grestore
gsave
   newpath
      248 344 8 3 0 56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      392 192 moveto
      432 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      392 360 moveto
      432 360 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      405 142 moveto (q ) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      413 147 moveto (n,1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      181 236 moveto (v) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      205 332 moveto (v) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Sep 15 16:33:55 1998
%%EndDocument

 endTexFig
 2150 1572 a
 13287916 8683192 4670504 38482329 17958420 47165521 startTexFig
 2150 1572 a
%%BeginDocument: figs/hpass2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      308 156 moveto (q ) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      317 161 moveto (n,2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [8 8] 0 setdash
   newpath
      221 152 moveto
      219.67 181.33 219.50 199.83 220.50 207.50 curveto
      221.50 215.17 222.83 219.33 224.50 220.00 curveto
      226.17 220.67 230.17 221.83 236.50 223.50 curveto
      242.83 225.17 248.33 226.50 253.00 227.50 curveto
      257.67 228.50 262.83 229.83 268.50 231.50 curveto
      274.17 233.17 277.67 234.00 279.00 234.00 curveto
      280.33 234.00 290.17 233.17 308.50 231.50 curveto
      326.83 229.83 344.33 228.00 361.00 226.00 curveto
      377.67 224.00 394.83 220.50 412.50 215.50 curveto
      430.17 210.50 439.67 206.50 441.00 203.50 curveto
      442.33 200.50 443.50 196.50 444.50 191.50 curveto
      445.50 186.50 445.83 183.17 445.50 181.50 curveto
      445.17 179.83 444.83 177.83 444.50 175.50 curveto
      444.17 173.17 444.17 171.50 444.50 170.50 curveto
      444.83 169.50 439.50 168.50 428.50 167.50 curveto
      417.50 166.50 406.67 165.83 396.00 165.50 curveto
      385.33 165.17 372.17 165.83 356.50 167.50 curveto
      340.83 169.17 330.67 170.67 326.00 172.00 curveto
      321.33 173.33 315.50 174.50 308.50 175.50 curveto
      301.50 176.50 296.67 176.50 294.00 175.50 curveto
      291.33 174.50 288.17 171.83 284.50 167.50 curveto
      280.83 163.17 278.67 159.17 278.00 155.50 curveto
      277.33 151.83 274.17 147.83 268.50 143.50 curveto
      262.83 139.17 257.33 136.67 252.00 136.00 curveto
      246.67 135.33 241.50 135.17 236.50 135.50 curveto
      231.50 135.83 229.17 136.67 229.50 138.00 curveto
      229.83 139.33 229.50 141.17 228.50 143.50 curveto
      227.50 145.83 225.00 148.67
      221 152 curveto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 192 moveto
      216 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      216 176 moveto
      216 208 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      224 176 moveto
      224 208 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      224 192 moveto
      272 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 256 moveto
      272 296 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      256 296 moveto
      288 296 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      256 304 moveto
      288 304 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 304 moveto
      272.00 336.00 272.00 354.67
      272 360 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 360 moveto
      344 360 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 360 moveto
      368 320 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 288 moveto
      368 272 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 192 moveto
      392 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      344 360 moveto
      392 360 lineto
   stroke
grestore

% OVAL
gsave
   newpath 436 192 4 4 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 436 360 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      440 214 moveto
      136 0 atan dup cos 8 mul 440 exch sub
      exch sin 8 mul 350 exch sub lineto
   stroke
grestore
gsave
   newpath
      440 350 8 3 0 136 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      232 175 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      245 180 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      240 279 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      253 284 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      128 192 moveto
      128 360 lineto
   stroke
grestore

% OVAL
gsave
   newpath 368 308 20 20 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      189 241 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      197 236 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      213 236 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      204 236 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      213 337 moveto (2) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      221 332 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      237 332 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      228 332 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      307 324 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      316 324 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      332 324 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      323 324 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      452 276 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      461 276 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      477 276 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      468 276 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      176 216 moveto
      0 64 atan dup cos 8 mul exch sin 8 mul rmoveto
      240 216 lineto
   stroke
grestore
gsave
   newpath
      176 216 8 3 -64 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      342 288 moveto
      56 0 atan dup cos 8 mul 342 exch sub
      exch sin 8 mul 344 exch sub lineto
   stroke
grestore
gsave
   newpath
      342 344 8 3 0 56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      248 288 moveto
      56 0 atan dup cos 8 mul 248 exch sub
      exch sin 8 mul 344 exch sub lineto
   stroke
grestore
gsave
   newpath
      248 344 8 3 0 56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      392 192 moveto
      432 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      392 360 moveto
      432 360 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      272 256 moveto
      368 256 lineto
      368 272 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      181 236 moveto (v) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      205 332 moveto (v) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Sep 15 16:34:08 1998
%%EndDocument

 endTexFig
 531 2898 a FH(\(a\))i(First)f(phase.)40 b FG(nT)e(<)25
b(t)g Fz(\024)g FG(nT)32 b FH(+)20 b FG(t)1847 2912 y
FA(1)2240 2898 y FH(\(b\))31 b(Second)f(phase.)40 b FG(nT)33
b FH(+)19 b FG(t)3252 2912 y FA(1)3317 2898 y FG(<)25
b(tnT)32 b FH(+)20 b FG(T)944 3120 y FH(Figure)30 b(5.8:)42
b(The)30 b(ideal)f(SCN)h(part)g(of)g(the)h(circuit)e(in)g(Fig.)41
b(5.7.)245 3451 y
 15238157 8944863 0 0 18945146 18945146 startTexFig
 245 3451 a
%%BeginDocument: figs/pic03m.eps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	false def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0793651 0.964133 0.0123607 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(2)] .18254 0 0 2 0 Minner Mrotsboxa
[(4)] .34127 0 0 2 0 Minner Mrotsboxa
[(6)] .5 0 0 2 0 Minner Mrotsboxa
[(8)] .65873 0 0 2 0 Minner Mrotsboxa
[(10)] .81746 0 0 2 0 Minner Mrotsboxa
[(12)] .97619 0 0 2 0 Minner Mrotsboxa
[(Frequency in kHz)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-70)] -0.0125 .09889 1 0 0 Minner Mrotsboxa
[(-60)] -0.0125 .22249 1 0 0 Minner Mrotsboxa
[(-50)] -0.0125 .3461 1 0 0 Minner Mrotsboxa
[(-40)] -0.0125 .46971 1 0 0 Minner Mrotsboxa
[(-30)] -0.0125 .59331 1 0 0 Minner Mrotsboxa
[(Noise PSD in dB)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
0 0 .5 r
.001 w
.04762 0 m
.04762 .61803 L
s
P
p
0 0 .5 r
.001 w
.14048 0 m
.14048 .61803 L
s
P
p
0 0 .5 r
.001 w
.23333 0 m
.23333 .61803 L
s
P
p
0 0 .5 r
.001 w
.32619 0 m
.32619 .61803 L
s
P
p
0 0 .5 r
.001 w
.41905 0 m
.41905 .61803 L
s
P
p
0 0 .5 r
.001 w
.5119 0 m
.5119 .61803 L
s
P
p
0 0 .5 r
.001 w
.60476 0 m
.60476 .61803 L
s
P
p
0 0 .5 r
.001 w
.69762 0 m
.69762 .61803 L
s
P
p
0 0 .5 r
.001 w
.79048 0 m
.79048 .61803 L
s
P
p
0 0 .5 r
.001 w
.88333 0 m
.88333 .61803 L
s
P
p
0 0 .5 r
.001 w
.97619 0 m
.97619 .61803 L
s
P
p
0 0 .5 r
.001 w
0 0 m
1 0 L
s
P
p
0 0 .5 r
.001 w
0 .0618 m
1 .0618 L
s
P
p
0 0 .5 r
.001 w
0 .12361 m
1 .12361 L
s
P
p
0 0 .5 r
.001 w
0 .18541 m
1 .18541 L
s
P
p
0 0 .5 r
.001 w
0 .24721 m
1 .24721 L
s
P
p
0 0 .5 r
.001 w
0 .30902 m
1 .30902 L
s
P
p
0 0 .5 r
.001 w
0 .37082 m
1 .37082 L
s
P
p
0 0 .5 r
.001 w
0 .43262 m
1 .43262 L
s
P
p
0 0 .5 r
.001 w
0 .49443 m
1 .49443 L
s
P
p
0 0 .5 r
.001 w
0 .55623 m
1 .55623 L
s
P
p
0 0 .5 r
.001 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.18254 0 m
.18254 .00625 L
s
P
[(2)] .18254 0 0 2 0 Minner Mrotshowa
p
.002 w
.34127 0 m
.34127 .00625 L
s
P
[(4)] .34127 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(6)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.65873 0 m
.65873 .00625 L
s
P
[(8)] .65873 0 0 2 0 Minner Mrotshowa
p
.002 w
.81746 0 m
.81746 .00625 L
s
P
[(10)] .81746 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(12)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.05556 0 m
.05556 .00375 L
s
P
p
.001 w
.0873 0 m
.0873 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.15079 0 m
.15079 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.24603 0 m
.24603 .00375 L
s
P
p
.001 w
.27778 0 m
.27778 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.37302 0 m
.37302 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.43651 0 m
.43651 .00375 L
s
P
p
.001 w
.46825 0 m
.46825 .00375 L
s
P
p
.001 w
.53175 0 m
.53175 .00375 L
s
P
p
.001 w
.56349 0 m
.56349 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.62698 0 m
.62698 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.72222 0 m
.72222 .00375 L
s
P
p
.001 w
.75397 0 m
.75397 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.84921 0 m
.84921 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.9127 0 m
.9127 .00375 L
s
P
p
.001 w
.94444 0 m
.94444 .00375 L
s
P
[(Frequency in kHz)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .09889 m
.00625 .09889 L
s
P
[(-70)] -0.0125 .09889 1 0 0 Minner Mrotshowa
p
.002 w
0 .22249 m
.00625 .22249 L
s
P
[(-60)] -0.0125 .22249 1 0 0 Minner Mrotshowa
p
.002 w
0 .3461 m
.00625 .3461 L
s
P
[(-50)] -0.0125 .3461 1 0 0 Minner Mrotshowa
p
.002 w
0 .46971 m
.00625 .46971 L
s
P
[(-40)] -0.0125 .46971 1 0 0 Minner Mrotshowa
p
.002 w
0 .59331 m
.00625 .59331 L
s
P
[(-30)] -0.0125 .59331 1 0 0 Minner Mrotshowa
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .14833 m
.00375 .14833 L
s
P
p
.001 w
0 .17305 m
.00375 .17305 L
s
P
p
.001 w
0 .19777 m
.00375 .19777 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .27193 m
.00375 .27193 L
s
P
p
.001 w
0 .29666 m
.00375 .29666 L
s
P
p
.001 w
0 .32138 m
.00375 .32138 L
s
P
p
.001 w
0 .37082 m
.00375 .37082 L
s
P
p
.001 w
0 .39554 m
.00375 .39554 L
s
P
p
.001 w
0 .42026 m
.00375 .42026 L
s
P
p
.001 w
0 .44498 m
.00375 .44498 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .51915 m
.00375 .51915 L
s
P
p
.001 w
0 .54387 m
.00375 .54387 L
s
P
p
.001 w
0 .56859 m
.00375 .56859 L
s
P
p
.001 w
0 .07416 m
.00375 .07416 L
s
P
p
.001 w
0 .04944 m
.00375 .04944 L
s
P
p
.001 w
0 .02472 m
.00375 .02472 L
s
P
[(Noise PSD in dB)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.18254 .61178 m
.18254 .61803 L
s
P
p
.002 w
.34127 .61178 m
.34127 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.65873 .61178 m
.65873 .61803 L
s
P
p
.002 w
.81746 .61178 m
.81746 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.05556 .61428 m
.05556 .61803 L
s
P
p
.001 w
.0873 .61428 m
.0873 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.15079 .61428 m
.15079 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.24603 .61428 m
.24603 .61803 L
s
P
p
.001 w
.27778 .61428 m
.27778 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.37302 .61428 m
.37302 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.43651 .61428 m
.43651 .61803 L
s
P
p
.001 w
.46825 .61428 m
.46825 .61803 L
s
P
p
.001 w
.53175 .61428 m
.53175 .61803 L
s
P
p
.001 w
.56349 .61428 m
.56349 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.62698 .61428 m
.62698 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.72222 .61428 m
.72222 .61803 L
s
P
p
.001 w
.75397 .61428 m
.75397 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.84921 .61428 m
.84921 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.9127 .61428 m
.9127 .61803 L
s
P
p
.001 w
.94444 .61428 m
.94444 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .09889 m
1 .09889 L
s
P
p
.002 w
.99375 .22249 m
1 .22249 L
s
P
p
.002 w
.99375 .3461 m
1 .3461 L
s
P
p
.002 w
.99375 .46971 m
1 .46971 L
s
P
p
.002 w
.99375 .59331 m
1 .59331 L
s
P
p
.001 w
.99625 .12361 m
1 .12361 L
s
P
p
.001 w
.99625 .14833 m
1 .14833 L
s
P
p
.001 w
.99625 .17305 m
1 .17305 L
s
P
p
.001 w
.99625 .19777 m
1 .19777 L
s
P
p
.001 w
.99625 .24721 m
1 .24721 L
s
P
p
.001 w
.99625 .27193 m
1 .27193 L
s
P
p
.001 w
.99625 .29666 m
1 .29666 L
s
P
p
.001 w
.99625 .32138 m
1 .32138 L
s
P
p
.001 w
.99625 .37082 m
1 .37082 L
s
P
p
.001 w
.99625 .39554 m
1 .39554 L
s
P
p
.001 w
.99625 .42026 m
1 .42026 L
s
P
p
.001 w
.99625 .44498 m
1 .44498 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .51915 m
1 .51915 L
s
P
p
.001 w
.99625 .54387 m
1 .54387 L
s
P
p
.001 w
.99625 .56859 m
1 .56859 L
s
P
p
.001 w
.99625 .07416 m
1 .07416 L
s
P
p
.001 w
.99625 .04944 m
1 .04944 L
s
P
p
.001 w
.99625 .02472 m
1 .02472 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.004 w
.04762 .20395 m
.05385 .20395 L
.06008 .20395 L
.06632 .20395 L
.07255 .20395 L
.07878 .20395 L
.08501 .20395 L
.09124 .20395 L
.09748 .20395 L
.10371 .20395 L
.10994 .20395 L
.11617 .20395 L
.1224 .20395 L
.12864 .20395 L
.13487 .20395 L
.1411 .20395 L
.14733 .20395 L
.15356 .20395 L
.1598 .20395 L
.16603 .20395 L
.17226 .20395 L
.17849 .20395 L
.18472 .20395 L
.19096 .20395 L
.19719 .20395 L
.20342 .20395 L
.20965 .20395 L
.21588 .20395 L
.22212 .20395 L
.22835 .20395 L
.23458 .20395 L
.24081 .20395 L
.24704 .20395 L
.25328 .20395 L
.25951 .20395 L
.26574 .20395 L
.27197 .20395 L
.2782 .20395 L
.28444 .20395 L
.29067 .20395 L
.2969 .20395 L
.30313 .20395 L
.30936 .20395 L
.3156 .20395 L
.32183 .20395 L
.32806 .20395 L
.33429 .20395 L
.34052 .20395 L
.34676 .20395 L
.35299 .20395 L
Mistroke
.35922 .20395 L
.36545 .20395 L
.37168 .20395 L
.37792 .20395 L
.38415 .20395 L
.39038 .20395 L
.39661 .20395 L
.40284 .20395 L
.40908 .20395 L
.41531 .20395 L
.42154 .20395 L
.42777 .20395 L
.434 .20395 L
.44024 .20395 L
.44647 .20395 L
.4527 .20395 L
.45893 .20395 L
.46516 .20395 L
.4714 .20395 L
.47763 .20395 L
.48386 .20395 L
.49009 .20395 L
.49632 .20395 L
.50256 .20395 L
.50879 .20395 L
.51502 .20395 L
.52125 .20395 L
.52748 .20395 L
.53372 .20395 L
.53995 .20395 L
.54618 .20395 L
.55241 .20395 L
.55864 .20395 L
.56488 .20395 L
.57111 .20395 L
.57734 .20395 L
.58357 .20395 L
.58981 .20395 L
.59604 .20395 L
.60227 .20395 L
.6085 .20395 L
.61473 .20395 L
.62097 .20395 L
.6272 .20395 L
.63343 .20395 L
.63966 .20395 L
.64589 .20395 L
.65213 .20395 L
.65836 .20395 L
.66459 .20395 L
Mistroke
.67082 .20395 L
.67705 .20395 L
.68329 .20395 L
.68952 .20395 L
.69575 .20395 L
.70198 .20395 L
.70821 .20395 L
.71445 .20395 L
.72068 .20395 L
.72691 .20395 L
.73314 .20395 L
.73937 .20395 L
.74561 .20395 L
.75184 .20395 L
.75807 .20395 L
.7643 .20395 L
.77053 .20395 L
.77677 .20395 L
.783 .20395 L
.78923 .20395 L
.79546 .20395 L
.80169 .20395 L
.80793 .20395 L
.81416 .20395 L
.82039 .20395 L
.82662 .20395 L
.83285 .20395 L
.83909 .20395 L
.84532 .20395 L
.85155 .20395 L
.85778 .20395 L
.86401 .20395 L
.87025 .20395 L
.87648 .20395 L
.88271 .20395 L
.88894 .20395 L
.89517 .20395 L
.90141 .20395 L
.90764 .20395 L
.91387 .20395 L
.9201 .20395 L
.92633 .20395 L
.93257 .20395 L
.9388 .20395 L
.94503 .20395 L
.95126 .20395 L
.95749 .20395 L
.96373 .20395 L
.96996 .20395 L
.97619 .20395 L
Mistroke
Mfstroke
P
P
p
p
.004 w
.04762 .46585 m
.05385 .45663 L
.06008 .44709 L
.06632 .43759 L
.07255 .42834 L
.07878 .41945 L
.08501 .41097 L
.09124 .40291 L
.09748 .39525 L
.10371 .38799 L
.10994 .38109 L
.11617 .37454 L
.1224 .36829 L
.12864 .36234 L
.13487 .35665 L
.1411 .3512 L
.14733 .34598 L
.15356 .34096 L
.1598 .33613 L
.16603 .33147 L
.17226 .32696 L
.17849 .3226 L
.18472 .31836 L
.19096 .31425 L
.19719 .31023 L
.20342 .3063 L
.20965 .30246 L
.21588 .29867 L
.22212 .29493 L
.22835 .29122 L
.23458 .28751 L
.24081 .2838 L
.24704 .28003 L
.25328 .27619 L
.25951 .27222 L
.26574 .26806 L
.27197 .26361 L
.2782 .25877 L
.28444 .25336 L
.29067 .24712 L
.2969 .23968 L
.30313 .23045 L
.30936 .21848 L
.31248 .21102 L
.3156 .2022 L
.31871 .19163 L
.32183 .17876 L
.32494 .16276 L
.32806 .14233 L
.32962 .12982 L
Mistroke
.33118 .11521 L
.33273 .09786 L
.33429 .07669 L
.33585 .04984 L
.33663 .03325 L
.33741 .01354 L
Mfstroke
.33784 0 m
.33741 .01354 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
.34477 0 m
.3452 .01272 L
s
.3452 .01272 m
.34676 .04743 L
.34831 .07293 L
.34987 .09285 L
.35299 .12246 L
.3561 .1436 L
.35922 .1594 L
.36234 .17153 L
.36545 .181 L
.36857 .18848 L
.37168 .19442 L
.3748 .19917 L
.37792 .20298 L
.38103 .20604 L
.38415 .20848 L
.38726 .21043 L
.39038 .21198 L
.3935 .21319 L
.39661 .21413 L
.39973 .21484 L
.40129 .21512 L
.40284 .21535 L
.4044 .21555 L
.40596 .2157 L
.40752 .21583 L
.4083 .21587 L
.40908 .21592 L
.40986 .21595 L
.41063 .21598 L
.41102 .21599 L
.41141 .216 L
.4118 .216 L
.41219 .21601 L
.41258 .21602 L
.41278 .21602 L
.41297 .21602 L
.41317 .21602 L
.41336 .21602 L
.41356 .21602 L
.41375 .21602 L
.41395 .21602 L
.41414 .21602 L
.41433 .21602 L
.41453 .21602 L
.41492 .21601 L
.41531 .21601 L
.41609 .21599 L
.41687 .21597 L
.41842 .21591 L
.41998 .21584 L
Mistroke
.42154 .21575 L
.42777 .21523 L
.434 .21452 L
.44024 .21366 L
.44647 .21268 L
.4527 .21161 L
.45893 .21047 L
.46516 .20928 L
.4714 .20803 L
.47763 .20675 L
.48386 .20543 L
.49009 .20408 L
.49632 .20271 L
.50256 .2013 L
.50879 .19987 L
.51502 .19842 L
.52125 .19692 L
.52748 .1954 L
.53372 .19383 L
.53995 .19221 L
.54618 .19052 L
.55241 .18876 L
.55864 .18691 L
.56488 .18494 L
.57111 .18281 L
.57734 .18048 L
.58357 .1779 L
.58981 .17498 L
.59604 .17159 L
.60227 .16757 L
.6085 .16265 L
.61473 .15646 L
.62097 .14839 L
.6272 .13747 L
.63031 .13047 L
.63343 .12207 L
.63655 .11185 L
.63966 .09923 L
.64278 .08336 L
.64589 .06284 L
.64745 .05015 L
.64901 .03524 L
.65057 .01737 L
Mfstroke
.65179 0 m
.65057 .01737 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
.66583 0 m
.66615 .00493 L
s
.66615 .00493 m
.66771 .02408 L
.67082 .05292 L
.67394 .07379 L
.67705 .08957 L
.68017 .10182 L
.68329 .1115 L
.6864 .11924 L
.68952 .12548 L
.69263 .13057 L
.69575 .13472 L
.69887 .13814 L
.70198 .14096 L
.7051 .14329 L
.70821 .14522 L
.71133 .14682 L
.71445 .14814 L
.71756 .14923 L
.72068 .15013 L
.72379 .15086 L
.72691 .15145 L
.73003 .15192 L
.73314 .15229 L
.73626 .15257 L
.73782 .15268 L
.73937 .15277 L
.74093 .15284 L
.74249 .1529 L
.74327 .15293 L
.74405 .15295 L
.74483 .15296 L
.74561 .15298 L
.746 .15298 L
.74638 .15299 L
.74677 .15299 L
.74716 .15299 L
.74755 .15299 L
.74775 .153 L
.74794 .153 L
.74814 .153 L
.74833 .153 L
.74853 .153 L
.74872 .153 L
.74892 .153 L
.74911 .153 L
.74931 .153 L
.7495 .15299 L
.74989 .15299 L
.75028 .15299 L
.75106 .15298 L
Mistroke
.75184 .15297 L
.7534 .15294 L
.75495 .15291 L
.75807 .15281 L
.76119 .15267 L
.7643 .15251 L
.77053 .15211 L
.77677 .15162 L
.783 .15106 L
.78923 .15044 L
.79546 .14977 L
.80169 .14905 L
.80793 .14828 L
.81416 .14748 L
.82039 .14664 L
.82662 .14576 L
.83285 .14484 L
.83909 .14387 L
.84532 .14286 L
.85155 .1418 L
.85778 .14067 L
.86401 .13947 L
.87025 .13818 L
.87648 .13679 L
.88271 .13527 L
.88894 .13359 L
.89517 .13169 L
.90141 .12953 L
.90764 .12701 L
.91387 .12401 L
.9201 .12035 L
.92633 .11578 L
.93257 .1099 L
.9388 .10208 L
.94191 .09716 L
.94503 .09133 L
.94815 .08437 L
.95126 .07596 L
.95438 .06568 L
.95749 .05291 L
.96061 .03675 L
.96373 .01573 L
Mfstroke
.96544 0 m
.96373 .01573 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
P
P
P
% End of Graphics
MathPictureEnd
end
%%EndDocument

 endTexFig
 2275 3266 a
 13257874 10404916 0 35719495 20589690 52099153 startTexFig
 2275 3266 a
%%BeginDocument: figs/pic03.ps


% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 310 string def

% define space for color conversions
/grays 310 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
0 543 translate

% size of image (on paper, in 1/72inch coords)
313.12800 249.48000 scale

310 247 8			% dimensions of data
[310 0 0 -247 0 247]		% mapping matrix
{currentfile pix readhexstring pop}
image

0e0a0e050e05120e120a0a0a0e0a0a0e0a0a0e120a0e05050e0a0e0a0501050a0e0a0a0e
0a0e0a0a0e0a050e0e0a0a0a0a0a0e0a0a0a050e0a0a050a050a0a0e0e0a05010a050505
0a0a0a0505010a050505050a0e0a0a0a0a0a0a050a0a050e0505050a0a0a050a0505050e
0a05050e0a050a050105050a05050e0a05050a050e0a0a0a0a0a0a0a0a050a050a050e01
05050505050a050a0a0a0e0a0a050505050a0505050a0a0a01050e05050a0a050e050505
0a0e0105050e0a0a050a0a0a050a0a0a05050a050a0a0a0a0a05050a050101050a0e0505
0a0a050a0505050a05050a01050a0a050a0505050a0a0505050a050505050a0a050a0505
050a0a0a0a0e05050a050a05050e0a0a050a0a0a05050a01010a0a050505050105050105
0505050105010a050a05010a0501010a010505050505
0e1e120e050a0a0e0a050a050e0e050a0e050a0a0e0a0a0e0a0a0a050a0a0a0a050a0a05
0a0a0a0a050a0a0e0a0e0a050e050a0e0a05050e12050e0a010a050a050e0a0a0a0a0a0a
0a0a0505050505010a0a0a0a0a0a050a0e05050a0e050a050a0a0a0a0a050a0505050a05
0a0a0e010a050a050a050a05050a050a05050a050a01050a0e0a0a050a050a0505050a01
0a0a050e050a0a05050a050a0a05000a050e0a0a0505050505050a050a0a05050a0a050a
05050e0a0e0a0a0a0e050a0a050a0a010a0105050a0a0e0a0a0a0e050501050105050a05
0a05050a010505050a0a0a0a0a0a010105050a0505050a0a0505050e05050a0a05010a05
0a0a050a01010505050105050a0a0105050a0505050505050a05050105050a0505050501
050501050a0a0105050a050105010005010a05050505
0e0e0a0e0a0e0a0e0a0e0e0e050a0a0a0a0e0e0e0a0a0a0e0e0a050e0a050a0a050a0a0a
0e0a0e0e0a0e0a0a0e050a050e0a050e050a0a0a0e0a0a0a0a0a05050a0a0a05050e0a05
050a0a0a050a0e0a05050a0a050e0a0e0a05050a0e0a0a0a0a0a0e05050e050a0505050a
000a0a0e05050a0a050a0e050a05050a050a0a0a0505050e010e0e0a0a0e010a0e050a0a
010a0a0a010a05050a0a050a0a0a0a0e05050a0a120e0a050a0a0a0a050a0a0a010a050a
0a0a0a0e010a010505050a0a0a0a0a010e0a0a050a0505050a0a0a0a05050a0a050a0a01
05050a05050505050505050a05050a050e0505050a050a050a0a050a0e05050a05010505
050e0e05050a05050101050a0505050a0a0a050505050a0105050a050a0a0a0501050a05
010105050501050a050505050505050505050a0a0505
050e0e0e0a05120e0e0a120a0a050e0a120a0a01050a0a0a0e0a0e0a0e0a0a0a0e050e0e
0a0a0a0a0a0a0e120a0a0a0a0e0e0a0e0a0a0e050a0a0e0a0a0a0a0a050e0a050a0a0e0a
0a050e050a0e050a0a0505050a0a05050e0e05050a0a0a0a0a0a01050a0a0a0a0a050a0a
0a05050a0a0e0a0a0a0a0a0e0e0e0a0e0e0e0e0e0e0a0e0e1616120e161216211a161616
161e2116241e241a1a1e211e1e2121212121242e2b1e2121212124242821242421242821
241a1e2121212821282421242428282b24281e21241a1e212421211a1e1a161e1a1a2116
160e0e1a12121212121a0e16120a121205050e0e0a0a0a0a0a120a0a050a0a0101050a0a
050a0505050a050a050505050a050a050a050a0a050a0a05050a0e05010a0a0a0a0a0a0a
050505050501050a05050505010501050a05050a0105
0e0a120e0a0e0e120e0a0a0e0e0a0e0e0a0e0e12050e0e0e0a0a0a0e050a0a0a0a0a0a0a
0e0a0a0a0a0a0e0a0a0e050a0a0e0e0a0a0a050a0a0e0a05050a0e0a0a0a0a0e0e0a050e
0a0a0e0a0a0a0a050a050a05050e0a0a0e0e0a1616120a0e0e12121a16121a1616211e21
1a24241e1a28242b28212b28212b212e2b2b282b342b37313437372e313731313d37312e
3d453d3d402e3b344337373d3b3d43343b3737453d3d37343b313b343b344337453b453d
3d484045483b43453d433b3b3b4043403d433d37373b3d3d433d45373d3134313437313b
373431373431342e34343134342b31342828243128282b28282b242416161a242416161a
121612120e0a05050a0e0a0a0a0a0a0e0e050a01050e01050e050a0a0a050a0a0a010a01
010505050a010a01050505050a050505050505050505
0e0e0e0e120a12051212120e0e0e0a0e0e0a1212050e120e0e050a0a0a0a12120e050e0e
0e0a0e0e120a0a0e050a0a0e0a0a0a0e0a0a0a0a0a0a0e0a0e0e0a0e0a0a0a160a0a050e
1a0e16161a121612161e1e21212821242b242b2b3134312e2b3134342e34343431342e34
3b37313734313b3b343740343d3d3d43373d433d3d434043483d3d3d403b434545434548
48434045454840453d3b4b403b4548433d434e4343434b454345434b48484543484b4b48
43454b4e45434b4b45454b43344b5245515143434545454e45404b4e433d3d3d43433b43
43433b4037374337403737453d343d40433d3d3737313140343731312831372e34312e31
2b2b2b2e2e241a28241e2124281e24211e1a1a1a0e16120e0e0e160e0a0e050a0a050e0a
0a0e0a0a0a05050a05050a050a05050a0a01050a0505
0e0e0e120e0e120a0e0e0a0a0e0a050a0a0a0e0e0e050a0a0a0e0a0a0e120a0e0e0e0e0a
0e0e0a0a0a0e0a0a0e120a121612120e0e0e1a12161a1a1e1616121e1e24242428242434
242e2424282e312e31212b2e3437373b34373437433d3b45403d3d3b403b403b3d48373b
373b433b3d484540454b4843373b3d4345454845403d4543484e4b43514b45434b484343
4b4843454b48524345514e514343484e484b5145435243514352434e564b484b544b4852
4e484b45514e515151454e45514e4e4b48514b544543434e5651485248404b434b404045
404343433d3d3d403d3d404e45454343404545403b3b43433b373b3b3d3d3731373b3b34
2e2e2e342e372b312b2b2b2b28282b281e28281e24211e1e1616121212120e0e120a161e
16161e1e1a1612120e0a050a050505050505050a0105
120e120e120e0e0e0e120e0e0e0a0e0a0a0a0a0e0e0e0e0e0a1216161616161a1e1e1a1e
1e1a1e1e241e1a212124282128241e242b1e21282b2e3731282e2e2e2e2e2b3d342e2e34
373d403737343d343d34373d4034513b403b43454345433d4345454b43433b4043484343
40433d3d434b3d4845434e454345454e45434843404e454e3d544b43564e4e484351434b
4b4b4851454b4e454b52544b4552514e454852524e524b544b5148514b56515848485152
5252525659544b48544e524b4e4e524858514b4b565151584e43454e4554484540404b45
43454b3b3d43403d43434343454b4551433d404543454345433b433d34433b4040373134
3d3434373b3d34312e342b2b3731342e2b282b2b2821242124211e1a1e1a161e1e121e21
211e1e21241e1e211e1a1a24160e0a0e0a0a0a050a05
0a0e050a0e0a0a0e0e0a0e050e0e161a1a2124242121242b2831342e312b31312b2b312b
282e2e28312b2e2e3137342e37312b31372b34373b3734373b3d373b3b3d34433d343d40
40433d3b403d454b403d3b45454545433d455143523d434b3b433d5143404b4b434e404b
43484e3d483b403b454e4b434843454b45454545434e5145564b544e48525252434b514e
454b4b514b514e45454352484e4e4e51544b4b4e515251545448524b4e52565d4e58524e
52544b525659515154544b515248524e565851564e4b545256564b514854454b484b4b48
48524b403d4552454543454b43484e4545484040404b433b43454b403d4e404b403d3d40
373b3d3b3b373737313b2e37372b312e2e282e2b2824282128241e12161a21161e1e1e1e
241e212424282b2e2824282b21211a1e1a120a120a05
0e0a0a120a0a0e12161a1a1e24242e312b2e3b283131343437343b373b453431403b3b34
2e3d3d3d3b373b3b3b3d343d433737343b3d373b373d3734433b31433d43404040434537
4548403d4548404540404545454843484548514b4b484e434845515148454e4848434e4b
434b45454b4843454b4b4b4e5140454b484e544b484051514e514e515154544b52484b4b
51485248484b4e514e4e48454e4e5451455151515259584b545652525254525654585854
5858565d595259585452524e54544b4e5656435254515d565659585b4b52565451515252
4e54544b4b4048433b4b4b54484e5d51454b454b4b43484e5651545245403d483d40433b
453d403d3d3b3d373b43373b3b433434312b3131282e2e2b2821211e1e1e211e1e241e24
242124282e2b2824282428282b21242824241e120a05
0e0a0e050e1a211e242b283434343437373d3d3b43403b4037404040373b373d48403b31
3d3d4045373b40454040403b40433b40433b3d374340403b45433d3b45453d4b3d453743
434848433d40484e48453d484e5245484e48524e51484856454e524b4b4851484e4e4552
48544e4352484545514b454b484b514e52514e4b5145514e5456564b52585254524e4e48
4e515252514e4b5145565959515951545d545d5956606666655256606654596259707679
705b5e667f825459565b566054569899989d545b524e51515e74a1ab815b4e54985e4b52
70b0b09243485151514e484552a1af6e514b51434b4b45908f545b7f4b434848483d3d3b
3d3d403b433d343b3d373437373734312b372831312e282b2421211a2421162121212821
28282428282b31242b24282e2b2e2b282e242821120a
0a120a12242b2e283131313743373b433d4b4345404543484548404852404040433b3d43
45453d45433d484840454b4b48484b4e40454b483d434e5151484b453d4e3d4543453d51
454e4851515d4e48525251484b524e4b484b5243544e4e4b51525151514e514b51564e52
514e514e5243545145514b5145434e524354594e45485454524b51525152514e514e564e
4851515152544b4e5656a1875d87665b87b5b86071b0bcb8a1705b98a25679a860bcbcba
b76b649fb5aa7060565656565462c2aaa29b545b545156527da2948c9c8b5d8fa658514e
a474758e624b4b4e5145484562855daa6a524b4e524e489692585e814b5d646b655d4340
403b4040433d40344031483b3b3134312b37342b2b342e2b24282821211e212128242124
2121212e2e372b2828242b2b282b24282b281a242412
0e0e12242e31313d372e3d3b454b4e4b454354514b4e524e59595e4e4845485145404b43
4e434b483d4b5d6a51454852716e6e5143434551455178949852524b4548434e4e4e4559
8b71669da6aa624e4e4858564b514b4e4b4b514b595151514e524e4851544b5254565152
4b515b515448514e52484b4548454e514854544b5158565458515156525851524b4b5158
56524b54515252515152b2b590be7290af756e8b71b58e6292ac659eab85a77b5bba655d
5e5d65a16b768e64545e564e5465b39898725451565256567978596bad9f60a1a460524b
a95962925e5451545451514b515460a470544b484b5256929b707b886899aaaeb2994045
45433d483b434048483b3d343d3b372e3b37373d37342b31312b282421242121281e2b24
2b2e342b342b2e2b2b212e282e2824282b282e28241e
0e1a242e2e2b31373d3b3b438e9d9871458e989e996b4862a5a48f594845434051454840
4b434e4e516e859074515d84988c855b4e4545454b5d92877c8b704e5652455254485660
a18179b68e70995151564e4e515b544e4e515b514e4e515b52484e5251515b52564e5248
4e484e484e455452515254484e4e4b56484e4b524e565451524e52565252565656544856
48524848585154545b59b29fa1967599ad71749875b28c6e92aa669fada9745d5bb77276
685b669f8795855b58545d596064a6a6a5925b4e5b525651595868a69f7c5d6aa260524e
7bb8b3be624b5254545851454858b26e5d524b484e54519eb8b2b589514e588c905e4343
4b43433d37433d3d373b43404043373b313b313d34312e2e3124342e241e212828282424
2b28312e2e2b2b2e24282e2b2b2b242b2e2e2828281e
1a212b2e373b313434373d439c626476548c5e58564b48607956544b584e4851484b484e
484e4b485e8c65599f527996585d8f625251485252667f5254a46d4e514e4e48524b5165
a78272ab815ea95b90a1519b5951454e584b514e4b585b52515152524b5148544e565452
5451515452485151525451524556545448484b5248545456544e52565b54515258515452
544e54585156564b5658ae94a48e7598c4bfb89f75b8c0bea766609dc87b5e5b56bac0ba
99585ea2c2ba665d625d5d5256565e5b5db25b51515b525d585d688e968b5264a75e5951
5e7079a26551527cb5b55658545860a768564e484b4b549c94606e8b51546489584b4b4e
4e4e433d43453b403b3b403d3b4337373737313b3734312b28282e28282134342828282e
2e2e2e2e342828342e242b2b3437242b2828282b2b24
282e2e372b2e3b3b433d3d4092545d89518c5858544b52657d5b544e4b5248514e4e5d6b
6b706d654e56585b8f58718c898799515151544e5666885958aa6e544e484e56484ea1b2
b28b75b5b3b7715b90a251aa5b59594b4b514848565258594e4b5256595454514b52524e
4e5452544b565952595258585852514b5b5451545b54565852545256545459525656585d
5454564e5258564b4e56b292708c7592af76789874b39ba470625da1b5aa845e5bb66564
5d5b5dab8c8b585d52565d52545b846054b359565858525b7890666aa896585da96b5951
586aa19e58524b7fbdb85d52657f62ab71524e405254549896596e8154709f74716a433d
5245454b403d37453d3743403d3b31343737313b31312e2b342e2b2b282b28342b282b31
343d28312e2e2e2b282b2e2b2b2e21282b2b282b212b
2e2b34343737373b43403b489d989b8e4b82a1a1954e4e5da1a15b4e484852484e5182a1
9ea89c7b5259668c604e62899898875b59688e8c5b68885451ad74565154544551848284
a7926ead987ba8598ea95da95d565251485251485154565152485858545654544e525658
5654564b4b4b5259595b5656484b4e524e564e565454525656545251585254545b515b59
5b5152515d5451525251ab8f5d857494ac66649e79b88c98a572659fae7baa885db67871
746060a471a96b625d5456585b65a18e92a9565651595d62798fa1a1a2745ea9beada856
6eb3966459584b686a685b545ea5af685656544b515156948b546475629da7aaa19b5143
43433d404045403b373b483b403b3d373d2e343d34403b342e282b31312b2b2b2e2b3434
2b31282e3b2b342e2b2e2b31282b3121212b2e282e28
2e2b2e2e37373d40433d405198908c644e8465605d564b658959524e4e4e48524e525851
52565b4e586b9b8e585972a95d5e856e5274b2ae515d8b6456a9725656564e5156956671
a49272ad855da85d66797fa1585652514e5959525254565451515851525e5b51564e5158
54525858525452595258545154525454454e545154525454565456595658565154515859
56565452525252545854a78b5b7d718ba66666986eba85658ea4649bae5e6ea95bb7c9c3
c46e68a4656a8c5e5e5d5b56606085aeaf7859545656565859749d8f6b59668b887d7458
607164595b5b515658525651596262514e5154564e5248565b515154565b5b5252514e40
45514b4e3b4b3d40453b3d3b3b433d3b3d3b372b37343b31312e2b34282b2e2e2e2e2b31
2e342b2b2b2b2b2b31342e342e282b2b2b2831242e28
3b31343b37373743373b4545985b768556826058585d5b5d854b4e48454e4e52564e584e
514b515662a698757659728f7d859b5b5668958e565e8998988c604e52544b525275a4ad
ba8e75acb2ab79595262a760595b5b565256565458565259515d5b525459625959515654
525958595e56585b58585b4e52545152565259515b595b58595459545b545b545b595456
565852514e5252545456705b5165566460525e5b5b645b5960665666645d60625b656465
6458595d5b5b545e5e565b585b58605e5e59565d54585452585b5b5d605259585d5d525e
565656525d585b545258565459565851525452595b56584b524b52544e5258514e4e4b4b
544b515245454b40454b4340374040483d3d3d3437343b2b342e283b31312e2b2e2b2e2e
2b31282434342e3b2e342e2e2e2b312e2e2b2b242428
34343437373d3b4040434b459b4b59706571ada4a18b595d8951564e4e514e544e51544b
524e51565d98a89f9c595964a19c7f565159565b5252718c8b5d5948525251595658767f
8164627170745b5456596a59545d515252515d525b58545b525258515258515e51545b54
5d5e585459585b4b5658545b544b515658525659595859595d5956525654595959524e52
5454524e5258544e5b595856565659514e5856545e5456584e5e59605952595d525e5d5e
5959585960595b565b5b645d5d5d605b5e585958525659605d59525158585158686b6e5d
5d655d585651565b4b5658585b586654585b546081855d5251485156544e515465855272
99a299814b52434845434b404043433d3b37433b3d403b3d373d313b2e343431343b342e
3134343134373d312e34342b31342e2b242b2e282e2e
37343b34374343343d404e4862485158565b5d64625b5254585254524e4e544e54485151
514b5159545e5d5958585958625e595860565b56565b52515454515956585658525b5858
5254545456585d585656585d5d5b5b54585459595656565b545956585659595956595b5e
5e5e5954565859595e5e565b5b544e585b585256605b6259545b5b5659595d6a60595954
4e5d5858565b545d665e6e787270565b545654585454525b525656585b5856565b54595e
585656585e585e59605b565859605e5b58515d56585d5b595d595b585b565265bdbfbb5b
64b38b565b54585258525d5b585ea45d5156648ca59e58564e56514b525651527ba75881
a97b7b8f524e514545453d4b45404045453b373d3d3b34343b37313b433134312b313137
2e3124312e37342b313437372e2e2b31282b342e2b24
313b3d343d403d4343454e4552545654514e5451515152525154595854565e595959514b
5251525e5b6060645d605852626b625e5d5e5b5d685858585152515654545d58564e5259
5856515e5954565b5956565b5956565b5b5859566290908f5d64769296755e608e5e758f
6b60a4a675646aa2b0acb2a956514e56595975adb8b8ba6b58525958545db2babe625854
5152514b5b56569f9c65b5c1baa2685b5458565859595259595b565e595b595b585e5d5d
595854595656565b565e5b5e585859525e5b545d5d5e6059605d585658545ea86b686456
90bd8b59564b5851585656545475b268585b90926b565654514854525251515679a7567d
a6586294587d5445596d4b434b4343454b45403d37403b343d34343b402e313434313434
3431342e3743342e2e373431372e2b2e28342e2b2b21
37403d373d403d433b404e529ca8abb272514e51525148455158b5aa62c4d1c3765b5252
5d5db5c36dcce4dc645b5d79eeeedf5dc5875d72cd56595852565e545856515658595458
51596052585452585d5858545b5d5b5458545e5682b6adac7b5bb2aa9f967565b58594ae
7582948899827db7a4857d6d58595258585466746b7ba46a545456565879886e72ae665b
585454525d5859a29f66b39864827f66755d54705458565651595d56585b5659595b5d58
5e5b5652565656585d5e5e58595858585b595160585e5d5865626564656871a16e6b6062
aab58b605251565d5b5956585ba498605962ac948b755958524b4b4e525d859fb0b2588b
b3a2a18c519e4e525d764843453b3d373d3d40433d434334313d3734313434373734373d
2e312e4537343434312e3437312b2b2e2e2e2e2e3124
373437344037404e45454056e1dad8db824b5145544b54515259e3c46aebbdc3d0875658
586bd3d978e4eabaa65d5868ebe99258d192607be15b52595154545b515b5d525658565b
585252565652515d59585b565e59595e60595b5d877d6d60a566a2655eaf8c64bb8f98b3
75a1726e816679ac855e58655259594b54595456609fa95956595b565d82755d6baa5e59
58545454545d6bb2a86db29f7f997198ab71669f5b585454585b595458525b5452585858
5d52585d5b565860625d5e625d5d525d545858565662595690c1bac0bc9972cabab3785b
60b28b524e52565e757b545b7992ac876062b8a8a290585252544e515d98928b98a9588b
b07b798f51a156526072524040403d37453d3b433740403434373d34373b4043313b3d34
43313b373437342e313b3b312e2e3134312e2831312b
4037373b433d40403d454851e1babdbd594e4e455151564b5460e2c364ea6daaeb966058
64cdd3907ce4e184e465595be1de725ec2946881dc59525958515456585259545b545259
5b5b58585b5859585954565b515b54595651605d829c96998c6bad9f9cc28f68bd989fb7
6ea9645b5d667cbbb7c19e6058595859585956599e9d605b585e5b5d5b88745e64af6a59
52545459568bbdbfac6eb5bbb7ab6d89ab7466a1545852544e595859564e585452585860
5d5660585d52525b5d565d5e5b5458565d585b5d585d60665d6a6a6b6b596b98607db55b
60a892585b565e8bc6c4565876a8b095685da26e5b9e5d4e51514e4e6da8766587a9598b
a85d66965b6a8f75964e45453d433d403d4840313d3b43403b3d4040343b34372b3b2837
374334403b37402e37343431343731343428312e312e
433b34433b453d3b48484e4bc7d1cccc904b4e524e514e518fd5f1d168edd9e2bd715e65
7fd1825871e4df66ec705d59e3e4745e78efbbe876585858565154595b5d5d5b595d605b
5d545b5d545b5e565b56585b565b5e595954595d82b3bfba6464bd9e9bbb9860b68bc1be
6ea56baab0877dbaa47d6e6058595e56605b5b6d9b625956587cb7b560847d5d68ab6458
525e59595db266aaa66ab29c6d82858c9e84848956595b4e5859564e585d5b5452595d60
5956595d565b565b5b5b565b59525b56525d5654605b58585d5b58595b586e9b7592ae5d
75b59f7c6659597ca7a65d5d5d5d986a595d969d9c9d58544e4b51525b7b98adb6ad5882
b6acac8b515485996a4e4b4540434034404843453d3b40453b373431403d373b3b2e2e3b
31313b3740372e34313434343134402b312b2e31342b
37433743403d4340484b434859625b90aa52525152525b59dabdead16be9b2bddb955b8c
de715b5b76e1e162ed645b5be2e1745e65edc8ea665d4e5d5856565d545b5d585b565b59
5959585656585d5852585456525d545259595e5d818b9898606da6665eb38b62b270c9bc
759c6e90ba9882ba896262605d605b5d56565b718c625b56598fc8bc59817b6e6ea26258
4e564e5b5da282b7ad68aba1849f7159769ea25d51565e525452565454565852565b545e
5e5b5b56605959605b565b5956525b585b565458605b545d565658515b5e5da1b5a96d60
acb3b5b25d5956596264585d545b855d51547292855e52544e52514b5258717b71665264
6d686e564e4e5858544b4840404037453b403b3d344b3d403440373d343b37403b3b343b
3d31373d3d34343b3d3b343734342e2b313d312e312e
3d34453b3743434b43454b51a865608fae544854514b5460e366e3d66ee6769feca298e4
b55e545671dde3a1bb595b5ee6e68b6059a5edc95d595256515b5e625d5d52585b5b5256
585b595d5b545154525d5b5654595d595b5e5d597d7f71929266a96a60b88b68b666a5b2
7275b6bbca9876bfbdc0baac60595d58565854718759565458606a625b60b8bcc0645e56
4e4856595875b6b5945ea2afac9e5b5458706d5459565b59515658565d5b545856595958
56585256545d52625d546059565256515b5b565b5456525e525856525654565960565e56
65585d5e5959545b5256565656525b545d5258585656525452525151455152585254434e
4b454e4e4e4e52514845434340454b3d4545403d3d4543373145343d3731403b3b3b4337
343d3740403d403434342b34373734343b2e34282e31
3d3b3b403d4545484843514bafcdcdd581594e4b4b51545ebae1f3d76de6eae8b065abe9
9b56525868daf1ea625b5971f5f4e9605d92e8b85e5d594e52595d5e595b595858595258
585956545b595d5e5d585b565d54515851565b5b75625b607f60795e60846b627c5d7676
6264828179626a7b7875746d54545856545b595e5e5e585b595d5d59585d646460585856
585951565158605d5b595d5b625e58545b58595d56585d59525254525859595259595e5b
54545e5b5254565b545b5d52545251545459565852585e60565d59595652595b56545662
5b585959565b565448515658565d5d545b515252545451455854514056514b4e51544b52
4052514e4e4e544e4543404b45454b4e4345433b3d43433d373d404340433b40343b3d3d
372e3734373b3d3d2e3737343b2e343b313d312b2e2b
37343b3d404848454b3d48515bb5b5b25b4e52514e4e524e81a99f7c68959884685b6d85
655251565d7584795d5b5658767271585b646d5e5b5b4e585658585d595b5d5d5b56565b
6252545859585d5e5d5d56595d5e54545e565b52595154545d545d5e5b625d5b5d54625b
5e5d5e5960595d605d5d5d625954525d585b595e5b605d58525b595b565b5d5b595b5854
5260544e525b59595d5652565d5659585d54525656525b52545b5652565b5d5d59545b5b
545654515d60545d565656585d56565458525e56625954565251565d59585e5456565652
5958565259515954515b585856565d4b4b515656525451514b4351544e4e544b3d455152
514b4b454b4b454548454543484545403b453d343d3440403b403d3b373d37342b342e37
31343434343b3b342e342b31342e2e3b3b3d2834402b
343b3d40434348404843404b4b485151564e4e5254524b52525d52595d595b5d60565956
5d4e515154515254545956525d565958516058595e59585b595959565858605b56545859
62596059545859545b59586056545d5458585b56545454595d5d5d56565e605e5660605e
5e5e5b5856595b5b595b565d565154595954515b5b595b5b56595654584e545458595856
5d595454545956595e5b5b56565d5b564e56525954525852525851595651585158565258
52514e5260514e454e54514b4e515143484b48404e4b434b3b4040433d3b403d5252342b
312e2b2e2e2e2e2e282b282e282424281e1a1e1e1e242124241a3124161a1e1a0e12161a
161a1a1a12161a1216121216121e16121616121a2e2b12120e0e12120a0e16120e0e0a16
0e0e120a160e0e120e0e16161e24313d31313434312b
3d45403b4b434048454b4b434b434b514e52515151545252525152515d4b4e5959595859
5b56525654585454565159585659594b4e5659595854595459585959585b51585b545b60
5e5856595b54565256514b58585459584e58565456565652565654565259544e4b515151
514e5451514b454e4b4843434e4343485148454043373b313137372e31312b312b2e2b2b
2b28242428242121212b37211e1e1a1e1e1a1a1a1e1a1a1a1a12161a161a1e1a1a161a16
1a161a1e451a1e161a1e281e1e2124281e212b2b282e212e34342b373b3437342e433737
343134433b3740453b37404348454e40314845453d454343434834404b4045453b4b4545
4b43404e3d403d3d3b342e343d40373d3d313d340e2e3134453d373d3434343b343b373d
3d3137313d403d43312e3d313416123b312e2e2b3131
3d3d3b45484045403d4540564851484b4545484b4b524b4e4e4b4e4b48514e4e4b484e52
5845403b453d3d31373734342e34342e2b2e2b2b28242b242824212824522121211e1a21
1e1e211e21161a1e1e1a161a1a1e1e161e161a1a1e16163b1e1a1a1a1a1e1e211a1e2121
28242128282b2828312b2e2e2b2e3d2b3b3b3b313d373b403b4b3d3b3d3d48514b514848
484b4e454b4848565145484b4e4e4852515854525456544b4e5854484b54525454565454
586056591658595654525656545652565b5b52545859545b585b5459585452521a2b5256
51565258525952515251514e52515654565858514e56544e5452374b4b4b40525252514e
524b4b524e4e51403d3b48314b454345403d3d3d0a283d342e404043403d4343373b3d34
433d3b453d433b433d373b343b160e3b342e312e3434
3b37313b40403d3d1e161a1e1a1a1a1a1a1a1a1a1a1e1e161a161a1a1e211e211e1e2424
3d21282b2e2e3137373734373b3b37373740484b4b43484b4e484552521e4e51524e4e56
56565254594e5658595458525454514e5256525459565434484b5b5452595659565d5459
60545b5154585451565b59595b5d585d4051515259545e58585b59595b545d5856645652
595d5b5e62595456564b375656565451525459546058525659525159545956565e585865
5956585b0e5d58585d565256585d5d52545b545e5d5652525b5656565b5e585416285954
56585451595b59525252545258545b5458585b595654565151513b4051565254484e4b4b
454b51514b454540373b37405148434b4b4037310e2b43433b4537404034403b3b3d483b
4340484543433b3b403b3437311a0e3b3b342e312828
3b403b3d483b3d24373b3d4345454b4b45484b454b58514e4b4e54515448525251525151
1a51514e514b4e544e5851544e56544e4e58525b5954585b595d54515412525862625b5d
596454585e595e5b595b565d545b54545456585e545d5831515d605d565d545d515b565b
59605b58625856524e56595b604b59544052565e595b6056585d605d605b5b58605b5960
5b5456545b565154594e3b5958515b59524b56595959595459585b5b5d59565851565d58
58585b4b1258545252565452525b565b5b5b56545b564e58605e585859595852162b5456
565856514e4b564b594e5b51585b5154565452515251544e5452373d5252484e524e5451
4b454e52454e404e4045434040484b4b45453b400a2440434048374037453b43403b3d45
43453b31433b4048373b373434160a343b2e342b342b
343b3d3d43373b1a4848484e514e4b514e48525151595158524b54544e4b565b54454e51
164e51584e4e5454595451565954565254525b525b5459545d5d5662561a565d5e5d5d5d
5d5d595e605e595d62605d5d525b5658545659565e5859374b595e58545651525b5b525b
5d5b4b5960585d60595b605856596054484059565b59565b5d595e5d5b5b5b59595d565d
59565e565d595d5e595656585959605951545d5459545659545b59565b585958545b5956
545b54511254595b5d5d545e5154514e54595856515b5b5b595b5b4e515d5152212b544e
52545d565b5956545454525b59515152565854515152525451483d4b524540564b4e524e
4b4e45544b404e3d454343403b4b43454548433b122448373d3d43404840453445433d45
43344543453d403d374345453b1a123440372e34342b
3d3b433d45453d1a4b4545514551544b5158514b4e52514e455652545651435451545245
124e525954565b545852595658595b515b5d5b54595b515e595659565e125259595d595b
5d56585d595858565b5e5854565d59565e515b5e5d565437515b595454545b4e594e5854
605b5659625658595b58595860515e54404e5959595d5b5d5e5d59595e595b5e5d5e5b5e
5d58605b515d595d58543d595e5659585d5958595d585952585d5952595e5b5856595256
56525d5b0e5e525856545d584e5e585d5b5b58545b515158585b5258544b58521a2b5451
565854515251525852525b5d524e4e56515652564e51524e4e48433d4e4b514e484b5451
514e54544b454045404545403d45434e453b453b0e2443433d45483445453b48453d3d3d
4040454e453d454343433d3d3b210e3431372e2e313d
4043404045453b1a3d434b485251434b4e4b4b4e4b5456515b52524b4e52525152545151
164b565158525954525458585856564e5b59585854585d565954545b5e16595159585454
5b515b605e59595d5d5b5662595e5b5958595959595856344b545b595e59595b595b5658
59645e565b58595e5952585d5d565956484e5d5e5d5d5b5d60565962565b56595d565b5b
5859585d5d585851585443565d5e595b545b52585959565d5e5d585b5954544e54585d5e
5252585b1258565158515b5e595b59585d5d525b58585956585b5856545858561a245656
515659515b54565b5659514b58585d5b56514e4b54514b514e4b3b4b56515251544b524b
4e4b515143453d4e4e45454345454852454b43401224434337454043403b40404540373d
45433b43403d453d34403743371e0a2834342e3b3128
3b373d433d43401e454b48514e524b4b514b4b525254514e4b5654585454515251515148
1a515156525952584e595654585152565258565956565d565b58595b590e625e595d605b
595d595d52565b585e52515b565b5d595e5e51585d595b4056525d595959565d62595459
5654585d5d525460565b62595e5256594552655958585b5960585b5b605b5d5d5b5e5852
5e5652605d59565159563b5e5859585862545b625958525d5d565e585e5656585b5b5852
5e595b5612585b5851585b565b585e5b565d5b515e565658525159565d5658541e2b5451
565b585658565951545b5452515b4e5b525658485152595151483d43514e564e544e4e4b
4b4e4e4b4e3d4b4540454840484b4e4e4b3d4040122143373d483d403d4043404840433d
43433b3745484540403d4037371e0e2e2e31343b2b2b
3b3b4343404b43214b484b4851515654545b5651524e514e52515956585b48544e525151
16514e545456545452605652525458565b59595452585d5652585b605812595e5859605d
5b5e56585d5b58595b5854565b54595454565d5656585140515e5e585b54545b5659545b
5b595b585d545b5d585e5d5b5b5956594e51625d5d5858565e595859595859565e5d585e
595d59545b5e565654565856565b5b60546052545b5959565d59605858585b5b545e5458
565458510e525e5e5458545e565d5e5b4e5b5d5e565658525658545256545b5b1a245458
5d51524e56485456584e52585b4b525251564b585251584e5143403d454b545154564e4b
454045403d45404e52433d404e4e4848434b4e401224403d4545344b48404337453d4345
4545454048453b3d45454543371a0a2b312b3d31402e
3d3d3b3b4345401a45544845514e4b4b4e524b525252515454545151544b485156545851
1a564e4e4e51565658514e5151585858525251525258595651545b5b590e5d585b585656
5d545954595d625e6259595b58605b5d5b5b5659645d543d51595d595d625952565d5856
595d5b5d5e5b645b605b56605859595b3d515959595d5d5b58595d565e525e5d565d6259
5959605d545b4e5b54593456565859545b595b5e525d5b5958565b5e59565d585e60595e
5e5e5e5612565d5b5854565d52585e4e564e5956585b5d58525b58585954595b1e1a595d
5b585d5b515856545b5b58585458585851564e5658544b4e4e543b454e4e434e4843524e
454051454b5643484e43455248454e484b4540400e28483d3d43434e4b45454345454845
4045484045434348403d4540371a0a2e2e342e3d3d3b
3437373d40513d1e48514b4852484b4b4b5848585156584354585b515652544e5452584e
1a584854514e524e545954515459565251565b564b595d51595460525b1a595b5d585859
5e5858585d645e605d5959565b545d565e5459565d5b5b4354545b5d515b5b5b5b5e5b65
5d595b595d59565b595956645b525b584e4e5d4b54585859545b5d5d585d4e5b5e586260
655e5654565d5d54545837595d5d605e565e59525660565b5b605b5859565656585e5d54
525458580e5b5658524e565254565b525b595d5b5d5859525859565856595b581e215260
595b5856564854544b585854545b43525851524e5852584e5248433b434e4b484b4e4b4b
514e514e4e5645484b344b434b43433d4e4b4e4312164543374048404848434e45434345
48404540434545454343453d431a0e31344340403b2e
2e3437403d4b40214b45484e4e5252525454525152485259564b5b525254515151525656
1a4e4b56524e4e4e51544b565258544e54585456565258545152565d5b16595658595854
585e5b5d54585e5952585b5b585b5d585d5d54595452593d515d59565e5d54605d54545d
565d5e5d5b58595d5b56595852595856434e54595b585d565b5d566a5d5d565b645b5b5b
595e5d59585b5e56515b455659525454525659565454565b525b58585459585256595d58
525b5b520a5252514e5456605154525b565d5651585256585e585b59595456521e1e5251
5d5b5656525151524b52585651515252584b514e515156514e523d435452524b4b4e4b4e
51564b5451435245515145454e48484e5148454316214b40404e4b45484b454b48434848
453d375248454e4843453d45341a0a3b3b403b3d3b34
343b3d3d40483b1a4e514e434e4b525148584e4b4b5252524e545251545154515456544b
16515452545454515b5859545154565454585254564e585b52525b5b560e5152595b5660
60655b5b54545458595d5958585e56585b5b5b5b595458454e56665d595e5b54545b5d5e
5e605d5d56565956545958595959565943455b5956525d5e59605e565e60595659645862
605d5b5d585954544e5848595b58585b605b545d545b5d5d565459545158545b59565b58
5156545812565656585b64584b525d545b59565e5256595d56585459525858561e1a5256
585d564b5652545b54515654525151595656524e4e4b584e5248403d544b4551404e4b51
56524e4b454b4e4b4e4e454552514545454551480e214b3d3d4843434548404b40454b45
4345484e3d485645433d3d4043160e403d40313b3b34
3b373d404543401e404e52524e4e54544e525152544e51515254584e5256514b52514e4e
1252525659565451565654545454545456565852585b5b585956515b54165b5b59605d5b
585d5b5d59565d5e595d5660545e605b58585b5b5b59583b45595b5b5660595d52605d5d
605e595d5b585d565b56525b625d5b5648515b595d5956595e605858625d595b5b565b5d
6660585b625b644e515d2e5d5d5e595d5e595b5859595b56595952525659605b58585258
52515651124e565b5b5b5458565d58565d59565b5b5b605b525658525d565b5828215256
5654564b565658595452595652524b565254564e5156514e4b563d404b545151484e5243
525151514e45524b484b4e4e4b454848453d4b4e161648404543454b4e45454e51484b51
4e4851454e454543433d3d40371e0e434337403b433b
3d3b45404043431a4b454e4e4b515152514e5259585e52544b5159514e52564851564b51
124b545656515452545454545b585454515b58585b565854565859565812525259585959
5d595b5e5e595b59565e5e5b5452565659595b585b5e5b4b4e5d51585b595d52595b5958
60565959625e5d625d5b5e60625d5d5845515b5959565d62525b565b605b5b5e59595e60
5d5b5b5e685d5b545251315658645959585658545b5b5e585456525d5d5251545b565960
5960595b125b4e5d545b5d60585d605b5159565e5d5b5e565251515b5958565b2821564e
565158515851565656565252594e5b5852544b565154564e5454433d514b4b514e4b524e
4e4b4e5254454e4b454e45434e434b4e4b4845401621453d3d4b434548484b454b40514e
48484848454540434543403d371a0e453434313b3431
403b37434043451a43484b4851525152585152565156525452545854524e515252595448
1a4b56585151525952545951545154595b5454545b5b585b585454516016565d59515b56
605b595b595b595e5d585b59565b525254595e595e5856404b565b5b5659595656565d5e
5d5452595e6062605e605958585256594e525454595b585e5d5959545b56545e595b5b5b
5d6458585d5d5b585b5b585b5956625b5b605e545b5d545d595e5d595658595958595656
545b58581656585d564e5b5e54565156585d545258595b4e56595d5d5d5e515b2b215458
5956524e5858594e544e4b545b56565251514e514b514b5152484040564b4b544e4e5251
52524e514b4e5151484b4e5240485148454543521e16434845433d48484843484e484b48
434845454545403b4b434040431e0e313d31313d4540
3d3b3d3d4843431a434e4556514e4e4b5451525456545451514551545156585652545143
164854515154544e5858544b4e585654525459595b5b58595959585456126059585b5858
5b585e6452565d6256595d58525d5b5b515e585b585d5e404b5e5d5b5b5d5956595b565d
5d595d52545d5859585d5d5b5d5d60594848525d5b5b5d60595860585b59565d5b515859
565d5b5465585152565937514e59605e626056595d5d5e5d59585b5d545d5b5d56565958
5b5851521252525b56565d60585b525b5d5e54545258585859525451595b56511e215254
59515151565251525454525456564e454558524b4e4e524e4b45404e54584b4e48514b4e
4b5251544b4b52484e4b434e4e4843404351434516244b3d374b40484e40433b48434048
4e4843433d3d3d404b4e5143431a123431403d3b4034
403b433b433b431651484b454851434e525b56525252525d524e5251485951525251514b
1a4e58565251484b51585456514b58545d5459545256645454524e4e5e165b5956545958
595656605e5452645b5d565659605d5d56525e5d5e5854434e605e585d5e515656565e58
595256565d565e5e58585960585b5d58484e525d5d58595e595454565e54595b565b5656
5d51525b56565b586258315259525856605d595e59605859595d585452565b56585b5d5b
544b544e0e4b5d585b565d5b565b584e52565254545d525958514e565e58565221215451
515654515b5151544552525454564848484b484b4b54524e4b52403d4e4e48483d454b45
4e4b4e454b453d3b484845403d4343373d3d373412213d374043343b3d3437373434373d
3d373734343b3434343b342e31241a433d40433b3b3d
34343d434043451e45434e4e4b45515152564b484e52434b51544b4e5452564b584b5445
1a48434e59584e545d54595454595854515b565151525b5656565b56541a4e5258525156
5856565e545960545d5e5452565e565656595b5d595b5d43456260595459595b52525656
565b585b56565859525d545859565b56454e565b5e5659585b6054545d56595852585254
565b59545656565459512b6459585954516058594e51525252585948484b4e5248484b4e
4845484b16485148434340484045313d3b3434282b342e28342e2b24281e1e283b372121
1a1e1e1e161a1a161a1a161a1e1a161a16160e1212161a161a12241a12121a1212121612
1616121a1616121616120e1216121e161212121a312e12160e12160e16120e1e161a1221
16161e211e1e1a1e1e211a12121e2b3b3b373d3b342e
343437484343401a48484545514e54434b54524b51525851515154454e5652524854524b
1a40524e5251564e52515656514e4e51595254564e5951544e515456511a40524b514e56
4b514e5148524b4b484b4843404e4545484845454e3b3d343b40403d40313b3434373434
31313b3b31313131282e2e2e34342e2b2b31242428282424241e211a1e211e211e161e1e
16211a1a1e1a1a1a1a1a3b161a1e1e1e1a1a16161a1a1a1e16211e1e1a1e1a1a211a2124
1e211e24432e2e283128342e283134343d3b344b3d434043454b48433d3b434e2b213d4b
4b43485148514b54583b4b4b4843484b4345434845514b454e5137404345484e51514e45
4b404b4b4e4b4b48453b453d4b484048404845400e1e43434b404848404340404340434b
40404543404045484545433437161a403b313d313434
313b4348404348213d3d433d3b4345403d48403b3d3d403d373b3b3b312e2e37282b312b
282128242124211e21211a1a211e211e211a1a1a1a1a161a16161a1a21371a1e1e1a161a
211a21211e1a1a21212124242424212b2e2b24282e2b2e34242e31282e3b313134313434
3b4048403d40453b4543403b40434b4e403d453d48435248524e5152485251545654585b
54565456545d525b51512b52565456585854565659525e514b545956595658564e58515d
54524e51125656525454525658565156525251545e52585b595954525654525d21215451
5854515b5b515151525245434b4e484b4e4856484b52515452524343524e544852454e45
51454e514345455148484345404845484b4e404512214b454540453d43484e4545524848
4843404554454b484845454540160e3b3d34453d403d
373d40434543433b1a1e1a1a1e1e1e1e2828282b2b2b212e28282b2b282e2e313b313b3b
24403b3d3d3b3b3d4b3b4e454b48544b564e514b524e4e594b515456561652545451514e
565258565b54545152565b54585d52595e5256545258594b4e525259595d51545d59525d
545d6056525d5651545b5959525b5b564e5159596059585b56605e5b5b5e525858565b5b
5b5e595e5659545958582b54515456515656585b5d5b5b66566256585959585958595b5e
59525456125958585656625956605958515b56545d5d5b525b5b5d5d5452524e211a5856
4b5456525b5148525954524b514e4e4b515b524e4b5451524b51404551524b4e4e4b4e4b
4e52454e51514b4e4b4b3d4b4b4b484e4e4e4e40121e524e5145434040454e4e48434845
48484e43434343454e484e43401a0e3d433d3b403d3b
373b3d4345454516434843454b5143454e51515254594e4e485251545848545654544e43
16484e524b4b51514e5154564b5152595b544e4e54525852515851565816515254515854
58525651525652595d5b5b595656525159565b565e59594348525854565b59595154595d
56595d525b595b5b5b595b5858565b5b4e4e56595b565b5d565b545b5d605b5b595d5b56
5b5d5e5d5e5b5b545b5e2e595e5d565b5e5d5d585e5d655d5d5d58595b545b5e60585256
585659560e54595e58515d515b5d56545858565b5b52585d595859525b54515621215958
5656545651525252585658565643564b4e56515851594b4e51453d435245515654545851
455245524b454b454e484852453b4545404e3d34162145453b484545454e4b484845434e
484043484552434545483d40401612343b4840404034
3b3745374543481a454e484e4b4548524b4b5251514b524b514b5254595854545154514b
164e4e524e545254514e4b5958545459515954545b595856565b59595612595954545854
5256565d605b59565b54565d4b525b595859605d585854434b59565856525b514e5b5956
605e5d54525252595b5958545952525b43485e645e5d585b5e595b545b595d595b585d5d
544e5e5954595258525b5656565b5956586056585d5858565654565252585e5956585856
5b565b58125156595d566260545b52545252585d5d4b545b5959585956585954211e5154
485152565251525152545458515656514854514b4b5451434e4b3d3d4b524b514e4e4b40
4b5151484b54454e5248484b514e403b3b453b40161e48454b3748484b4e434b4b544845
4543454845434b5248484340481e1a3d3b4e40313b3d
343d433d4540431640454e48484e5154524b584e4e4e5451525456544e4e585852514b48
164b5251524b585452524e514b52515254565456585452515456524e56124b545459595d
5e59565652565151595260565b595b59625e585b5e58544845515b58595b54545d5b5258
565b5859545854545658585b59595d59434556545d5e58595b59595d5854565454565b5b
59545b5d5b5d5e5b48512b54595b58585b5e5b565958605b5d5d51585254585959565458
585d54520e585d56525b5b5d565e5956584e525d525954585656585158584e521e1a5648
5954525859515452515152524b4e525448434e52515252524e513d3b514b4b4b5152524e
52454e4b4b4e4548484b4e3d454b454840483d451e2145453d434b4348454b455440434b
5240453d4543454543484e40431e124043453b434324
373b3d3b48453d16404843484545455448484e4e4b51514e544b4e544e5951594e524848
124545544b5254565256585b545851525b5b585b51545259545252565e12565659565256
54545958545454545658585258545954585e565258595b4b45595d5e545d56545b5b585b
5d5b5d525952545b5852545858565b5b4348595b5b5e5954525658625e5b545b5b54585e
595b5b515459545e585b2859545158545d565d5b5954585154595d5954585b60565b5b4e
5b585d5812545b525158525d595b585b5d5956585d5254565d5b5851545856591e1a584e
524b54485156514b544e4551485151564e5251514e51514e51523b3d51434b4e484b4e4e
4b56524b514b4b4e4e43453d3d4348484e3b40431e214545454e484b454e4b4b4845483b
40404b484848484340404843451a0e43434045433d34
344e3d403b45431a454b45525452564e4e4b4e4e4551524b5245524e5152524e59544e48
0e5456544b4e4e515251565452524b52545658545852545245585b565812525856585258
58545d594e58585b564b5e5460595959584b58545b5258454e54585856585b5d5b525b56
59545b525956585958545260595454544e51525d56595d5b59595e5b5d565d585956545e
595d525e5b5b58565b5e2b5b51585459585b5d5b58595258585b59565b5e565e59565656
595d565b0e595d5b565d525b565459525b5d585d545854525d52565e4b525152211e565d
485154584e5252564b51525158544b564b4b454e525154524e4b3d37514e454e4e525251
4e5251514e4e514852484543484e454b4b4b4e482121404e454545404345484b45454b52
52485148404348484e434551401e123b3d4043453b40
3b3b3d3b403b401a4543514b45484b484e4e4b524e51584e5245515b52514b515658524e
1a51585b5b5251515256515851525254595852594b58565651585851521a4e5456585859
5b51515d5654545d565d54595b5451565b515854565959435159545656595b565d5d595b
525b545452585856585d5659585b5d545143545e5658585860525d5d5e585d5e595b6056
5256515d545d52565958565b5656565b5d5b585d585b565656565d585b56585b56545e52
525458581259595b545e545959585b5b605259565b5958585d5d5b585454564b1e285856
5254565251525154485652525254515248514b524e4e525154543d434e4b52514e4b5452
4e524e514b454e484b514e45544548454b4845431e1e48454b454540434851514b434b48
4e45484545514352434e484b451e1243454534403d40
403d43434345401648404e45484b45454b51484b524e4e4b4b5248515251545d5852544b
16524b565156525154515b525b52545459524e525854565451595d52521259525d595654
5d525d585e5b54565b5b56565659545856525254545854485252585251525656564b5956
605b595159525959565b5858565d59595143525258606259605b5e595b585b59565b5656
585958595e60595d585e285256565d5b545e58595e5b5b59565859545e59595b59585452
6051595d0e594e565b56585b5b545856605b5b525858515b595b54525e5852521e1e514b
514b585151524b52514e4b514b5159525b524e515252525145513d3d454051514e4e3d4b
51514b4e45524e4e525245454b4e4e4e52484345161e484840484b4e514e515140434845
4b4843434545435445484e4843211a3b43453b3d4043
34343b37453b37124040404b4b52454548524e4e515152455154514b544b544e4551564b
1a454e4e524b48525654545154515656545452594e584e485258515651124e4e4e4e5852
584e51515b58545d5956515859595e595e5459515b56564551625656525b5e595e51585d
5e5958565158585d5b5656545952585645455b56525958565e585e5b585d545d5d5d565b
5b5d585b5e62595956522154585e5258525d545852595959585654595b5d565b5956525b
585b59581654525256545658566056565b58545d585b515952515458595d5252211a5258
525251524e52595452585254544e58564e544b515151484b4552433d4b4352515251454b
4b544b4e52514e4e48484e4e4b4b5148514e45451e214b4b404545454548514543434b45
5145515145454e43454e5148431a0e4534483b3d2e3d
3d3734343b3b37164340434845514b484e544e4e51514e4b524b524b584852565252514b
124b52544e5254525654564e524b5452565452544e595154595458564e0e594e5b545958
54545454545258544e585956585d5e5d5959585154565b45485b5b52595b5b56565e5d56
56545458595651565b5b564e5d595159514e5b5959595d585b5854585858595659515652
5e595e545b5b56514e543b5d5b595d56585656565b5e59585b5e565b565d5458585b5956
585d5b520a58564e545d565254585d4e5259515b545b545852565456515952521e244b52
485251514e4b524e5151484e515151514b524b4e544b54454e4540404b455148454b5245
454e4b515851434b4e544e4545524545434b4540161e48434b4848434545454e4b484851
4e404b434552403d4345484e401e0e48403d43403b3d
40373440454034163d43404548454b524e525154484e514e4b5245484e51515851524b4e
1248454b4e564e5451565e51544b544e5652594e585156545854595656164e525659565d
58584e544e565158525b54565b5d5b5d59585b5954565943515156605958595e595e5458
5b565658595b524e56525452595e54564e45595158585b5d5256595b595d545658595954
565652595b5d5d58525b455652585d58605e58595d5b625d59585e565952515458595b54
56544e52125e5b4b58585b584e585856585859585d52595658525656524b5b521a215154
4e52544e514848585154544b54524e4b4b4b5151514051434e513b40524b4b4b4e4e524e
4b4551525151514b4b524b454e45454b454b4b43161e3d3d4845485445484548484e4548
43515243484048454b4e4848451e12453d4343403d45
31343d43453b3b163b4540484b544e524e595256485151484e4e52515251525152524e45
1243524e52584e4e51525251525251515b484e5951525859545452595112544e594b5858
5251565e5459565960595656515d5b58585660525d595b434e56565d5b56565959525959
5e51545e595459545d58545456625951584552525b58585d6459605d5d5658565b5b565e
58565d5e4e5954595652245859595e52565d5952585b595954585b585b545d5b4b585654
54524e590a595d58645e585b5854565456525d565851585658585259595858541e214b54
5252515b524b56514b515156525651524b5156525851525245483d4b45454551454e544e
4e54525140514e484845484b454b45484e453d400e2134484e43514e4e45434b4b52404e
51484e455245453d4848453d451a12484548453b343d
313737433d3d3b163d3d4b43484b434e45524b4e514b4b4b4e514b51484e4e545156544e
125145514851515458545952544e585856484e525b4856514e58564e520e595451565459
58455458545b56515d585658525d56565d545b565656563d4b59585b5b5d565b595d595e
5b54585d5b595b595854545e565e58594e51565d5e59595b625b59595958565d5e59595e
5b52565d585b5b5854522156595b56565d60585d5d5d58565b58585452594e5458595654
514e545816595252545d545b52585b5b525b5656545251515852565252565b521e21524e
594b51595254545254525454515152514b524b454e584545454b4343434b56525154514b
435452524e4b454e4e5151564e4b515152454345122143484040455248584e484e454548
4e4e484b4343404b4e4e4545401e0a4b434545433d43
343431373b373b164043484e5948514e4b51434b4b4b454b4851484b4e4b4b5452484e45
1652564e4b4e54545656544e54514e545154514b4b5658524e56525152124e4e5b595652
545d584e5254545456515952565251514e5d5b5158485845484b5e595258515b4e5b5858
595956595d58595d565859595b595959525460565e5e5b58585b565b59605d5b5658565d
54595b595d59595e5b5d5456545d56545b595b5b5b56585452595958515d586058595d58
5952524e164e565951525252595b59584e51525e514e565952565459515656521a21545b
4e5154564e524b54544e524e54565652514b4e51564b56454e543b3d514e4b4e484e404b
4e45514e524e51524b5151514b454b5151514e4316214e4345434e544e454e5140484e48
4e43484b454e4e435151434b451e0e433d434534403b
34343b3d3d453b1a3d454b40434b4e52484b524b51514e4b4845514b514e52544348523b
124551544b4e525254515b545256525848514b54525154585859545456124b5152585659
585252565958564e5b5452595952525656595b5159565245545b5b52525254545e56545b
5956525b6056525b585b5b5b59545b5651485d5d5656595b595e5b5d625b5b5859595b59
5b5d5956585459565b5931515d5954595b585e6456585b5952585d52515d585859544e52
54524e56125151595b5451514e4e58525b58595b5b58545858585156514b51521a24544b
515251585854485252565b515954564b484b524e4e58524e544b3b51524e4b4e514b5245
434e4b4045514e51454e4b51524e4b4e4e45454812244e4e4e4540484848454548454b4b
4b4e434345404848484e4043481a0a484b403d483d48
3b373d37373b4016434e4e4843484e51514e4b4b4b4e4e48484e58454e4b52484e524b4b
164348544e4b4e4b52545852545852544b56524e51564e51545152595b12525454545151
54564b5852585e5454525d5658525460565160585852524b4b565b58545654595d595b56
6452595d605d545954595b59585d565952455b565b5e545e5b595458585e5e5e565d5b5d
5d59595d51585e595b5221545859565b5656595456565858565b5659565958585b515951
564b54520e524b565854565645565658585859545d565259524e4b4e4b5156541628545b
514551485e52514b515b524e4b545156524b4551514b52524e524043454b484b4e4b4e43
434b3d4543404b40404540403d453737403b3b4e1e2b403d3d37343b373d4334403d373d
40343b3734372e31342e2b312b24214543433b404540
3b3b373d3d373b1a3b3d484348484845484b524b454b51514559524b4845454e48545243
16564b524e4b4b54544e4e4b4e5448515954514b4b4e524e4e524e4e5112595258545152
59565959525b5152545954525659545b5651524e525859454b4e5e585654524e56565456
525459515b5952565652545958545952454054565960595d5e5956565b585b56545d5654
5b545651525458524e512451545152564e4e4b564e4e484b45434e48455243454b403d43
48403b3d243b3434402b37313134342b31312b3128242b2424212421211e241a3b401a1e
1a1a1a1e1a1a161e161e1a1a161a121a161a12161216161612122b1a1612160e16161a16
1216121a121e161a1216121a161e1e161a1a1a1a342e1a1e1621161a121a1e1e211a2121
1e16212116211e211e2424212424284548404545403b
3137403d373d37123b3d3d45484b4845484e484e4b4848484b4548484843524b584e4e4b
1251454b4e5251524854525445484b453d4b4b4e4b45514e4e454b4b4516484843454545
454b434e43523d4b3d4545374340374e3b3b3734373d3d34343134312e312e2e282e282b
2b312e282b2b24212421282121241e21242116241e211621241e1a1e1a1e1a1a161a1a1a
1a161a1a1a1e1a211e1e3b1e1e1e1a1a241e1e2824242424211e2b312e2b2b2e34313134
2b2b3131244034374337373b3b3b373d37403d433745484845454e434b404b4b2137514b
4b5252514351434e404b484e514552515251484e565151434343343d4545454b4b51454e
4b5152524b454b4b52484e45514e4b404351404316214b4848484e45484548454043483d
4543434e4551454048454543451e0e3d45343b40453b
2e3437483437341e2b282e2b2b282b2b242824242824282424241e1e1a1e2121161e1e21
2e161e16161a161a161e16121a1e16121a121a121e1a161e161a1a1a163b16211e212121
211e1e2424282b2e2b2b2b2b2b2e2e453434342e343b34373b344343453b3d45453b454b
43454e4b3d4b4551514e52545451565451514e5259525651595152525d56545252585d60
5456525651515254525924484e4e5154515951524e54545b5856515b5152525456585652
544e525b124b594e58545452514e5956565d5256584b564e564e524b585b585b12285152
5859544e5152525651525254545451515652514e525451514e48373d4e4b5b4b52544345
5456544851454b484e4545514b453d4e4548434516214b48404b4845434b4352454b5140
434540404e45434548434340481a0e3d40483b3d3b40
3731373d403d3d24241e242428282e2831312e2e2e3b3d34404543453d433d4e4e403d43
1a434b484b4b4b4e48434b45524e4e514e52484e484b4e4b4b564b525412565252515856
585452594b5254545951585652525659515258525159564552525454595954524e545852
5d5459585954595654595d56565e5d5645525b595e5d5e60605b5b5b62595d59585d5658
5b5b5b59585b58515b5631595e56585b6254595e5252565454565454584e5656544e5654
4e514e581651585651545158525b5251525851604e5654595b4b4b5254584e511634544b
585456565259544e5252515656544e515251564e4e525156565137454e45484b4b544545
404e5652514b4b484e515245524548454b48404516244e454b4b454b4845515248544e48
514e4b4b48454e4b48484345401a0a3d3d4045453140
343734404340401240433b45433b4548485243434e524b525143514e5248515651485131
1652484558514e4b4e5152524e4b4e525451515454585d514e5251525812515656585456
52515851565952565959585456595d525659595954545240435459515458545159595958
595b58545651595659565e595d5e5b5b454859595e58595d59585d6059565e595b525854
545d58525d52585b54562b5158545d5b5d59595d5154525e5d5b5654595b5d59545b5656
525856510a585d5d544b5658545860584b5956525b51585251564e525454525412345452
5658564e5d5852585845525151585252524b4b51564b5b5445483b45514e4b524b514552
4e4b51454e514e4b45484e4b4840515445454b450e2b4e48484b484340485148484e454b
4e4e484e4845454e45434548451a0e3b3b40403b3b34
34373737403d3712403b40404548454e51404848434e45434b514e5143484e514b4b4534
16454b4e565b4e525159514b51584e54544e5b525652514e545456545212545156545254
5852515658525452545254565d56514e5b59595159595d404b5159565654645b5b5b5b5e
514e595854585d5d595d596659595956455159565256595d59595e595e5b56595d5d5954
5958595d51564b565b5d5658515456525b4e5b595d5b5851545959595258545d565b5956
54565156165b5656565b5d595658565d525958545859595d51565651595456510e345258
515251524b48514e565152525652515859514e524e5251515651374e514b484845515151
4e45454545434b4b4b4e454e4543514b544e51430e28484e3d484e434540514e403d4b51
434e4045454554454b483d43451a1a43404340433d3b
3b3134403d403d1245374845404e45453d484b4e48434b454e4851514e48404b484b4b34
1251515651545256515252565151525b524b52515659564e585b524e520e5d584b545659
515258525b5b5b565658595b5b625260585962525e5956434e5956595259625e5456565b
5d5259525956585651565859564e585b4e5156565b58605d565d565b5b59565b5e5b5654
5d5b5b5958585b5456542b5254545e545b5b595b5b54595156525d5b525b5456585b5954
54595656125b585951565e5151585856565259585859525b52595151565952520e3b5d58
4b5452514b4b455452584b545d5258515652544e4e52524b52513745544e514b45514e5b
4e31454b4e40434045454e4b484b48455245433d0e28453d4e51484b455240484343434e
4e48484848404b43404e454340160a3d45453d454040
3b3d373b4540370e45434345404e4b48434b4843403d4345484b4b5145454b544e524b3b
16524e51525459524b544e4e51565b544e51595958545b545852544b560e5951514e5856
4b56525459515854525952565659515260545652585b52454859545d525b56605b5b5259
5d5b58545d565654585b5b5b59595959515256515e5b5d625e5b6456595e60545959605d
5d5d5e58515954585654285154525854605e4e5b60525659585952565854595658525654
5854545d165656585d5858595958565658525456545659585159525b51515852052b5954
51545959585959545b56565452544e51514b58565945515454523d544e52514b52564b4b
454b4b4b4e45454b4e48484e4548483d455152481228524340434856514e4e4b4e484345
4b4e484843484848433b4e4045160e404545403d4340
3d31313b403d3d0e484851453d484e4b4043454e514e524e48454e4b4b4b4e4b5452513b
165152565152545652545151595458594e4e525656565b56585d585954165962515b5454
5b565458515b525954525d54545654525d595851645d524551595d585b5856595960585b
565d5859545452595854605b5b5654594e4056595b5860585b606059585958565d5d5659
52595b595256526556563154595459595b54525d5b56525b595958545859565d52545454
5652565b1a5d545b5152545d595d58585859545d525b565958564e4e51545852123d5243
56524b565b595952545856545256454b4e524b4b4e52514e5852314e54515451544b5251
434e514e434e51524843514e484e484845484e430e24484e4b58564e564845515248484e
4340454b484048484b454e43480e124345454343483d
37343740483d4012403d4e4345453d48484b5445514e4b454e48524e514b485852514337
1251514e584b5151524e524b5459544e594e4e58595652585952595b4512545d54545651
545b54545456585454545156585954525b59525858565940525e59605b5b5d5d5b5e5b56
545b5b595959545b585d60595d5b4e564854565d595b60595d5d585d565d5b5d5b595d56
5858585b515d585b5b594b5954565959565d545e5859595b5b5d595958585e5258565954
58515b52126056565452545d56545256515856585e565252565b585654565b58163b5856
51545e525d5e585d54525652565248545152515654545454564834544b51585254453d45
51515458434e4e524e4e524b484e51514b454b43122e4e454b48484b5145484848484545
4843484348434843434540433b161243484345434340
3737403b3d3b3416434543454b40404b4e43514b485245404e45524b4b4b4b5151484534
12514e4e5452515454565148515158564e455b545956595654525852540e595651565454
5654585659585d56565459545b545d54525654595659523b515b585d59595e5d545b6254
4e59565862585e5b5b545954605b595952515d565d595d5b5b59585856585d5b5b5b545d
5d585859525456565b522b585252564b515b545458545b54585b5d525b5b595d54595b56
545b51521a604e59545b5d605d4e5858545e5b56545654514e595b58545251511234584e
4b58525951524b5154585654524e51544b544e4e595645514e45374e4e51524b4b4e4b4e
4e4b4e4e43454b514b454b4b4e484b454548453d0e283d454e45404548484b4043454545
40434e4b4e51434540454043400e0e34433440433d3d
3d3b3d43404b3b16454e4b454b434b514b434e51484b4b43484b52514845524e4b4e4b34
1256435151484e5156545454584e4e5148545452515456585e52515454125b584b565459
5d544e52525854525e5d58525b5d525b54565654595b5431515459585154565d5d595458
595b59566b6056605862605e595b5458454854545e5b62565b5d525e5b5956595459595b
59595b5b58545152544e28595d545b5962595b5656565958545b5658595454565954585b
565454521a5859515656565b5858525b58565654564b51585b5254565654584e12345252
52514851525152515458584e4b4b565656514b4b525254594e5234525445484e51434b45
5245454b4543374e4b48484b4e484e4e4e484e3d0e2b4b5154434545483b484b45454545
43484545404e434b373d4543431a1a40404343313b48
313b3b3b43433b1a4e484e515140484b40454b4e52434b434b484b454e524b484b54453d
12514e59514b4e4e515452524e4b54514b58564e4b545156565251595b12525852515d5b
5e5852565158585651565859565159525859545652525937455b5b5d5d545b595d625e54
5d54545b5b59565e5d595b5d5b565b54435460525e5d5e5b56595652595b56595e56565b
5d59645964584e54545237585b524e605b5459545b5656525654595459595e5159545952
5856525616565b565b585258515656525159545d585d58585252525254545152123b564e
515b524e5156584e514e5256565856545252524e525254544e513152544b525954515252
4e4552514b433d484b4e4b434545434b4e4b43450a2b454b524b4e434b4045484b484851
3d404e4b453b484b48404840401a1a3b3b3d43453d34
3b373b3d4548657875544e4e4e434843434e4048434b524b544e4e454e48484b48515243
1a51485151515258564e585856514e54524e54524e54585259515252511a525b4b5b5460
595b5d564b584b515b58585d565d5b545d5856545858513b595256595254595e59565659
5d5656585b5856595e5d565b5854585e4e515659585d605b595d56565b5b585458595958
585858545854545451563d545d595954525b595852515b59585b5d515458585b5b515d58
525656561659595e5d5654605d5b4b585156585e5d515658565859595858585412345b4b
524b48485854525451515658525b5156515445485145515151452b524552515148524e51
45454e4b4b4045544b48404545484e3d4b483d400a2b5248484e4b43454b4551484b4345
3d43434b3d4e4e4548454e45431a1e45454543484031
373d3b404359bbaae47658485151484e4b4345454e434351454e4845484e52514e4b4037
12514e54484e5b514e51584e4b54515454525254545451514b525452560e4b5858545459
59565b5259585156525954524e59545856585958544e453d51594e59525b59564b5b5e51
595b52585b565b745e665b59584e56604551565b595d6262595b5b5d58685e585e5e6556
5662725d645656595852284b515d545d545b5b58545459585e5854515658585254585656
585b56581656545d5464515b515b52565656545654595b585b58595656565b540e314b51
56565958565451564b4b585252454b5152524b4b4e54515252543451434b514e48524b51
4e524e4b404b3d51485445454b4b4b4843484543122b45434540514b4543454348484848
434843484e454b4540434045481a1a453b4543434b40
3734404345485952df87704e4e4b4e4e4548514564434b4b4e4b4b4840484b514b584b34
1256514e4e48515651544e56524856524e565948515451584b5e56525b0e514e54525b52
595859545456515451525856525e5458595156515d545243515b565856564b595b5b5959
5b595454525659595b59585d58545e5945485e59595e5e5960585654545d58585e59565d
5b59565e52585452595424584859565b58545156525859594e5158565951585451545945
525d564e1a545d5b545456514e5456565d565d4e5451545b5d585b5b525b5158123b5451
5658565858525158565859545954515858545256514b525152522e4e5152544852564552
514b524e4b3b45484b4b4e4e514e4b4b4b544e3b0e2b4340454b45484843454b40484e52
51455143454e454b4b404040431e123b3131403b403b
373d3d4348403d2be3d4dd585252514e514b45434b52484845454848434b4e564e514e37
164854515852525651525448545859545259545258515d565252514e560e525958594856
58584e51515959565d5854545b525d59625159565656453d4b52585652595454595d565d
5456585152595d6254595959545e5d544551525e58595b5b5b56595858595e59595d585b
595654525b515b5958584e5154524b5d58585b545259565b525852585156515b58595651
515458581659545658545258545e59545d595b54525654525b52585658544e510e375851
59544b5258514b51545452514b4e514b4e4b51514e4e4352545631524e51484b524b4351
454e4e4851434b4545544e524548454b4b404b430e2b43433b484e4b43454b513b454b4b
48483b484345454b4045454e37161a4534403d34343d
404037404348401ee4fdf79258515152454e4348484848454045484b524e484e4e484837
1648454e54585259585445564b5d585651524b4b5452564e56594e4e4012515852565459
545958565156565862585954565e595848585b515654523d4b515b515e5d62565e5d585b
595b5954525659545160565d56565e5645585b5b52595e5b545b59645958585b58605859
585b56594e59545d5252345151545658585b585854525259585459564e52595858515b56
51544b4b165158585b585651545256515659525452565652595152525658564e0e375252
4e564b584e51545154565452545b5151565254585651545452522e5156514b525252544e
454b524b524e433b484b4b4040544345404b45430a2845404b484b4843434540483d4845
45434040433d404345434543451e0e3b403440433d2b
433d40454543431a7cb6eaec6052524b48514e454845485140484548484e4b4e4e4b4e2e
1243485851435154514b4b514b585152564e514b52525852525154514e0e595d594e4e56
595956525852565859525b59585454525258515254545437524e565654585d5e5b56595b
54545958565254545d595d5b5e5154544352545956585d545d56585e5456595654585258
566059595d4e5852544b2b485d58545b5459564854515156565258565859595959515658
524e544e165459564b525d565b52514b5d5b5451525259525b515456525851560a3b5154
51485458525456514b54564b564e56564e51434b4b54514b51512b435151434e454e544e
40454340453d4345404543454e433d45373d404012313445403d3d4340433b37402e3431
3434342b3b372e3b343b3b2e241e1e404340453d4031
3b3d3b40404537165460a8f8645b52525145514b484543514045434b45484b4e514b513d
124e4e4b5251524e51514e56524b51544b4e4b52454e4b525454454b541251515858545d
58525458585654525659525959525959565856525b5259375156585454585b54594e5d59
5656545b564b5259545b5e59594e545b404e565b585d525d525d545958585d585d545251
545456565b54525654482b524e5852514e4e5251564e4e515152524e544e514e5151514b
4e4e454521514843404e4551484345484048453d404340483d3b40433b37373428343131
372e342e282e2b312b2b2e243121242b2121211e241a21161a1e2e1a161a16121a121a16
1216161612160e16161e121a121616121212121a31241212121e1e1a161a16121212161e
161216161e1e1a1a211e211e241e2b3d4048433b403d
3b3d3b403b453712514e59bf9e59514e4e524b4848484545484348484b524e525248402e
164b52454b524e54484851455245484b40515148454b4e4e455152454512484845484343
403d45484548433d4548433d4540343d4037403b3d34372e3d403d3731372e282b2e282b
312e28312e28282b242428282821282428281e24242421241a21241e211e241e1e1e1a1a
161e1a1a1a1a1a121a1a3d1a161a1a161a1a161e1e161a21121a1621211e1e1a21211e21
1a211e214028282824212b2e3431242831342e3134372e3d31372b343737373d283d3734
3d343d3d4340403d454043404340453b3d434b4e4e4545434552285140434548454b4b52
4b453d4b4545454548524b45484848403d483d400e31433d454b454b4045484b45404545
48484b4845434b4345434043481a1a4343453b3b3434
3737403b454548242e313479ec76372e2b28241e1e1a211a1a1a1e1e1a1e1a2116161a21
34161a16161a161a161a1e1a1a1212161a1a161a1a1a161a1e1a1a1e1e342121211a2424
212128242b212821282b2b2e2e342e312e37313b3b372b3b31373b34403737373d403437
3d3b43434340484e54484b45484b545448484e455851484e56585648515145544e564b52
514b5d4e5152515658522b52485256544856455651544e524e545254525452544e564b51
514b4e521a5654595154514b5254565b4e5152515856514b514e5452565158510e345651
595854524b3454544852585252524b484852454e544e4b5156512e524e514848544b434e
4e5251454b45524548434e4e513b514545514545122b43484848454b4348454e48483d3d
43434b434e40434048433d3d371a12434337453d2e3d
3b3b403d40433d2137373b76d3c6705643403b3d4540403d37433b433b45483d40454837
1a4040454548434b5156484b4e4545515b45484b52524b515152485954125254544e5154
51544e4e54515b5459514b5258595252595d59515656563448595b565656514e544e5d54
525154545654545956595b595d60565943545152525b5959585e5259595456515b585954
545654515b5652594b542e56545256525154565252544e52525259525b56585854525451
544e544516515251525d52525b58585b515d5854524b525158515458594b525412345452
585656515154545651545652525158525152524b454e5252514b2e4b4352484b4e51514b
43514e524e434b51524e4e40484e4b4b4348453d0e28484b404e484e4b5448484b4b4545
454e4b48434043403d45433d43160e43453d40433d40
3b433b3d403d3112434e545dbafae68156565952484e4e514b454e4e484b4e43514e4031
1a4e4b484b4e5251524e484b4e5158544e5856525259524e524b545654124e544b5b5154
56585654585d565154525156625d5954595d566054585234525b595259525259565d545b
595b5256595e5652545958565652516248435e5d595659585b5d5951595b595d52595e56
585859515b4e545454522e58595b52565459525852585458564e5152525852565b565156
5b54514b164b565852525251585d525654585456545156525658525b515251510e3b5254
564851564b5654515b56565851525151515451564e4e52524b482b4552524b4b51435251
4e54514e524e4b484b4e454b4e4b434b4b4b40450e314043454e514e484b344540434b4b
454545484548453d4b404345431a124343403d3b453d
34373b374543341a48454b5671c6f4db7c56565251524e4e4b4e4b52434e514e48484534
164854524b4e52545254524e544e514e4e4e51565b514e4e56565d54540e5b5451525251
4b5156585151564e515859585d59595854565958585948344e4e58545b59545654595854
5b5258525d565654565e5b565b5e5458455259565959585858545b565b54525458585859
4e5259545e5451565856454b5b515154524b51545252565454594b5454514b52524b5258
5154564e165b515d52564b5852544e5152565d545b59585852514b594b4551520e3b5651
585452524b54585251565154515458545254524b4b5252515151344b514545524b564e54
5151434e4b4b455451484b5248454851523d4b3d0a2e454b4e45434e374b4b4e4b484b48
4e514b434843404e4b45433d371a1a4043403434343d
31373b314340341a435148514e90effcea705959565951544e514e484848524b4e48482e
124e5256515851565158514e514b4e4e4b484b525854584e52515456580e484b4e56595d
4e565254595d5259565e52565b6251585458585454525931525d59585b54515454525256
56545656545852595d5254595454595640455956585652595658585452565856565d5456
515254525652565d54522b4e56564e524b52515b5456585256545b5658565656564b4e58
4e5654561654584b54525456565b585d5e5651584e585951515256564b525d520e3d5651
4e56515d5b5252594b545456525151485252514e5154544e524b28435154564e4b545652
51524e4b4b5152404b484b4b524e4b4e434e3b400e2e434540434b48485645454b3d454e
4b4b4b484348484343434345431a1a3d403d4043433b
3b3b373b3d402e1243434358596890c3ee8b816652564b584e544e4e4b484848404b4b31
1248484e51514e59524e4b56545151564e51514b5158545158515651520e595852515458
52565954515951585d565454515b5656515d52515d58562e56525858515b565b52525959
5652595851585d5b5b5859545d52515b435159525d5456565659565854524e52565b5456
565856545456525256542e54525152525152545258525454525256585251584e58515154
545451521256525b54544e5b58565254565b59565d585b565156584e545459580e3d594e
5151525b525452565454524b5651584852584b485159545151482b435456545454514e4b
4b4e544b524e4b4b4b52454058514b484552403d0e2b524048454e484b4b434b48404540
4b404345404345524e434e484516124048453d433d45
3437373d3d3b31124345434b51595962eedde88e655d5158564e524e4558514e43524837
1652515254524b484e54524b54524b52594b4e545458564b595151545216515654585459
56545d54515256525458525b5b5d5b545b5954565d565e3d4859525b525b5b5659595458
5d5262595d59585656585259545b545943485b5458605b58515e59515d5b4e585954525b
585454545451565858593754514e565652595b585251564b455456515152545652525951
515254511a5152525d515b5b515259545d5858585e5254585651515152544e54163d5454
455251565254545256595656525151485654524e5251545154512e4b4b4e564e45514b4e
545851514e4e4b54514b4e4e4e484b4b5151453b0a2e45484b514e4348453b434e454840
4b4e454345454343484340454321123d404340454534
31373737343d2b12434045484e58565ddffeea9265585854595451524b4b5151434e4534
124e5248514e5252544b4348545954514e5154545456524e4e514e4e5212515154515452
525854524e584b5d595252595d52545259595951565658375459626256565b565d5d5654
54545251595858525b585958595d585b405451545856545456525d545656595856515454
5d565152544e515154544b525151514e4e52565954515954525454544854524b5656524b
564b544e164b56594e54525d515258525b5e565258515458564e5656515456540a3b5454
5256484e51524b56545451564b5456585252525651545454584b2e4b54544b564e52594e
5451454e4b524b4e514851544e52514b4e4b4e450e2e4b4b45434b43484b4b4843454845
4b48484b4048403d434e4048401e123d3b4343434040
34373b343d402e12484345484b4e5b5e74daf3d1765e5b5b514e54515156484e4b484b34
124b4e4e4e584b5651564b4e54545156515458545852544b52514e51510a5256525b5d59
4e52585d56545d5d5456595b5859565b58585b52545e5b375b5d5b5e565456595956545b
5959605d5d595b5456565d5b5d59545b4e51595b5d5b5e545b54595454584e5858525459
5b52525656544e455252284b4b514e56524b5452515456525256545259525d5452545952
514e4b5212545456524e5252545d5b56586059565451525158524e58585151540e3b4b54
565d545151525b56524556514b4b5654564b4852564e564e4e4b345154515158514e524e
525251524e5152514b434b4e4e4e45514b4e404e0e3748404851484b4b45484348454052
51435445433d404e4b343b37401e123d34434343433d
3437373b313d281a374343454b4e56585d8ee3f8be645e64585656595152544b4e4b5237
0a514b4e5254515254595448565259524e5b5654524b515156544b5d5412545256585656
5b515459565460595b59595d525d5452565d56545954593756595b565b585e605b525b59
54525d5852525d5b565e5d565d5e5856544e59545b5859545459515e525b5b5b60565858
5954585456525154584b2148515b52584e5856525454545651545454515656545456524e
56515152165454524b5651595156525d5260515e5e515b515b5b545256585154123b515d
4e5b56515256584e565656585452515251524e4b4e52454e524b344b45565d544b4b564e
514e5d544e514b4b4e5251514b514e4851564e401631564e455143404b524b45524e4852
483d4e48403b4848483d4048401e124b433d3b404348
3431372e343d2e123b43434843524e58606694f1f77164605b5e565654514e52584b5137
164e525159544e565654524e545151545b52515456514b514b54544e4512515654565458
5252585654515854565452595456544e544e545256545634545b5651525854565e54565b
5b5b595654595254595859595d5d5d4e48565b5b5e545d5b4e545b595859545e5256564e
54545151565652595145484e565654484b515252545256564e5451565458565656524e58
524e524812514e5151525852515458545856524e5856524e5852525b595651540a455252
585458595159585852565256515b565651524e524b51525152523143585156484b544b4e
5154524e4e4b51514e484e54484b4b51514e54430e2b4b51454e45484b454b514b564e4b
524348514e43524348404851371e12403d374b453d34
313731373b3424123d403b4548485952546472aaf0c18268585b5859545645544e4e4b37
164e524b484e52545259564e514851545d5456585258584e59565851580e52545d525659
5b595654565e5b585b5652545952544e565252565452513752595b5b545854545d545e58
545b5858595858565d5b5156565658544056545158545d5b56585d5858565e595d5b5258
595452545654524e54513d4e54544e4e51524e4e58565456524e524e5b544e5651525151
52514e4b16514e5651545b5858515252525b51565b52515856515652595460540e375254
585454585854565452545659565d585256515848545451454b592e545d4556524b545945
5154514b59514e5451434e514e51514b515152430a2e45454b4845484b4b4e4b4540454e
4845453d51514b454b433d453b161a404037433d403d
313431313b3b2b123b3d4343454b4b515b5d6566a7fbeea5645e5d585852525b59515437
12544e4e4e5252525454594b545151585152515856564e4858545159540e4e4e51525248
5860525152595b525458525258525152525958545b545431515b60595d51595d59515659
5b5d5b595b5862565656525256545856404e595d5658585458565659565d595451545b51
525b5956544e524e54512b515251564e4e524e5b545152514e54525651595b515b545456
4b52525b165856585e525448515158515b5b5b5452525456585d565b525b56540a455652
58595658565254565459565252545e5452565b5156545251545231434b56564e54545154
4b54515651524b4b4e565851514e51524b4b4b43122e4b4b4b5158584e404b4e51544b4b
404048404554454045454848431a12403b4343433d3d
3131313d3434211237313d454551584e5b62626271e3fbf88b655b62565e585258545237
12525251514e5156515b514e595458565956545659595d4b5452584e51124e5156585254
58565654565852525654584e5654514e5854585959595434564b5d545b565b5956515859
565659545658595458565854565656544854565d5459585952565b5b5452595652595656
545e5452564e4e544e522b54514e4b544e564e514e54545151515452524e52525152524e
4e4b484b0e544e585452515652585651565d5d5454595651585b58584b51515412404b52
4e565451525454524b595456544e5151525258595851544b52563b45514e5454515b4e54
4e5252515154544851544e454854524b45484e400e31544b514b4845434b4b51514e4845
45454845514e4e484852484b4e1a1e3b403d433d4843
31313737342e24163d3b4043403d4e514e545e606699f1faf579645b5b62525958585648
1a514e56525152544858565152565251544e52564e565d5458544b565616595b54564e59
5851525251565954545b525151545456515656515258513452525954565451594e595b5d
595b5d5160565b59525852565859545e435256595b59595259595b5259595456514e5158
4e59545956544e51544e525654525459564e52565252525b514b48525154515151525254
52525256164b4e4852585e5b5454525456515d5152595651525b5458595d4e580e435452
58525251565154595b5454565856564b525251564b4b565156523452545140515252514e
4b5152524352525151524b4e5252564e4b404e480e314b5252454b48434b434b4b52484b
40434e4b4e4548484e454848451a1240484545404043
31373134373428163d373b3d3b4343484b565b5b607195d3f7ae8b6662605b5254525840
164e51524858565b54585d54565959565652585d51585258525b545956125b594e4e5651
4e52585256515658595d545654564e525b54524e595656345254595d5156565b59595859
4e565d5e5b58585659585656545659593d515b59585656565d5b5b595d545b5658595652
545651565854515152452e5252594e514b4e544e5152564e5254544e54485251515b564e
4b52524816514b52585154595848514851515851525151514e5856565854485812405454
5b4b5b565156515659545158524e58485856525656544356585d2e514e54564e4e4e4e51
454b4b54545652564b51484e4e4b454554454e400e2e544b4848453d454b48484e4e4840
37404b3748514543403d4e48481a1e4543433b434343
2e2e34343431210e3d343b3b434843434b52545b585d6b72a7f7d9876e6264595b585243
1652595d5148515658564b56565656584e4e5254515156525452565254124b52514b5251
5856545659585452545951565951565154595d51545652315254595659595956545b5462
5656565956595d56585159595656525d4351544e5858595456595d595854585654545452
56564b594e5451514b4e284b514e4b514b544b565156584b52544e514b4b485656545154
544845451652514e5151525148514b5456454b5152594e5851514e52565b52510e3b5858
5145544e515254525454484e5454514b48484b485151454545482e4b4551514b45434343
40404040403d373b373b373734343134373b3b431e342e2e312e31312e2b282b2b2b2824
282128212428282b212824211e212e4543404543453b
3134342e3434211237343143403b3d4b52564e595956666884fdf9e6a26a62545b625848
1a585952524e45565452545252545659525b585654515248545454545412515152565451
4e545252595e5b565952514e4e5454595b4e5b51564551344e5459564e5254595d595256
544e5d5654584e51545152514e52584e34514e514e4852544b54544e5254514e48484351
4e43453d403d4043373b2e3d34453b3737342e2b2e31312b212b242b2828242821241e24
21211e1a2e211e211e1a161e161e1a161e1a1a16161a1a1a1e1a1e16161a1a123724121a
16161a161612161616161a1a1a1a1a1a161e1a161e16211e1e1e2e1e1a1e1e211a1e1e1e
241e24281a241e2b212828282424282e24282b31212e2e2e2b2b2e2e2e2e2e312e313724
2b2e34343d342e3d312e37342b2124404b48404b3b40
312b2b2b31311e1231343b3d3b3b434348455156525256626de1f1faf885625b5d605448
1a485254454e4b4e43484b434845434045453d4840433b374037373134242e31312e2b31
2e2b2e2e2b2b2b2824242424211e211e24212424241e1a2e1e1a1e1a161a1e1a1a1a1a1a
161e211a1e1a1e161a1a1a1a1a1a1e1a1e241a1e1a1a1e1a1a1e1e212421211e21242424
28241e2b21242e28283131312e2e2e312b34373b313143343d34403d3d3d40523d454348
434345401643454548434e454e4e45404b4e4b45484e544b4b4b545145544e5212374851
584b524e5e51565454564b5254514e514b524b56515656585851374e525645524e4b4b51
52524e454b524e5840454e524e4e434540484b430e2e524b4b4e454b4b4848484b434540
43404848514e404540454848481e1a4040454048433d
2b2e313131312b241a1a1e161e1a1a1a1a1e1e21242428212b43548fc19640282824212e
431e1e241e1a1a1e1e241a1e212121212828282b282b2e28282e312e372e3b31343d3448
434043433d454e4848484052454e4b4e48434852434b4e2e4551524b545651514e515258
56485251514e544e4e56564e585158524343515259515258525452545156515152545252
4b4e4b4b4e515443525424525245524b52514b48454e54524b51525456515151514b5151
4e51515612485856524b4b564e54584e5151564e5156514b4b52565d565659520e435658
4b545452565456585851585451584e4852524b525251485b5654344b5152545154515251
51524e56515252514e524e4b48524e4e514b40430e2e454340515248514b4e4b4b435251
48434e454848484b45434e454516124843453b434340
2e2b312e3734281a2e282b2b34343d3d3d4043454856545d565d646e99f9e46e65565e4e
1e59525b54595656544e5251525d5664514e565b525b584e58565656560a526252545656
51545452525b5959545451545254525452595651525152375252595452595d54515e5152
595652565b59545459565856585d54593d4e5452545b5656594e585b5656545451565652
52545e5651524b4e5259244e54544e5452514e515851544e4b514b51564b4e56524e525b
4e5451450e54524e52514e56485458524b4e4b4b4b56565d5d5b5b52585252560a405958
5154545152545258525156545b5b56525652524856565158545b374b5156545456524e52
52515456524e4b4b4b5143514e4b4b52524545400e374e51514e45454e4e5151484b4352
4b48514e4348434e4e4e434b3b1e123d43453d43453d
282b3134342e1e163431373d373b404040434e524e5654565d5d646670f0f4bbbe766456
1e5e54595956595454595252545458584e4856584b545654585258565916545656595956
52585956585454525d56595251525b4e52585b515956513454595d4e485d525b56525654
5459565d595156515458595b545252593b434e5b54565d51565d58545b4e565859525651
545454524e514b52584e375152584b514b4e5252524e54484e52564e514b5656514b5652
4b4e515112525151545b5151515259524b4e5454515852525b59545958585259123b5454
5b5b5856595452565656545658565659515951514e5652545654344e525454524b585851
4e5454584e4b545448454b4e52524b484e4e4b400a314e4e51514b454b4b4e544b544552
5148454e4348484e45514545401e0e4845484545433b
2b2b312b31341e16342e31373743403b434545454e514e5158585b60627ff9fdf3a56454
43766462585b5d565e5459545154595454525954515b544e52514e525912485854525652
5458585b58565951595662585b565d565d515d5856594e2e565b5856595b5d56595d5b5d
515954595b58545254565d51595456564851564e56585b59525658515954525856514b54
5b544b545156565154594b5854544b4e544e48515651545245515151524b4b4e56594b56
524b4b481251514b5454525651545254515b54585656565858525851485d52560e404854
5951564b585b5b5851525659595658585154514e58525856525137525854565254545654
4b454e524e4e52544e4b5151524e484e454b514b122854454e4b404e51484e4548524348
515148524848544e4845484b40211243454340484340
2b2e2e2b2e31211231313134433b4037404545484351524e52545d625b62bdc1e6bd6d5d
5b85665b59566260585e5852585454525156524e5d5e524e5158565456125454585b5454
585858545252595652545b5e545b5254585b5e595d545934525956585159545454545b5b
5e54565b5652585456545859565459563d40595154595252585252545256525651545251
585451515154514e524e244b52564e545454524b5256564e48514b484b58545154595252
4e4b4e4b12545451565456524e4b4b524e51564e4e56585d60585856585856560a34564e
514b5451514b52565d545256565459514e51515254565d5656523145515654525158564e
54514e4e52544b524e565b4e51514b5151485156122e4543404b514b4e52514e4848454b
4b4b4e5248454e4b48564543481a0a4843434b4b4040
2e2e343131341e1231312e3b3d3d3d3d43484348404b52515252545e605b648becf88789
72a46b6262626558606058595b585d545e5d595b544e5959595b4b565b16595d58585151
52525e4e545e4e5259545b58585256585859565d565b59375651584e5159595b60515854
4e5d5b5b5459595b545852595b545851404056515952525851595b545158525b58545451
5251524e514b545654512448514b45544e514e5152594e514b544e454e4b52524e514548
4852525212515651515e4e5b52515b5158525956585652525959584e52585b560e3d5b52
5156594e525652595159545b595d5854565256515258545258563b455156565252524e56
514558544e5454544848565852484e51514e4e481237523d4e524b4e454e4b4343545145
484845514e48454b4854524b51240e453d453b3b3d3d
2b2e2e342e3721122e2b3b343b373b3b3b40433d4e484e515156595b585b626da6edfcf5
c8ef90706062645668605b595e5860595d5b5256545858544e54524e5216595456545258
525e51565d5856584e5860595b5d545d565b585e5d5b513754595b545b585959525d525b
525d5b58644e595456585458594e5b544843514b5b5d56525156515254544e565b4e5252
514e4e4e51524b5448565251544e5154545252514e545452514b4e514b56594e5151514e
4e484e51124b525652524e4e5d515252515b484e52595252515b56484b594b540e37545b
5b5258515852585958585d59585b5d5d4e5654585656525954523451545658524b4e5954
514e563b524e5456485151514e514b4e434052450e2e454e48454e484b4e545659544e4b
4e45434852454e48484e48434524124e454345434840
2e28282e31341e16372e3434343b3443404043454343544858515454595d5e606b75eae3
a2eabfe276666562665d655b605e5e5d5954565b51525454565b5254591e515452595b54
58585954545652585b5d4b59585b545952515d51545b563d4e5b595b5d5d59565262595d
594b58515b59595658596256565b5b5840455651565654565451525456515256514e5654
525156544e51514b524e2e4e514b514b4e485251594e4e4e48514b484b4e525251544e48
524b454e124552564b4b58514543525151515256545d545259585652515d4e5216405952
594b584e5654545459565859595b59545152564b595456595958344e4e56584e5459514e
5156584e4b545148454e48525252584b4b4b4e4b122856485151514e51405451514e4b51
4b454e5151524b54434e544b431e124348454b52453d
2b312b34372b1a162b3131343737313d3b40434045454e454e4e545851595b6060687065
2ee7fafca17c756b60666460625b5b5d595d626058565d4e565b5454580e4e5159525459
5e5b4e54565458545b56516058595d625b5156585b59543d54595b585b58595459565454
5b564b595d4e515b5e595d58595b544e4540545251525958515252525452514856514e4b
4e51524e544e4e4e4b451e4b544e4b5151514e48584e4e4851514b52455148524e514048
4e434b4b12545152485652584e514e5154565152545156515856524e4b5258540e3b595b
5b5159515858525b5952515b58525259525d56515654585158513b4b545454525d525152
4558564b4b4e4b4e454b5154544b564b52514b48122e4e43485956524e4e4e4b54454b51
4e43454e51514e4e4554484e3b211e3d404545434b3d
2e2b3131312e1e16313131343737313b3d4040454845514843455652545459605b656259
24eff9f3f9f1e1706a686260655e605b525956595156585b5b59545659165159585b565b
59585d595b5854645b585b595856525659585b595b56513d595e595851524b525b51585e
4e5251514b4e515b585b56585454594e3d45565b4e525652545652544e51545245544e51
4e4b48484e524b5143482845514b4b5251514e45515158484e454b4e5154515248454554
52484e4e0a4b4e4e4b54564e544e524b4e5152515256524b5252595654525e560e3b595b
5154585b56545658595258525454565e56545258545856514b54344e52545b584e515254
5258545251525154524e514e51594e5252545443123454564851525448524e514e454851
514b4e4e485152564552514b481e124348374e48403d
2b282b282e2b21162e3b31343b343b3d434040403b434e434e51525154545b5959586456
288c8492f9fdfbd8816e85845d645e5d5b545d5858595b565b595b5d541656595d525656
545459585d5d5d5b5b5b565458565459565654565e595431565b5b56545451525d515454
51595b51545958545d515859545159583d4e52565254585856595254565858515856544e
514e4e514856524845433b454e545151454e514b514b4b4b515148515148513d4b51454b
4e4b4e450e4e525b51454b564b525154515256544e525e525b5b5852545251580e3b5656
5156525859565b585859545b5958525652595b5656585b5d584b404e525458524b525154
5258565251524b4e5152594b4854484e4b565243162e5451404e4e564e4e4b5454525251
4e525148434e484b5248485145241245484040404543
2b2b2e312b281a0e31312e3734343737374040483d434345484b48454e544e595854584b
21656668a9d1f9f9d1cee8d3626062605e5d60565e5e6058525d595d591e54565d585654
585b545856595d5d5959585456595d58605d58515959562e515156565259565159565460
5e5459585656585d595956525651595448485454565158515452525258564e565458524b
54544848434b54544e3724523d5248434e4b4e4b3d4e4b52524b484b4e544b454b4e484e
4b454e4b0e4b54564e5256484e525654565e584b565854585259584e5254515416374b5b
5156585d5b565958585d5458515652545659515951564b5852543b51514e524e4b4e5252
58525954515145544e5651514e4e45485452454b0e2e48564e4e524b4e54515252524b52
4b4e514548514e564e51524e48240e4b484b48404843
2b2b2b2b2e2e1e12312e2b343737373737403d4543484b404548525252594e565b585d52
245d64666d7cb2effaf1f3dc6e6b6b64605e59545d5e545d595e5259591254565d595b5d
5b595d5b62595664565254565d525958545458525d54513b5259595d5b5d545456565956
5954565659525952545458565d56545e4551525256545b5654544e525154544e51545156
524e525140454b5245482445484b524e4b454e48514e4b4345514b484b45484e4e4b544b
4356484e1248584e484b4e4e5645585b525d5454515b59565251515b5b5856560e405256
4854595d5b605b58595856585652595b4e5451524b585654545b4056564e544b5258524e
524e58514e4b52584e4e4e525254584e4e544348162e5245514e51544e52515154544e4b
4b4b4b48484e4b564852434e402112484e40404b483b
2e242e282e2e2116342e2e3b3b373437343d403b374043435145514b4b4b5456545b5d52
1e595e5b65656e82e8f1f9f984856d65625858585d5962585e5b5b5d5d16565b5b585b5e
5d5b5d595d59585959595b594e545d5b585d545b565456345b60565b565659525e564e59
605b5959515451595b59585d5951545e404852515d54515259514b5b5254524e524e5154
56524854434e48514b482b4b4e4e4e4e45484852454e4b544b4b4b48484b4b4e4b45524b
51454345164b545951544b5651525258545851525656514e51585458585452580a3b585b
5956564e565d565959595e59585d4e56585256585456585954593d5252525852565b5651
5154565156565251484e48514e51514b59484e4b162b4b4e544e4b52524e51545b4b5148
4e4b51564e4e484e5643514848211a4e524b433d4545
242b2e28312b1e162b3134343740403b3d3b403d3d403d3b45434b484e4b51525d565840
1a565b5d5e6062657cfbf5f5f1df7f6665665d605e595d6459565e645b165e5956545e5b
586259585d59585e5d58595658595b5e5d585d56595452345d5256545b58564e54565256
515656585456594e5b54585e595251543d43565b54564e565656515251525656544e5652
4e5148545654544e4352453d4b4b454e4b4b4b52454b4b4348484b4b514548514845524b
524b525112515252484e4e594e52565452514b5251564b5858515b5152524b540e435154
52515251515454525254595d565851524e565451565459595258374e5852524e52565651
51514e4e515856515254514351524558514e4b4e122b56455456514e5152524e45525148
454b4e4543484b524351454548211245433d40483d3d
24282e2e2b2e1a122e342e31343b3443313b40454b3d3d484b3d484b4e484e5251525440
1a585b605b586a686aa795e8fdf9df6b6564626266605e655d655b5b5d125b5d5e565e54
5852595d545e5b5b565256595b605b5b5859515b5b565e374b5458545e595b5454595854
5e5b54545656525b525d58545154525840485252584e5156545651525652544e5b4e514e
514e51524b4b45544e481e3b4345483b40514b514e52483d51514045484545484e514548
5151455212524e4b484e5452544e4e4b514b454b52564e525858594e54514e4e123b5454
5858525b5251545852525956545252595b54484e51525852514b3d5456524b5252525156
5252524b4b54545652524b4b514b56544e4e4e48162852484e56524e524e485245454548
5252514848454345484e4545482412483d344b45454b
2e2e2b2b2e2e2112313731313437343d3d3b403d40403b43405148454b454e5154515245
1658595b5d5b5d62686d70a4faf9f16ec06e645e60645e645e625e5b58165d565b5d5d5b
585854545d565858595856595d5b5b5859525852515d5b31545659545b62595656544e54
5951585656595b5b52595852565b54543d484e565254544e515656565b56524e54524e48
4b48484e4b4b5148454824484543524e454e4b4848434e4b4e4540514e4b5152454b4b48
454e4343124e4e4b455654434854434b524b4b4551524e43514e4e4e454540401e374340
4048514e45483d4340524b4043404351403b3b34374e3731343131342e2e31313152282b
24312b37372e242824512b1e2b28374528241e1e3d3b1e241a1e3124211a21163b1a1216
1e1e3b161a161a1240161e0e16243d48434543484340
282b24312e282412312e31313134313d3b31373b4040343d43454845454b484851454e3b
165256525462585b5d65606ed9bbe17cf77d716d66605e656a64585d601a59585d525b59
525856565d5d56524e4e564e4e525451564e5252564e4e315251525152585b4351405456
4b433d3d434845403b3d404e4040433d312e313137342e512e2e2e2b344b2124241e2843
211e212121241a1a1a1e241a1a161a31401a121216342e1a1216161a3d1a1a16161a2e16
1a1216163b1a1e161a1e211a1e1a162b521a1a21213128212421284b3128282837343428
3134515237312e31315234312b3734564048453d34513b373d433d40434b433b45514543
3d4e454b4b4543453d514e4e4b434e543d4840431e3443434b4848454e4b435248454545
45433b45485148564848454e452b1248434845484543
2b28242b2b2b241e211e1a1e24211a21211e2e241a281e213124211e1e214324241e242b
37241e282124283b282e2e2b655d8972edebd0b57d3d28456221242121521a1a1a1e1e4b
211e1a1e1e3d1a1e211e215124241e1e2b542b281e212434242128282b56312b2b244552
3b313b313b4e37312e31374b4e34373b373d43403b37404e483b3d43404b3d3d4b434b51
483b45454b48484b43452440455145434b4345483d51514e433d514b514b434e4b484545
4b404b481252514b545251564e4e4e4b514b545156525456524e5252525956510a315154
565b54594e54595b59545652585852545659544e5654515454513b5152514b4e54524b52
4b4b5452524e4e52524e58524e4e515156524345122b565152485254514b5145544b564e
4b434e4b52544e484e48514e48280e45484b454b4840
31242e282b2b211e1e1e21242b282428212b43342b343128403434373440433d3d374331
1e40434b4b48524b4e565256667fe3d8d3fdfefef5ee8471685e62606624605e5b59585d
5d5b5d595854595956525d54545e545d5b595958544b512b4e565d565156595260545456
4b5d5454565d564e56585b5b525e525d3d43515b5452595d5256524e5651564e4e524e52
514b4e4e484e5b4b434e1e4b54454548514e4352435151454b4b4b484848484b4e4b484e
484348510e4e484e52515445545248524b4e54525b5254515d5259515456584e12375b56
56585d595b5456565152585d56565852525652585858515856513d565259545656565954
585458564b584e524e4b5251544b4e565b54524516245452545651564558525251595651
4b4e4e4e48454e4848454348482b0e434b4545404540
28282e2b2b2e16122b2e2b2b2e312e3134343d3d3b3d3b373b5143433d45484e52514831
164e525854525259545b5b666471c9f985b0d8d9f1fedf98747172746831856260656060
5e605e5b59565d59645e515d5b5b595658585b5956565b2b515b56545959645b5b5b5954
565b59595254645e5860595b5251545d404e595259565658525652565852565656515158
4b4e5152514b4b4b484328454b514e484b4b4e4b4e48524b4e524b4e514e52484e4b454b
514b51510e4e5852525454565452524b51515452544b56565b595651545452520e37584e
525456565b545258525b565d545b585856565d515458585256544352545254565858565b
5b5658585158514e4b4b52545259564e54564e541628595d4e52584b56435151514e5856
5658484e54524b4b514e484b45240a43434340434340
28242b2e2b241a162e2e2b2b342b34313b343b433d43433d48454b45454348514b484837
164e514e48484e5b5b60595962629cf5716d717cf1f3fdfacac6e8df882b6d7166596066
6260545d5b5b58605d5b5d605956525b58545b5b584e583151596062595d51595b595e5d
5d525d54525b54595d5e5b595154565b3d485e595859595456595251484e5b5654564b5b
524b56524e544b514e4e3b45544b4b4b4b43484b48484b4e4b5151514b4e56484851514b
4b52434b124356564e4b5b59484e4e52545b585d54515456525d54584b525652123b5858
525858525b545459525b5e5b585b59514e565d58565654565254404b4b52565452565b56
56515b56515652544e545d5262565b64565259561e244e56545656525152524848525251
4e4b48515448524b48514543432b0a4543434e4b483d
2e2e2b242b241e16342e2e2e34343437373b373d40403b43434845434345485156514e34
0e485458485152595858596060597fed6a646a6b7285fafefefbfdfdf954666264656060
585e5e5d5b6565585b5d5d5d595d625b59585b545451593452565b595951605951626260
5e56525954585e625e5456595e595458485659545b56585952545656545d545459525852
545454514852544e524e31514b4852514b514e454e4b45484b544e4b434e524b45484e45
48454b4e0a4e5258564b5660515452565652584e5b5d594b5856515e5656525612375454
515b52585652545b58525256565d594b5960585d595959545856454e56525d4e59585259
5654585e4e52585656525656595959565b4e5b581624585856564b525656515656525152
52525448565452544e54544840340a48484548434b48
282e2b2e2b2e1e123731312e3434343d3434373b3b40484340454e45454e4e4e4b4e513b
1252544e5252565b5b5d5e5d5958658f6865666b66688bb2eaeaf1f9f968707070656d60
6264625e5e625e5e625e5b605b5d59565d51625e645656345160585d5b5659595b5b585e
5d5654545259545656565964596056584e56595b5e545d54545d5b565859525b4e565658
59564b52525148514e4e2b514b4e484e4e4e4b4e45514b4b4352484b4852544e51454e4b
4852454e0a585152585b565d5456585152565851565d565d585e5658525b56580e3b5d5b
56565452585854545859595654585d585651545b515b51525d584b4e59585d5454565459
595b56525452595154595259515b51524e525458122b545259565658514b525454584e59
51514e56485652564b4e514b452e0a45544545564e3d
282b282824311a1231312e2b3731373b2e373d3b433d40454345433d454b484b4e514e31
1251525258525b5d59585e595d5d5e5b59656562666a656874707f8cb5ccbb8f72686b66
655e645e606462655e5e605b5d5b5e5e5d60585b595258345256605d5656595e56515656
5e565258625e585b5d5959585959565e45545d5b5e5e5b5954545b595459525d5958515d
52565151544e565154512e4e5148525251524b54484e54514b4b484e4e4e4e513b515248
3d4b4e4b0e4e524b54514b585252584e5458564e584b56525b585859545b515612405454
5b59565b5b56525256565459525b58565b56585b595b565656563b545d5b585854595962
56595b58585251525254585b5956525254525156162b4b5254594b565154545652545159
51514e5652454e4b4e4e54524e28124e43484b4b483d
2b28242e2b2b1e1228312e312e373137373b3d4340404343404b4b45484e404b4b484b3d
124e4e45515454525b58545d64595d5e5b657159666a666465666d718ec5faf1ee967166
6b686462655b5e625b5e5e585b5d596060585b5b54565b375452565d5d58525b5d595e56
62545d5b54595e5b5652565b5b54595d3b5159605454585d56565b5e5652565b5b515459
594e514e5854455256524e4b56515454454e4b51454b484e4b52523d4552524b484b4843
45484b59124e4b52515445514e5b5252585954545256585656585258595658560a405b56
56545656524b545658585b585d5e5d5e585b5e5b5b5651625b563b5656565e564e565956
52595454514e56515656565654524e5454584e4e162e5d565252585b524b4b5251565b4e
56565452515252524551524e4b280a4343434b454548
28212b2e2b28160e313134282e3b343b3d3d3b433d4045404048544e4e4b544e524b5240
12544b48545454545652545b5b5d585d595d5b5d606566686a6671716a3bf9fefdfad375
71746b66656660625b5b5d6064605d5b545e59585b5952374b605e5860525e5d5e595d54
565d59595b5b565e5d56515b6056645d3d485d545b5b54625259545d59565259525d5656
524e51515651545251542b4e545448514b524845514b54484b4b4e514e52454b43544843
515652430e54524b525452565252524e545e595251584b5156565458585860510e455b5b
5b5e565b58565d585b58565954565d545b595d5856586052565640515659545d58585656
595954565658595d585258565852525958544e4e162b5956585158545d56565b524e4b51
564b5652524e4e4e4e4e51525137054e48454e454b4b
2824283134311e0e2e28372e2e2e343b3b343443344340454348484845484b4b524b4b2e
1251525658595454595458565e5b59595b5860585d5d64606060626a6a28b0ced9feffbf
e1e988706b6d646264685b5d59625b565d595b5d5e6059345d5b5b5b60605b5b60565b59
5d565b565e5b595b5e626460585b595e45595b5959585d5d59595b5859585858525e525d
585156484e5452564e5124524b51544e4e56514e48514b51484e514b4e5151515248544b
514e564b1252454b56515252525b6258525852545852544e5d5958565454595b0e3b545e
5e54525156525656595e5d565b565d5451595e595b565456565d43515d595d5d59595b56
5958584852585b58585152515d59485658525452162e56525451514b515e56544e544e58
4e5256564e5454484b584e4e452e0a4348514b404348
2b2e312e212e21122b2b342e3134312e37403d3b3b48454340454548484b4e524b485440
12524b514e5856595d52525b59595b5d5b5d5b5b5b59606262686665652171767cacfdfd
fefde7bdb87168626d656564645d605958645b58605e5b375b5d625b60585d545d59585d
605e595b625e5d59595b5d585e56565837525b5652565b545d565456585b5b585d595e54
52545452525654525151345451524b5451514e5458564b5248564b485151514b4b455156
51524b4b0e515b525d4e585258585b5448515454605b56565b52585b595656560a405452
5952565b5b565854545954545856595956565b5858565d5656594b4b565659595e545959
585b52585b525d5d52565b58564b52515251564b16315659545952595858565654544e5d
4e51564b5954524e525256514e3b0e4b4e45564b3b43
2e313131282e21122b28312e2e3437373b3737403d4b3b374848484b4e515652434e4e3b
1a48484e4e5b5659515d5458595b5454625b5d5d5d605e5d5e606565662164656a71b5be
e1fefefcf87b70686d6560665b62685d5d64595964595d345d5e595b5e5d56545960605e
605b58595b595d65595e5d5d585b5e603d51595e59565d595659605852545951545b5452
5951595654545654525243545452515b51524e454e4e52454e5151525154544e4b515252
5148514e0e48525654515b585251564b52564b5451515459594b56565b585b5e123b565b
4e545b5b6056605b5e5b5d565b5b585b5b5d5d5e5b5d58585b5b4b4b5256596252515654
585b56565452544e51565856585658584b565452212e59525156565658565651514e5151
4e564e52585154544e5245514b340e40455252484348
2e312e312b2e21122e28343b342e3131343b373d3b4b3b3d43455243484b4b514b484837
164b484e545b5959545951596059595660595b5d585e595e5d5d6668601a62646a647075
98ccf5fcfeea9579706a686662655e625d5e625b5d585934565260645e595d5d565d6258
54595b5952595d6259655e626252565b40525956625d5b5959565d5b51515e5458545859
5651595e5b514e5451522e4b4b584b4e4858484e51524e564e545252484e51544b454e54
4e4e5251124e56514e584b4b54545951585656585252525858515259525d4e5d0e3b4b54
5b5b5452595b545b5e5258595e60585958595b59645b546258564e525e5458586052565b
5659545858595b515254595d56565d5252545658122e585654525b4e4b544e5454544b51
455151524e4e545256515b524e2b0a524e48454b4848
312b2b2e2b2b1e1234312b282e372b31343d3d373743453b4e453b4e514548484851483d
124b4e4e484b4b5252595854525e58595d5b5e595d585d5b5e5d5d62601e656064686b68
6b7295b0eafeeedb8b746d646b655b5b66595e5b59605d345d545d59545b5959545e6065
5d605d605d545b565e5e60626064585b3d52515d585b5959585659595652585858515259
565456564b52565659562b5258544b4b48565248525252514e5654515151454545454551
4b48484e1252545954484b4e52585b515b4b5854515d58525d5659595b5459580e375951
51565952595959545b585959585b585d5d5d585b52595d5b595d4b4b565d5d5458545b56
525958525b56565e59565158545459525b545652162b56565d5b52565954525954485652
5256524e525154524b5254564e370a52434348484b48
282b2e2e2e2b240e28342b342e2e2e34313b3b3b373d43454340484b4b48484b524b4b3b
124b514e585448545452585659595654525e5858605859515d5e60626024605960646568
65686b717dedfdf5b59c896a656b685e5d6062596562543b5b5b62595d6460606264646a
605d5e5d60605b54605d625e5956625b48585b5d5d625960545b5e58595d5b52565d5954
545652525254595b524e3d5654514e51524e545856524e59485256564e5252544b4b5154
5651514e1654545251525652545d595b4b51524e585b595d525b59525b545d5d0e3d5658
5b585d565659565b58585b5258525d5d56586051595d5d595858524552595d5d58595458
5852595d58585b5659515659565d5d5654515656162e585b525952585e56565b52565859
595952485454524b5952524b523b0e48454345404b43
2b2b28312b311e0e2e282b3134313134343d3d3d4040434045484e4e484b4e4545454b3d
16524b565152515b564e5256585158525d5b5959565b62585e62595d5b1a5b5e5d5d5e65
60626e686eb8f1f8f9fef478656a66646066605d625d623d59605d5d62595e62565d595e
5e595d5d625e625e5d5d60625964625e43595b59605d595e5d595e5e625e5b5b545d5d58
5d5b595258545156514e34544b5252515d56515656524e5451514b5151514b4e544b4b51
51524e4b1252514b545852585451584e5d5b5654565959595659545952585d5e12455658
58515d5b5b5e62565b5b605d585b5e565b5856595458525d5859514b54595b54525b595d
545d56545b585858594e515658565b59515954591e3159585d605854595651594e525856
58515256484e48564851484b483d0a484b4e52434540
2428242b2e28240e2b2b2e2b37283b2e37403d373b403d3745454e4e454b524b51525137
1658524e545451565858545852595b585d58565d6459595d595b5b5d5d1e5e5d62626065
6d6460646d7085f4fefbf89268706a666265685e5e605b3159625d5e5e645b6560605960
5e645d5d625b5e64585e5b625d605e5d43565e5d5d5e5d5d5b595b54605d565954595b58
565d525254564b5254482b54515154514e564e56485152524e54544e524b544b4548484e
4b524b4b0e52525151525658544e58524e5656584b58564e565b5d5959565952163d5151
585659515258585859585852545d59596259585b585b545858594e4e5956585856545d59
5858585451565458584e5858545658515454564e16344e51545251524e4e4e5651455156
4e514e4e434e4e4e4548484045370e48434e48524340
2b242b2e282e1e0e2e2b31312e31373b403d3d343d3d404040404b4b4b4b4b484e454e34
164e4e4e525654585859565954545954595d5d5e645664585d5e5d59581a5e6559646460
66646d6468626dedf5bad1e97694906d6564655962655e3b605d5e5e566560605b60595b
5b5b5e5d5d565e5d5b5e5d5b515b60604054545e5b5d585958565d565459594b52545159
545456544e524b454548344845515148454b435143484b483d4b433d453d43433d343437
373d3b3d242e403d3d342b3734373b3b3b313131342e2e24282e2e24282e2e2b31402b28
24212b282128212421241e2b212121282121212124241a241a1a28241a161a161a1a1612
1e1e1e1a16161a1a1a161e16161616161a1a161a37341a1e1a12161216121e16121a1e1a
2116161e1a161e1e161a1a12162131454545523d433b
2828242b2b2b21122b282e2b31313434373d37404040434043454b4545454b48524b4840
16524b524e4b585448515852525858565b545851564b594e58544b4b5424515159564e56
514b484e52525270705baee9aeeed352524851453b3b3d403d373137373b2e2b2e342b28
2e2b2b2b28242128242424281a1e1e2131241a2121161a1e161e1a161a1a1e16241e1a1a
161e1e1e121a1a1e211e3d1e1a1e161e1e1e21212128211e24241e21212828211e212b2b
242b2b2e2b2e2e3134313b3d3d3b403d434045433d434540434b3d3d4551484b1a45454e
4348484b4e544b514b51514e48514b5151594b484e564858545851454e5154584e565452
4e4b5b58515454545154515251525658545454561e2b525b5460525459584e525656594e
525252584e525254515452514e400e484b4b48404b4b
28282b282b28281a1a1e211e1e1a211e28241a211e1e1e211e1a1a1e1e161e1a1a161a24
3b1a1e1e1e1a1a1a1e211e1e1e1a1e1a1a1a1a1a1a1e1e2421211e211e3b242b282b2828
2e2e37373b373d484b515ee9ebeecf59514b52454b4b5245484b544b4e514e48514b585b
5254565951585259565d60595d52565845565b56565b5e5d5d6054595456545859596256
58525852544e565954522e4b525451525454584e524e56545651524e4558515251564e58
4b514b4b0e525256545d545256585d5d585b54514b565b525b5956585b565654163b5656
5d545b5b59605b5e56596052585b52595b5858595859565d645e54545b545b5e525b5959
625d5b5d56565d5d565e5d5b5e5b595459605b58162b5d525d6059585959525459565b5d
5b4e565e5b525d4e5254545651430a524e4b4b484b43
24241e2b2e28281e1e1e1e24282b2e2e3131312b3434373d40454340484540454b454540
214e51594e5156515954525952585656595859525b595b595b5d5d655d1a595962605d60
625d645e6262626566686badf9f8f981706d6664715e68375d62606065646564645e6262
60605e6262625d6565665e62645e655b48585b565e5e62595d5e60645d5b5e59665b605d
68545656585b585458512e525454595d5656584e5954585b52564e5858524e5654565451
565151580e524851515b5d5856565654515859525d5859566058595659585b5416435d58
585e5b5656595d5b5854595e5b5660595e5b605b545e5d5b5d5851435e5d5b5e5d565d5e
59585d5e665b5b545e5b5d5b595d5d595d565b5824285e5e565e5d5e585e59525b5d5e56
585b565d565958585958585856400a4e45454b4b4b45
21242428282b2412312e31313440343d3d483d373b4b4b48434e5252524b5452594e5843
1e5858525d5659585e5854595b58595e5b595b595b545d59525d5e5d621a5b5e60666064
66605e5d646d66686e68666d8eadf4c5846e746b686e6040656664606262656564606465
6a6068656566646462626566666a606a455b6660645e645d655b5d5b645e5d655e5b5960
6064595d5858585d5d5d3d565b565952565454595e595654565d5854525b595859545952
59525858125152525d5d5b585b605d54565e56565258545d585e5e5b5d595b5816435e65
5e5b5b605b5d5b5e5b62645d6062605e595b60626262626a5b58564364585b5e605b5d62
5b64595e5b5b5d5e5e595e545e62645d56585d562828585e5d6259595b565e605b606056
5d56545d5860585859585258543d0e4e4b484e454845
281e21282e282b163131313b433b3d3b454e514348524e48584e455158524e515852564b
1a56585264595959595e595d5d5d5862595d595e605e5e5d62645d5e621e606064666260
606560646460646a656666646874defdf3cc7170716e663d6d60656d6660626564606865
64656565656565686d62656468686662525b6564646265665e625e5d66626565645d5960
5e595e59585b5b525b584b5d545b545256565d52595859545d595654545e545959585458
515456521659525d5856625b5b5d5d5454605b5e5d5d64595e645b5e58545652123b6060
645e64605e625d645e5e5b5960625b62626260605b6468665d5b6243655d5b585d595964
5b5d625d5d585e5e5e5b5e64595e5d645e656258242e5d5e65565e605e5465625b645d5d
605b565960565b584e595b5648451252544e40485943
21212124282e28123734403b4343433b4043484851514e515254565952515e625e585840
1e595e5856545e595b59515e60605d605b655b626060655b6062605d621e625e6066626a
686264646262706b6564666b6b6d7fe9fdfd817270686e4860656b6664626b6a66686b71
6068606568656064666562666a626464565e60686a6a655e66656264666066606b655e5e
5d5d59565d5e5b5d585443645e5852605e5d5d605e5d5e5b565e595d585d5b5d5d5b5e5d
5659595e12595d5d545464605b545e565d60605e525e595b62605d5b605b66641a405862
645d605e605b6259625d5e64606865645d645e65656460626662594e59625e655e5b5d64
595e5e64595b5860655e585e62605d605e655b65242e5b605d645d6456665d6060605e60
5d585e5959595e60565e565656400e484b515b524b4b
21242128282b2b16313b373b4b43484b4e525451514e5952585b595b565b5b605e5b5d4b
1e5d6460605e585b5d6459655d5e625d5b5e6259625e5e6462625d5e651a626065666b65
626460606866666a6d6b6572656d75c0edf7dd94756d6a436b666e6a646566646264656a
68666470646265626672666d6b65666d526a666d6e6d686d66656466685e656a6d6a6462
68655960665b6458595b3d6059605b60585d5d5e5b595e515b5b6056565e5b595b5e5b5e
59595b64165e5e5e5d5d5d595e685e665b5d625d6462605b65685e62625e605d1a405d62
605e5b68655e68686a6b6865647166685d686662655e64666a655b5466656a666d706865
646462686464645d6a606a625e66666564656259282b6662645e6665685e6866655e5b5e
5e5d5b596258585e5b5e585960560e4e544e4e544b45
241a28242b312b1a404548484840514551565b6058525d54625e5b5d5b60605e625e5e4b
1a5e5d6b5e5b5e59606262625b5e5d585b665e5d60656868606465606628646060646566
6a667466686e6e6d6b646d6d6e6e717c8eeaf5c18471744b62686e706a6d6a6e6e6b6a6a
6d646d706d6e667166757074706e7268596a70686b68716e797068656666626e6e66606a
6a6066686a645e6262646e756265606d5e5e5e625d59605b5664605e5d56665962606060
5e595e5d165d6564606464606a656860656464656a656564655e6565646b706a1e486a68
6a646a6565656866818baf7878ce746d6b6d6b65687b6dc89671655470706d729ddf926e
6a6668686a686265626d6b6a66a8786b689e7f643131646b686868686068abaeba6e6660
5b5b60645e6265656258585259480e58524e4b4e4e4b
24282b282b3728164e4348544e52545b545462665e5e625e59665b605d606262605b6254
24656268646462686465655e6666656662686a6d6e6a6d6564686e7065246a6b666d656b
6e6d6d686b6e706a6a6b717074706b727c9bf7f5cc72755168746b667071747f70716d70
716b6d6e928b6b6b717279767679797c7496927c84948476ac897b7c7b76746a70657474
6a6d68686b6d6d6e6a81f3cc746d70606565605b5d686d6d64656d7c9872a1856a78c678
686b646a1e746a706e6b9879a7ac656b716874666b71796e6b656d6b75a5b8722b48708f
6e686d6a6e6d6d99f3f9f3948bf1926e6a6b707076b276f5bbbf6e6a717074e2f8fba772
6d7b726d6e756d7b75a48971a2eaeed385ca996a52a28c7674b57fb29279d9c9de766a68
6868986679769e71949e717bb579125252514b564548
2121242e2e3b311a4b484e545b59585662656b666a6b6d68688b6665626b656d6e66625e
2b666d6d65686e6a6865656b6b71726a6d68686d6e6b6e686b8ebd8c742e6d7268747871
727f728b967b70706d6b72908b7d76928784d7f0cc7f9eaa9b7c7d8e92b0e4f387757476
797275a9f4e39b8588a898c0dcbd9cead1f9f1e1e7f1e1dcfdf4b596a4e18b8296a9d39c
716e787f88c5ce8cccf3dec9c0827d7d6e7d728570a1e19881849cf0fac3f9df9ccaea8f
76a994c931efaeeadde1fbd5f9f592b5ea9ef19bbecac68c857d7689d4f9fef1726bb3f7
8fb3ba927c707cccfbf9fce4cdfec3bcc09fd0d3ecfdb8fdf3fc9ce6817f95fffef9f1a5
b5f1e9d785dbaeede4f8d3d3f5f3fdfaedf5bccc8be4fbe4dcfecafbf5e6e4e6f9dcd3d3
d1ccf3d3f9f5f9d3f8f4afdff7d32b4b45584e4e4848
1e24242b2b3d3b2151545962625e5d656d966e7271706a6d7ce171706b7082b89e746865
3184857875707182797b7571767b75818c82767982af989b8bc2ecbad698b0a482a7eca1
dfefeffafaeeb3897f8f82dfc28c99eda6e1daf3f9c1dedaf8adecfafafffffed6aab58e
d8a68fdbfaf8eacae3fdf8fefffaf9fffefdfefefffffffffffefbfaf9fee9f5f9f0fced
b3aaf7f7fdfefef7fdfdcae3fbedeff7dff1ebf9def7fef9f5fcfaf9f9edfefefcfeeae7
f0fbf9fe9bfdf9fffffffffffffff7f7fffdfefbfffefff8f4d4dff9fdfefdffdaf3fefe
f8fefffcebddf0fffaf7fafefeeffdfffef5fefefff3fdfdfffefefbedf5f3fffef7fef5
fdfdfcfec7f7f9fefefdfdfdf9f3e6f9fafdf5fdf8e2fdfefefdfffffefef7fdf9fefdff
fbfef9fcfefffefdf9fefcfeeff592565448524b4845
2428242e34404e52ba9666786d6d8192b5da99a59d9c7988d5d89294797deaf5e3ca94ca
7bf1efeaa69ccdf5bbf1c4badaebe1effce7a298f5fcf9fcf5cfede7ffcafefdeefbfff9
fffffef7fffffdf7f3f4e7fdfef9f9f5cefcfafbfffffde1fafcfffffffdd8effffdf0db
fefaf9fefdfdfafffffefffffffffffffefff9f8fffffffffffffffffffffffffffffffe
fffcfffefff9ffffffeae1fefdfffefefffffffffefff8fffdeff8fafffffefcf9cafcff
fefffffff7fdfffffffffefbf7f3fffef9fdfdfefdfef5fbfdfffdfefdd6e2fef3edf7e3
fbedfdf9fefcf7fefdf8b0e6e49dfef4fbfefbf9fbcaf1eefdedf5d7fefffee4d8e1f1ff
f1d3c0e7fefcfbf4f1f3fae7acf9a2f7fbf7fceacc5bcdf9fbcdf5edc8c2f9f7c6f3cdee
faf5fce1bbf5dfed98ecf3e2c1e7524e5652544b484b
2828282b3440526df0bcc8f1bcd0e6f3f9e6fbf9f4f3dfeef9c0f1e9bed3f7fcfefcf4f8
c8fcfcfdf5f9fdf1f5fbfdfbfcfdfdfefbfde3d1fcfefdfdfcedfbffffddf9fdfbfffdff
fdfee4b7f9fafcfdfffefbe6fefffff9f7fefaf7fffffff9fefffffef9eb8e9ffdfeffff
fcfdeffef8f8fffffffffefefefbfefdf9f7fcfdf3e1fdfefafffefffefefffeffffffff
fffdfcfdf9b5d4fee685bffdfdd8dbb5c3bff9f9f4fcddd1c07ff8fbeefbe6a8fa9cfaf7
dcc7aac4afc5b6adc0dfb5857c7cc28fa1f392b3ac8f8798a1c2e1f7c68979e17c687975
8982a18ca2967ca6a1f37c7679769b87abd795a1e47f7fbaaf7872929f96be967c929cc8
9270717db0e9c592858c9b7279e17fb2e3a4e471522e84b8987588747075dd926d796baf
bd8ca1b5708f6b68626d6a685e601a4e544e52544b43
24282e3437485464d9f0f7f7fbfaf8f9edf7ebf0f5f9f9facfc0fbfbfafcf9e1f3f4f5dc
c1b8d1edfbfbf8c3f5f3f7f9f0e1eaf4baf4fafef1d4baaef5fdfdfdbac89e9cb8f7a8e4
f9f5b287a9828fcceee9a579dfeefef9f9e3f3badbfad39fc2a2a690a8ae7872d9dafddb
b2a27fa598a8fdfdf0f7ccc7a4bdf7d1b395aabb8c88a1aa9cfaf7d7d1c8fbfafffdfbf5
f3fef9e9bbe1f7f79fa7def4ea847871707889898bbc8b6e6d6a8e7f889875669b6d9881
796565652460666a656865686566646270aa65726a6466717474aac7746b686d2b406868
64646d6266686b6a7196656875656a716a6e6a6a6d6572706868684b716b6e6b66686b6d
6a6a5d6a6a71717168656262646d6b66706b6d664524685e60665e665d666d646b646668
62625e6062625b5e5b59565959520e4e524843453d45
24242e2b2e3b3737a6e4a1a1b7a69b9d82b585859dc2ebeca7e1cdbcc5c49f79958c8266
376b787dc3aad8877d9294ccaf848baf7cdff8e690726d78b0d3a79675526e6d798b728b
987c726e6e6d6d6d7275686d728bb3988582b58185f8f08574786b706e706d6a857baf87
70747b84c6f7fdedc1df9587817f997c68706d70726d71797f92827c7b8bccb6bca99288
ccfbfdfcfefefecf90d6f1fdfaf0b296b3a86d70717570656b6a6b716d6668686860656d
65646a5e166060665d646265655e6560655e5d5e65626460656a6b6b6860656b28345e64
5d6460646564625e646d5d6a5d64656a62626664646468646864653d6b646a726b6b6464
6865656a64646a646264645e5e646466625e645d4321655b6462605b5b5b64595d5e5b5e
625b62595b606658524e58584e450e48524843523d40
282828282e373b286e85655e66665d6d656e71746879787670da7b71726a6b6d6a6a6859
246868686e68746d6b6a72726e6872726e8e92706a6e66686e72666a682b62656464706a
6d686b6a6b6b60656d6b656e62656d6d7268707275fafdcc6b6b6e6d66716a6a666d7174
6a7175c8f9f5b698848778787574747666626d6d6b666d68706e71716d756d71716d716e
859debe7d9f7cecc9bdafbfdfffefcf1fef78276aca878726a6e5e685e6a666065686865
5e60645e1a5b60605e6062625d5e5e5d68605b626264606564686a6064625e6221376265
606260656464606664655e5b656e645d625e6265626468666268643d656664626a5e5e5d
625e6566656862646064585e62626265645d565d401e605960605b5e585d5d5e595e6259
605e59596058596456585651524e0a4e4b524b48434b
2121243131343721434848585b5e605b59646b666864646e6570666e6a66606860656558
216060666a646262666e66666862646a6866645e6664626b68685e656824646460666664
6862666670666665626b6566646d686868686e7270c7f5ba68706b6a65666565686b7171
6a6a94fbf5b37972797175756e70766a60666b6d706e6d706d6a6d706b6865656d666870
6b707676717872cab5ed82aff4f8fffdfefedbe8faf3e1898b856a656562666560606065
62655d5d1a5e65605e6256605d5b6266656264656a5b5964626060625d5d605d2b31625d
5b625d65625b60645e625d586565645d64625d64646b605b6268643b655e6264665e6666
665e5d665e5b65605e5e5e5d5e5b625d5d625d5d371e5d5b5859645d60595e5e5b595860
5d5860605b52525b565456525648125252514b524e43
2b241e2b342e341e484043524b56565652585b60595e5b585d5d5e64645b60665e5b5e52
1e5e6060686466656264656862626b6a656462656266646b606562646524685d66606264
6b6865646064655e606266625e626468655e6d68667cbfc6856e6e6d686e6d6866686b70
6e72eafccf7d72757475716d6b6b68655d6064626b5b6d686564686d646065646a606466
6d6d6e6868686dd4daf8516d9bc0e3e1caddfefefbfcfdf7f9f570716d6268685e656862
65665d60165d60595e5e64655e5d64605d6065655e5e5b6052565b6459625e432b24585b
625d5e5d585e595d5b59585e65605e5e525d5e6065595d5e625e5e346464605e5e645958
5d6265605d5d5859585d5d59625956595960585b3d165959544e5b5952545e4e545d584e
52584e4e51524b544b45404b453b1e45584845484b3d
2121212b2b373112373b3b40434b4b4e525459595858585e56585d5e5e59585b645d5d4b
216262595d60605d625d64605e5d655e655e625e5b5e66655d655e625d1e5d60605e565e
62625e606260656664605e64646e606060626b5b6671c6f39f626a6d606560686262706a
6b82fbe996726e6d71646e70646e6a6d59646264605e646268625d62605e645d5e5d5e5e
5d6460625d6460f1faed45656266828c717fcfe2b7bfcafcf7f5d0e2ecbeb39c666e565b
5b5456591e524b594b5251453d45434543404043404043373b3b3d373b343734403d3b3b
2e34312e312e313440513434342b2828282e2428282b281a281e28402424211a1a241a24
1e241a281a1e1a21161e1216211e211a1a1a1e1a31431e161a16161e1e1e1e1e21212b28
21281e1e1e1a1e211e21212421212b4b5240524b4543
21212124242e28164037313d3b4540404b4e514b524e564e4e5258545851595d59565e4e
1e5e5e5b5b595b5d595b5b5b5b595e586059585d5d58545d626259565d215b5d565b5b5e
595b5e5b595959584e5452585b525452545456565d607cb3a14b524b4856484b48434851
4e79ee7c5145403d453b3b3434342e313b3728282b28282b2424241e2828212821241e1e
21241e212424247cd7924e212421282b2b283b4331314b7c79edfaf7f5e3f3ead1d65465
54402e3743343b343b37343b34373b4543403d434543434e454b4e485443514540454b45
515652484b4b514e51565856545258545258515b5459605d595b5431595b58595e5d5d62
5e5d58645e5b5e5656565b5d5d545b5852566456401e5b515d59595858585d5d5b525b59
5e52524e565854565154515251481a4548484e45483b
211a24281a282b1e2424282b24282b31282b24282b28282b2b2e2e282b242b212428212b
431e21241e211e241e21211a1e1e1a1e1e1a1e1e16211e1a1a1e1e2121401e1e1a1e161e
241e21211e2824212828282b2b2b34342e2e343d3b374371b03d43454b433d3d43525156
5bc6de5e5959585b595959595456565856585b565b5d595b5d5d54565e59595e5e5b5e56
605b58595e606099d38f48585b5e5e655e5e6562646060707299d7e7f8fdfefdfdfbf7fb
f1726a661a5e5b5d62605d685b62645b64595e5e5e5d5b5e5d62585d625b605d2124585d
5e5d5d5d5d645e645d59565e605e5d5d595b5d6062655b6265625637625d5b5860595b66
5d645d645e5d5b5860665d655d56585d595d5e5d4516655b5d565b59605d5b596054605b
62565e5e585e54564b52545654481243404548433440
211e2421242828212121212824343131313734342e3d3b373b45484343434b5252524e51
1e48514e4e5148584e545851564e525959526058565b51515d5658525e1e5659595b585d
5459625e6459645d5b5e5d5e5e64665e5d5d605d65626252dc6265686a6465606065656a
6ddf8c6b6e6564646665686e5d6865645256665e6060605d60605e5e655d5d6064605e64
5b59565d58595b605d5937605b62645b5d5d645b6866606065666e7595ded9ebe6f8fafe
fac0b8852e716b6866605e64585d5d62605e5d5862605b5e5e5e605d656060592b315958
565d60606262605b595e655e65656564606460606865606b5d585b3162685e625e596464
62686264646262645e60646458625b6662585b5d4b1659605d595d6060645e5e56586665
595d5d595b524e545256544854510e4e4b4b544b4548
1e21211e212b211a31212e3137373737313b40373b484845434e524b4848545656545251
1654595d5459595b59605954595d5e605d58605d625d655e52595e5e5e1a5b5b5d40605e
5e5e5e5b5d5d665d6862595b5e5b625e6062656565646040e26e66656e6a656564656870
6af37570685e66656568656a646562664e5e626864665e62625b5e625d5b665b5d605d59
5d5e54586259605e595d3d5b58625d5b5e5e60655e626260656264686a7272787c7f8eec
fbf9f7cd70e78c756a6465656565645d60656066625d5d5e6264605b5b606262282b5d64
5e64595d6268605e625b6a6b5e645e5e656a60645d686b66665e623168626a60655e665e
6262646d6566665e605e605d65645d595e5d5b5d4b0e595b605e5b5d5d5d56595e5d5d60
5b515b56585652585652524e4b450e45454b52404848
2424242124211a122b2828312e3b2e3b3737313d373b40404b4e485d4e51515258525452
1259545656585e585656585d565b5e5d5d5d5d64625b5d5d5b5d5b5d5b1e5d595e605d5d
5d5b60605e645e6262625d625e5e6b646e5e64656662684eeb6e6d6565666665686a7071
79f47b686d62666464606064656a6566525b5e6665656464655e5862645b5d565d5e5e59
645e595956605b5b5d5b585b59605e5464605b605d5b626060625b5e645d5d66656b727f
cefefefff7fef5d58c6b6262655e646462645e5e625b5d5d625b59686262605e212b6265
6b5e625e626868646a6b62656064605d5e6a656568666562666a5b345d6a65656664645e
685e5d64645e65666564605d605e5b605e6259594e165e5e5d5b605d5b5b5654625b525d
5b595b565e4e52545659525b52400a584b484845454b
281e241e212124122b28283131312b2e312b3740343b3b4040524b5851514e525656514e
165454545656545b5b5e5d5b5b5d5d5b546060605b5d645d595e605d5d1a5e565862665d
5d595b5d5d685d6a5d5d5d6562565b5e5e666664646b6e45f3a1686d646d6d646666686e
c4ed6d6b6d6b6266656a66646d66626a5b5e68666264685e6465646064625e59605e5b5e
515d5b5b58625b625d54315454565d565b605d595d5b5b625b605e5d6460605e64656471
9cdfe9ea94fffef7a5716d626462665e5d645d5b5e59605d605d605e585d5e5e2b285e66
625d5e606a62656462646265646860645e606666686865646a6b643b666a6564625d6664
5e5d656562665e6468665b66596064625b5d625e480e595b585b5e5e60605d6062605d59
59625d59595652565654544e51480e4b54454b4e4e45
1e2128211e2421122b2b243131312e31312e3b3d3b343d43374b514e5151564e58515851
1a5952565b5956595e6459585b565e595d5b5b585e5e60595b605b5d561a54595d5e605e
5d5b60625d5e655e626460625e5d606062626b5d60686851d3a46a6a62656d666a686a74
d39e716b686d626464626b6d6a687065585d656d60626665646a5e60626062645e5e5b5e
5e655e5e56595e62595b31585b5d5b5d585e5d5e566262595b5e5b5d5958605e5d65656b
686e767160f5fffcccea6d6e656862545d6864626460606264645b595d5e605d28285e64
585e62606665656b6d6868686b68666a66657c756868686d66686d31656a6b646866656b
646262685e68626660605e62606060646564665e4812606058605d605d5e645d64645d5e
5859605e60565454585b5456524e12524b4e52484e43
2424212424242416242e2b24313137372e3737343143403d4345454b4b4e4e5454524e4e
165b5956595b5b56585d5b5458595b5d645d625d5b585d5e59595e5b59165d5d5e60585b
625e5b5d5d65645e5e5d5e686462606260686b666466665294b26b6a68706d6a6a6b6a96
ef826e70706d6666686d686d656a6d6054585e6562606060656260665d645d5d655e605d
5e5e5b5e5e5e5b60605e4856525b5d545b5862585b5e60585e5d5d5e5d595b625e645d5e
606665662898edfefefa7f6668656a65605e645e5e605d65646664656462606831286468
626268656465656d6d71706b6b70686e717df0c4796b6e706a74a6316b666e6868686464
646a6b62656b666468626262625b5e655e685e6548165e5e645b60645b5b5d65625e5868
665e5b58585b56585b5e545151540e4b5648484e484e
1e212128241e210a242b2e28282431372b37343737403d40454b52514556525152515152
1659595860595159595d5d585d5d54595d52585b605d5d5e585e5e5d541a5e5b5d5b5b59
5b605e596565625d625e5d625e5d625d6062626b686562458cf570686d6a6866687271bc
f574666e6d6e6a6b646866686b686268585968646865645e5e625e656064645e68626062
64606660625d59595b59435d5d5956565e5b5b5958585b595d58565d59655959585e605d
5e645e641a6b99dbf7fd996868666662625e5d5b665d606465645e685d5d5d6521346266
66686d65706e6a6e767cd1a282767d7576adf9da82aea46e7c9bee456b7f816b6d706e7d
82a5b57568686d6662665e6266656a606664685e56126060626060605e5b5d65625e645b
5862565659525b565b514e59544e12484b4e52454845
211e1e281e211e122124242828312e2b2b31313434373b40404348454b434b5451514b45
165656585e595d5e56595b5d60565b545b545b56545d5b5b5d585b5d5b1a605959606260
65645d585d5e665d5e625e64686a64666d646b6268686a3d7df375686e6e716b686a98f3
f571706b6d666b686d6e686d6b6268605b64626862686665655e6268666562655b585d60
60595e5d62605d60515b315e5659595b605d585b5b585b5b5d56595e58595b605d5d6062
6265645e1a656b85d5f5fa856d6b6562645b5e666258646864655d5d6a605e642e2b6860
666a6b6ebea4929dcdeafefdf9e9f4cad6fcf9efd6fcf9b8d1f9fd759bedeebdd7b0a1f1
edeff38f7571897270746d6d7268666668655b604b216a6064645d60645d5e5e605d6060
5d5b5e5e5e585d545856545151521a4b4e484b524e54
1e2424211a1e241224242b2b28313131312b3434373b40404540484348454b4b4b514e45
1658545b5654595959585d5b595960565b565d5d595e5b5b5b60605459165d62585d605d
5e5e59605e606064646460646664666462606662646260486af7896a6a82a9a67071c8f5
c16d6e686866656666726b6a6b6d666259606b6b6a656d626862626064646466645e5e5b
605d60605d625b5b5e5b37595b56596064595b62595d5b59595b5b5b5e56606060606065
625b5b6216606870798ffd94706a6a66656668645e5d656560605e655d64685d28346a68
68747f9bfdfdfcfbfffffdfff5fffafdfef4e2fcfffdfdfefdf9fde9ebfdf9fdfdf5f7fe
fbfaf1997198f09b98b2a8acc9a28874796d62654516646662646865625d656560596260
5d5d5959605e59595254544e514e1a434e51454b5243
24241e1e21211a0e2428212b282e342b312e343134344340434545514b485451524e514b
1654525b5454565156585b5b5859545b5d51595d595b5b62585d5d5e5b215958595e5b60
5e5b5e5d5865606562606868606a665e6065706562655b3b64b27d706beffbed6d72dfed
92706e6568666a6a666d706d65686866565e6b6a6e64656662626265646064605b5d6260
655b655d5e606462605851595651565d58565b5d5d5b595d5d5b5e585d595b5e5e605e64
605d5958126865686672dad3ceaa666b6262626466645d686262605e5d5e5d5d3434656a
79d1efdafdfefefdf9ffcdae92f795d3cd8b8ba4e7f7fae3ac9ee1f1fdfdfafffefdfdf7
fbebd69575f1f5e1f9fcfcfaf7f4ead7e67b68604e1e6b6665666a6062646260625d5d64
565b6458595e5d5656524e4552521254545145524b43
1e1e211a1e1e210e242424282e312b282e2e37342e343b3b4343514b43524e4e51585145
165254525154585859595d5b5b5b5b525b59605858515b5e5e5d60625d1660595d5b5960
5e605d5e6264645e666260625e6862657060606468646245649b816e72f7f7f76d6ef5e6
816a6e6664666d6d6d6d686a6a6a646d546465646562666a65685e65656865645d60645e
64665660605e545b5e5e345d595e5d545d5b60585e5d5e595b605d596064565d5e645d62
60545b521a595d646572bafefbdb6b6d68605b62665e596562645d6262626062343b7090
aafefffee7e3f7baa1ee7c6b7082666b6e6b68708f96caae76657058b6cef4e4e8efdd92
a68cc5a1eff9fdfdfafdfcf1f9fdfdfefacc7b6d60246e98d16b6b66666d62605e606260
5d59605b5b585d5d56585151484e124b5252524b4843
211e1e212121210e2428212b2b3b2b282e3134342e3d3d403d43434848484b54564e5248
0e565656565d54585d58565b595b51585959565b59595d5e5459595b5b215b5d59595e62
5e585d5d5d5e5e5b5664646565646465626465656e62684568928c7171edd3f17175f3aa
756b6d6466646862656665666864666a595b66666665626b6062666462605d6860646656
6a60685b5e64605d625d28595e545d56585b5b5d5b585b6259605d56595d5d5b60595e5e
5b595b5b16596062646681fafaef786a6a6e6264625e645d60665d655d626865313771f9
fef9f4f97d75906d717c68686a6b666a687068626b7270716565662e6d6d87727071756d
757fcceafbadc8c7c1ab8c78eaeff3f9f5f9e695cc82eff9f79f767892b0656565606665
62625b56545459585d5852454b451a454e43484b4843
1e1e1a241e1e211224282828242e2e2e2b2e2e2e2e3d433743454b4b514b4e565656544b
1252515656565d5159565d545858595956545659545d5d5b5d5b525b5b16595658595458
5d5e625d5e5e645d6060626268646d66625e65626a626045649498706edfafe6797ddf8c
6b6e656b6d7164686a71626865656a6652626a65686b68656560686664646564645d6262
60605d605e5e595e5d582e595d595b646556566064605d5d59605b605d5e5d5b5b595854
5e5e5d5612606060606a6bb7e9fa7c726466605e685d6565605e646260646666343781fd
f7dc96a9727068686b6b6a6b646462626a6d64626466606468645e31666e656568656b65
647be1fdc76a6d6d7072686b76769defedfdfcfaf8e6fffdf9f9b2eceef5686865656464
60605b5b585859594b5e59514e481a4e5452484b4e48
2121211e212424122824282b2e403b312e2b313134343d3d3d404548484851514e484e43
1254525654514e514e5d5960565d5d565e5d5654585458595d5b5d5b5b16565b54585b5b
5b5e5e5d6b656068626060606268626262686a6d66646440669ec97c76d892dd7c8bd77d
6d7168666d666b666e6e66646d6b60644e5e60646b666a6462656a656859646065646264
5d60665e5d5b645b5e5d595d605b5d5d6059595d5b5e625b5e5e5d5e5e5b5d5d5b5b585e
5d59565e0e5e5d5d646264719cddddce76626060656468665d62645e6b59626d3754e6e9
7f747170626b655e5d5e686b65645d65656562626a6865645b645d315e656460665e686a
6d70cdf7c368686a656d626b666d799f8b92e1f5edbdb3f3f5fafefffcf9a77576666865
5e6064526256525e585852585452214b4b4e4e4b4b48
1e1a1a161e1e280e242b242e2b31282b282e2b3137373b403b40484540514e4e4b4e4b43
16524e544e52515651585454565e58565e595256565454565b595960591652595e585459
5d5b605e5e5d625e5e5e5d646265686b5b686462655b623d6894e28b7ccd88c779aac979
6b6a66656b6e656b656d6b645d65645b52626262686666666466656066666264665e5d5b
5b5d64666566595d5e582b5d5d5b5e5d65565656585b605b5e5e5d5b5d5e5b5e58645458
595659561a655e626060667079e6fce17c605e656460645e626264625e6466685dbcf581
6a686b605d645d5d6059606268655e6568605d5d5e64595e656559285e65656062646b6a
646b81dfd6656465606266625e646a6662647076602b76ccbdcce8fdfdfaf9eae1b06866
60625e5658485958565654524b481e4048454e4e4343
1e161e212121210a21211e24312b2b2b282b2b283131403d3d3d4043454e40514e4b4e40
12564b4e5159524e595259585d5b5256595b5958565859545b5b5d5d5e1e525859585d59
5959625e64605e6066646066625e666664646564645e64435d78df8b87ba78b581b29874
6d6b6868666d6e6b66656265665e66604e59686868656a6d625d605d665e5e605d5e645e
565d5e5d5e60595e5d5b2452605e4e5b5e5d59595b565b545956605d56595b5b5d5d595d
58585659125d5b60605e606468a1fde6895d5e6060625b5e595e5d6060606866a5ecfa6e
626d60645d605d5e595e5e6862625d5e5e5d645b5d5e645b5d585b285b6260595d585d5b
5b66627b9c5b5956645b59525859586056645d5945245966656872bdedf5f9fbfdeeb766
64664e4e5148484045434040343d24524e434e484b45
211e2128241a1e0e21281e242b24282e2828342e3b3434313d51404b4843484545454b40
12524e4e4b4e544e5d56515656585256565b5d525b5259586259595e621259585956595b
5b5e5b595d5e565d5d5e5d595e5e625d5e5d625d605d6643606ee69592ae78ab8eb2846e
6e656865685d646662656860606d665d435b64595b6265685d5e65655b5b565d5856585e
605452525854585951543b5154524e3d4b4b4b4b4e48514b515151514b3d51514843404b
48404b452b453b433b3d4048454ebcedc33b373b372e34312e3131312e2e4031ccd47c31
2e2e2b282428282b212828282828241e1a2821212b1e211a1e281e451a1a1a1621161a1e
1a241e21281e1e1a16161e1e241621212424241e28481e2121282b31455675e6d1dcecbd
d4c22e2b241a21212824242b1e1e2e4e5245484b4e4b
1e1a1e21281e2816212824242e2b242b2e2131282e2b372e4340433b404048454045403d
1648484340514048484840484b4b484345484345404043403b40433b451e374040373b3b
3b3431343d3731313134312e342e2b2b2b2b313128282e3b2e319e66525e3752456b312b
2b2424212821211e2424241e1e1e1a1e3d241e211a1e1e211a1e21241a211e211e1e1a1e
21211e1e211e212b24244821282b21242828242e2b2b2e2e2b2e3b343b34342e37343b34
37433b40344048433b3d4556514e7cdfdd4e5248484b4e4b5659565b56586485f1af6254
525656565956565b5454525256545b5e565d5d59585e5954525b542e5458595856565958
5658586066595658565b585e52565e625e5d5456481e5b5d625d5e5e626676bb8bdcebfc
faf9875d6456545652524e565145214b5245454b3b43
1e1e1e21211a2416120e0e0e1212120e121616121612161216161a121a161a1a1a1a1a24
37161a1a1e1a1a1e241e1a1e1e24211e2b242828282b34282b2b2e312e2e313b373d3434
3b3b373b43434048454556484e4e4e5656545254515b59455b66deb8b28b64949ced746a
6262605d665d606260605d5e595d5d5b4e525e60645d625d605e655d5e60606559605e59
665d5b5b5e5859585b5924595e5b5b595b5d545d5b545b56565856595959545658565d56
4e5d525d1658595b5e5e5d64605d72c5f46b5e65645854645b5d5b625d68e7dcbe40655d
5b645d5d5e5e5e5d625d5d5d5b5859605e58645b645e5b595e525b1e58565d5e595e5859
5e5e5d5e5d585d595659596258545b595959595d4b125b60605e566662605d62646d98ba
bde4f0a8625e5e5d525156515148244b434848434848
1e211e1e1e1a1a0e211e16242b2b24212428312b2e31342e2e3b40433b404b4343404537
124043484b4b4b4e51525852524e5251524e525158595451585452595912565658525256
5852546256585d5d645b595b625d625d5964645e62605d435e6df1f7dd8b7192b6ed6270
60665b655e5d5e656662605e5e64645e3d5e6564626566606256595e64595e5b6059605e
595e605e5b595d5259541e595b585e5e5d625d5b595d6058565b5b5e59585959545d5b5d
5e565d5d125b5b62605d645b595d6498ef725b5e605e5b60605d5d5d6464e6fd702b6564
5e5b625d5e5b5b5d5b62595e5d58605d5e5d5b56565d58645e52561a5d59605d5956585d
6256585958585d58605d595858595d56595659563d16565d54606659595d645e605e6666
668cf8f5896d60585952514e52522b48484e4b484545
1e162116211a16121e1a1e21242b242b242b2b2b312e2e3137454b434543484845484840
1a4b4b52454b4b4b5654514b524b545854545458585d56525451595b59165d585956585b
5d585b605862585d5e60585e5e655e5d64645e605b64623d596dc9ede87f6888c5e66b66
625d625e6662605d62685d5e68626260405b605e5e645d6564605d645d645d5d59595d58
5b5d5b585e59565d5e5b2858565b585d545d525951565454515b5b6259525959595b5956
585b585d0e585b58515456625d5d6876d88960645d59596260605b606a6adcfc3d245465
5b5b5d566054545e5b5d5b5b5b6059595e64545964595b52595456245d585b58525d5b58
585b585952565e525e5e64565659595858585b54401259565e605b5e5b545d595b5e5e5d
5d68f3fddf82796059545452514e2e484b4343454345
1a1e1e211a21160e1a1a24212b2b2b242424242b2b2e31343d3d403740454b4545484b3b
164b484b484e524e4b54584e565156564e54585654565652564e58595b1252585858545b
5454595e5e5859595b655e5b58565d5b595e5e566258603b5964a8f3f9716a7ff1df685e
6d5d6059625d5e5d65606060605d5e5e406566625e58595d5e5e5e5d5d605d655b5e605b
58605d5e5b70525e59524e565456545b5b5b585456525b5d58595d545954595454525658
5d5658600e5858595d5e565e5b5d646bcee4605e5b5b605e585659606065d1e33b215d58
585d565d595659585d5d5658595859565d5b52565b5b5b585b54541e5854605856625b59
5b5958565859595d565152565652595656545652430e5e5259565859585b56625656565e
5d5e9cdff9f5f36656545156544028434b4840454340
1a161a21211a160e211e1e242821282b2824282b312e2e313d3d3b434345483d4845453b
1248434e4b4b514e514b4e58525252524b56595452565252565154515b16565956584e51
595458605b5e59585e5e5d5d565b6259645d655d6052623d596298f3f970686ef7925d60
66625d5e5b5b56595e6466605b64645b4556645e585e5d60595b6058605b595e5b585e5d
585464545d5b5b5959591e5b565458595259585956545e585954595954545659585d585b
5e595d5b16585858565d5e59595b5d6daaf1645d585e5b5d6058585b5e60d66d34245956
5856595258585d595d59595d565d565b525151585d5b56525859522456545b5854595959
585154565254585e565b5254585645545b5e5d5643125d51565b5954585d605154525656
60585b6af5fdfdb25e52485254432845404b484b4540
1a1a1a1e1e1e1e121a2424212424242821212e282e2e3131313b37434340454548405140
1245454b434b484e4e4b544b4b56584b545852455451515254514b545612525252515652
5459595e56595b5e566059525e5d60596058595b645d58375660658baa665d6af5745d5b
5d685b5e5b5858565e605d5b5e59605b3b5456595d5e5960565956595d5b585454566054
5456585b5e54545854521a4851545659565b5256515251565d5254565452565b5452595b
4e565b5116515d58565d5b5d525d5e6571d860545e625d585b5d5b685d64eb5e311e585b
525958515d545b58595258645958595958585d595454565b5252561e5645565452545456
5b565658525b5658525251565656525154545952450e5656525659595159595d54544b56
59525456b2edf5f9685854525251283b403d40484834
1a121a211e16160e1e161e2821211e2828242e2e2e2e3431373b3740403b3b404040483d
12454345484b4b484e4b4b4b4e4b5256564e4b4b5254524e584e485b5212514e4b4e584e
58595b5254595b58545854565b595e5b525856595e5258375b56565e625b6265f370565d
525459545459525b565d645b5b59625d3d5b5b5456595b525459525e56585b59565d5958
515456585b5b544b514824515158515b545b56545458564e5158584852565b5b5656564b
4e5e515612585b5d52545b5e525b5e565edf6a585d6058585d5e5e6568baf1662b21525b
5659585b5854585252585259525d4e585b59525958565452595e591e5b56585456585652
545658565252525259605856515251525254524e4012524e525859585152545252525b52
524e56585e7192f97b544e484b40243d40434b484b3d
1a161a1e211a1a161a1a1a1e28242424242e242b212b34342b37373b40433d4045434337
0e484345484348454b454e4e58485252544b51544b5159525b524e5456124b58524e5256
6051565b584e595654565659595960545b545e58565b583b5154595952595454a7605960
515160595b5d565b525e585256595b5b3d59565b545d54585854525156565d5152565254
58565b595b5b565252564854514b5854565952514e5659525e54545654545852565b5658
59564b51165952565d515b5b5b525b5b5eed8e665d5e5b60625e5b626ec3b75d2e215856
58585b5b515458545656525e4b544b525952544e545d5b5b5456511e5958565656585458
5b51584e5654564b5651595654595256585952543d0a5858565651485254545d5154584b
51455b56545b60bb925456514e452b3d43434845403d
1616161a1a1a1a0e1a1a24241e28211e2424282e24282b2e313740373b374845403d433d
1640404843454e4348484b48484e4e4b48544b4e4e4e58525448544b48124e54544b5152
52545958525654545d5b5956585d59565b5856585b5d543b545b52525b525260625d5959
5d5d54585b58585956585e5b56525d5e3b515456565e515454595b4e545858584b545151
51585b5e524b525858521a564e4e52545b52515448585154525252525154584b56545254
58585456125d56585d56525b545e5d5b58bac1605d60595e525b5b6272cd715d2e1e5654
585959595b565d5b59545659565452584e525652515951585158561a5256595956545254
56514e525451525459595151514b4b54515451523d0e4b4b4b4b5d564e525452524b524e
4e4e524e59525978f16452513b43283b40403d43403b
1e1a16161a1e120a161e211e211e1a2121212428282e312e342e3d373743403d45433b37
12404343454548434b4e4b454b514e52455152484b5158515251524e541248484e4b5458
5148594e5252525654525d5259565456545959525658543152545659594e595b564e5854
5452545654585259585b5654545951543b545251525951594b58565459545b5652585256
525958584854585656541a525858545652585b4b48515651565654545152525151524552
5b4e5652125659485b5d52645b525b4e648ef9655b5d56595d5e595eb5f87162311a5254
56565459515d54545254585858515254565652525654565458514e1e4e52585256525259
5251565252545154514e4b515d545152585e54453d0e4b514e51514e515259544e4e5256
584e52454e4e4b56eb7f5b4848402143433d48404040
12121a161216160e1e1e2424212121282124242b2e2b2b372e344337404b4040403d4034
124043434548484b4b434e4b454b48524e484b4852524b52524e4e4e51124e5252565151
4e52514b5252585256595956525b52545654594856514e2e45595456594e4b56594e5456
52545654565456525154595b51484e56345156545658585652544e545256514e51525656
515452525b45585858512e4b56514e515656585b525154585654564e544e4e5151525454
5b565258125851565d585664565458585875f46b5b5e56595862585ec2ed6262311a5956
5952585b5651545b4b565258585258514e5b5852545854545648541e5251515252545256
58524b4e4e5456544e594b545254564e5452544b430e524b4e594e564b52544851544b52
4e595151484e54529feb7b4e4e452831544545403b48
1616161a16161a0e1a1a1a1e1e1e1e242b242428243131312e313b343b4043453d3b4534
0a43434b40433d4e48514b48454b484e52544b4b4e514b514b5258564e124b51514e4e4e
4e5648565451524e4e51515852594e5254585454514e522e4852525651544b5152545856
4e4e5854514e5456585852564e4e51583754525456585156514b5154585958584e4b4b51
4b524b54564e4b4e51522b51514e584e514e4e52514e54524b52514b514b525848565251
4e565145164e595652565b5b5451565e565edd8b5b51545864605d71d9de66562e1e594e
5b5656594e565451545b545256545854515454525458524e4b51541a5656515651525451
5854544e52514e4e514e4e4e5151585451525454480e56454e515b4843524b51524b4e4b
4b514b4e524e4e4e64f3b05b4b432b3d434540483b3b
1212161e1a121a0e161a1a1e1e1621241e1e2b282b34312e37343b3d3d483b403b453731
1640433d45404045484b4543544b514b4e4e484b4b5252524b485256510e4e4e5251514e
515856585652585b56585451524e52544e4e545254514e31454e565b5956524e5452524e
564e545151584b56564e52595b5b59512e524e545656594e52564e52565845515151544b
514e524e54514e5152561a4e48514851484e4b4e4e4e484554544e56515152584e4e524b
5452544b1651545651545b56595d5b605b60df92626058525e585d99f0d15b5428125656
5e595b525654545e56564b5456544b544b56514e5456515154514b1651515b4e4e564e5b
54544e4e5258525451515943524e52525952524e430e544348514e5251525456514e584b
4b5152524e514b4e51d5e29056402e34483d313b4534
161616161612160a1a1a16281a1e162431282421282e2b2b343b34373137433d40403b34
12403b40434845454b3d43435148544b4b484545515156544e45544e4e16514e4e4e4e59
524e5456435252524e524b4e5856525658525152565b4e3b5451544e4b4e4e545452514b
525154545154524e5b524e565652524e314551485152524e5252565451544e4b4848454b
52564e564e4e52564e4e1a48524b5251514b484e484b4852434e4e51524e515156545256
5452564e124e51525151545151585b58545284925e605d5b565860ebf3a95d522e16525b
595652524e525b4e585851565654524b4b544e524e5452565248521a514e5651514e4e54
515154564e5154514b51525245515156454e455840124b4e4e58524e52544b4e4e524858
484b5145514e524e51b0f8f559432840434843433b3d
12161a12161a160512121a1e211a1e2128212824282e3731372e3b37343b343b453d4534
124b454b4545434848484548454b4b5148454848515248514b484b5159164b4e4b515151
4b5254524e54564b54525954594e5152525452585b5651344856564e405b525159545445
545454514b544e4e5859565452524b543745514e56525851514b5252514b5151524b514e
544b565154434e4e52514351564b514e484b564e524b4e45405151544b5248454e51544e
51525451125856484e56515b5951584e545b6d98625e5e525d5e59d1ab655b5834125156
5652515b58545e5652544b564b514b524e4b4e4e515454515852581252514b5152514e4e
4e524e5159515156564e45514e515154434b5252450e4848484e524b564e434e4b434e59
4e4b4b4b45514554455999e85e4e34343440403b3d34
1612121a0e1a1a121a1a16211a1a1e211a21312421282b2b3137403b3b37343b40403d34
1243373d484045524345484051524e515143524e45544b5459434e405416514e51565158
5151545b4b564e514e4e5252454b595148484e54524b51314b484e4e4b564b515d545254
524854525458524e594e58515254544b31454b56524e54565152565154525145484b5152
4543484b484b4548544e1e484e52544e43544e4e4e4e515252514b4e4b48454e51515651
564b4e4e125151525254565258515b58545d64a1655859594e566ec89b5d525d34165254
5254585d4b60564b545148565456484b515d4e435156524b52485116514b514b51544b52
45564b52524543514e4b5b4b585456524e595152451256434b4b484b5154524e4e4e5151
48454e5148514552374e547d68483d403d404045403b
12120e161212160e121e1a21161a1a1e28212428243137312e37343d3d40343d3d433d37
123d3d404345484b4548454345455248484e5152454b5251524e514e4e12545452565651
545154454e5252545151454b58484b525b54514b4e454e314b54515e524e4e4e48485252
544e4b5b5d524e544b524e525e595156314545484e4051545256564e434b51544b485152
54514b4e48484e4b4e561648523d45484e4b5648524851454b4b514845454b4b4b45544e
59564552124e4b4e54525b4b51545656545b68ed9c5e525b595b59c4925b585e3b16525b
525848515b585b585151485151514b4b5145515145564b5252513d125145514b404b4b4e
4b4e4b4b454b52514e454b4e4e4e4e4b43484e4e43124043404337454840373b4343433b
404040343b43403d373b3d5964342b4040483b403d45
1212160e1a16160e16121a1a21241e212428282b2e242b2e372e373b3743434340404837
123d40404048484551454b45454e4e4e5656515251484e4e524e544352124b525854514e
545251434b51544b4b484e51525659484e4b4e4e5845522e404e5251524548525151524b
5448484b4e4e4b544b51584e4848514b314e4b484e4e48524e51544b48484343453b4345
3d43403d4b483d483b431a3b3d3437373d3d343b343d313b3b2b312e3431342b312e3b2b
2e2b2e34283b3128312b31342b2b2e2428313daf64342b282424287d4b212428283d2124
211e282121211e1e1e1e1a1a1a1e16161a16161616161a1a1a1616371a12161216161616
161216120e161216120e1216121216121a1612121e481e1e1a1e1e1e161e16162421211e
16211e122824211e241a2434823b283d403d453d343d
121612121616120e1616161e211a1a1e24241e211e2e282b2b2b313131373b34343d312b
12403b3434313b3b3b3b403b3d43343d403b3d373434343731312b31341a3134342e2e28
2b242e242824282824212b1e211e211a1e1e211e1a1a1621161e1e1a1e1e1a1a1a161616
1e1a1a1a161e1a1a1612161a161616122116121216120e12161616121a1616161a121616
1a161a16211a161e241e3b24241e242824282421212b282124242b2e2b24242b2b282e2b
282e2e34242e3d313b37433d3b453743404552c99e564e4b4e455bd085515251371e4b48
4e48514e4545544345514b3d48454843404b45524045514b4b51521e43514b4e3b4b434b
4e4b4e4e4b433d40484b48434e48515251485452450e4b4b5251514e4e4e43434b454848
484e4b43483d3b454b45485bf4c24b3b3d453b403b43
161216161212160e0e0a0e0a0e0e0e120e160e0e0e12121a0e0e12161a120e12120e161a
31121612121a161a121a1a1221161e21211e1e241e242121282b24242824312e3131313b
34372e313b3b3d3d3d3d43404840434540484340434b403b404e4e4b51434852434b4848
4e404e52454e544b48524b4e51514b4e34404e454e45454854484e484e43454e48565145
4848484b5148483d43481a4554544e51454b4b4b484b5151434b48524e45483b4b48484b
3d4e5148125251564e4e52525854585d525b56cfc7625456525260e384595d563d164b52
595256584e52544b4b434b5156524e4b4e51484b5151514e514b451651524b4e4b4b4b4e
54524e4e51434b54454b4b4b524b4b4e4b545152480e544b48594e52454b485248454e51
484552434e4043455145454eefdc5834404b40433d40
1212161212121a120e12121a1a16121e1e1a242121242e2b2b2e373d313b3d373d37372e
163d45404040404b4545434b4e4b454b45434b4b4b48484545524e4552124e4558514e48
51525148515151594e5452544b4e484b4554484b4e484334404e524856484e5159515252
514e58525156585251485256584e51523443564b51524345565252525248565151485151
484b454e484e4b48484b16484b4e4e4b43454b4b484e5651404843454848404543404551
5445455216455451565256514e58525d605b5bbfcf7259525b5666de715e5e5834165258
58544b564e484b4e514b5151454e524b4e52434e515248565448510e4e4b544e4e4b514e
514e5152524b545151514b4b51514b4e524e5248400a52565458434b484551514b4b4b45
4b51524e403d434b454e484e92d46434434345453d40
120e1216160e120a1212121a1a1a1a1e242824241e2b242e313131343b403b4340403d3d
164e404040434045434543484551434b43514e4b4e4b52434e51514e52164e52544e5152
58484e4848454e48514e4e51435648545651484851484e34484b544b514852514e455256
45515148525151595b54485b5156514e374851515152514e514b5152565151544e454851
4e4e4e4e4e514e4b4e4312404b524b4e524b4b515148514545484b454e51453743454e48
4e4e4e4e16485152585b52565151524e515256a9d97c59595b6587e2745e5d4e3712455b
59515e525156595b544b5254524e485448484e524e52525256514012544e4b514b434b52
51544b4e54514e51514b524345564b4e524b56454b0e4e5656564e52584b525148404848
45454845434e40434351484874d3812e433d3d34403d
1a1a12120e12120e121a16161e161a1a1e21211a1e282b2e373b31403b3d3b403d3b4537
163b3b40404343484b4e4b4b4851484b45544e454e4b54524e484b5152124b4b544b5452
54514e4e485258514b4b58564851544e54514e484e48452e3b484e5251514e48514e4e54
4e48525256524b4e565152524851514e3d45435b54514e525256485259525151544e544b
524b52514854514b484e434b4b43514b524b4b4b4e51455443514b45484e454b4b4e4b51
4843454816544e52544845514e51565656515492d98b59605d6ac9bc6a5e525645124552
5148514e515d525e5259594e54584b48454b514e4b4e544e4b544316544554454845514e
4e4b4e5151545151515251514e514b5452454b544e0e484e4e4b514b52484e524e454b4e
5256453d43484b484b40435866d0c13140484045404b
1612120e12160e0e120e121616161a1e1a211a21242b282b2e2e3b3b3d373b3b403d4031
0e483b3d40404b4b454b484b3d51484e434e4e4b51454e4b5248484b4812524e4b545452
545152514e514e4e4851515158544e52514b544e51514331404b435254484e52454e484e
544b524e524e4b4e485956544e4851543d454e544e5b515452525251545648484e525648
4e514e454b4e5248454b16484556514e51454e4b45454b3d40544b454b4b48514b454343
454e4545164b4356514b4e564b4e56485156567bd39c5b595b68ba755d5b59593d16524e
585648455652525851545454544e4b51484b4b45524e454e5151430e5252454e3d40524e
51514b4b544e525458524e45514e514b5648564e48124e4e454e52544e4b514e48524e4b
4b52524e45434b4843483b4851aada34434845404543
1612160e1612160a121a0e1a16161e121e21212121282b2b2b3440403d343d3b3b3d3737
12434345454e40404e434b4b454b48514e4e4e51434e4b515256524e4e12455651514e52
4b4b515251564e52484e51545451484e4e514e485954512e4852564e4e524552524e5156
525251455b4e4b525b5251585145514e455252524e59524e4b514b4b4e4b514b4e484e45
4e4b4b544e514e48584812515256454e484e4e51514e454b4b48434b4545514b4b484b4e
43454b52124b4e48514e4b4b434e4b4e5459516bcdad605b5268c66b59595d593b124354
4e54545951585956484e545252514548404843454b514b515245510e454b4b51545b5143
52434e51544558524e52454b52434b455448514b3d0e4b485d514e4b4e454e52514e484b
4e454b4351434b40484548434876cc3b3b4343403d3d
121616121212120a121612161616161a1e2124211e2e2b2e343b40373d37403d343d433d
2e3d3d40433d43434b4b3d48514e4e4b4e4e4e43484b52524b544e54511252485252524e
564e5652515445564e514e4048524554524b5448484b4e2e4b48544b52544e52514e484e
59524b4e54564b52524e5259544e545240434e525452514e545245485251484e5252544e
514e484e48514b51524b1e4852514b4e4b544b4e43484b4e4b4b4b4e4b484845484b4545
484b4b4e164b4e454b514b5143525251515d586ac5c059585d74e16256605d51430e4b51
565454525256525854585654564e4b4b4b434548544e54454e4b4b0e514b52524e524e45
4554544b514b54514e524e4b4b524b4e4e51454b450e5245524e4e5458544e515b4b4e51
484543515845454545453b404b60bc34454840433d3d
12161616120e120a0e121616161212161a211e211a2b282e2e3443373d373b343b343731
313d454b40434e524b4551435148484b4b4b4e4e4e454e4b4e484e4e52164b5148484854
4e514b4e4e5451514b524b4e4b514854524e5651435251373b4548525654544e52524e48
4b4b484e51484e524b5151565454525137404e5643545254545451514551524b4b4b4e48
485248524545524e3b433d4b484e4e4b4345434b434e4b4b4351484b4843434b4843454b
4b4345480e454b56524e48564e4e484852565264c5d15b4e5d90eb5e585b59543d12545d
525654515151594e4b4e5254525156544e4845484b4b5145514b40125452484e4b54524e
454b5451515252545251484b544e4e54544e524e480e5648484b4e454e4852514b4b4b45
4e45404543454b45483d3d374554bd7b3d43403d3d3b
1212120a120e160e1216161a1212161a1a1e2124283131313137403b3b3d3d4040433734
28404b48434e45484b484b514b4e4b544851484b4b4e4b4e484b4b51581a4e5151544b4b
4e545243514b4b52514e54514e51485451544e515240433443544e484e43525151484e4b
5151515452514e5252514e52525451513b484b4e4852514e51585252484e514e48545148
4e4b484e454b454b514e16454b51434b48514e454e48513d524b455248484e484b4b4e51
524e4e4b16454e4e5154514e524b51514552515eaadf565b6488c96052585654430e4551
4054524e565652545654484b545448544e514e4e4b4e52514e4b540e4e56565451524b51
52515451515152524e4e4b5154484b4e5651514b4812525252514b54524b545251454e52
524e51434848434b48404e4345519fbb483d40404034
121a0e12160e0e0e12161616161a1616211e212424242b3131373b343b34434040373d37
1643404b45433b484b514e4e454b4e514552515145484b4854514b43511a4e4b4e4e4e4b
515151484e5145514e524e4e4b51545451484e4e4e4b40344048524e524045484b4e4e4e
564e51524b51514e51524e524e45514e3d4851484e4e485652514e524e52484e51515243
4e4e4b4b4e4b4b514e4812515451484548454e454348434e4b513b3b484e434e484b484b
4e4b514e16484b5152484b4e485152514e5154569cec6051627dbd5958524e5237124354
51565b58485452545258514e544e52524b4b454b4b4e515252583b123d45454e56514b4b
56515448514e4b4b5148564b4b564b544e45564e56124e564b514e484b4e52564e524851
484b434b405143403d3d40404043459c5643453d3d34
1a12161612160e0e121216161a12161a1a1a1e1a1e2e28313437403b3b3b40404840403b
1240454e43404048524b48404848544b4e4e514b4e484b4b514e5454581a4b4e4e484e45
524b52485154484e4b4b4e525952484b514b4e54484e40373d5152524b4548484e51404b
4e484e544b48515251485256544e524e3d454e4e48585654544e4e4e52455254524e4b48
564b454b4b4e514e4b481e454b4e525176524b4b48545248454343514848434e454e514e
4e4548511a4e4b4b4e4b484848524e525252545d82eb6a525b84b85b51545151400e5152
594856514b5d4858525156585b4e48454543514e544b45454e484e0e4b43484e52454b4e
5651515656514b4e51514b4e545251564e484e4b4b125643484e514548524e514e4b4848
524b45484343434537403d374b4531a45640403b3b3d
161212121212120a121a1616161616161a1e1e1e282b2b283b3d3d40403d373b3b40372e
0e45453d404352454843454b45484e4b4b454345484e4b4b4e4e564e48214851564b4b54
5248544e5852455151544b56524e4e4b4848515248485234434856484b484e455148454e
4b595245514e48485454524b5454434b3d45564e484e4e524e564b594052454e4b454e4b
4b524b4e4e4e524b45513b4b4b4b524e4b4b5148513d5252404b404e4e4b51454e434b48
45524e4e1a43484e525252524b4851515252525462c271526089bc565d54524e45124551
515952524b51514e564e51514b5145454b4b4b584e43484b4e48450e4b4e4b4e4e454e51
4e5452514e5251514e484552544e4e51515d5443480e56485151514e48485145544b4e40
484b4e5140404e433d3d453d4e483d5d4e4031403d40
0e161612120e120e12121216121612161a1a1e211e242e2e373737343d3d3b37343b3d3b
0e4b40484b4345454b434845434b4e4b45484b484b514e4e4e4b4b51521e514b544b5848
4e545143544e544e4b484b524e484e514b52404b58484e3d435652544351545243484852
4b51545445484b454e515451434e4b433b3d4e4556515652524e4b514851514e52485148
4b51514e51485245485112514b454e4b4b514e48484e4b48454e4848484b4b514e434e43
48524e511e434e484e485251524b514e455256585da57c5e5b8cb35b5254515b480e4b51
45514b4e484b5151515252525156455143544e5154454b524b524e124545484b4e4b4e4b
4b525856514b4e56565456454e48484e525654565221524b544e4e4b4b484b4e4e4b4045
43484545404840404340403d433d402e40403b43342e
12121212120e0e0e1212121e16161a121a162124242e37373d37403b3b433d3b3b3d4034
1243484b40454b48524e514b524e4b484b4b454e4e4e543d4e564e4e4e1a485156484e52
5152524e54484848484e564e48514b4e43435948544b523d3d51484b4b4e4548484e5151
51514e5140404e52454b515245454b453b3b485152525152525252585145584851544b4e
48484854514b404e4b511240544b454b5251454b484e43514b4e4e484e48484845484b4b
484843481e4e544e515151564e4e515451484b485d928c5879d7e15b525648544b125252
4e52484e4e515151545440545248584b4b544b4052544552514b4e0e4e524b54484e434e
51454e54524e54514b4e58524b4e4e484b544e5851164e515456594b454b514b4e404852
4845484e45453d48434e3d3d37343d243d4034314334
0e1212121212120a0a1216161216121a161a1e1e21312e2e31373d374034403d343b3d37
0e3d4843454b4e4e59484348484b454848485254485251484e54514b43214b5652514545
525658484b4e4e544b5454454e455248484b564e484b51483d4e5452454e4e4e5248514e
4e484b4e51514b4e4e484e52524b5152483b51454e4e4e52565148545151545145515b4e
514e524e4e4e454b434821484e514b4b4e524e51524e5152484843454b4552454b40525e
514e4b4b1e4e4b4b4b4e484b454e484e514851515d7fb55bbbf1c95852524e5445124052
485251524b515651584e5645454548405152454e524351404352450e4552544552544558
5254524e4e54585854545654525452525251564b511e524b51484e4b4b4b4b4e4e454548
48434e3d454e43453d433b433b403b243d4045343d31
1212121a0e12050a0a12121612121216121a211e2431342b3431343b3d3b343d3434343d
124345435143434e484b454e484b4e484b4b484e484b484b4e52514e521e4854434b4854
4e5156515254524e51524e484e4b45514e514e4b5245434337485848524340454845513d
455145454848454848514845484b4b4b402e4b404851485151564e4b4048525452514b4b
54524b484b514b52524e34484b54544e514b4b4e435248434b4551544b51525148454b56
48484858214e454548484b4e4b5445524b4e51565b72c762b2d1765952545954450e3d51
524854484b594b515451585248485845565454454e4b48454351450e4e45524b4e515245
4e56544e584b5858525151524e4e4b5454525156561e4548515156484e4e4b564b454e51
4845454543484043403d37433b3b3d1a31373b31403d
161612120e0e0e0a121612161616161a1a1a212421313731313434373d3b3b403d403b40
16403d4343484e4e4e54564b484848454b454b51514e48524851514e48245156434b4b4e
514b4e524e51455148514543484848514e524354544b434337454e4e4b525148434e4048
4851524b45484b484b4b4843434e453d3b31514851525645564e54485148484b51434b4b
525145514e4e454b454b12434e4b51484b4b545151524e48435648454e514e4851434554
51454e45244b40514e4e514b4b5151514b524b4e5662ea94cad070525151515448123b56
5248485259544b52484b545856454e485948544e524b45514b4b40125454524b3b405454
4e58544e4e515259515256525248524e4b4b4e5252164045515143544343434548484b40
45433b3d3d433b43343d3734343d311a34403d403131
160e120e121612051212160e1a161216161a211621343431403737343434313d343d3d48
12433d43434e484051514b3d4b5145514e404b4b51514b514b584b4e542b454b4b4b4b45
4e4e4b52525145454552564e435240434b4b4e4b544e3b3b344348514b514e4848455151
4b4845514b43454548434545514b483b3d2e484e4848404e514b514b4554524843524e4e
454543484b43433b43430a3b4b4b4b4845433d3b4552454843454043433b45483d454843
3d43434321434343454045484348484345404b4e525df3f5f5e36a454b4548433b164045
403d3d4337403b4b3d3d403d343b3d34373734343b2e312b312e242e2e2b312b2b2e312e
2e2b282b28242e2e2b21241e2b212124241a1e241e311e1e21161e12161a211616121616
0e12160e161e12120e0e0e12120e1a34343d2e3b3b40
1212120e120e120e12160a1612121a1e16161a2421282e31342e373b3b373431373d3737
1a404348434545404b4045484b4e43454b4b454e484340454548454e542840484b454b43
4b484840454345404845403d4343433d433b48403d3d37372e3b3731313d37403431372e
3b3b312e3131312e342e342e312e282428312b282b2b282824241e2124241e2128211e1e
1e1e1a1e1e1e1e1a1a1a2b1a1a1e1a1a1a1a161e161e1a121a1a16120e161612160e1616
1216160e281616121612161a1212121216120e1a1a1a52666040241e1e1a16161e4b311e
1e1a1a1a241a28281e241a1e211e24212121241a1e2421281e282b452b282b28242b242b
2831313434313b2e2e343437313440402e373b45434e453d3d34373b3d343b343743343b
40343740344331313d373b37342b2b2e313131313b31
161212120e0e160e120e120e120e12120e161612121e211a1a1a1a1a161a1a1a1612121e
28161e1a21211a1a1e1e1a1a1e1e1a1a161e1a1616161612161a1a1a1a2416121a1e1a16
12161612161a1a16121a1a1a1a1212161a1e241e1e1e1a1e2b1a1a211e1a161a1a211e1e
241e2124241a21281e2428282e28282b34432e2b2b342e2831312b2e373b313b403d3134
40372e314545403b453b524e43453d3b3b3d4545404851454b48434840454b3b4345484b
4e454340484848484052434e45565145484b5456565d585e5858584e51524b4b565b524e
524b454b4e514b4e5452544b524b51564e51485651544545514b5252514e48514b434b43
4b56524e514b58523d4b4e5252564e4e51544b564e5252455658524e4548434843454b4e
4b3d4e40433d433b403b3d37343d343b343d34313134
16120e0e121212120a0e0a0a0a0e0e1212120e1a1e21211e162824242b2b2e282b282e34
40343b37342e373d434340434045454537484340404e4e4b4051484e514e52454e514e52
4b514e514854524e4e5148524e52594b485d54455151434e4b454e484e4548454851565b
454b564e484e454348485e4b4545484e4551594b43514e4e43514845564b48516551594e
51484b4e515240485252544b51514e4e4e515254484e4e4b51525143434e52544e524b48
5148454e4e48514843524e4b4e5156485251524e515254595956687876715865787d7d71
566878785d52457c797f6d59514e56524e4b5151527c52515159827b524b48514b4e4e56
5879909b594e6a929d7f58525692986d5451525b52544848609e8b5243404b4348405182
433d7d48454340403734373d40403b34403734343131
120e1212121212160e16121216161a211a1e1e21283d5137373745433743435243434345
484b484843514b4b4e4e45454e4b54564b4e545654545958605b56595454524e5158526e
6b5e585654564e4e515856566559484b51544e52544b4548485148514b4e4543454b4845
484e454b4b45434851524043483d56525240454b48524e5148455148524b514e4e51454b
54594b544b4b51524b4b52564b4b484b5252525156514b48514e5145544e51484b4e4b48
4551434b4852404b4048524e515b484848524b544e514e51586089b5b0966298bfc1ba79
59a2afa9815e5bbba8a18b755951515b4b484e59719e4b4e5e9c9f825d52525252515154
5ea1908c9254a198898b8958818b87907c4e51524b524862a18784584e4b48524845518b
4e4892453d404343433d403d2e2e3b3b343d342e3b2e
160e120e0e0e0e1612121612162e4e4e241e515960796a3b37897b5840588b8c78454b76
98989899484340484e454b52a4aba45b5189abae794e6499b5ac6b68565651514e5898b6
b27d5d4e4e485654528f5b5b925b544e4e4e514b4e51404e4548514e4e48454545484848
4e484845454e454b4e4e484852435245484e434b4851525645514e454851484b454e4b4b
4b54484356434b4e454852524e52595152544e525151514e454b58564e4e484554544b51
544351404b5448584e404e5252564e48525151514b5152525b7bb564598b625d79ba7d5b
6b85595db07656ac745d95a96252515651545487a5a752516e8b589062514b5148544356
64815d51ac58a96b58829e649d5e62a78e454e4e4b4e4e6baa4b79594b454845484b5194
524094487b8c948f64453d313b3b3131313431342b2e
120e120e121216121216120e1640403d4524434e6b625440787271845d6b786e828b4564
6ba47c66454040454b51456e7c716d985ba471649c58a795657fab75595452514b5da665
75b05b564e5252515d95655e8e5d59747f7c81604e4e4e48484e404e43404548484e454b
4543484b45454b434548454848514b4b4851434545455248484854564e45484b454e484b
5154514e51524e4e484b4e524e514e525256484e5251514e515156514b4e4b48584b514b
484b484e524b4b454548515256515248514e4b4b4b4e56515270a17b7f795d5274ae7252
688f5948ae7856af8b889f8b5851515951455e8e6da656544e5256a1544e4b4e4b45544b
5b7d5858aa4eab70548fa85e9460589e8e544b525852546aa85b70654840454e4b434ea9
9f9da245666a6d98483d37373b3431343d37312e3128
120e121212120e161212161228241e21311e1a3465373b348b456495656b625284903b43
43986551404b433d484b4b595b56629e5b9c5d519e59aa875875af795651514b58549e5b
6dae5452514e52565b8c81829c625ea6b2b5aa6b524b454b455151514e45454345455248
4e45454543484845514b454e5140433d454051404e484e45544848544e484e544e4e4b4e
4b48545951524b4854544b4b48524b514b4e52514e56485148485254524b4e4b4b514e54
4e51484b5848514b4b4b485654484b514551524e5145524e4b5866a9b59c655970ad7c52
68945b4bb57f5eb7b2a18459514b485243484e5259a5565252568f724e5243564e454e51
65855b54ab54a9765985ab6885666496944b519fa6725262a4526e6d454343434e454b9d
76798b4e45485d7540373b404034343434373b2e312e
120e0e0e120e120e12120e121e434e592b1e1a2e602e373d928f9ba166709f988b59403b
409d624843434340404548485898b06a51a15d51a159a78e5872af7c52566e62545ea65b
65ac5851514b5445598eb5b29d5d515864986b58524e4e454e4e454b52513d4b43454e52
4b4545454e524b45483b43514340484e45484b4e4045454045485151484b45484b515251
4b525145514854484b4b484e4b484e4b4b4b52525851564e484e4b51484b433d58514e4e
5252484e4e484b4b544e4e524b514e48514851514e52564e5658705b587f705270b27952
658e5858ad7d56a7705254524b484b514e454b4e56a15652598b925851515151544b5252
58945d58a958aa755e81b06e876e5b96984b4bb8b2765662a5526d7b453d40485143569d
523d815145649548343b4331313734343b34342e312b
120e0e0e120a0e1a12160e12162e31344e1e1e28593131348564729568658c8f594e3d3b
4099664545453b484545434e4e5d5e9e52a1594e9e59a789566eb2795466be9f5d5ba454
65ac5d4e54525143518c72599c5e54689d92585151484e48514e454e45484b4b434b454e
4543484b4b4848403d4e484b3b45484b43434e514e524e454b48484351515454524b4e51
4e524b4b4852525243484b4e4e4e4b544b4b4e5651484e524e544b484e5951514e545252
51484b484e4e4e525245514b4e544e4b5158514e524b5456516ba1858998605b6ab67f4e
60898f88a15e56b272565643484b48484b4b4e7690af8b566ba798965851404e5251454e
56829c9b90517992a19f7956659ba6a16d4b5176725b4e4e749fa6544b453740403d3da4
624b78516a98a488783d3d34313734342b31312e2b2e
0e1212120e160e121a16120e1a2b1e215d1a1e31622b3737844b629960686882794e4540
43a1624b3d3d404540484e6a6d605e9f529b645e9e56a48c6d7fad75515eb690525b9b75
7fa95d5151514b4e5b896d5ea16854abaf9285685152484e434b4e4e4e4e484045484552
4b43524e48454e484b5151514845434b40404048454348454e4b4552524b484e544b484e
5248514e484e544b434b4b4348514b4e4b5151525451525254514e514b4b4e454e4e5148
484b4b484e564b5156484e51484856454b4e52434b514e52515264a6a794525460996b4e
4e85a19e654856925e45564b404e4b4b484b5b859290925168898b855445514e4b4b4e4b
4e767d7d5d45567478725d5256757c68584b5252484b4b514b6d6b5248454340373d405d
484559435968666b523b3b34343b312e2e312b312b2b
0e120e0a0e0e0a0e16160e1a1e43515b311a1e2b5b312e3d8443598f5e625858718b433b
439d65524045454343484b52a1a9af594b7ba2b37d4b6592aba670564e4852544b527ca6
a77258515251594854785d587f5b519994969062514e4e4e45484e4e4348484b45484e4e
484551434b454b484b514b3d484e4b435145454548455145544e4854514e4e4854435148
4e4b524848515251484b514b4e454e524b4b514552514e524b5248484b454e514e52544b
434b484b4b48544e5248455645514848514b545152565151485658585158514e564e5443
5258454b4851524e544b4b54484e4b4b524b4b52584e565158514b52584b513d45515251
4b5151544e454b5152524b4b564e52544e544e4848514843484b4b4543483751403b3d3d
343440373d3d3b343d3d34312e34312b34312b312824
0e0a0e120e0e120a120a12161624212b1a161e1e242b2e3445343d5140403d3d434b4040
3d4e434b3d40484040454b4b52545b484b4b4b564e484b54594e484b56524e484b515152
58564b514551514845514e4e4b43484b4b5251514b4b45454b4b434545434043454b4848
4e48454b43484b4e45454045484048434e4e4b4552484543514e4e48485248514b4e5648
564e4b524b4b4b5248454e4b524e564b4e524b585854524e51524e544b51514e48514843
454e52514e4b525251514b4e4b45524e4b514b48514b51514e5152564b4b4e4b48525145
4845524e524851435252514e454b58585958454b544e43564e48594b454343454b4b4e51
4b595d5656514b48454b584b4e4e4e515951585e68564b4b4848484e3d434043373b3d3d
343437343d34313134343b34373b342b31282b2b2424
160e0e1212120e12120e12121612161a16161e1e161a242e2e3d34312e3b374043403d43
3d3b40454040403d4345434545403d434545484e484b4b4b4552484b5154525252484558
5258524e434e4852514b545152454b4e4851514b524343434b4e484e4e3b3d45454e434b
52484540454e48403d4348484343514e485d48456668655b4b6d594e6051514e43515251
4e545d4b524352524848526079516a584b54524b4e5252435156484b48454b484b54514b
434e454b514e4b51434b524e484e514b4b45545151484e4e4b48515148524e524b51404e
4e5151454848485899aea868566bb7baaca1454e3d5443514365b6ac4b4b514848404b3b
3b76afb58b5145514b4b4b4566744e70a854b6b3aa8e4b454545404540403b403b31343b
343d40373b343440313b343731372b3b312e2b2e2828
0e0a0e0e120e05120e0a12121612161616161a1a1e1e2b2e2e372e2e2b31403d3b3b3d48
606d70604b4360727243345258484b704545434e43434e54605e454e4385a1955b5272a1
a5824e4e40484b4554656d529f5e48514543484b5437434843484e454348434548484852
484b51434845483b434843434e457d625495525dbab5b57154a75d51a65443484e584b4e
4e847b4854484e484851548ca1459e54515256514e54484b56584b484b434843524e4552
454840454e454b48514b4b4852514b4b544e545454524e56524e4e52544b515445434545
4b52484e454b48a5926b75a76d5671926b564e4b4551484564a15e757851483d45434b4e
52a2665e945b524848484b4b647f566da14baa5e5d7d654b40454040433d453b40454345
373743313b373b3d2e2e2e3431282e2b2b2b28282b24
0e0e0e0e120a0e1212121212161616121a161612121e2e2e313134342b34403731344376
a69298794e5492989262456465404598454b404b4b4e4e729d684b4b599578849f51a174
749558514845434b526e7256aa64525459515852483d4e4b40484e4b4b454b4048454343
434548484b454e4b4b484045404e7f66589852658f5954b05ba465529d54484b544b4e52
54ad784e4e4843454345548baa51a25b5d769494664e524b515951524b4b454e4345404b
48484e4b4e4b595251514e5645514851514e40454b4b52484e4e4b515151454354514b48
4040433d484345a88f545b68544059925645373b4045454e4556516e8152453b454b4e52
51564e549456433d4e484352658c5e78ac51ad5e68845b483d43403440454343343d373b
373731402b3b3b2e312e342b342b3b2e2e282b282828
0e0e0e0e120e0e120a0a0e0e12160e121616121612212424312e37312e343437373b4075
8f4b518b56589d585e704b687151459b4848453b434b7b8e90644b486d7b547baf56a559
5d99594b45434b434e727959a56554b3afb2ab82523b454e3d4048454345433d3b404045
45454e404040434b4551484845518175608c565e986d6da854a672649f5d56454b454b48
797685524b48244e4b515284ad8fb35e66989db8594e4b51514548484351485143484b51
4e454b454b4b484b45434b514e4e454e4b4b40514e435245524b48454b4b4b434351453b
404543403d43456894b3a46a52455b984b4545434545434e43487dad5b51404b524e4340
454b5b60944e45453d4b4b435dbcb0b6b34eaaafb79843433b434534453d3b3b3734343b
3434373434373b2e3434373134342b2e282424212828
0e120a0e0a0e0a0e0e0a0e160e1616121a161616121e282b242e372b2e373734343d3b75
986a7487434e987c7f5d51657165709c4048404040406e607c684b486a7b4b79a159a451
5999594b40434b454b70b5b2b2685266687b88594b3b483b43373d3b434843434340434e
403b454340404840485148454e4552aea254435dbbb0b57951ae82b0a25b434e513b524b
43687b5145524b4e48485887b59eb35954586d814e4b4b3d434e484e524e404b45484b4e
4845454848514e5148484e5245453d45514b51484b485251454e4b4b52434b4b434e4b45
48404b51434b454e60666d9e7d48529259454343434043454051546b8b51525288b65e52
4b65aab652454e4b454545406096565da158a68998644b3d3b454040373d3b3b3b434537
372e2e342e372e2e312e2b2e312e2b2e282828282828
0e120e0e0e0a0a0e0e1212120e1612121a121a1e1616242e2b2e312b2e343b3134374576
9eab9868484e9892895d486074898b9840453d43453d4351786a433d657b4b7ba451a64b
54905b484345434843728466a668435175a1524e4843404b3d45403d4b4e434540454843
4848404e483d403d3d48453d434345a8a94e435b945952a758ae8caaac594045403d4343
48607f4e454348485151527fab58985b4b51a15945544b4b404e484b52514b4848484548
43484b4b484e4e4b4545514b51454845484543484851514e4845455143404b45484b4343
43433d3d48434389895b60a57c4b569652483b4b3d3d45404589595b924b434e82ba6445
45a87962583b40453d374845529245569d4e9f546e9852404040404b433b3b3b3b3b3734
342e3431342831312e342e2b2e2e212828282e2e2821
0a0e160e0e0a0a0e0a0e0a05160e120a16121212161a21282b2e312831312e3437373d75
8b84725b404e94515e6e4b668f8b819e4337403d4343434b786643456b745274ad519851
5d985b4e4543453b486e7251aa664879a775524e483d3b454045454b45454348404e4045
4e45403d453d404548433d433743485d81404b529b6a66a159bcad7cb85b514b433d4e48
588e92796b48454e4b434e82ad529b5d4b75ac8c65545148404e4b4e484545434b434852
4b4b4540434e454345435240434540484840524b4b4b484b404348484b4b434337374043
403b403d3d433b5e7daaa776434e48925148403d434040455154adae5634404851564043
45abafb2b0583d4031434340488b484b9448984345596b403434373d373d3737403d3724
31373731372b3131342b2e242b2b242b2b24282b281e
120a120a12050e0e0a0e0e0e12120e1212161612121a21282b2b37313d342e2e40313470
8c517874404e9871875b45688b606e92433b343d3d40768ca19f92705990a1a172487ba4
a7964b4e4845403d4871724ba16054b5bfb7ac814b3b3d4e3b3b4548404e434345403b43
4551343b4040403d484837483b403d6076434b56b2aead6554985e4e8f5243484b4e4845
75a9a9a285513d4b484551708c4b8b5456929f9b5e4e3d43483d454543434e434b4b4348
4e454843434e4b3d4845434b514e434e48434545484e48434543434b45454b434b43404b
483b45434045485156655b4e3d3d454b4343403d434340453b455d543d4040453d43434e
434e565656374b34403745454048433d51454b4045483d373d373d40403b344031313434
2e373434342e282e2e2e242e282b2b2b282e21211e28
0a0a0a120e0e0e120a0a0e120e0e121212121212121a1e282b2e34342b28372e2e343159
6a3b3d6d48457582793d435854403d6b3d403d453740657175717252456a6e664b4b546a
654e4e523b434040404e484356524b5e595e5d523d433b4043453d45484045403d343d43
40403d3b3b3d3d404845483d483b43433d3b4e40484e454e484e484b4e4e3b484e4b3d43
4b514e4b514e4543434e45484b434b3d4551485145454b454543433d404848453b454351
4b4e45484b4b4b4b4b434b4b454b3b4e4343454b433d52454b434b4b43484840403d4540
433b453b3d4340404040434040403d40453d4043434340433d3b3b3d3d373440373d3b45
403b433b3d3d373b3b40483b40403d3b3b34403d40403d373140433d433140313128312e
2e2b31242b2e28242b2b2b28211e242428281e1a121a
0e0a0e0e0a0e0a0e0a0e0e0a120e160e0e12161612121e1e312b2b312b2e2e2b282e3737
342e37373b3b3b403b3d31374337343d34403b3143453b3740404040454e3743403d3d45
403d433d454343454845433d4040404840434e43454348404048434e433d45403b403d3d
4e3d3b3b344037403d453b4343433d3b3b3443403d40434534454848434b434543454843
404b435245484843433d3d48434343434b3b4845434b514b4e4e5445453b45453d483140
48453b434e4543434b484343454e403d45403b40483d4e40484b43434037453d45454337
3d3d403b483b403b433d433d373b373b45433b4343373d3d3b3d3d40433b4040403d3d43
3b433b403d3d343d3d31343d3b40313b3d40373b3d4031373b34373d3d31313134343137
2e2e312b282b242b24372b282b281e21212121211e1a
0a0a0a0a0e0e0a0e0e0a0e0a0e0a0e16120e0e0e12161e1e282428312b2b282e2e342e34
312b2e3137313137313131343b3b373734373d313d3b4040484345373d3b433d40454040
4045433d4543404345433d3443453d403b3b4043483d3b403d3d3d434045343b3b374045
3b43453b3d374037434343433d3b373b4845453d3b373d40483b454b453b4340433d3d43
4548483748454b4e45454343483d4e3d4048374b4348454840434345453743483b434840
483b403d48454b4e4340404b453b3b3d4848404351404b4e3d3b4845433d453b43433d3b
403b3d3740403d403b43403437433b3b3b3d343d37403d3b37373d3d3740403d373b4340
43403d3b3d3734373737343b373131373737373b343734313737312b342e343137283128
2b312b282b2b28282e2e24242b1e2421241e1e21120e
0a0a0a050a0a0e0a0a0e0a0a0e050a120e0a12120e161a212b21242e2828242b282e282b
2b2e37342b313134312e343734313b373437343d373434373737313d3b37373d43403b3d
40373d453d3d3b403b3b3d43403b4334453b434543433d373b4345433b34313b37373b3b
3b343d373d3437343d31343b403737453b37403d3b343d4043453d452e433b3d40434834
403440434037454334453743433b483b4b3143483b48433d483b48433d4340433b4b433d
43433d434b3d403d433d3d48434040403b404343433b433b3d3b4040373d403d40403740
3b433b45453b404045373434343b343b3b3b34433b373d3740373b3d3d403b3d3d3d373b
373b3b403137313134343434312b2e3734343434343434312e3d342b2b242e342e3d2b2e
28242e2e34242e1e28282824211e24121a12120e0a05
0a0e0a0e0a0e0e0a050a050a0e0a0e0e0e0e0e120e121a241e282b2428282424282b2424
342b31342b2b2b313734372e313131343b373b3737343737343b37343b3b3d3b3b373b3b
3b3d3b3d3434373b37373d3b40403b37403b3b403b43433d3734373740403b3b34343437
3b3d3d3437343b403737373b373b3b3d3737403b3d373d403b3b373d31434048453b453b
3d434043433d343d3d43373d45453b373b3b3d37483b4b37313b40433448484537404345
3b4043434048433d3b3b43433d3d433d403b4040343d453b434340403b3b37343d434037
3b343b3b3b343b433b3d34343d3b373b343b403b373b3437343443372e2e37343431403b
34343d3734313437313131312e2e2e342b2e2e2e3128312b312b2e34282b21242b282b24
282b2828211e282821211e161e0e0e0a0e0a0a05050a
050a0e0a0e0e0e0a0a0e0a0a0a0a050a0e0e120e0e12161e2121211e2421282b241e2128
2b2424282b28282b28312b31342b312b313158452b2b2b34313434343b313434372e402e
343d343d343d403d3b4037343d373d373437373d3d3b373b3734373137373d343b3d3b34
373d3434373d343b342e3d43373b37373b3b3b3b343737373d2e3d3437453b3d34373734
3d3d3b3b433b3d313d373d403d343d343d3b373b373d3b373b37433d3d3d3b3b4b403d3d
3d4345404040403d3d37343b403b3d3b3d3d453b373d3d3b40434040373b373b37432e34
373731313d373d3434343b3b31343d343b3b313d3134343b343134313134343b312e3b34
34313434312b31313131242b282e2b2e2b2b1e282b282828282b2b2b2128241e28242421
1e1e2116211a121a0e0a0a0a0505010a0a0501010105
0a0e120a0e0a120e0a0a0a0a05050e120a0e120a0a0e1216121a1a1612161a1e1a1e2121
1e1a211e1e2424242124211e2b2828282b2b282b313131372e2b2e2e2e312b3131312e2b
313134343131312e31343734372e31373737373d31283b40372e372e313b2e372e343b34
3731373b31313737313134343d343737374037313d373437433d3b343137403d3d373437
40343d343b3134373b343d40373437373b3b313b3d3734313134343b3d313b3d373b4040
374331373b403b3d3b3b343b2e3b3d3b2b3b34373d3b3d3d40343b40342e373b3b3b4531
312e3431373b3b343434312b31313b342e2e243134343134312e373131312b2b2b28242b
2b282b2b2b282b2b2124281e2121242124161a2124211a1e1a12161a160e1e0e12120e12
0a0e0e0e0a0a050a050a0a0a0a01000501050505050a

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%EndDocument

 endTexFig
 917 4810 a FH(\(a\))32 b(Computed.)1332 b(\(b\))30 b(Measured.)300
5037 y(Figure)e(5.9:)41 b(Input)27 b(\(white\))i(and)f(output)g(noise)g
(PSD)g(of)h(the)g(circuit)e(sho)m(wn)h(in)g(Fig.)40 b(5.7)29
b(due)f(to)i(the)300 5150 y(switc)m(h)g FG(S)637 5164
y FA(2)676 5150 y FH(.)41 b(The)30 b(input)e(noise)i(PSD)g(is)f(set)i
(to)g Fz(\000)p FH(61)p FG(:)p FH(5)h(dB.)p eop
%%Page: 115 128
115 127 bop 3764 -200 a FH(115)300 99 y(Similarly)-8
b(,)27 b(in)i(the)i(second)f(phase,)1687 416 y FG(q)1728
430 y FB(n;)p FA(2)1855 416 y FH(=)25 b FG(C)2016 430
y FA(1)2055 416 y FG(v)2099 430 y FA(1)2139 416 y FH(\()p
FG(nT)32 b FH(+)20 b FG(t)2438 430 y FA(1)2478 416 y
FH(\))300 733 y(where)30 b FG(v)607 747 y FA(1)646 733
y FH(\()p FG(nT)j FH(+)20 b FG(t)946 747 y FA(1)985 733
y FH(\))31 b(is)e(determined)g(b)m(y)i(the)f(equations)g(of)h(the)f
(\014rst)g(phase,)g(i.)40 b(e.)1521 1050 y FG(v)1565
1064 y FA(1)1605 1050 y FH(\()p FG(nT)33 b FH(+)20 b
FG(t)1905 1064 y FA(1)1944 1050 y FH(\))25 b(=)g FG(q)2141
1064 y FB(n;)p FA(1)2396 988 y FG(C)2461 1002 y FA(1)p
2253 1029 391 4 v 2253 1112 a FH(\()p FG(C)2353 1126
y FA(1)2413 1112 y FH(+)20 b FG(C)2569 1126 y FA(2)2608
1112 y FH(\))2653 1050 y FG(:)300 1367 y FH(Arranging)29
b(these)i(equations)f(according)h(to)g(\(5.22\),)i(results)c(in)926
1661 y(\024)909 1684 y FD(A)988 1698 y FA(1)1053 1684
y FH(=)c(1)91 b FG(;)1434 1661 y FH(\024)1417 1684 y
FD(A)1496 1698 y FA(2)1560 1684 y FH(=)1768 1623 y FG(C)7
b FH(1)p 1666 1663 320 4 v 1666 1747 a FG(C)1731 1761
y FA(1)1791 1747 y FH(+)20 b FG(C)1947 1761 y FA(2)2087
1684 y FG(;)2225 1660 y FH(\024)2218 1684 y FD(b)2276
1698 y FA(1)2341 1684 y FH(=)25 b FG(C)2502 1698 y FA(2)2633
1684 y FG(;)106 b FH(and)3008 1660 y(\024)3001 1684 y
FD(b)3059 1698 y FA(2)3124 1684 y FH(=)25 b(0)p FG(:)378
b FH(\(5.49\))300 2001 y(Note,)32 b(due)e(to)h FG(p)874
2015 y FA(3)p FB(;i)982 2001 y FH(=)25 b(0)31 b(in)e(\(5.27\))1543
1978 y(\023)1522 2001 y FG(D)1597 2015 y FA(1)1667 2001
y FH(and)1865 1978 y(\023)1844 2001 y FG(D)1919 2015
y FA(2)1989 2001 y FH(are)i(zero.)536 2227 y(T)-8 b(o)31
b(ev)-5 b(aluate)32 b(\(5.44\),)h(the)e(input)d(capacitances)k
FG(C)2305 2241 y FB(in;)p FA(1)2462 2227 y FH(and)e FG(C)2704
2241 y FB(in;)p FA(2)2860 2227 y FH(are)h(required.)40
b(They)30 b(can)h(b)s(e)300 2453 y(obtained)f(b)m(y)g(insp)s(ection)e
(\(Fig.)41 b(5.8\(a\))33 b(and)d(\(b\)\))h(as)f(follo)m(ws;)1445
2770 y FG(C)1510 2784 y FB(in;)p FA(1)1661 2770 y FH(=)25
b(0)183 b(and)e FG(C)2378 2784 y FB(in;)p FA(2)2529 2770
y FH(=)25 b FG(C)2690 2784 y FA(2)2729 2770 y FG(:)914
b FH(\(5.50\))300 3087 y(Finally)-8 b(,)29 b(from)h(\(D.11\))j(and)c
FG(p)1351 3101 y FA(3)p FB(;i)1459 3087 y FH(=)c(0)31
b(in)e(\(5.27\),)1619 3404 y FD(A)1698 3418 y FB(i)1751
3404 y FH(=)1864 3381 y(\024)1847 3404 y FD(A)1926 3418
y FB(i)2015 3404 y FH(and)90 b FD(c)2298 3367 y FB(t)2298
3427 y(i)2354 3404 y FH(=)2450 3403 y(\024)2450 3404
y FD(c)2496 3367 y FB(t)2496 3427 y(i)2556 3404 y FH(.)1087
b(\(5.51\))300 3722 y(Substituting)22 b(the)j(resulting)e(state)j
(parameters)g(in)m(to)f(\(5.44\))i(and)d(\(B.36\),)k(giv)m(es)e(the)f
(\014nal)e(expression)1290 4039 y FG(S)1346 4053 y FB(y)1387
4039 y FH(\()p FG(!)s FH(\))1543 4014 y Fz(\030)1543
4043 y FH(=)1648 3977 y FG(S)1704 3991 y FB(u)1749 3977
y FG(C)1814 3991 y FA(2)p 1648 4018 206 4 v 1661 4101
a FH(2)p FG(T)13 b(R)2161 3855 y Ft(\014)2161 3905 y(\014)2161
3955 y(\014)2188 3952 y FG(e)2230 3919 y FB(j)t(!)r(T)2385
3952 y Fz(\000)19 b FH(1)2520 3855 y Ft(\014)2520 3905
y(\014)2520 3955 y(\014)2549 3881 y FA(2)p 1874 4018
1002 4 v 1874 4116 a FG(!)1934 4090 y FA(2)1988 4116
y Fz(j)p FG(e)2055 4090 y FB(j)t(!)r(T)2204 4116 y FH(\()q
FG(C)2305 4130 y FA(1)2364 4116 y FH(+)h FG(C)2520 4130
y FA(2)2560 4116 y FH(\))g Fz(\000)g FG(C)2771 4130 y
FA(1)2811 4116 y Fz(j)2836 4070 y FA(2)2885 4039 y FG(:)758
b FH(\(5.52\))300 4356 y(In)37 b(the)h(exp)s(erimen)m(t,)h
FG(C)1157 4370 y FA(1)1234 4356 y FH(=)f FG(C)1408 4370
y FA(2)1485 4356 y FH(=)g(1)g(nF)f(and)h(CD4066)h(analog)g(switc)m(hes)
e(w)m(ere)i(used.)62 b(The)38 b(clo)s(c)m(k)300 4582
y(frequency)e(w)m(as)h(4)f(kHz)h(with)e(50\045)i(dut)m(y)f(cycle.)59
b(The)36 b(resistance,)i FG(R)e FH(=)f(130)j(\012,)g(includes)c(the)i
FF(on)p FH(-)300 4808 y(resistance)e(of)h(the)f(switc)m(h)g
FG(S)1328 4822 y FA(2)1402 4808 y FH(\(80)h(\012\))g(and)e(the)i(input)
d(resistance)j(of)f(the)h(noise)f(generator)h(\(50)h(\012\).)300
5033 y(Fig.)21 b(5.9\(a\))i(sho)m(ws)e(the)g(plot)f(of)h(\(5.52\))j
(using)19 b(these)i(v)-5 b(alues)21 b(while)e(the)i(measured)f(results)
g(are)h(sho)m(wn)f(in)300 5259 y(Fig.)k(5.9\(b\).)40
b(There)23 b(is)f(no)i(con)m(tin)m(uous)f(path)h(b)s(et)m(w)m(een)g
(the)g(input)d(and)i(output)g(here,)i(so)3422 5236 y(^)3406
5259 y FG(S)3462 5273 y FB(y)3503 5259 y FH(\()p FG(!)s
FH(\))h(=)f(0)f(in)p eop
%%Page: 116 129
116 128 bop 3764 -200 a FH(116)883 7 y
 19208274 9077883 394690 43087052 19602964 52164935 startTexFig
 883 7 a
%%BeginDocument: .///figs/int_scn.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
newpath
   316 159 moveto 329 159 lineto 329 187 lineto 316 187 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      328 168 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
newpath
   317 103 moveto 329 103 lineto 329 131 lineto 317 131 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      328 112 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      36 208 moveto
      36 240 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      168 88 moveto
      168 120 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      176 88 moveto
      176 120 lineto
   stroke
grestore

% OVAL
newpath 36 208 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 36 208 4 4 tgifellipse stroke
grestore

% OVAL
newpath 36 104 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 36 104 4 4 tgifellipse stroke
grestore

% TEXT
0 setgray
newpath
   37 150 moveto 60 150 lineto 60 182 lineto 37 182 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      39 175 moveto (in) show
   grestore

% TEXT
0 setgray
newpath
   494 166 moveto 528 166 lineto 528 198 lineto 494 198 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      496 191 moveto (out) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      40 104 moveto
      88 104 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      120 104 moveto
      168 104 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      144 104 moveto
      144 144 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      144 176 moveto
      144 240 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 240 moveto
      128 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      144 144 moveto
      120 168 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      120 104 moveto
      96 80 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      16 112 moveto
      88 0 atan dup cos 8 mul 16 exch sub
      exch sin 8 mul 200 exch sub lineto
   stroke
grestore
gsave
   newpath
      16 200 8 3 0 88 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      20 240 moveto
      52 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      176 104 moveto
      224 104 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      224 104 moveto
      248 80 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 104 moveto
      208 144 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 176 moveto
      208 240 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 240 moveto
      224 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 144 moveto
      232 168 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
newpath
   256 104 moveto
   288.00 104.00 306.67 104.00
   312 104 curveto
closepath 1 setgray eofill
0 setgray
gsave
   newpath
      256 104 moveto
      288.00 104.00 306.67 104.00
      312 104 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      288 184 moveto
      312 184 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      288 184 moveto
      288 240 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 240 moveto
      304 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      312 96 moveto
      312 192 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      312 192 moveto
      400 144 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      312 96 moveto
      400 144 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      400 144 moveto
      464 144 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      464 240 moveto
      464 208 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      472 152 moveto
      48 0 atan dup cos 8 mul 472 exch sub
      exch sin 8 mul 200 exch sub lineto
   stroke
grestore
gsave
   newpath
      472 200 8 3 0 48 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 464 208 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 464 208 4 4 tgifellipse stroke
grestore

% OVAL
newpath 464 144 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 464 144 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      448 240 moveto
      480 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      360 64 moveto
      360 96 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 64 moveto
      368 96 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      360 8 moveto
      360 40 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 8 moveto
      368 40 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      288 104 moveto
      288 80 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      288 80 moveto
      360 80 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 80 moveto
      432 80 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      328 80 moveto
      320 80 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      360 24 moveto
      288 24 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      368 24 moveto
      432 24 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      432 40 moveto
      456 64 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      448 24 moveto
      472 0 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      514 8 moveto
      514 40 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      432 24 moveto
      432 40 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      432 72 moveto
      432 144 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      432 24 moveto
      448 24 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      490 24 moveto
      514 24 lineto
   stroke
grestore

% TEXT
0 setgray
newpath
   115 62 moveto 132 62 lineto 132 89 lineto 115 89 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      117 83 moveto (f) show
   grestore

% TEXT
0 setgray
newpath
   216 66 moveto 233 66 lineto 233 93 lineto 216 93 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      218 87 moveto (f) show
   grestore

% TEXT
0 setgray
newpath
   410 39 moveto 427 39 lineto 427 66 lineto 410 66 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      412 60 moveto (f) show
   grestore

% TEXT
0 setgray
newpath
   22 142 moveto 37 142 lineto 37 173 lineto 22 173 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      24 166 moveto (v) show
   grestore

% TEXT
0 setgray
newpath
   479 157 moveto 494 157 lineto 494 188 lineto 479 188 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      481 181 moveto (v) show
   grestore

% OVAL
newpath 144 172 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 144 172 4 4 tgifellipse stroke
grestore

% OVAL
newpath 208 171 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 208 171 4 4 tgifellipse stroke
grestore

% OVAL
newpath 252 104 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 252 104 4 4 tgifellipse stroke
grestore

% OVAL
newpath 92 104 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 92 104 4 4 tgifellipse stroke
grestore

% OVAL
newpath 485 24 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 485 24 4 4 tgifellipse stroke
grestore

% TEXT
0 setgray
newpath
   104 129 moveto 121 129 lineto 121 156 lineto 104 156 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      106 150 moveto (f) show
   grestore

% TEXT
0 setgray
newpath
   105 104 moveto 121 104 lineto 121 131 lineto 105 131 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      107 125 moveto (_) show
   grestore

% TEXT
0 setgray
newpath
   229 129 moveto 246 129 lineto 246 156 lineto 229 156 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      231 150 moveto (f) show
   grestore

% TEXT
0 setgray
newpath
   230 105 moveto 246 105 lineto 246 132 lineto 230 132 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      232 126 moveto (_) show
   grestore

% TEXT
0 setgray
newpath
   160 53 moveto 179 53 lineto 179 84 lineto 160 84 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      162 77 moveto (C) show
   grestore

% TEXT
0 setgray
newpath
   178 61 moveto 193 61 lineto 193 92 lineto 178 92 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      180 85 moveto (1) show
   grestore

% TEXT
0 setgray
newpath
   376 81 moveto 395 81 lineto 395 112 lineto 376 112 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      378 105 moveto (C) show
   grestore

% TEXT
0 setgray
newpath
   395 90 moveto 410 90 lineto 410 121 lineto 395 121 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      397 114 moveto (3) show
   grestore

% TEXT
0 setgray
newpath
   318 26 moveto 337 26 lineto 337 57 lineto 318 57 lineto
closepath 1 setgray fill
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      320 50 moveto (C) show
   grestore

% TEXT
0 setgray
newpath
   338 34 moveto 353 34 lineto 353 65 lineto 338 65 lineto
closepath 1 setgray fill
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      340 58 moveto (2) show
   grestore

% TEXT
0 setgray
newpath
   463 34 moveto 480 34 lineto 480 61 lineto 463 61 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      465 55 moveto (f) show
   grestore

% TEXT
0 setgray
newpath
   464 10 moveto 480 10 lineto 480 37 lineto 464 37 lineto
closepath 1 setgray fill
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      466 31 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 104 moveto
      208 24 lineto
      289 24 lineto
   stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Tue Sep 15 17:58:30 1998
%%EndDocument

 endTexFig
 1498 1353 a FH(Figure)30 b(5.10:)42 b Fy(Lossy)27 b(SC)e(in)n
(tegrator.)245 1684 y
 15238157 8944863 0 0 18945146 18945146 startTexFig
 245 1684 a
%%BeginDocument: figs/pic01m.eps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	false def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0793651 0.840526 0.0123607 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(2)] .18254 0 0 2 0 Minner Mrotsboxa
[(4)] .34127 0 0 2 0 Minner Mrotsboxa
[(6)] .5 0 0 2 0 Minner Mrotsboxa
[(8)] .65873 0 0 2 0 Minner Mrotsboxa
[(10)] .81746 0 0 2 0 Minner Mrotsboxa
[(12)] .97619 0 0 2 0 Minner Mrotsboxa
[(Frequency in kHz)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-60)] -0.0125 .09889 1 0 0 Minner Mrotsboxa
[(-50)] -0.0125 .22249 1 0 0 Minner Mrotsboxa
[(-40)] -0.0125 .3461 1 0 0 Minner Mrotsboxa
[(-30)] -0.0125 .46971 1 0 0 Minner Mrotsboxa
[(-20)] -0.0125 .59331 1 0 0 Minner Mrotsboxa
[(Noise PSD in dB)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
0 0 .5 r
.001 w
.04762 0 m
.04762 .61803 L
s
P
p
0 0 .5 r
.001 w
.14048 0 m
.14048 .61803 L
s
P
p
0 0 .5 r
.001 w
.23333 0 m
.23333 .61803 L
s
P
p
0 0 .5 r
.001 w
.32619 0 m
.32619 .61803 L
s
P
p
0 0 .5 r
.001 w
.41905 0 m
.41905 .61803 L
s
P
p
0 0 .5 r
.001 w
.5119 0 m
.5119 .61803 L
s
P
p
0 0 .5 r
.001 w
.60476 0 m
.60476 .61803 L
s
P
p
0 0 .5 r
.001 w
.69762 0 m
.69762 .61803 L
s
P
p
0 0 .5 r
.001 w
.79048 0 m
.79048 .61803 L
s
P
p
0 0 .5 r
.001 w
.88333 0 m
.88333 .61803 L
s
P
p
0 0 .5 r
.001 w
.97619 0 m
.97619 .61803 L
s
P
p
0 0 .5 r
.001 w
0 0 m
1 0 L
s
P
p
0 0 .5 r
.001 w
0 .0618 m
1 .0618 L
s
P
p
0 0 .5 r
.001 w
0 .12361 m
1 .12361 L
s
P
p
0 0 .5 r
.001 w
0 .18541 m
1 .18541 L
s
P
p
0 0 .5 r
.001 w
0 .24721 m
1 .24721 L
s
P
p
0 0 .5 r
.001 w
0 .30902 m
1 .30902 L
s
P
p
0 0 .5 r
.001 w
0 .37082 m
1 .37082 L
s
P
p
0 0 .5 r
.001 w
0 .43262 m
1 .43262 L
s
P
p
0 0 .5 r
.001 w
0 .49443 m
1 .49443 L
s
P
p
0 0 .5 r
.001 w
0 .55623 m
1 .55623 L
s
P
p
0 0 .5 r
.001 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.18254 0 m
.18254 .00625 L
s
P
[(2)] .18254 0 0 2 0 Minner Mrotshowa
p
.002 w
.34127 0 m
.34127 .00625 L
s
P
[(4)] .34127 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(6)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.65873 0 m
.65873 .00625 L
s
P
[(8)] .65873 0 0 2 0 Minner Mrotshowa
p
.002 w
.81746 0 m
.81746 .00625 L
s
P
[(10)] .81746 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(12)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.05556 0 m
.05556 .00375 L
s
P
p
.001 w
.0873 0 m
.0873 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.15079 0 m
.15079 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.24603 0 m
.24603 .00375 L
s
P
p
.001 w
.27778 0 m
.27778 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.37302 0 m
.37302 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.43651 0 m
.43651 .00375 L
s
P
p
.001 w
.46825 0 m
.46825 .00375 L
s
P
p
.001 w
.53175 0 m
.53175 .00375 L
s
P
p
.001 w
.56349 0 m
.56349 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.62698 0 m
.62698 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.72222 0 m
.72222 .00375 L
s
P
p
.001 w
.75397 0 m
.75397 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.84921 0 m
.84921 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.9127 0 m
.9127 .00375 L
s
P
p
.001 w
.94444 0 m
.94444 .00375 L
s
P
[(Frequency in kHz)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .09889 m
.00625 .09889 L
s
P
[(-60)] -0.0125 .09889 1 0 0 Minner Mrotshowa
p
.002 w
0 .22249 m
.00625 .22249 L
s
P
[(-50)] -0.0125 .22249 1 0 0 Minner Mrotshowa
p
.002 w
0 .3461 m
.00625 .3461 L
s
P
[(-40)] -0.0125 .3461 1 0 0 Minner Mrotshowa
p
.002 w
0 .46971 m
.00625 .46971 L
s
P
[(-30)] -0.0125 .46971 1 0 0 Minner Mrotshowa
p
.002 w
0 .59331 m
.00625 .59331 L
s
P
[(-20)] -0.0125 .59331 1 0 0 Minner Mrotshowa
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .14833 m
.00375 .14833 L
s
P
p
.001 w
0 .17305 m
.00375 .17305 L
s
P
p
.001 w
0 .19777 m
.00375 .19777 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .27193 m
.00375 .27193 L
s
P
p
.001 w
0 .29666 m
.00375 .29666 L
s
P
p
.001 w
0 .32138 m
.00375 .32138 L
s
P
p
.001 w
0 .37082 m
.00375 .37082 L
s
P
p
.001 w
0 .39554 m
.00375 .39554 L
s
P
p
.001 w
0 .42026 m
.00375 .42026 L
s
P
p
.001 w
0 .44498 m
.00375 .44498 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .51915 m
.00375 .51915 L
s
P
p
.001 w
0 .54387 m
.00375 .54387 L
s
P
p
.001 w
0 .56859 m
.00375 .56859 L
s
P
p
.001 w
0 .07416 m
.00375 .07416 L
s
P
p
.001 w
0 .04944 m
.00375 .04944 L
s
P
p
.001 w
0 .02472 m
.00375 .02472 L
s
P
[(Noise PSD in dB)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.18254 .61178 m
.18254 .61803 L
s
P
p
.002 w
.34127 .61178 m
.34127 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.65873 .61178 m
.65873 .61803 L
s
P
p
.002 w
.81746 .61178 m
.81746 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.05556 .61428 m
.05556 .61803 L
s
P
p
.001 w
.0873 .61428 m
.0873 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.15079 .61428 m
.15079 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.24603 .61428 m
.24603 .61803 L
s
P
p
.001 w
.27778 .61428 m
.27778 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.37302 .61428 m
.37302 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.43651 .61428 m
.43651 .61803 L
s
P
p
.001 w
.46825 .61428 m
.46825 .61803 L
s
P
p
.001 w
.53175 .61428 m
.53175 .61803 L
s
P
p
.001 w
.56349 .61428 m
.56349 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.62698 .61428 m
.62698 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.72222 .61428 m
.72222 .61803 L
s
P
p
.001 w
.75397 .61428 m
.75397 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.84921 .61428 m
.84921 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.9127 .61428 m
.9127 .61803 L
s
P
p
.001 w
.94444 .61428 m
.94444 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .09889 m
1 .09889 L
s
P
p
.002 w
.99375 .22249 m
1 .22249 L
s
P
p
.002 w
.99375 .3461 m
1 .3461 L
s
P
p
.002 w
.99375 .46971 m
1 .46971 L
s
P
p
.002 w
.99375 .59331 m
1 .59331 L
s
P
p
.001 w
.99625 .12361 m
1 .12361 L
s
P
p
.001 w
.99625 .14833 m
1 .14833 L
s
P
p
.001 w
.99625 .17305 m
1 .17305 L
s
P
p
.001 w
.99625 .19777 m
1 .19777 L
s
P
p
.001 w
.99625 .24721 m
1 .24721 L
s
P
p
.001 w
.99625 .27193 m
1 .27193 L
s
P
p
.001 w
.99625 .29666 m
1 .29666 L
s
P
p
.001 w
.99625 .32138 m
1 .32138 L
s
P
p
.001 w
.99625 .37082 m
1 .37082 L
s
P
p
.001 w
.99625 .39554 m
1 .39554 L
s
P
p
.001 w
.99625 .42026 m
1 .42026 L
s
P
p
.001 w
.99625 .44498 m
1 .44498 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .51915 m
1 .51915 L
s
P
p
.001 w
.99625 .54387 m
1 .54387 L
s
P
p
.001 w
.99625 .56859 m
1 .56859 L
s
P
p
.001 w
.99625 .07416 m
1 .07416 L
s
P
p
.001 w
.99625 .04944 m
1 .04944 L
s
P
p
.001 w
.99625 .02472 m
1 .02472 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.004 w
.04762 .08034 m
.05385 .08034 L
.06008 .08034 L
.06632 .08034 L
.07255 .08034 L
.07878 .08034 L
.08501 .08034 L
.09124 .08034 L
.09748 .08034 L
.10371 .08034 L
.10994 .08034 L
.11617 .08034 L
.1224 .08034 L
.12864 .08034 L
.13487 .08034 L
.1411 .08034 L
.14733 .08034 L
.15356 .08034 L
.1598 .08034 L
.16603 .08034 L
.17226 .08034 L
.17849 .08034 L
.18472 .08034 L
.19096 .08034 L
.19719 .08034 L
.20342 .08034 L
.20965 .08034 L
.21588 .08034 L
.22212 .08034 L
.22835 .08034 L
.23458 .08034 L
.24081 .08034 L
.24704 .08034 L
.25328 .08034 L
.25951 .08034 L
.26574 .08034 L
.27197 .08034 L
.2782 .08034 L
.28444 .08034 L
.29067 .08034 L
.2969 .08034 L
.30313 .08034 L
.30936 .08034 L
.3156 .08034 L
.32183 .08034 L
.32806 .08034 L
.33429 .08034 L
.34052 .08034 L
.34676 .08034 L
.35299 .08034 L
Mistroke
.35922 .08034 L
.36545 .08034 L
.37168 .08034 L
.37792 .08034 L
.38415 .08034 L
.39038 .08034 L
.39661 .08034 L
.40284 .08034 L
.40908 .08034 L
.41531 .08034 L
.42154 .08034 L
.42777 .08034 L
.434 .08034 L
.44024 .08034 L
.44647 .08034 L
.4527 .08034 L
.45893 .08034 L
.46516 .08034 L
.4714 .08034 L
.47763 .08034 L
.48386 .08034 L
.49009 .08034 L
.49632 .08034 L
.50256 .08034 L
.50879 .08034 L
.51502 .08034 L
.52125 .08034 L
.52748 .08034 L
.53372 .08034 L
.53995 .08034 L
.54618 .08034 L
.55241 .08034 L
.55864 .08034 L
.56488 .08034 L
.57111 .08034 L
.57734 .08034 L
.58357 .08034 L
.58981 .08034 L
.59604 .08034 L
.60227 .08034 L
.6085 .08034 L
.61473 .08034 L
.62097 .08034 L
.6272 .08034 L
.63343 .08034 L
.63966 .08034 L
.64589 .08034 L
.65213 .08034 L
.65836 .08034 L
.66459 .08034 L
Mistroke
.67082 .08034 L
.67705 .08034 L
.68329 .08034 L
.68952 .08034 L
.69575 .08034 L
.70198 .08034 L
.70821 .08034 L
.71445 .08034 L
.72068 .08034 L
.72691 .08034 L
.73314 .08034 L
.73937 .08034 L
.74561 .08034 L
.75184 .08034 L
.75807 .08034 L
.7643 .08034 L
.77053 .08034 L
.77677 .08034 L
.783 .08034 L
.78923 .08034 L
.79546 .08034 L
.80169 .08034 L
.80793 .08034 L
.81416 .08034 L
.82039 .08034 L
.82662 .08034 L
.83285 .08034 L
.83909 .08034 L
.84532 .08034 L
.85155 .08034 L
.85778 .08034 L
.86401 .08034 L
.87025 .08034 L
.87648 .08034 L
.88271 .08034 L
.88894 .08034 L
.89517 .08034 L
.90141 .08034 L
.90764 .08034 L
.91387 .08034 L
.9201 .08034 L
.92633 .08034 L
.93257 .08034 L
.9388 .08034 L
.94503 .08034 L
.95126 .08034 L
.95749 .08034 L
.96373 .08034 L
.96996 .08034 L
.97619 .08034 L
Mistroke
Mfstroke
P
P
p
p
.004 w
.04762 .53648 m
.05385 .52731 L
.06008 .51783 L
.06632 .5084 L
.07255 .49924 L
.07878 .49046 L
.08501 .48209 L
.09124 .47416 L
.09748 .46666 L
.10371 .45957 L
.10994 .45286 L
.11617 .44651 L
.1224 .44049 L
.12864 .43479 L
.13487 .42939 L
.1411 .42425 L
.14733 .41938 L
.15356 .41474 L
.1598 .41033 L
.16603 .40614 L
.17226 .40216 L
.17849 .39839 L
.18472 .3948 L
.19096 .39141 L
.19719 .38822 L
.20342 .38521 L
.20965 .3824 L
.21588 .37978 L
.22212 .37738 L
.22835 .37519 L
.23458 .37324 L
.24081 .37154 L
.24704 .37011 L
.25016 .36951 L
.25328 .36899 L
.25639 .36855 L
.25951 .3682 L
.26107 .36806 L
.26262 .36795 L
.26418 .36786 L
.26496 .36782 L
.26574 .36779 L
.26652 .36777 L
.26691 .36776 L
.2673 .36776 L
.26769 .36775 L
.26788 .36775 L
.26808 .36775 L
.26827 .36775 L
.26847 .36775 L
Mistroke
.26866 .36775 L
.26886 .36775 L
.26905 .36775 L
.26925 .36775 L
.26963 .36775 L
.26983 .36776 L
.27002 .36776 L
.27041 .36777 L
.27119 .36779 L
.27197 .36782 L
.27353 .36789 L
.27509 .368 L
.27665 .36814 L
.2782 .36831 L
.28132 .36876 L
.28444 .36935 L
.29067 .37096 L
.2969 .37319 L
.30313 .37603 L
.30936 .3794 L
.3156 .38309 L
.32183 .38672 L
.32494 .38832 L
.32806 .38967 L
.32962 .39022 L
.33118 .39067 L
.33196 .39085 L
.33273 .391 L
.33351 .39112 L
.3339 .39117 L
.33429 .39121 L
.33468 .39124 L
.33507 .39126 L
.33527 .39127 L
.33546 .39127 L
.33566 .39128 L
.33585 .39128 L
.33604 .39128 L
.33624 .39127 L
.33643 .39127 L
.33663 .39126 L
.33702 .39124 L
.33741 .39121 L
.3378 .39117 L
.33819 .39112 L
.33897 .39099 L
.33975 .39082 L
.34052 .39061 L
.34208 .39008 L
.34364 .3894 L
Mistroke
.34676 .38757 L
.34987 .38517 L
.35299 .38227 L
.35922 .37536 L
.36545 .3676 L
.37168 .35963 L
.37792 .3519 L
.38415 .34464 L
.39038 .33795 L
.39661 .33186 L
.40284 .32633 L
.40908 .32131 L
.41531 .31674 L
.42154 .31257 L
.42777 .30874 L
.434 .30521 L
.44024 .30192 L
.44647 .29886 L
.4527 .29599 L
.45893 .29327 L
.46516 .2907 L
.4714 .28824 L
.47763 .28589 L
.48386 .28363 L
.49009 .28144 L
.49632 .27931 L
.50256 .27724 L
.50879 .27521 L
.51502 .27321 L
.52125 .27124 L
.52748 .26928 L
.53372 .26731 L
.53995 .26534 L
.54618 .26333 L
.55241 .26128 L
.55864 .25917 L
.56488 .25696 L
.57111 .25462 L
.57734 .2521 L
.58357 .24935 L
.58981 .24627 L
.59604 .24274 L
.60227 .2386 L
.6085 .23358 L
.61473 .2273 L
.62097 .21915 L
.6272 .20816 L
.63031 .20114 L
.63343 .19271 L
.63655 .18247 L
Mistroke
.63966 .16983 L
.64278 .15394 L
.64589 .13341 L
.64745 .12072 L
.64901 .1058 L
.65057 .08792 L
.65213 .06588 L
.65368 .0375 L
.65446 .01968 L
Mfstroke
.65517 0 m
.65446 .01968 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
.66233 0 m
.66303 .01905 L
s
.66303 .01905 m
.66459 .0513 L
.66615 .07548 L
.66771 .09464 L
.67082 .12349 L
.67394 .14437 L
.67705 .16017 L
.68017 .17243 L
.68329 .18213 L
.6864 .1899 L
.68952 .19617 L
.69263 .20128 L
.69575 .20547 L
.69887 .20893 L
.70198 .21179 L
.7051 .21416 L
.70821 .21614 L
.71133 .21778 L
.71445 .21916 L
.71756 .22031 L
.72068 .22127 L
.72379 .22207 L
.72691 .22273 L
.73003 .22327 L
.73314 .22372 L
.73626 .22408 L
.73937 .22437 L
.74249 .22459 L
.74561 .22476 L
.74716 .22483 L
.74872 .22488 L
.75028 .22493 L
.75184 .22497 L
.7534 .225 L
.75495 .22502 L
.75573 .22502 L
.75612 .22503 L
.75651 .22503 L
.7569 .22503 L
.75729 .22503 L
.75768 .22503 L
.75787 .22503 L
.75807 .22503 L
.75826 .22503 L
.75846 .22504 L
.75865 .22504 L
.75885 .22503 L
.75904 .22503 L
.75924 .22503 L
.75943 .22503 L
Mistroke
.75963 .22503 L
.76002 .22503 L
.76041 .22503 L
.76119 .22503 L
.76196 .22502 L
.76274 .22501 L
.7643 .225 L
.76742 .22495 L
.77053 .22488 L
.77677 .22471 L
.783 .2245 L
.78923 .22427 L
.79546 .22403 L
.80169 .22378 L
.80793 .22355 L
.81416 .22334 L
.82039 .22316 L
.82351 .22308 L
.82662 .22302 L
.82974 .22297 L
.8313 .22294 L
.83285 .22293 L
.83441 .22291 L
.83519 .22291 L
.83597 .2229 L
.83675 .2229 L
.83714 .2229 L
.83753 .2229 L
.83772 .2229 L
.83792 .22289 L
.83811 .22289 L
.83831 .22289 L
.8385 .22289 L
.8387 .22289 L
.83889 .22289 L
.83909 .22289 L
.83928 .22289 L
.83948 .22289 L
.83967 .22289 L
.83986 .22289 L
.84025 .2229 L
.84064 .2229 L
.84142 .2229 L
.8422 .2229 L
.84298 .22291 L
.84376 .22292 L
.84532 .22293 L
.84688 .22296 L
.84843 .22299 L
.85155 .22306 L
Mistroke
.85467 .22316 L
.85778 .22329 L
.86401 .22364 L
.87025 .22414 L
.87648 .2248 L
.88271 .22565 L
.88894 .22674 L
.89517 .22809 L
.90141 .22976 L
.90764 .2318 L
.91387 .23426 L
.9201 .2372 L
.92633 .24068 L
.93257 .24471 L
.9388 .24931 L
.94503 .25436 L
.95126 .25966 L
.95749 .26478 L
.96061 .26709 L
.96373 .26911 L
.96684 .27074 L
.9684 .27138 L
.96996 .27188 L
.97074 .27208 L
.97152 .27225 L
.97191 .27232 L
.9723 .27238 L
.97268 .27242 L
.97307 .27246 L
.97327 .27248 L
.97346 .27249 L
.97366 .27251 L
.97385 .27251 L
.97405 .27252 L
.97424 .27253 L
.97444 .27253 L
.97463 .27253 L
.97483 .27252 L
.97502 .27252 L
.97522 .27251 L
.97541 .2725 L
.9758 .27247 L
.97619 .27243 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
%%EndDocument

 endTexFig
 2275 1499 a
 13257874 10404916 65781 36179968 20458127 51901808 startTexFig
 2275 1499 a
%%BeginDocument: figs/pic01.ps


% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 310 string def

% define space for color conversions
/grays 310 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
1 550 translate

% size of image (on paper, in 1/72inch coords)
310.03200 238.96800 scale

310 239 8			% dimensions of data
[310 0 0 -239 0 239]		% mapping matrix
{currentfile pix readhexstring pop}
image

000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000010405050609090b0a0908080b0a090a090e09081114161a282d1b23
2d30322d2d2e373b3d414441464b4c4843464f4d5554515554575e575b5c575752585755
5c5e5f5b5b5b5a5a595c5f5e60575c5f6160626160635e605b5c64636363656361676961
5e6363626361605e6062626162666463666565636a64616364686364666366626362676b
656667636468666866656a626a6365666a68626a656564676164695f5c5b5b67615f5f63
5f5d5e63595c5c5d5c5e5c5f5f5e5b595b5b5657545957595753514d54544f554a46474b
4d4246433b3e413537332f3d2f2b303529282020251b1713140d110c0b0305000105080d
0a0a0807000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000001020104091214131816
171b191619181b1e1b242521252627302c2d2a2a3835343939453d42454548434b4a494d
4d535152544c5352505b57565959575b595b605c5e5e5b5f5e616268636762605f5c635d
635f60626163686363645f63685f5e5f62616a68676465636869666d6665666a69656462
65686d666a66646566646665666a676b686a686c6b65656c67666a6b6d6c6a69676b6b6e
686d676e6e6b6b6b676d6d6d6e686a6d6a6a6d666762656965656c656368656768626469
6367656561616b6262646966616562626160625c605f605e5d5c5d555c5c5c5b5a565557
565455584d5250494a48454d4f4a4c42404240363535312a2e23242217131510121b1c29
222724221b1515120f100b0800000000000000000000
00000000000000000000000000000001010d18212329272e333431343130313a373b3f3d
393c3b3d4041464a474b4d47484347504e4f4d4c53535351565353575556525553555e5f
5c5c58605d5b605f5b61636061616060646662625f5f6166656369686268686266636763
65636365666a68656a666b656364616868656a686d686d6a6d686d686a6d6b5e6e686568
6a656e686b6e6b696c676568666c676c686b6e7069686c6f676a6d6f706f6e6f6e706e71
6f6f6c706e6b6d736e686a6667676a676f6a6b6a6f6d6b676c666b69686f686f6c666567
696966636364696666656a67636663616165676364636362605d5f61645e5c5e605a5d5d
5e5a585c5b565a534b5156514f5152524a4b47484145393f3d352d33292425231f272a3d
34403e3e3f3c3a3731302824130c0a06000000000000
0000000000000000000103182b3837353c4346454849504e4f53524a53514d5351525250
4b4e4d4f5055535555585856565256575a5958585a5d5d5b5e565d6361606161605c5c62
5e5d5e636361666a6661626164666466666a64696663676a6b676a666666696268656a68
67666464676a67626769646663666b6a68656868686d6b6a6b6d686d6b6e6d696d6c6665
666e6c676c6b6e706f6d6d6d686f696f6f6e71716a6a706d6a7169706f6f717071727272
70707172716c6f6f6e6f72726e6b6b6e6f6f6e6e666b6e6d706b70676e6d6a70716c6c66
6a666b68666a666469686a676768675f64686666666a65636762676c6762646660615c5d
6160605c5b5c5753585d5b574f524e544e4c4b5148494848473f3b32332f2e2f2c2e3141
3e454443464943443e3d373d392c2a1f0e0500000000
00000000010205153038424349525751515658575a5b625e5f605f5e5e5c5c5e5d5c5a59
5a5c5e5c575f5b5b5b605f595b5a5c605f5d5e5b5a5c5f62656065636561656162626366
656066626262636969646263646665676a6667696e686a6b6b676b68696b6a6b68656d6b
706b6667696d6b6567676769696869676c6a6869676e6f6f736d6d6b66676d6f6f6a696e
6f6d6d6a706b6f6f6f6c6e6f71737174737375737370726f6f7270707170787174777878
75747677767272737372716b6e6b74767174746b6f707172706e6d7074726c7776777671
74787a71696c69686d6a6c6c80806e6566696766676a7b756d768076666666656261625a
646564625a5b59585a5e5c5b595359585951564f4d4c504c484346343b3b3134353a3b42
484549494a4c434642403b464b3c3d3c341e0a050000
000102051131384454504b5755595a5b5a5d5a5d5c5f605d62616565635d5f6260616164
626265666462655f62666462645e5d6463616163616169696e6565666667656464616668
66656665676d696565656e68676a6b6567676b6a6e6c6e6d6c6a6d6a6a6d6d6f68676d6d
736e6b686a6c6c6c6b6b6a696866706d71706d6f6b6f706d6b6b666f676769696f6d6d70
6f6e69676b7072726d72878077857d7e8999937c889c9d98897a7d8a757f9079999d9b9a
8081939d977c727379746b6b717590aba2847272717371717fa0b8af8b7480b6b9ab847c
a7bcb3936c6d686c6f6e7182b5af846f69696d6d6876b4987599b892656c696766625e5e
61656564625e5d5c5d5b5a5d59575a58575154544e54554f4a46483e4142353d3a424343
4848484e4f4e4948454545484d48474a3e372e220200
010820303e444951525455595f5e60615e636665686562666e6f70696765676964616569
66626367676b7864656c7286867967666666676a6a6b7a85836c65686368666166676a75
7d7f798b90957d6a69696c6b6b6c6f6d6a696a6a6e6e6c6d6d6d6c686e6e6e6c696e6f6e
6f6e6e6b6d6d6c6c6c6e6d6a66676e6e7174736c6f6f6e6b6a6d706e6d6c6f6e6d6f6f70
6f716f696d71706e7081bcaa97af9397bac4b996a8cecbc0b59992b48dafb78dd6cdcdc1
8a9ad2d3c589777675737574758cd2dad1ad71737272727bb1c8c2beb8999ec2b9c1b08d
c1acb7b578706c6f7171779cb4b1ab796c6b6a6e6d83cca881aec89d79888a887e78615f
636064616663655e555f5e5c5b5b5b5a555356545055584e4a4f4b4647423d4242474844
4c4b484e50504d4d4d4d4d494b494f46413c3d3a1400
041539444b4b5458565c646694a5a9967191b7b6b2997480b9b6ad8b6b6b6c6a6464696b
676466697184a26a687793b4b6a4786c6b6a68696f81b8c7c19a7a6a66666d6968676d92
c4b1a3d3d5c3936e6d6a6c6b6f726f6e6c6d6d6a6e6a6a6c6c6b6f6c717171706d72706e
6f716d6d6c6d6e6f6d6f6d6d6b6e6e71707372727171727270727774696d6d6e6c706d71
6e6e6f6c6c72746d7389dad0c2cca3bac7afb4b3b5d7bdadc6bd9dc9b9c2a395d39f9994
879ecca4b3a87c7675727276829bc18d95c67b7472707388ccbd98aeceb0a9aea0c8c382
9f8aabc17d707071736e728b889cb77e706d6d6c6e87d0baa1becda59dc3ccd4cdac6865
67615f615e5f615f5d5f5d5e5958585d5a575756545655504d514b4c4a4247494b4b4c4a
4f4c4c5253525353504e524f504c4e474b4a4c402403
1d3d4a48525252535b555978bdbab8ab90a2b8a8a490758cc4a0977e6a676d6c6765696c
6a6c6e758aadb96f7292b8a8aaac8a6a6a6e716f7690c1a0a0c39e75696b6c6f6e6d7997
cabba9d0b69fba798894788576706f716d6b6d6c6d6a706f6b6d716f7073737270726d6d
6c716f6e6f71726f6a706c6d696d6e7072726e70717272706e6e6e706c7272726e6f6d6b
6d6e73706e6e7070748cd9d1d1c8aacdcdb0babdb7d5bdb4cabca2d1be9f8594d3a59e91
82a3cfb1bda17b747a7674767d9cc2a9b2c076777a797a90ccbd90add1b1a4c7ccd8c378
89a1c1b27771737983726f7690ad9474706e6e6d6c8cd8d5cad4d0a18a97a5cab6866c65
68645e6468645f6362636059595a5c595a595c5a5858555457535452504c49434c474751
4f4d505152535151525155514f4c4d4e4e42473c2d19
3b474c5253575453585e617cb07e7d8f9f9e997d7b736e8ab880786a6a696c6c6b6b737d
81848383a5beba707a9fbf999dad89706d72736e7795b8868dcaa5766e706f6c727890b1
d4c0abd1bfacbb87b3b885a97f71736e6b6c6e6e6b696c7071716f6f7171737171706d70
6c71747070747371706f706f6e6f716b74747072726f73747474726e6e6e72717374756f
72717373706f7173758ed7c8cbbcaad0dccfcdbdbaddd7cfb89da2d4b18d8295ddcec8ac
88a6daddc57c7974787472747c97d7d8d3ae75727675758bcdbd90aacdaf8eb5c1d5c17f
acc5b58f707180abab77788bb7ad736d70706f6d738ed5c3aac0ca9d7584a2ad83716b6b
666661606863635f5b5c6160615b5c595f5c5b5b5e585c5a5a5355514f4f4f4e4b484a53
5453515453554f565554594d5048484d4f4c4e453b24
434d53565458555b5e64627fb9afafac91a4c7baa877738fcdb592736d6d6d6f737792b0
b6b39e7a93a4b8757997bbbdbfb688727e8c8b757899ba858dcaab776f6e6b6d7393d4db
dbc3aededec7a98abcbf8ab1887472746e6d716e6f6f6e73747172707272727074707071
70727671706e6f727370747474716d7076727472747271716f737375716e72707377716f
717071706e707073778ed2baa7b8accdd1b3b9bdb8dacfc8a68ca0d6c1a98f93d09c998b
87a4d4c6ac7d7b757576767c83a1bf919dc2787373747791d0bc92aecfab7b98c0cba791
c6af9d897a7789c9be777fa8c4a4867472716f727489cda987b7ca9f89b0c79f8a7c6868
67696c6a6664625e5f655f595b635a595d5a5c5c605d5b5f5c54595553515657504d4f50
56574f57555356585858594f54504e524e504843472a
465158595957545a5f5d617fbecac8a77b9fc2ad9a75738fc69c7e716e6e6e717372879e
a3a08d71778cba797c97b9aaa9ac977f9bc8be81799bbe8992c9ab7771756f707faea6ab
d0c2a8d2bb9dbc89b2bfa6b97f716f727173717073747572717272727675727175747270
6e71746e6e736f74757275747571706e72717070737371706f7277757171737675757574
6e7072746e7470727991ceae95b5afc6c397a8c1b6d2babbb59d9fcab2c2ae9bd1a8a49b
8ca0c5a9c08f7774767875767e9fc6b3c0bc7b7779727789bdc7c7cabc918abec1a28c98
d9cbc6b280787d9b947786b9c8bba67c6e706e6f7485bb9d83abbc9da6cacfd0caab6c67
686664616561666766656663696a62635c5e5d5d5e5f5b5f5e565a595757575653525052
585753565553535755545551545151524e494343452f
44535759595b5b616367637ab1a5b4a07999a8867d77758db97b6e6d6c6e6f716e6c7278
7879767a86a2c78f869ebda4a3ae9a819dc7bc837e99c19fa3c6a47b73706f7184aeacb5
d1bfa1d0c4b1b77989a8bfa6766f6f717173727172717274727471727678747274757474
7072707374757475737275727977737172727375757573756f7273757171707675767571
716f6f74717571707890c0a492ada3bbb48d9cb1a9bfa4a0afa995ae93aab099cecfccbd
8e97b294a79f7d77797b71747489c4d7c79579767675778095aeb9ae8f7d88aa9987828d
aeb0ac9e7c77757675757e9baca792776d706f6f727b8e8178858b798591928e857d6e6a
696a6b686366656966666165686863605f616261605d5d61605c5957555a595859585556
595752525452535453515352534d50534f4b45403e35
4e555954575f595a5f636a7ca48992a89698cac0bbb19491b1706f6d6d7273716f707177
77767686a6c2ceaf868fafc6c5b4857d849692787b8db8cbc7a7807672747372789ad4d9
d1b5a2c9d1c39276788eaa7f727274737070736f70717171787873747779767573757374
747275787779747272737272767674707671737676756f70757772727274727675737275
706f737272747274767e8d88808e85908f8083908e95847f8b8980877c878e829596958d
7c7f857b7f7c7c7e787b7879767378817f777777757476767c8184867e7a8183817c7a7a
868186817877767377767278827f75727076717170747070747b7c757b817e7c7a736f6f
6968686668706e6462636467696563676968666a6a606260615d5b5a59636e5b59595a56
575753505656555657595452514f524f4f4e4e4a413b
51575d595963616261666971887674838f89aeaca499827e8b7071717175757374737276
7675768599a5a4987e7e92a6a692787c78797b79777c86908c7a76716c69707272788483
81787a8381807875747a8075737370757374757274737474777875747577777974777876
79797a7674757675777975746f70737672767c7878777273767272707074797e77777875
7072747072777876767a7981827e75767779787c7b7a76737572777b787a787378807d79
7c7d7d77747b7c7a76767e7d7778797b7f7776747876747c7b777880797a889ba09b927d
8089998f7c79757678777787a8a07d767376747572706f727c94a48f94aeb3af9881706e
6b6d706c7eaba8796468728c9e6a6d83a77a7aa9a06f6563635f5f5d5d7192665d5b5c57
585858585756555a585a525554545455524d4e4b4c42
4d53575758635e61666666686f72716e7375787d7b7777787671777673797b7d7c777577
787a82828489857d797b878f91857a83837d7f847c72777a7d7676757575757475737577
767877777775757673737777757976797d77787c8c8e8e807a899091867a808c80899584
82929b97887c8a9397958974747172727985949a98917f72737273777685a1a99a7d7777
73737472787986a4a195b1bbbaa3787273797a7b7a78797576767a77787b787779797876
797877777376787478797a7d7e7d757377797b7579777878797c7c7a7989adced2cfb47d
8fbac4a47b777376767981a2c6ba9e80757474737071727588b4caaebedacec2bba17772
707072718dc19a73686e88beaa696e90bd8588bfb5807a83827f736066779a745b595958
5857505c585956565959585459595657514e4e515241
5051595e5f62656562686e758cb1b2ae987274716f7372757583a7b29fb5c7bea5827879
7c91af98b6c0b38e7d809dc8c6af8da4aa8c9cbd9a7c7879757172727371747774777c77
72777876737372727571757773737778787881a2cac6ba9892b9c1bbad9397b6a1adba9a
99bcccc5b39caad2d4c8a97b7670717583acd0dbddca91766e6e72787ea2d3d1c29c8375
7274727176788fc7bfa9d5d2c4b692797d7d807f7875767577787b78777a777779767476
767677787878797976757c797972787876757e7d79777676777a7f7f7c8692a2bcd0b887
aad7d6ad7d787777757a839ba1abbc88737671717073768094bdccafbdcba8a0bfb78da0
77889d7e95b47c6c6b769bbfaa6c6e91c39b9cc4b891aebdbcb58c616371967a5b5b5b5d
5b59515a5b5d5a54595f5b5759575655515050515046
575b5d5f5e605e63686b7091d6efeee5b870706e6e7373767a97d5dbc6dde6e3d5a9797d
81a9d0addfecd4b38887acedeec69ccac597b0e2b483817c74737375767a7a7779747777
7673757776737374756f7172706f7277767987afc4afb5b5a3cbb5b6c8b4aad1c3c2ccb0
becdb7b1bcb2b7d7bf998577757474767b838e94acba8977797d797e8daca696a8bf8f78
77777673777f9bcfc3afd4c3a9b8ada5a993939b7674737576747876797d7a7879767574
767776787878797c7776787a7e7d7577767373767477797d8a959c9a968c869ec3b79797
c0cdd3ac7f7a787a79787c818eaba97f71737271757b91a9bcd1ceb0bfd6c6c4c5ad9cb3
7b99b08492af786b6a6a839eab6c7198d8cecdd4b6838591a8b175616372967c605e5d5e
5d5d5b585a5c5b5a5c5b58595c595a5756575150504b
56575e5f5f5e5e6368667292d2e1d4c2927070737071757983a8dee3cfdac9d0eac17c80
96c0c7abddddc2d19b88a5e3e6b795cad1aabae2b4877e7d797773767979787577757777
78737170727071737271747778787377787a87afc2adb8bda5ceb6bdd8bdacd7ccc5ccb9
cbc79c8f9a97b3d8c095837876777575767685abc8ae7b767678797e8faea38aa2c2917a
7774767680a2cddbc5b1d9d7c7bea7c2c8a3a3b07874777674757b7776777b7579797875
73767477777775767573777878767475767a7a7677777893c6d1d5d3c3a28dadb39287a4
d8d4dbb6817d839e9b76798bb3b2847272767371768ab8cbc9d5cfb3bfd9cac1bfa99bb3
839eae849cb8806c68697899ac6d7195c5a0a4c7b37d758da38c65636677977d615f5e5e
5f615d5a5d5e5c5958575b5b5a58585c585656544f49
55575d5b5b5d5f6569666e90d1eeebddab74707471707783a5dbede8d5dfe0e1e1b3828c
aecba3a6d9d1aed6a786a0dde6b591c3e6d4cfcf9f817877787374747474787873727579
7877787474757371737472747778787b79798ab7ddd5c6a5abdccfd1dbbeabd0cad5d1ba
c9caa6a2a6a1b3ddd6b78c7675747373747899c7af83798097aa9f818eb0aa8ba2c4947b
7577757892c0c4d6c6b2d9d3beb8adc3c9a7a4b0747376747374767676767675767a7e79
75777c79747572747878757c7777787373767a787875757c8d9399928d8996b88f7b81a0
ced6ddba827f90c5bb7e88a8c6a27f78787473727896cbb7a5c2cdb3bbcbaba5c0b491b3
acbca87d9db4846b676d80a6b47f7594bc898ebfb38998babc957863647d9970605c5c5f
5f5f5d5c5e60615a565a5c59595a5b5a57555652534a
565c605d5d60626266676d72838f96b4bf746f7373747a9ed4e9f1eadae2e6e3e4b98ba4
c6b487a3d9d1b0d4a6879ddde6b789aeedecdaa8817c777776717477757474747476777a
7876787978747474747475777b7c797c7d7889b4d8d2be97a7d3b6b9d3bfacc5bee3d6bd
c8cdb8cdd8c2b4d6bc91847c747474797a83a2b78b7d7b8ec0ddbe8489a7aa92a9c29479
7378787e9ec0acd1c8b4d3c7acb5adaac1c2b19673747874737174747677757776787d7c
7a78797d7b7576797874727578777b7c74747a767474777a7c7a7b78787d99b980777a87
9fbad4b07a7b89aba48194bbcbb4a0857c767370738dbac1c4ccc5afbad4cac6ba9781a0
c1a581748cb9b17c6a7ba5d5d0af858fb18289b5a48cb3c7c5ab8563647b91675e5e5e60
60605d5c6162625c5c5d5a5b595a5b56525456555149
5858595e5f64616164616474949c8ab0c279747374707aa6d8c9e5e9dad8cccfe9cba6ce
c99281a2d9dac3cb9585a1e0eabc859cdceacf927c7c777774727776767677787a777674
74767575777777757576777879777576797b86a9bdafbaa8a8c79e9fcfbfaebcaed9d4b9
bac9c7d0dac3b4d8c5a6927a757474767784a5b1877a7a8cb4c9af848ca9c3c3c0ab8574
7071747994c0d0d9c8b6d8d9cab88d88a3bcad7c75767a7674737574757777777b777a7b
7679787b7a76787977767a7d7a76777470727273737573787a7d7d787a8095a87c75777c
879cb09679787b86817e8ca7b8b19d847c767470747a8daab1ada0939eb0aea38f79737a
897c716c707b7e716f727d867e7b7471736c767e78747e82847e7565656b736262605e5e
605f5e5f6765605d5d5d5b5c5d5d5c5654555653514a
5857595d6063666563676d8bc1dbd6d6b8797473747781a8dde4eee8d8dee3e1debdbae5
c2827d9ed6e7d0a77e87abeaecc3878ab2debf807677787877767c797679797977737678
787775747273747276777976757875767a7d849ca290a5ab9db19499b8aa9faa98b4b7a0
9bb1c9ccc7b2aacacfc6aa7d76757375777f979e80787a7a797b807d8098babba8877b79
78737176809aaeaa9e97abaeaa977a7c89928b7974767a7978767776797675767a7c7979
7776767873747a7a7b79797b79747274757375767572767778777a7375777c817974767a
7d82857d78787878757a7c7e827f79787777737174737375777574747676757577787170
6f706b6a6b6f67616c6f706d6b6d6e6965696c6b696b6b696a696965626063646765615f
5f5e5e616564605d5a5e5d5c5f615d59595852525052
54585c5f63646163696a6975a4e3e1c2897172747071778bb7d4d1bfb0bdc9c0a994a0b6
9d7b7a8cafbda98079829dc5c3aa82849bb8a27b79767777767575777776747376787577
74747577787a797577777976767a797778797880837b868c848a838c93878287818b8a84
848a9394918787908e87807a757474757a7a767a797978797a7a7777777a7c7f827c7677
786f6e71777b81817d7d807f7f7c78777a7b7975757a7a78787a797679777375777d7a7a
7976777875757c7876777c7875727272757574797c767572757676757474767877747677
767677767679757576767776777875757575727172717173737575737571706f7175706b
6c6e6b6b676968676c6a676865676f6a63646865686c6b6763646667636164646666635f
605f5e606261605d5b5b5b5c5d5c5c5b5d5c53565351
5e5d606162656768686a696d75808079747171717272757b8b918c86848a8e887f7a7f84
7b72767a7d7e7b737373757c827c77797b7e797575777773747877787776767676777979
787376777976797d817d7b74747979767577777876757a797a7a7a7e7f7a78797a7b7b7b
7f7d7e80817a787d7d7b797c797678797b7a79767a75767a7c7b7e7874787e7978787572
7270727373777a7977777777777876757477787575787675777774747878757979787674
757779767275747374737676777777787573707475747678767571727474747777757474
70747576767672727372716e70706d6f6d6d6b67626464666a6f6a656562656664635f63
616062686663676663676665656364605c5d6061615f595b575759595854534f4d4f4e49
4a4b4843464744463f3f444549535b59595a5a55524b
5c5e5e5d5c5f61636c6a6b6c6a6c6b6e6e6e6d6e70727474757475737576767675747677
767577747172727372717075767574757171737574737374757576787575737474787a79
767676777778787473787773737579797778757375737575757672737777757675757575
75757475736d6e706d696668676a6d71706c6c6e6f6f6f757977716f717071747273726f
6d6e6f6c68666869696c6f6565625e5c5c5e5c5755535052565553525253545a5c5c575c
5d5f666b616364635e5e666c68626366625d5a5254514e4c48494646423d40566a523734
3233373c3f424244474c4b4d51535356565757504f544e4d5559554e43393a37322c2528
2423211a1a18150f1215182023262a2c2c3336404e44363d3a3c403d4243403f3c3e4341
3d403f383a3837352d2b302f303d4d5a5c5b58565651
5b5f5e5f6161615f64666767686b6a6a6e6d6e6d6d6f6d71706f7070716c6b6b6c6a6a6b
6c6b64625f5a59575554525353555555565a5b5b5a5c5d5e61656665686c6c6968655d5d
5f5b5953524e4b46454235323434333636343335373e4d513c3c3f4346484a4e54525658
59585d5d5c595a5a564e49454243465553362f2b28221d1c201f1b212623252a2a2a2d30
363e403f434a4d5254585755555656585a595854504d48494845443e3b3838373535302f
303340493235373c3f3c42484a514e52565c5e5d5e605f606566646463615f564e545353
52514f5051504d4d4f51515252555455565a59585c5e5e5f5a434265656464656665666b
696968686a6a66605f5d5d65645f5d5f5c5853402d415355545254525355535251515355
555555555756575355585852462d315d5a5855515452
5c60625c616765605344403a38383431312d2b2a2a29282f30313232373b42484c4d4e53
5a56535453504c494743413d3e3b363635322f2e2c272a30302f3238444b3e363f494b4a
4e555857585b5b5c5c5f5e5c5e5a585756565456545152544e4a4c4d4d4b4a5154515354
575b5e5e5f5f61626565666a6d6c6b68657171706f706f71747777716d6e6e6d6a6d706f
6b6b68666967646464595166686b6b6c6e70706d6d6e6e6f727173737271777874747272
726c493e76757573727375767577767577777572757571747271707174736f553d5b6f70
7275777474757473727272747374706e717373747473706c603e386c74737472716e6e6f
70716f6d6a6b69636366666767686765666661462847625e606261636262626161616060
615f5c5f6161605e66675d574a2b305d575758555152
5f60615f63665e4d3e4c51535756585a5c5f5e5f5f5c5a595a5954535857595d5f5f5c5c
5b5c6063676965676b6b6d6f6f706f737574747271727374797a76746d69747774737678
7677797876737371707778757274737476777779766f6466787776787675747676767775
7776767879797873767d7e75747977656578777d7b787873777b7d7b7576777674797b78
7b7f7976757473736d595576767774737676787472727474767979767576797a79777574
73694b437472777775767676746f71767572727574737275747575767775715438587473
72777873737476777672737575777172727272707475716f613c346a736f6c72736f6c6e
6f6d6b6c6d6666646364676866656569626160492b4665616165615e6063646466656565
65656160636460616869615b4c2a2c5d5e5a56535151
585b5f61605e58484c6c6b6d6a6b6f6f6e6d6f7174716f7072716e6e7272726f72726f68
64696f717374727172737375747372757978757273737776777574746b67727376777a7d
7977797c79787675737375747675757575767a7a776d6161787b7a7a7978757677777979
7a77787c7c797a76787c75727579725e61787a7b787675737676797a7774797c78777c77
76787777757577767266657a7a777779787678757272747676777976777a787877787875
736b4c4275777c7b76777b7c7471737778787876777774777c77727374746e563a517476
747275767572737677757675737573707272707072727171653e3267727370706e6e6e6b
6c6e706e6b6764626363646a68646569676461472d466564636567646564626162656a68
6668626163605f605f61605c4c2b2e5a5d5a57585552
575c5f5e5f6059494b69696d6e726e6d6d6f7172726f6f7072706f6f7276747270706f67
626a737271747575737574767675767573757574787778767676767269666f7676747976
76777977767a7977777877757677777877777976756e5f5e78787677797a777777777b7c
7b78797d7d7977777a7976787877706160787b7a79797a777573767876787b7c787b7b76
78787b7b7a757576736b6b7c7b76777b79777976747373757774767978797a7773767773
736d5248767878787572737678737273767b7a75757675747572727375756f553b547374
73727274757375757676767675767470727472727071726f6743376672726f6f6e6c6a69
68676a6a66666162616867666a68696b69675f452a406464656765656767646462666a66
6464636163605f63605f5d5b4a292c57595757565555
5d5f5e5e646357494e6a6b6c6e6d6d6f6c707372706f6c6f72716f707171747470706f69
626974747272727272767575767374747271757477767676747373736c646e7779797976
75787876787c7c767774747776767878787a7876767060607679757477797675767a7b79
767b7d7d797873737375777978767265647c7974787a7a7a7a79787876797a7c7f797574
7476777a7b7a7578745b57767876767874777a7775767676757778777978787779797875
766e4b46747677777775757474757575757778767673747376767472757670573b4f7474
717172727576767675737374747574706f70737272737270654136667274726e6c6b6e6c
6c6a6a6c67635c626a6c69656868686768695f462f416565656766686763656868686864
62636566656260626161615f4c2b2f5d5a5958575651
595d626467695f4b4e696f6d6e6b6d6e717272727373737372717073727072756f707069
6268707272727372737574737572727373757578797675777976767469616c757b797676
757a807c7b79777675787b7b787b7b787979787675716161747876757678797876777874
777b7d7b7975727477777a7c7e78705f62777576787979787676787a7c7c7a7d7e7a7779
76747777797776746e524e7376747674737475737477787575797b77787976777a7b7877
776d4c497476767673727576737477767676777977767576787674737475735a3d4d7576
747474747776777777757574747674736e6d706f707271706240396672757271716f6f6e
6c6f706a6361666a6d6c6a6a6d6e6c69686961472e426666676967696a6869696a6a6662
66656562636461636263645f4d2c2f5a5b5b5a5c5953
5e60626269685d4c506a6d6f716d6e6e6f71727271757775747372717271706f6e6d6e68
626871706f737473727271727372717475767779777775757775716e6563737779767579
77777c7b787476767678777575797b7878787878746f6465787c7d7a7676787c7a797878
7977797c7c7975787b7a787979767063657a76767576777475787a76777d807d7a767777
77767374797872706f656276757578787678767375787a75757778767777767175797876
77704f4c75737274727173767577787b7b797f7a77797979767570737977705737487373
7374747473747776777877737476767473737173737371726540376671726f6c6d71716f
6c6c6c6b676565676767696a6c6c6b6869675e492b436a676768696a6c6b6965696b6766
6a65636467676363646566614f302d55595b5a595852
5c60615b5b625b4a4d6a6e71727471717171726f6f73757672706f6e7174757271716e65
616970717173747473737173747372727577787779797877777a7b776a66747977767a7b
797a7b7b78787876787a7a747476787776787b78756e6667797d7d7b7776757b7e7f7d7a
7a777a7f807b78797b7a78797978706363777a7c7d787576777879797577787677747475
77747477787a7571716a697776757778787b7a77787c7a777777787877777773787c7b76
766e524d747878747373777776747578787776797a7a7b767677767576736f5938447072
747371737575757374757673747476747473737270747473623c366571707071706e6d6c
6a67676361636a696b6d6b666668686a676661482c40696a6c6c6c6a6b6a66666b6a6666
6a696768696864646567625e5131325757595b595653
5a5b5e5f6165604e51696d7072747274706e717172707275727171717474747472716d65
616a70727474747475737373747274747576757475787c7a767675736b6a767876767778
74777a7877797977777a79777a7b787976777c7b776e6066767777777a7977797d7c7979
77787a7b7c7c7a7c7d7c7a79767670656273757a7a787979777374757475777777767677
78757576757675736c5c5d7878777876787977777b7d7677787a7a787677797777787977
776b494b78787270727577757476797778787676757579787775737476767055394d7074
747371747774737474747372737371717474726d6d757774623d396771717271716d6c6a
67686a65686b6c6d6c69696b6d6b6b6b6667634f33436c6b6c6b67666667676a6b6b6765
696c6969696866656565635e5131315a5d60615e5956
5c5b5c6166685e4e52646a6d6f7071716f7174747274747374747473747372716f716e64
6069737372747371717073716f6f72757778777775757475787b7a73696a7275787a7776
74757476797b7b7c797b7775767c807c78777776736a5c5f767a7a7878797a7b7b78797b
7c7b7d7a787b7976787b797878766f64667475787b7a7976727478767879787974747577
797778767574747169545775767877777576787a7a7c7877787878797775777677767374
776e4d4c757876747374787877767674747571727477787774737374777874583a527471
737677757674767572707171707070707578757071727070603a3867706e7072716e6e6b
6a6d6f6d6b69695e5c676867696e6e6c6b6a654c314265626263656664696c6d6c6b6866
696968696969696765666663502d315a5e605f5b5858
5b5c5e60666c604d546d6c6e6f7071706d6d6e6e74777672727475747475736f71726f65
626a74746f71736f6e6f7374747372747775747576747372757674736c69737877777875
7274787a7a7a797974757676797d7c7976787775746b5b5e78797a797a7a7a7b7b75777e
7f807d7b7b7d7c79787a7f7d7b7b74626475747678797b7a7a7d7a757478787875777a78
777575777674716e6c646676757677767778797a797a7675767574767776727274767475
756c4c4f77777774737272737173727576797873747879767774727273756f5439507372
7276777273747473706f7171717273717374747272737270613d3c677171706c6b6e716f
706b696b6c6c6b6a6a67666b696a6a6c6d6c654a2f4368666566676a696a6a6b6a69696a
6968686767686967666664635030355c5d5c5c5b5a59
5a5b5e6163625b47526a6b6e6d6e70727275737172757774757573727271717172706c65
6069737272737270707376777673717377746e6f73747273757475726765717877767877
737073767878777575777575767c7c7a797574747269575f7a7975777878787b7d797679
7979797a7d7d7a7a787a7f8079776f5e6277777778757675747574727678767778777c7b
7a7a797b7774706c685d6378777675757777777778757272757573737676767576787775
73684a4f73737373727576747275767475767775767a797475747374747571563a507375
7576767475737275757574747271706f6f70737473737473603b3a697678746b686c7271
6f6b6a6c6c6e6c6b6e6e6d6e6c68686a6c6a634c33486d6a686a69696a69686a6c6b6c6d
6a686665656567666665615f50323b605e5d5e605e59
5a5d6062666a644f51696a6a6d6e707170747575757475767572727274737170706e6b65
5e68737272726f6f70747373737270727372727274747473767879756c6971797d7c7778
78757574757575797a7875757779797876737477766b535c797b79747375777a7c7b7a79
7a78797b7e7c7a7978787c7d7a786f5d6578797677777476797976747376787977787778
797a78797675747164495277797777747678787776757273737475757475767675787877
7665454a71767879767577736f7274737475767476777776757776797a776f563b527575
747575737475757678787775716d6e6f707071727272716f5f3a39646f6e6f6d6b6a6c6e
6e6e6e6c69686969686c68686965696e6e6d674d31456969686a696a6a6c696b6c68686a
6a69696a6965686a6867666351333b61605e5c5b5d58
5f5f636462635c4850696b6c6c6e6e6d6e70717072747472737372717374727072706e66
5e687473707172717073737271706f706f717372747675767677757269676e7378797879
7c7a79787676787778777574757574767a787577786b535a787c7c79767576797c7b7a78
797a7b7e7d7976787879797879796f5b5e74777875737574757a7a7677787a7b7977797b
7778787775747574674b4f73767575757878767777767474757575777677777574747677
76694b537375777775767a797574767875757472727072777976757677766f563c507174
767575737373737173737472706f7070716f6d6f6e70706f603c3c646d6e71706c6c7072
6f6e6c6a696968686b69676a6a6a6a686b6a665134456a696a686968696a6a6c6b676668
6d6d6c6c6a66676b666468645131395e5d5c5d5e5e5a
5c5c626468695c454d686d6d6d6f726f6e6e70717171727374726d6e73716e6e71726e65
5f69747372757573737375737372717071707172747672737675757168676e7578757577
75777b7b7a7874757a7c797475787576797977777666505b767a7c7c7977747a7d7c7878
7a7c7b7e7e7a7b7f7d7977787a796d585b727679787475777a7c7a797a7a767476767a7d
7978797976757372726666747a7a77747a7a777676787676767676757373737273747675
746a5157767a7977747576767172787a757676767978757476797a7d7a7670573a4e7375
737475747374747171727272706f706f6d6d6e6e6d6e6e6e5c383c646f717070706e6e6e
6f6d6d69656566666a6d6b6b6b6b6b6b6967654f3746696a6a6b6a6a69686a6c6d6a6868
6d6d6b6b696566686666666351323b5e5c5c5b5b5c5b
5b5b5c5f65695d47506a6c6c6d6d6d6d6d6f717171717171716e6d707271706f70716e64
5e6974757373747472737372727173767775737276777375757676766e676d7373737274
76797775737374757778787875737375787879787466515d7778787879797a7e7c787778
7b7d7d7b7d7b7c7d7c7b7876757468545b757a7b7a787876777a7b75757a7a7876777574
76777472717171736a5158747b7c7774797c787676797776787875757677757372747573
73684f5774757574747574757878757676787977787674777875757676767158374b7276
7676757374757574737373726f6d6e6f6d6c6a6d6e706d6c5f3a3b606e7271706f70706e
6b6b6b68696c6c6d6e6d6d6c6b6d6d6b6d6c654e36476b686667686b6b69696c6d6c6a67
6a6867686b6765676866686450313c5e5e5e5f5e5b5b
5f5f5f5f63665b4952696b6b6b6e707171737171726f6d6f727271747374727070726e65
5d6570716f7073706e7073747270727575737172747776747578777369636a7474767674
73747878737473747576777a7b7b77747575757474654c59777778797b7b7c7c7b767677
797a7b7a797a7b7d7c7a78757676695159787d7b777876767777747272757575777b7876
76767976726f707161434d74767676757678767577747375797874767673727370717372
71674d5874757575757574767976717170727475757474757678747272746f57394d7274
73727272747473716f6e6f6e6b686969696867676a6b68685a3b3c5c666a6b6968686867
66696b6864676b6c6f6e6d6c6d6d6a6664635f4c31416466636264676765656766646260
605e5e5d5d5b595a59585752463848615f6163625f5c
5b5c606263665c4a53696a6c6e6f706e6c6e6f70706f7073706f71727371707071706e66
5e6770706f7072706e6f717473737373747373737473707072757670655f696f71757676
757477787877787674747070727373767674737273624a58757374757473747674737474
73737372717374747676747171706450576e707577747376787676747070747678787473
717477726e6c696b6247516f6e6c6b68686a696765646262646361605e5b5a5a595a5c5a
5b554a53636462656567696b6a6a6a676866656461605b5554565553504b494e4a433f3e
3a37383a3b3c3a3c3c3f424141434446464a4d50515152554e44434b4a4b4c4d453a3a37
33312e2a23222120211c191e1e1c1f2021232a3b41312b303030343738393e4343454745
44454648484847464543403939405262605f5e5e5c5c
5a5d616263645a4851696d6c6b6a69696a6a6c6c6c6b6a6c6e6d6b69686664656868655f
5c5d5e5d5f5b585656525253545452535858585858575b5f6163625f59575c6464656465
66615d5c5954514e4b464140403e3f413f38333334383a373739393c42444545494c5255
565657595b5f605e5f5c5a585755504d4e4c4847403932302c27272a29211d1e21232526
272b2e2e3235373b424b4d4b494c50505257565756575756545352524f48413a38383632
3136433e2b272626282727282b30302f313b464b4c5257585a5f605d5e605e5344495657
56514e4e4e4c484847454541403f4040414040434a4a4e514e4648525254575a595c5d5d
5e605e61646363605b5d6162605c5a5a5656584d3a4152504f5353514d4e514f4e4f504f
4d4d4e51565656565558555148384a6766616161615d
5a5d6063686a62523d2a272b2d2c2a272626282b2b2a2a2c2c2c2f343738393d45494c4c
504f4e4f514e494445413d3d3d37332f30302b25252320202324282d373a322d303a3f3f
41454d52565c5d5e606262605e5d5f5d5a575453534a3c3f484947484b4a474648494b4e
4e494b5154565a5b5c5e5f5e5d605849556a6b6a6b6d6f707071706c686a6a696b6b6b66
64626162625f5a5b53444b5d5d606160626566666667676869696d7071706f7070707072
7368535c7171716f7074757876727373737272747271717170706f7071726e553a4d6d70
71707272706f6e6f6f6f6d6d6c69686b6f6e6b6b6c6d6d6e5f3d40636c6b6e706d6f6b67
666c6e6d6b6b6b6c6c6b6c6e6a666666686a674f3448686667696a69686a696667676869
6a69696b6c6a686a686767655233426261615f5d5c5b
5e646765646459464d5c60666967636162615f5f605c5a59555557595957565659595753
535c626262636566696a6a6b6d6e6f6e6e6f6e6e6e7072727273726f6660697475767878
75737372717375767573737374737475747475747462475775747472757776787a7a7977
7676777a7a7b7a79787878757575614556767575787d7d7b7879767374787b7a7b7c7c79
7576787978757376623f4e75787976757779797675757372717072757879787778767474
7465525f77767373737575767674737376757678777574747577767575736e5636496d70
71717273706e6e6e6f6f6f706f6d6a6d7271706f6e6a696a5d3d406370717071716c686a
6e6e6e6e6d6c6a6c6965686c696566686a69665034496968686969686a6b6b6867686a6c
6c6b6a6a6a6a68686a6a69654f3044626264635f5e5b
61605f666a695740516d6e6d6e6f71716f6f706e6e7272716f6f72747371716f70716c62
5a6872716f6e6f71737272737474747271727170727271707474736e63606a7577777371
72757b7a75727577757476787a76767677757576766248577173737473747778787a7a76
75767a7776797b7b7b7a787576766245587a7a777574767d7c7b7c7976777675777a7d7c
7875747777757374674e5a75757675747677787677777471706f7376797a777778757173
7466535f7677777775787c7974757474777b7b7a777374757775727274726d5535486c6f
707271717272706f737271716e6e6f6f7271706e6d6b6a6b5a393d60706f6e70716c686c
6d6f6f6c6968676665656a6e6d6b69666364644f354767686a696d6d6c6a696a6a6a6b6c
6a676a6a6b6c6b6a696a69644d2f42636463615f5c5a
605e5e63686a5842526b6c6c6e73767271707071717172727374747472706f6f6d6e6e63
5b667272716f6f7172737173737272717071706f7070717376787872645e687173747677
7678777375797878787575747372737576787574735d4056747372737373737575767775
7476787979787777767676767875624859757777747374767777777675757476777a7878
76737274757575756e676c76747476747475767575757572717577787678797674737475
7666515e74797775777c7b797a7a77757473737373737475767777726f6f6e54334a6f70
70727274747271737371706f6d6c6d6d70706f706f6c6b6b5b39375c706f6d6c6b696b6d
6e6b6a6c70706f6d6a6b6e706d6866676865604b30496b6b686a6c6e6e6c6b6b696b6a6a
696a6c6d6d6f6c68686966644f314161636463605c5c
5f61626265695a45536a6f717374747373706f706f6f7274757373717274727070717167
5c646f70707070707272707171717372717073767573706f71727370665f687574727579
7571737677767777787878787775747675757579785f4057767473737373747476767675
7577787e7c7979787474767776775f415677777676767679797979787574757574767677
7a76727174757676634a5a7376787877787677767475757775747678767676757677787b
786759647678777576767573737372717173757574736f717676797b746f6d53354c6e74
7574727273707173727271706d6b6c6e6f6e6e70716f6e6f5f3b365b6f6e6b6a6765696a
6b6d6e6e6c6a6a696b6e6e6d6d6a67656869664e3249696968696b6c6d6e6c6a67686a6a
696a6a6b6c6d6b6a6b6c6a654f344761606264605e5b
5c616363666a5c495a6f707070737473706e6c6c70727372737271727271707171717066
59626d6e6f7070727474726f7072727372727071737473737576726e6660697070737676
7573737676757674727475747471727375737376765e4157737474757575777879777474
74747579787576787877727271725c405a7c7b7875747777777774737475777a7a787779
77777776747678795e3a4d70757878787777777876747679777576747273737574747677
7567586578797a78797774717071717274757474757373747371727372706f55354e6e71
706f6f727270706f7173726e6d6b6d6e6d6e7072706e6e6e5e3b38596e6e6b6a6e6e6c6f
6f6e6c6b6c6c6c6d6b6b6c6b6a6a6a696b6b6952374c69696768696a6c6d6c6b6a67696c
6c6b6b6a6a6a6b6d6d6d6a644e3449656564655f5758
626769696a6d65576275777776757272737472707174757473737372727173736f706e61
57636f6e707070707375737173737271717272706d6f7374757674736c62697374737676
777472747474777673747777777a777675757674745c415a76787977757576797b797474
77767574737375777876747574725b435a75767576777372757774717676747478797775
77777877757576786a596373757577777676777676767677757475747476747375767777
74675a647375757475767474757877716f747472737375747573707071716f55354d6d6f
6e6c6f707273726f6e70716f6f6f6e6e6f6e7072716f6f6f5f3f3c5a6b6d6d6c6c6d6d6d
6d6965666b6f6f6e6f6e6d6e6e6c6d6d6d6b67513a526e6b696c6e6e6d6d6b6b6d6c6b6c
6e6e6c6b6b6b6c6d6e6c686650364a6464646363605d
5c6264676c82a8bdb097807375757473727372717272727372716f6f7173757472727263
596571707071716f7073757574737373737373737272757572727373685d677475726f6f
7074747375747473737575767578787674747473735a3e5a767678767475767879777576
76757575757677777576797a78755d445b77767677787674757472727778787777787978
7675757675747272685a67757676757578797a7a7a787877747474757776747475757676
75695c6878767677757576747575747074787773727372727273707071726e52374d6a6f
706f6f6e6f71716f6f6f6f706f6f717272706f707270707062423c5b6e6d6c6f706e6c6c
6c6b6d706f6e6e6c6c6e6c6d6b6d6e686766644e36516e6d6b6c706f6e6e6c6c6e6d6c6c
6c6d6a686b6d6c6c6c6f6d664f374a63646564605d5b
5f65696a6d7eade1f3d19678797a777371727372716f7172737273727271717271727466
586270717071706e6e71727273717374717174747473737272717372675e697374767777
787674727477777675757778787878777473747472573b5675757576767676787a777574
72727374767676747273767676765c3e5672747576787a76767879777375787877757575
75767574787976766044547074757574767a7a7a797676747677787b7977757473747574
74675c677473757574747778757272727478777573727274757574706f6f6b51344d6b70
717170706f707071717272716f70717374727170706f6e6e62443e5f706e6f716f6d6d6e
6d706f6d6d6c6d6f6f6b6b6d6d6c6b676668685138516b6c6d70706e6c6c6d6f6d6b6c6c
6b6b6a6b6d6d6c6b6c6d6a67533d506565636362635e
5e64686a6c708fc9efd89f7e7a7876737476747273727172747372717273716f6f717163
55617071717070717271727473727474737272727574727274737271655d68706f707477
787675767573767676757474747375777675777673573b58747678797777787979767474
74757675757575767575757171725a3e5a7677797b7c7c77727272727478797677777877
78777575767472745c3b51737674747476797875757675757677797a7978767574757776
74665a6875757575747373727274757674747373757574757474737272727152344c6b6e
6f71727272717071706f72716f7272727371706f6e6f6f6c5f403c596a686868696a696a
6d6e6c6c6e6e6e6e71716e6f6f6d6a696a6a684d38526c6d6f6e6e6e6e6c6c6c6d6b6c6e
6d6b6c6e6e6b696b6b6868675442526362646360605e
616365696f71708bc9dfb88e7c7b7e79757572727474716f7073706e6f726e6c6e6e6e61
53616f71727172747473727272727373727173737578787775747373675e697273737575
727172757577777374777574747474777978777876583d5874767577797777787a777574
7677787876777678797978777675583e58737576767879787877757474757374787c7b7a
7a787978777877776e636b76787877767879767274767776787975757677777473737375
776c606570727474737579746f7375767575727173737474747472737373715236506d6f
70727270716f6e6f6e6e71716f70706f70716f6b6b6e6e6d5e3f3a5b6e6c6a6a6e6e6d6d
6f6e6d6c6e6c696b71726f6e70716e6b696a695039546c6a6b6d6d6c6c6b6b6b6c6c6d6f
6d6b6d6f6f6b69696b6d6c6955445466666562625f5c
646a6a696d72666bade7dca485817c767476757575747573727272717374716f6f6f6e5e
52606f70717272727272727272707373717174757675737473747472645b6b7773717072
707072757777757476767573757575777775767776573b59747677767776747879777877
777676767675767675777875737358405a73747776777a7a787776757573767674737576
74767b7a7576787765546174787878797a7a787475777a797a797574777a787573727174
756d626972737373737274736f7172737371717373757574747475767a77715538506d72
7575726f70727171706f6f6f6f6f6e6e71706e6f6f6f6f6d5f413c5b6e6f6f72706f6d6b
6b6d6e70706b6766696b6e706b6b6c6c67676951395268686a6b6c6b6b6b6c6c6c6b6d6c
696a6e706f6d6b6b6c6c6c6a55445668666160635f5b
606365696c6c5c5990d3d9aa8c857f7d797777757473716f6f7272717273727171706f5e
53626f70727271707272747371717475737071737677747272747471635d6a7476757270
737572717272747476767473757776777677787773533c5c787a7b797776767877777779
797875747777757473747474747256405f79797979777676767b7b767575737272747476
787a7878787776755a3e53717778757677797b7776797b7a777676757577797676757676
776e62696f7072737471727370717170727779797573727273747172747572523a546f74
74737070717173716d6e6d6c6e6f7071716f706e6c6b6c6c62433b5a6e6c6d7071706e6a
6a6b6b6b6d6d6d6e6e6e6c686868696868696b523a4e6264676b6d6b6a6b6d6e706f6e6c
6a6b6d6e6e6b69696a6c6c6b55445766656364656563
5f6767686c7060546ea4d0c59c8a908f837a7877757576777474757373737270706f6e5a
4f616f6e707170706f6f717271727574737171747574737370717471635b677173727476
727375777674737474737371717678767678787672503d6179797c7b7877777879777679
7a79777778797675767774737372563f5c77787a797b7d7875767a77777876767778797b
7a79777474747477614b5f74777878777778787676777879777879767574757676757373
736c646b7071747573727475747575757677777576737276777573727372715539516d74
73706e6f717072716f706e6e71717070706d6f706d6b6c6b60413c5b6b6c6d6e6e6e706f
6f6e6d6e6e6d6b6f6f6c6c6a696b6b686868674f39526765686a6b6c6c6d6d6e6f71706e
6f6c6a6d6e6a6b6f6e6d6c6852415666656665646563
646e706c6e705d4e6a9bd2dfc0abaea78d7d78777473747777747475747473727070725d
4e626f6f707273716f6f717374747575737374757776747474747572645a677172727273
7676747476767677797a7876747679777676777473513c5e7573787a7674757979777778
7a797776757676787d7d7a787877573e5e76797c7c7b797778797674787a7a77787b7878
787b7c7b787575746b646e77777576767776767575777977777576767575737576747372
746c646c717173747574737576757372737375767979767274747170717271553a516c73
74727071716f717472706f707574706f6f6c6e706f6b6a6a62443e5b6b6d6f6f6c6d6c6c
6c6c6c6c6c6a6a6d6c6c6a6b6d6c6a67686a684c3a54696a6d6c6c6c6e6f6e706f6e6d6e
6d6a6a6e6f6b6a6d6e6d6b6a55425565646564646661
5e64686a6d6e584c6792c4eaecd9cab28d7e7e7a767577797a797573747576737272725b
4e647172737372706f727271727374767575737272747673717375715f5a6a7475767775
737377797776737274777775777877757676777677533d60777677777674737779777777
787877777677787879787778787852395a73787b797a7a78757576787a77747375757474
7678797672727375604e5e71757473747475767574777776737374737273737576757474
746a636c7172737475747576737274737478797979777373727373706f73715037526c72
7370706f72707072706e6f7171716f6e6e6e6e6d6d6d707066453f5a6a6c6d6b6d6e6c6b
6c6f6d6b6b6e6f6e6c6a6a6d6e6b696a696b694c3b54696a6b6d6d6d6c696a6c6b6b6c6e
6b6a6a6d6d6968696c6c6a665244576666656361605e
6364686c6e6b52486884a9def5f5e5bc928281807a77797c797471707375737272737059
4d6271727170706f6f7171717171717373747272737676726e727674635a6a7372737375
757474747476757575767473737675767878777877543f60767777787874757779787878
7875757676777877787b78747678543b5875787a7a7c7d7c7d7c76777978777776767574
7474757372747575593c4d6a727575747577767474747472717072737272737677757473
726c666a70706f707374706e6f71737275767572737273716e7071726f6d6a4f39526b6e
70706d6a6b6b6b6a6b6a6a6867686a67646261626260605f59453f535d5d5e5f60606161
62616062666a6a6a686664676a6762616061604e41535f5d5c5c5d5d5c59595a58575a5a
545150504e4d4c4d5253545048485b666563615f5c5b
5d63646b71715546637c8bb7e9fbefc2968683807d7a7a7a777372717171717273726f58
4b63717373706f6f70717171717170727372726f6e727271706f6f705f57657074757875
74767370707476757878747375757473747574747554416173717271706e6f6e6d6c6c6a
6a6a6d6e6b696a686362646562644c3d54666969696d6f7275757270706d6c6c6d6b6968
66646464615f5d5c50454e54514e504f4d4e4a444648494747484c4f4f5053565a5c5d5b
5a585a5e5e5a5b5b59585653504f4c4b453d3937353433312e2c2c2b2a292e3d4a44342f
32363a3c3c3e44474d514f4c4f555855514e4f504f4c4b484a4d463c3936302f2f2c2825
221c15111214151718181a2021232628292b314044403e3f4040434345474a4f4f4c4b4c
4946474543413f3f3f3e3d3a3d4f616667656464635e
5e6364686c6e594c62767f9fd1eff5d5a1837f7c767673716b6564656058575a59534f44
3f474b49474645474848484a4c4b4c4f515356565a5c5c59595c5b5953515353514e4944
424447443d342e2d2e2a27272b2e2e2e2f302f3134393d40414247484a4f52545657595b
5957595c5a524c49433c393834303942342622201e1d20222120293031333335393e4349
4b4e5157585756585049555c59575654514f4a444544433f3e3f3f403f3c3b3e41444443
43484c4d4a4e52525056595c5d5f5f61646364666868696a646061615d5d5c4b414e5454
535351515051515557595755585d5d5b5b5d5d60636362625f443e556263686b6a696b6a
6b6b6b686666666868676766625d5c5e5e5c5a483f515e5d5c5c5c5e5d5c5f63635f5b5e
60606163625e616668656464595160686a6a6663615c
6061656a6b6c6856423e414a6497cec185605b5c5a585552525352515454565655555144
40464844423f3d3c393332323231302b292a303436353231333a3e41474a484a52585c5d
5f61606268686564615f5d5d5b5a5c5d5c56535352443e4c515153555555585a5c5f6466
656565686b6b686a6a6c6d6e6f6f50405a70767475777a797675767576726f6f6e6c6e6e
6f6f716f6f6e696b554154697171717271706f7071727170737473747475747477777473
7267636a7477767171707175777676747575747271737575727071706f716f4f39546d73
7474727372737272727475757271706e6e6f70717272707167453f61706e716f6e6d6d6f
716f6c6c6d6d6c6d6c696a6c6c72746f6767674c415c6b6c6c6a6b6e6c6b6d6e716e6d6d
6d6a6c6e6c68696d6e6c6868594e6068666666626263
60626265696c564c5b6971798399c6e3c99d89827d7877716e6d6b68686b6e6e6d707054
4c6470707071717170717072747574726f707476777472717477747059536a7771727878
7574767673727375777772707273747575757574754e4063767575767475757677787979
78787775757675737476777776764e3e617574767b817e77747b7d797776777573757777
7875747777767474583f526d767677767777767574777776757674737576767576777675
756d656a73767773717273716f7074767473747374726f70727172717171704f3a536d74
74717172737372717170747673706f6f6f6e6e6f7372727368403b6071706e6a6c6f706f
70716e6b68686a6f6f6d6d706e71706b6a68684b405d6d6d6c6e6e6e6d6b6c6f72706e70
6c6b6d6e706e6a6d6e6d69695c525f68676765626262
5d62656667674b405c6e757f8588abddedd3b0958a87847f7a7979787876767473747656
4c6674727476737071747576767677747576797a78777473757779775c546b7574757776
7677747475767576787573737272777776737174754a3e63747476767575777b7b787573
757677767475767677777473777a4f3b60777a797b79777778797977767879787979787d
7a7275787875767663525f717679797878787876767a7975757475777b7b777778767674
766e696d727476777674737372706f72767474747371707075747170727373503b546e74
747572707171727271707172706f6f6f6f70716e6e7173726a433d6173716d6c6d6d6d6f
6f70706e6d6d6e6c6e70717172706d686564684f455e6d6c6c6b6d70706d6e6e6f6f6e6d
6c6a6e6f706b6a6c6d6b6a6b5d525d6566676766625f
5c5c6167656a4c3f5e6f747b808393c2ebefd1ab938986837e7b7b7877767573716f7151
4a666f727374727374747677757577787a79787878777676777777765d586f7979777777
757274747476767879777a7c7b78787776767676754c3f63757676767775777a78737271
72757676777677777878777577774e3f6276777b7a7876777879797976747777777a787b
7c797776787876756a6066737878787878787877797a7672747675767a7774787a7b7c78
756d676e7375767577777471727472767976757371717171737372727171704e38557076
747674706f6f7275747271706f71706f707373706e707170694642626f716f6d6e717170
6e6e6d69686e70706e6c6e6e7277726b67676950455f6e6c6b6d6d6d6a6c6f6d6b6e6e6d
6d6f6d6d6b67686c6c6a6b6a5a515e65626264626062
5d5d5e6266674a425d70777b7e8287b0e3f4f0cda3918c86837e7a777674737472737354
4d67747475757575747475757474797979797e7d7b77797a7c7a78755b566e77787a7975
7473787d787575757779777678797a7874757878784d3e64767877777778797976737376
7879777776767878767a7d7a7677503e5c707677787676787d7d78757775787977777776
777675777b7872725e48546e77767678787b78787978757474767575767673747777797b
77706a70747877777978767578777574777b797b7b737071727171727172704b37546d71
73727173717071747172717072737370707071706f7072716a4340626f6f6e6d6e6f6f6b
686b6e6e6e6d6d6f6f6d68676b6d6e6d6c6a694e47606c6a6a6b6e6e6c6e6c6a6c6e6d6d
6e6d6a6d6c6a6b6c6b6b6b685a545f66666362615f5f
606062646768473e5d7172767c818499c6eaf8e2cab69e8d8884817d7b7a7a7875737654
4c677373747675747576747374777979797678797c7d7d7f808180785956717c7a787976
777a7e7e7c777877787773737576757272767a79784c40657776777878787a7a78787777
797b79787777787975757a7b76754c3e5f737a7b7b777778787675747575747778757174
767676767877747358394b6b787776757a7b787776777675757575767674747274767476
7a746c6f7375767674787975727272737475757374727173737170707372714e38556c72
73737173747071716f7071717173716f6f71706f6d6d6f71693f3a606f6f6f6e6f6e6f70
706e6d6f70706f6f6f6e6d6a68686c6e6c6c6c4e47616b68696a6d6d6a6d6d6c6e6f6e6e
6c6b6a6e706d6d6c6b6967665a5360686966645f5d5c
5a5f63656567413a5b7076797c7c8089a2ccedf3eed8b0948983807f7a7b7b7977767952
4866727374767675757879777777787a79797c80807c7c7e7b7c79785a556f797a7d7e7e
7a77797b7a7a7678787573747677787976777b7c784b466c7a7c7a78787777797a7c7a76
7576797b79797b7978797677787a4c3d637878767373767572717779797a797775757677
7a7a7773787a767366555e71797a77767777787776767573757575757575767271747374
7870696d717679777677757574737375797777777472727372717072727171513e586d71
727373727171727575726f6f6e6f6e6f71736f706d6e70716a413e616f70716f70717270
6e6d6d7174726e6c6d6e6a6a6a6b6b6d6c6c6d4f455e6a696c6c6c6c6b6b6f6f6c6c6f6d
6e6d6c6c6c6c6a6a6967656558525f69696763605e5c
585d646768623f39596b6d717b7f7e808c9ec1e5f4e0b8998d8985837f7c7a787b7b7850
486775737376797777777a7a7877797b7c7d7f807e7b7e7e7d7a7c795a5670797c7e7c7d
80807f7d7d7b7e7e7876757776777e7d78757a7b774b486e7d7b7a78777777797d7b7976
76777c7d78777a78787977767b7d4c3b60797e7c77747677797a75757777777978787778
7878787575757373695d627278797976777677787675747575787775777a787473757575
756c676c747879777473727374767875777a76767676757371727574717372513c566d75
76737473727273757471706e6d6f707172727072737273716a4240616f717070706f6d6f
6e6e71706f6e6f6f6d6c6d6f6f6c6a696c6c6a4f4a626c6d6e716f6a686b6e6f6c6b6d6d
6d6b6b6b6b6b6a6a6a66636355515c66666766646162
5d5f61676866403857686f787b7a7e828a93a5d0efedd8b69b8f898783807e7d7e7d7750
4e6b747577777676757779787c7b7a7c7d7e817d7c7e83838282817d5652717e7e7f7c79
7b7d7e7f7f807d7c7977777878797b7a78777a7a7b4f4d717e7c78767777797a7d7c7776
77797b7a77797e7e7b79787a7c794b3d62797d7e7a7b7c7875757374797b7a7b78767576
787676777575767462444d6c757676767677787575757372737575767678767375757476
766e6668737675727272757678767675747575767676787873717476767776533c546e75
75737575737371707071737170717270727271727273727069414162706e6c6c6f6e6d70
706c6c6d6c6b6d7070706f6f6e6c6c6d6e6c6a524c626d6c6c6f6e6b6a6c6c6c6c6c6c6b
6a6b6c6b6b6a6a68676564665d585f656764635f5d5f
6062646668653c385b6b707276787c83898c94b8e1f4f4d6ac988e888382827f7e7b7a51
506c75777778767777797a7a797a7a7c7f7e80828488868583828380555777817e7b7d7f
838585858683827f797c7a78787a787576787b7b7a4e4c6e7e7d7b79787a7c7b7c7a7676
76777a7b76797c7b79797a797874453b5f74797c7d7c7c7c75737377767776767577787a
76747478767779765e3c496a747474767576747678777274757473747774747377797677
76716c7072727373737678787673737776747377797a7975757372727474745137526c70
71727574727071706e7173717071736e6d6f70727271706e694041616e6f6f6d7172706d
6e6f6d6b69696c6d6b6b68686d6f6e6c6e6d6c5250646c6d6f706e6b6f6e6d6a6a6c6c6b
6a6c6b6a6a696a6a6b6866645d5a5e64666664636060
6166676666663b3656686d717576797d81888d9ab3d5f0efc9a3948e8a878482817e7c52
526e787576797677777b7c7b797a7d7c7b7a8084858384848180817e5459768080808282
8381817e7e82807e7c7a78797e7e7a7776767b7b794c4a6a7b7f7f7e7d7e7f7c7b797877
78787777797a7d7b7a77767575764b3d5e7478777a7a7d7b787775737376747579797978
78777577767373746b5d6170747575797874717579767577787575787a78757477777572
726f6b6e717171717475777778767373777673777674757575747274737475523d556e72
7070747876727172706f6f6f7071726f6f6f70726f6f73716d413f616e6e716f6f717270
6f6d6c6e6f6d6b686b6c6b6a6c706f6d6d6d6b524f646c6e716e6d6e706f6d6c6c6c6b6c
6b6c6b6a6a6a67686a6a68675e5a6065656565635f5f
6062626667673d3b5e6c6f727778777a80858a8f99b5dcf3e3bca296908a878786847f51
4f707976767979797a7b7d807e7b7e808383848485868484848485815250748381818283
858280828283827f808077767b7e7f7b7d7e7a76764a4c6d797b797c7c7c7c7e807e7c78
787876797a7d7c7d7f7d76787876493d5e737a7c7c7b7a787676777373777a7878777776
777472757774747567535a6e767675777775757676757778767577797a7a787679797673
726d676e747570737774747576767574757574747271727473747373747372533a516b73
74737376777474727374727271717271737372716e6f71716b3f4264707171716e6c6d6f
6f7072716d6d6b6d7375716f6f6c6b6c6d6c6b5350636d6c6c6d6b6b6e6d6a696a6c6b6a
6a6c6b6968676667696b6968605a5e64656664625957
6366676c6b683c3d5b6b6e6e70767a7b797e83888f99bce5f3dab9a699918b8987827f52
53717a787a7b7a7a7d7c7b82828281828585838183848686878886835252748181838682
808283838585817f84807c787b7c7c7e81817f7976484c6d7877767978797b7e827f7c7b
7a7a7a7d7d7d7b797d7e79757473473f6072777676787b7b787776777776777a79787777
7775727173757575603a4a6c7573747473747476767474797a7878737275767577757474
726b666e73747478797576787775757675727374767675757272747576757253364c6c76
757575757674727274747372716f7171757371716f6d6e6f6b3e42646f707173706d6e6c
6c6b6b6d6e6f6e6c6b6f6f6c6a67676b6967695350626b6a6b6d6b6b6a6c6c67676a6b6c
6c69686a676666686c6c6b6d645d5d6167666461574e
6666676c6b693836596a6d727672747c7d7f848a8f94a2c8ebf0e8d0ae98908b89848157
57737c7d7f7e7c7b7e807f83868484838584858786868480828585825250737d7f848484
858684858584838384807b7e837e7d7e81827d7877484c6d7877787a787779797e7d7b7c
7d7b7a7d807e7e7d7b7b7b7775744a3f5e7176747376757676787977767775787a787675
76767473747574756339476b747275737273737574737478767474716f6f717373727172
726c666b7073767474727577787774717473737271787a747171737170707359384d6e76
7475777776726e727373706f7070717174737272716f6f6c663b42646f7072726f6e6e6d
6b6b6c6b696a6d6c6a6a6f6e6c6d6c6d6e6c695052656d6d6d6967686c6d6d6967676b6d
706c6b6c6b6767686a6f6b66605f5e6162626163615a
6365686a6b68373756686f727170767a7c8284878c9397a4cef0faf2cfa997918d8a885c
607b81808282807e7c818586858481818381848383858687848283834d4d768786878483
84838385838686828383817d7a7d7d7c7e7d7c787a4e51717b797c7e7c787b7c7f7d7b7c
7c7b7a7b7e7c7a7a7877767b7c77453c5e737878777676777575757a7b77787979767473
75747374757573736e5e6572767474747172717476757674727273767472707175747172
736d6a6e717377767576767673737375797a7775787975727375757370707057364c6b72
707173767473717273746f6f747371707071717374706e6f6c3c42667271706e6d6d6d6c
6b6f6f6e6e6c6c6d6a696b6b696b6b69686a695154676b6c6a67676c6b6a6a68686a6b6c
6d6d6c6d6c696868696c68625f5c5d60605e6264615c
636769686768383a5c696a6b72737474787d84868a8e9196b5d6e9f5efd7c1a998928c62
687f8584868483818486858584848687888786857f81858785868181494a738584888485
8784828284868582838782808183807e817f7e7d7c4f56767e7b7b7e7d7a7d807f7d7c7b
78797c7f7c7a7a77787877797c7b4a3c5c70787975757a79787875747479787677777575
767a7a7775767473694e576e767472727574737375757472737375777775747273737372
726d666c757679787a7a77767676797973717575747473727373737474767356354d6c6e
7070717373737372727171737471707473717272706d6f6f6d3f47676f706d6d6c6c6c6e
6d6e706e6a656969686b6c6a6e6d6a66656b6a5053646b6a6b6a6b6e6b6a6b6b6c6b6a69
69696c6c6c69696b6a696a655f575c62646665605c5c
646468666666383a5b6b6e6d6e6f72767b7f8384878a8f95a0aab8d5eff3eac6a5989167
708286868987868688878787858383848481858482828485888886844b4e7a8482858586
8581838382838280837f81838486837f7d7f82807b4f5a777f7e7b7b7c7c7e7d7d7a7b7c
78797a7e7a75787b7d7a777b7a78473b5b73757272747376777877767376767674767475
73737673737575736538456772727170747373737474737575737373737673716e6f6f6f
716b626b74777371747572757374767873787874747877747675747776727056344d6d71
7072737172707070717172717170707171706e6b6b6d6f6f6b4048656b6b69696764666c
6d6c6c696c6d6a6b6b68696a6b69696765676656576369696c6c69676868666566666461
5f616262615d5e5f5e5f5a5954555e646868635b5657
6567696a6b6734385c6a6d6f6e7176757479808586888a8d8f959dacd7f4f5d8b4a29a6c
728789898886868785848280837e7e80807c7c7e7f7f7f81818381804a51747e7f818384
83818385858383837e7d80838385817d7d7b7b7a79515b7377797675757573706f6d6e6f
707173736b68686d6c6c6a69686a484158696d6f7071737574716f70727272747372726d
6b6d6c68676869665e41485b5f6162615c59595856555858585554545556555354565555
585a5a5c63645f6265676868676c6c6a6b6a6665635c5c5e5c595859544f494a4c4a4742
424344414042434144464648474745494c5050505356565559444654595451504f4d4949
473e3c37312f2e2c2f2b23252325252123282b383a363333333335383a3c3a3b40434544
4345464a4a484a4a4b4d484548556468686a655e5e5b
5e63676a6b69403e545d60615f5d60636160636667676b6e7275777a9dd1eceadac29b7b
6d6969686763616062615f616664636667686d6e6c6b6e6e6d6c67655359605c57514d47
423f3d3b3b3a353131303335373638383438383b404c4e4d505051555658595a5c5a5a5c
5e605f5b585451534c4545413c354553422f2927241e1f1d1b1c262b25232226292a2b2f
33393e4443484d50534e5153575b5b5856545253514f4f4c494644403f3c3b373333342e
2c33453d312d2d2f2f33383c383c3d42474f5557585b5d5f605f5e5e5c5b5b594f515554
545153514e4e4d4c4947474541413d3f3f424545444245475044444e514e505153595d5d
5e605f605f5f666b6663615f6061605b59595a504f5153545353525351514e4c4d4d4c4d
4f4d4c4e52545151575a5a5a5a5964636465625e5d5f
636a6e696564583f2d2e34393e4449515b5f606263666d747a7c7e818fb9e4f4f6e6bd91
7e726d6b6a645e5a575655545455535658595f6664616666696a686c54576b6f72757772
71747374777776767570696d6c6b6b666161605a5c4e525c5f5f61646363646666626667
6870706d6d6e6a6c706f7272717153425c6e717576767371717675716f706d6969656467
6666696866646567603c485f666b6b696a6b6a6d6d6d6e70716f70727273727071727573
7068666c6e707375767b777576747779787371716f7173737574706d6e7072603b4c686e
6e6f6e706e6e6e737470706f717070716f717372726f70706f3d49686e6e6e706f71726f
6e6b706e6e6d6b6b6c6d6c6c6d6e6968676c6f5e5a646768676a6a6a686a6b6b6b6b6a69
686565676b6c69696a6a6969635a5e606567615c5f60
64676a676668312f556a6a676a6c6c6d70716f7278787b7e8388899095accfd7e7f3ecaf
9e9e9894928e8f8f8e8b86898988878489878787848486878887888a454d7582878a8a89
81838687888887848487838585858988878482807c4f5d767d7e7e80817e7e7d7a7a7d7f
7c7c7b7b7a78787c7c797d7f7b78523e5c747a7e7d7a7776757776727579787677777974
7575767576767372652d4268707172737775727474727674777774737574717171727572
706e676d71747572737371717576727576767a7a78787a77717071717274725f34496973
7372717172706f7374717170716f71707171716f7173736f6a3a4b6b716f717471737570
6e6b706f696b6b6e6f6f6e6e7173716f6c6d6e6360666967696a676967696a696a6b6c6c
6a676b6e6d6b6b6a676a676461595d61666666605c5a
6461666c6d6b2e33576868696c6f6f707175767a797a808083888a8e929ca8a9c2e6f7de
d1ccbba599939292938c898b8b86878889888a8886868986878a87884853778486888a88
888889888886848685848486878485878b878181804f5e7981817e7d8281807e7d828383
807e7c7b7c7b787b7d7e7b78767850385a727a7977777879767775737578797878787876
75757475777573716748566e7473757575757474737375757777757475747170716f7072
737066686b6f706f7177757375767474767b7674777575747575737475777460314a6c72
727470707472707173736f6d707072737171716e6f71716f6a394c6c726f707271717070
706d70716f706e6e6f6f6e6e70707071716e6c6062696b6a6c6d6d6b6a6a67676a6b6a6d
6d6b6d6f6b66696a6b6a646261565b63696867615f5b
635f656a68663036586366686b6d707371737578757a7e7f8383888b8e909396a5bfdded
f4f5e5c1a59c9794948e8e8f898a8b888a8a8a8d8c8a888888898584404e7a8888888784
82848889868887868889848083888785868784838353607c828083838280808080838280
7f80807d8080797c7d7b79777b7d503a5c767c7a7775737374787472737779787d7e7877
75737273747775736e505b6e7473747573727674717374767574727678757274716f6e71
7772646b717175757878747372706d6f75797674716f73737373757473757565324c6b71
717474737675717073736e7073747271716f707071747571703d4e696a6970727170706f
70706e7070706d6d6e706f6e7074716f6d706f6360686c6e6d6b6c6d6b6a6767686b696a
6a6a6b6c6964676b6966646465565b64686562645f5b
61605e6463652b305267696e6e6e6c6d7071727273787a7a818384868b90919499a0b4b3
ddf7f5d9c2b4a39996908d908c8a8b8d8c8b8a8b8b878a88878785833c4a768385868687
85858689888788878888878589888987868687878357687b827f85857d7e7f8281808182
82817d7d7f7f7b7e7e7e7c797b7d55395a757b7979767577797d78767673757476797879
74757273737674726a364a6a7372727474777673727171747574757676726f7474737272
797162697175757371737275767572747472737575757574757273777074746330507175
7171767676767472707171737573707273707172737573706e3b506a6e6d6d7170737071
757372716e6e6d70726f716f6e6c696b6f6f7063626a6d6b6968696a6a696c6c6c6b6b69
6a6b6b6b68696a6b6965646666565c6262636462605a
6064646862622d365668686866656b6c6b7070717174777a7d7c80828b8d8f909192997b
b9ebf8efeadbb49d98949192908e8c8d8c8a8787868688888a8c8a853f4e79858788888a
87888b8a84868888898a87898a8888878887898c855b6e8082827f82827f7d80807f8082
7e7d8280807e81837d7f807c7876593a5e797e7776747579747874767175747577767475
7573767374747371642c476b737173757578757270727272737574767674727172737475
766f5f69767673777672757675727272777674757277777977767574747274622a4e6f72
72727375787773727273727275747274716f706f716f7073723d50686f6e6e707175716e
6f716e6a696d7174756f6f6d696a696a6b696b6162676d6c6d6f6e6d6a6d6d6e6f6f6e69
6b6c6b6a696b6c6a6c69696867535a65656567645f5b
5e606361605f262c526368696a696a6b6a6d70747574747b7b79808585878a8d8d90926a
94cceffafcf9d2ae9d9a9898918c8c8d8d8b8a8a8a888587898b89893e4f7a8888878786
8887898b8889898a8a8a878986868a8a8a878a8d886072848585838586837f7f7e7f8282
837f8280808385838182827d81835e39597681797a797778797874737574767775757575
74717579787572716d566272756e70737376737270727475727674737373737171707072
72725e66707175747275757776756f7272757674717a7b7773757675757673632a4f6f73
727471707476727275747373757571747272706e6f7171717242526974767371736f7172
71706d6e6f6f6f706f6c6f706d6c6c6c6c696b615e666b6d706f707071706c696b6c6b6a
6868696a6b6d6e6d6b696965644958666766615f6060
5f60636362632c3c5c6264676a67696b6c6e7175757374787b7a7f8586868a8f8d8f9062
7baad0e4f0f7ebc7b4a9a09d969390908f8d88898b888889878a87833f53788887838a8b
85888e8988888a8d8b898788888b89888d8c8d8f8e65768487898a8a8987888681828583
848082837f817f7f7e7b7f7f827f603b5e767d7a7b7a78797979746f7277767575747474
7273747576726d6e6a485b71747171737376747575747475717474727271727174747473
727058667275737173747979757172737475787c7c7a77747374757475747464274f6f78
7875726e717473737472727473727274737472716e7070717240516c7474717174726f6d
6f706f72706a6d70726d6d7073736f6c6b6b6b65636a6c6c6e6d6f6e7274726b6b68696b
6a6b6d6c686c6c6b6b696867634d5864686a64625d5e
5c5a5b5e5c5e2535586468676a696f6d6d686c73717575787b7a7c828484888d8d8c8c5b
7796a8b3d0e8f1e3dfd1bcaba29c98959292908c8b87888b8787858341507a8684868a87
888b8b8b8a8b8b8b8c8989878a8a8a8b8c8b8f8e8a6876848a8a8b8b898a8a8787888a86
85828286807e82827b787b7a7b7a5c33607a7c7d7e7b7a7a7a7a7a75747a777677757370
707373737571706e6c2c4a6a747473747578767677757473737277757470727274707472
747155646f7575717575747775717476767575767575767575757473707270632a507077
757573727475747675737070737374777270707271716d6d6e3c5770747472747471696b
6f727071747375746d716e686b6d7171706c6f6d696a6a6b6b70726f706f6f6d6b6b6c6b
6c6e6e6c6a6c6a686c68696b65475765656562615c5c
5d5e5a5c5c5c29335765676a6c6c6b6d696d6f7173726f7178797d7f7f818384878b8856
74909599adc5e8f8fbf9e8cfc8b49f9b96928f8e8d8d8c8c8989858340507782878a8a8b
8c8b8a8b8a86898d8e8e89888a8b8c8d8d8e908e8d6d7a888f908e908d8c8d89898a8b88
87868385818284827c808282837b5d355e76797e7b797977787a7574747c797879757673
75747474727374736e334c6c7373727372757574747674747773787674717073716d7173
746c53636f727373757774737677747374767473727373777674757170716d622b537178
73747473767577767476737373727574717371716f6f6e6d6d405a6d6e716e716d737876
747371727171767273706e6b6c706e6f6c6f706b66696f69696b6f6e6e70706e7070706d
6c6b6e6d696b6b686a676b6a654455636367635e605e
585a5b5f63612733556769696666696c6d6e6f6e72737374767a7d7a7e82817e86878554
728c949698a3ddefeff8fbf6f5d9afa9a79c97958f8c8d8b8b8a8687445076878d878383
878c89898c8b8b8b8a8d8d8b8c8d8f8d8f8e8e919273818f9093959698978e8b8a898a89
88878681828484858383827e807d6034617a79797a817c78787a757a7f807a797b757377
7876787773767677705b63727271727473737576747875737570737672707172736e7272
736f53646f72726f757475767574747577767875747275787774767a777471662c577275
7371747574757573727375747272757372747472706e6b6f6f475b6f6f6f737274747473
71726f706f7277747374726c6f6f6e6c6d70736b64686d6e6b6b6f706f706f6f7370716d
6e6d6e706a6a6b6c6a66696768415362676764616261
5558585b5b5d21294f5d5e626b6865676a6d6d6e70727476757779787c7e81808285854b
6e899091929abdc6c2dbf0f9fbe2c2cdd7af9c9c979396918a8e8c883f517d868788888a
8585838a8c8d8d8d8d8e8f8f92908d8c8d908f9396768b949598a1b5c4ad97918e8c898a
8888888383848683807c7c80807e64305c767c7c7d7a7c75787a7a7a7e7c797a7c777577
76777478737276766f3d556e726e7175737676737476757673717073726f727172737171
726f53647176767577777378747272737773757375787675737378787874756a27547072
7272767473737375736f7373737374717172727473716f7270485f707372737873727372
727273757375737274777776736f6e6c6d726f666267716e6b6d71706e6f6d6d6e6e6d6d
6e6d6c6e6a6a6c6d6b6a69696a425466666464626364
595a5a5c5d5d2635545d605d6463666c6d706d6c706f72747374767a7a7e7f827c808445
6c848c8d8e9496999dafcde5f2e7e3f3f7c5b2b3a99d978f8c8f8c874e5778898885888f
8988868c8f928e9093928e9493909290909191929785b5b6afc1d1e4f1ccb3a4978f8c8b
8b898884838485818180807e807c622f5b797d797d7e7f79767e797d7c77777877777978
74767576747573746b274b6d73707376717477717272737572707272747372726f6f6f76
767252667078787475757372707274737276777275757a75767273757774736727547174
75777875777271757471727273737575737775737474747371485e6e7373757774757072
71716e717274777872737371706e6f6f716d6e695f69716d6c706f716e71706e726f6f6a
6c696d6d6a6c6a686b6a6c6e6c3b52676b6666636364
5359575f5d552231515d636565616569676b6b6c6f6e717772727679787c7b7a7c7f8242
6c85898d8e8f9295969daab9cfe4f6fafbe8e4eeddb2a69d9692918d5559828b88898b8a
8b89868990918f9091909193938f91919293969a9daadfe6e1edf9fbfbe5dfcbb09f928e
8a898986848687848382857f827f632e5e797e797e807d7c777a787c787d80797e7d7a78
72797a77727672737037516f727072767274747474747274727172757472747171727275
727748606d7075737376767b787772767e77777772757777777572767672756a27546f77
77797a7876737375727271727472727676767272747675737149616e76737272716f7276
72727370716d7170686c7070717172716d706e6c616a6e6d70716f6f6e6f706e70716f6b
696a6f6d6a6a68676a686c6c69345264676565616265
5256555557582232545c5d5c5f6161646766666b6a71747070707377787c7a797a7c7f3b
6b8288878a8c8d8e8f98979babdcf3eef3fafbfef5d0c5b1a49c948d575d838d8b8b8c8a
8a8d8f8f918d90969794918f939098979a9ab3b4aed8f3fbfcfbece8f2f1f8f0dfcaa496
918e8c8785848685817d7e7f8282652d5b7b81797d79817e7e7b7c7d7777777a7b7b7877
787778797674727575586271727272757674727277727577737173757572747374717472
7278435e6f6f75737878757375737375767575767579787a7879757376737b7022577075
76787b7b7373757674727271737070757674727276727276744f5f6e7173727273717172
747472727271717170707175726c71777370696b616b6c6c72736e6e6e6f706c6c6e6c6c
6b6c6e6e6c6a6a6a676b6d6a663351646a6462636361
565754575b5b19264c5a5d63616361636564636a6d6f716d717275737678777777777c3e
697f8484838887898a8e8f95a0dcefced1edf3f1f8f8fae9d7bc9e926669858e8f918d8c
8b909092939091959694959595979b9da2a9dae1e1f0f9f9faecc7bed1eef7fafcf0c2ab
ada2958d8a858589827f83848080682b5c7b7e837d7f827c7d7c7f7f7d7f7b7f787c7b77
7e777978777575736f3b526c71737174757472717571767771717170737173716f71726f
70713f606f6c7474757e7a76706e757674787c78797b7477777171767274746c20556e70
7675777772727877747373737370717474737274767171747451606d707071737272716b
686d7371716e717376717172746f717172716b6d616b6b6b73746c6d6f6e6e6c6f6e6b6a
686a6e6e6e6a6b6a6a6c6c6c65315865696763636363
515650555b5a19284c5a5a5f62625c636062696d6d696d6c717271717574787677767c3f
677e7d7e82838786898a8e919cdee9bca4c6cbc1e8f5f3f9fae9baa77e7ca09e9d98938e
959493989796999ca49b9b989a9ca0aacfe0f5f9fcf2f5dbcdc4aba4afe7dde2f5f6ebd9
dec19d918b858586847c818282826a2c5f7c7c807d777c797a7978767c7c797d7b767b77
78757678767676766a27476970747272717472706f6f71706e6f6f6a6b6c6c67666a6964
696a43586c696a6f6c6d6e6a6c6f70737572757372757274707071707173726c26556c6f
7170706e6b6b716e6869686b68676a6964646465615e5c5e5e4e59626365606264636467
68746f6a6c6f6e6f696a6c696c6c6e6c6a6262625f6664616263635d5c5757595c5a5756
5255514f4f4c514a4d4d4c4f50375c69686762636561
4a4f535256521a274b54585c5a5c5f63646263646967686e6b6b6b6e716d747373717439
6476757a7b7c817d838282828ddbdfa58e8f9096bdc8c4e6f6fbedede6e8f5c3ceab9997
9792959898939798ceb8a2969a9cb5daf4fafcfbf8cfc4a29592898691ddaba3cceef8f5
f6bc887a726d6e6c6a67676a6869653d5d6a6e6f6a6f6d6b6c696767616062635c5b5b58
54514d47424846403d4554423b3d3a3d3d3e444445474948494e51505050535352535652
55524d4c464144443e39382b2f2a272927232529212523232224232329272d38473b3d3b
3c454846474f52515051575a59575a5a595554554a47454141433f3836372c2a3027242c
27231d1715141a1b1d2626292a2e2f353741444953504e4b4d5354535451515653525353
4f4e4a49453e413d3c38333437486369686865666763
434b504f4d54302f3a35373e393f3e413b3b4133343a3a3a3334373534313338383b3e42
4345485057585d5e6468686a72d0c28674757777777779a8d8eff6fbfcfdf9e0f1cd9293
9b767987a89fb4b9e0cfc4abbdb8ccf0f9eae1d0c29d938682837d7f88d69d859ecdebf3
f7b6796656544f49413a393b3533525e4c3b393a373b3c44474a4e505959595b5c606260
64655b5d5d615f58584251514f4d4a494746494a4744464445474949494a4b5451565456
565b3a535e6165666569676366656766686c6e6e6a696969615f5f5d5f5e595c2d4e5b57
595d5a5c5a5c5d5f605f616264646568676668696968666968505e696c6f6e67716d706f
6d666a7172727469676b6c68655f5f616466646354616863646262636265656663636769
656666666666656969696b68652f5b6b6b6c6b6c6761
434b4a4f504e42312f33343b3f403e474a49524e494e4e54504e4e514f4a4c4a45474a3f
464d494f525555565e6867696fcfb082767c7d8183848c93a9c9d8e4e9f2f8fafafcfbfd
f4eaf0f1f6f1f2f5f8f6f1ebf1eff3f8f7c2b1aba3848a8f8c8e8c9294b89e989aa8d7f2
f7dfb7a3969d948b898483857e7f7329617a7d7f817b77797a807b797a7b75787c767577
7574727675747571702e496e74747270707474737271717171707470716e6d747372706f
6f722d5c6e7072747373727475766f747373737271727374736f71747a756e6d19607473
747273747575777a7675707474777675736e717373727272735b6a717173736e716d7474
746d6d6f6e746d6c7277746f6f6d746e716f6d6a5669726e73706f6f6f6e72706c6c6d6f
6d6e6e6e6f6e6d726e6d6e6d6b24566766686a656661
4945444049551427475355575a555a575e565a5b5b6165626464686b6f6d71716c6d712e
627373757477777b7c847d7e85c0a48c858b8e8e8b8b8e8f9295969795a2bae9e8f4fafd
fdfdfefdfffdfefffdfefafefdfaf9eecaa89fa39d7e8b94939394969897939a9b9cb3c7
dcf1e2cdbfccb8938988878782846e20617f7c7c7c807c7b7a807d807d80807b7b787a7a
7777767778747976742c486f767474737273737477747171746f737373726d7272716c72
6f722a5d6e737374737372727575707270747472747a797374737778787a75711e5f7374
747575787676777a77747277757673737270727476767473745e6d7372727472726e7476
73727373717270726f727470717272736f746d6a5069716e736f7674727370706d6c6b70
706e7370726f6f73716f6e6d682254666b6a64626663
4c4f4e4f505417204b5152585e5a595d605d5f6162656a6a65656d6d6f6f6d6e706f7129
6071727578777b7d7c7d7d7e7f888584808487898a8a8d8d8d8f8a8e6e6288c1b7b9c4d1
e7eaeef8fdfdf9e6e5e6e1f2f0cfc1b8a99e999c99818b909190948f949394989999979d
b7ecfaf7eff4d09e8c8b878887886f1e5d7d7c807e84807c81827b7e787a7b7e7c767b7d
7b73727575777877755a6171737578737977757274737370747171727772726f71727170
6b702a60707074787272737370706e737376767677737676767578787276736c1b5e7474
7773767574757b7a78757279787372717475737577757374725d6e757374757671727573
737473747377706b6d717473727374717172706e526773706b6e73736f7271706f707172
716f7272726f6e716c706b716a235968696c65646261
46424a53584e1125485452555a5e5959595d5e636666686969696c696b6f6b6a6a6b6e2d
6070747775787b7b787c7c7f7c7a8184848084878883888689838b8e634d8290979b989c
a2a2aabeeff0d8b8aeaaa8b2afa5a19c99969895957f858d9092908f8f8e969494959699
a4cce8f6f8f7d7a2928e8786898570236482828383837c7f7a837d8583807f7f7879747d
7f7876777776767c74585e7272767a777779767274727271727274727570716d6f717172
727223617575737371747976706e717a7875757b737776737476767678767a71165f7172
747377727475767a7a787875777575737774727872737373726169737573757875767978
737275726e7d73727a797270717275726f6b6f6f4f6670706b7071757173727071707071
6e6c7372716d696d6b706c6e6c1d59696c6b676a6962
4a4b4b564e4c0c234d5a5959525558595c585c5d61616267666669696869696d6a6b6c29
607072767477757a777a78787a797f837d7d81868483888585888b8a634680878f8e9190
97969494a3a19f9c939795999794979697929792917d808b909490918f8f939193939394
99a1c0e7f9fae8b496908b8b8b857725638384808081827d7f82827e857b79807b797a7b
7b73767c7674777a7738466d74737777757776767a756f7072727474756f6c6e6f757573
71711f627374717571737571707170737676727174727675757577767573767415617070
75757a747679737a777c7a77767776747574767a747675757260666f7172767973767382
7b72736f74727677757d727c6f6e6e70707272704c696c6a6c6d6d706f7272706f6d7072
716d74706f706b706f706e6d6d1b586b6c6768696c67
45454851524e0a1b495550585853575b5a5a5a6064626766636168666766696b6f696c2d
627070717575757974747978767a81837f7c7b81868185838385897f5d3b7d858d898b8d
8a8b918d969491918d948d928c8f9296948d908d8c7c828b9092908e9192909091909293
9797a3bee4f8fce5a693918c8c847721678386807e81827e77808579787a797c7b817d7a
7a787b7f7677777777414a74757476767d7c7478787372737671757373717170727a7375
7072156371727575777276706d70726e7073707072747e76777172757972727215627372
7a757c7a77797676797a747d777677787576747675747071726066747373767976787a76
757576747472737073746f74797472757871726d466a6e6d6c797170726c6f716d6d7273
7170706d6d716f736c6f696d681a5f6d6a616a6b6c69
49454b52544f1625494f5959585059595d5c5a61645f6366686666636667696d6e676931
677273737073777b74757a7a787b7e7d7f7b7c7c7f797c83808180855a2e708882868a8a
8686878c8e8e8d8a8a908a898c8c8c8d8d8d8f8b8d7a808b8c8e8e9091928d91918f9291
93989b9fb9e1f5fdbea89b938d8a76216c8289858583817f7f807c7f7b7a7f7d7a7f807e
7d7a7e787874757877636473767778787a7c737572737375747175737274717373747072
7176126773737171737b7476737270777a73717273727678767173737d7472711b667577
77777c7c797676737977747a7577767a797672747774727375696b71727174747b757474
77737274736e7474756f7376737374727173756f436b6d696d747372746f6f706e6c7272
706f726c6d6f6a726d6f6c6a6a145c686c6b6f6c6764
4d45465556450715474d585953575d5956575a5f615f6666656668646769696d6d6a692f
6a717574717171777271767879797b7a7b797c7b7b7f8381838280805429708383848b87
7f80858b8a898b87888e888e8c8e8b8a8d8a8d8e8d7a7f8c8e8b8d928f8f9095908e908e
949497959db3d8f9e2dfb897928f80226a7f8186818080818180807b7a7f7c7f7e7a7d79
7d787b7679787877744c4f71737a7c777176767772797573727272737372717171737175
70701166757378727a716f71726f717572727677726f7273767176787f75756f1768757f
7b777d7c7777797777777473787b76767f7772757772727977686c71777274787374706f
7472767d7572707372727479767c72707074737336616d69707a737279727473706e7071
7172716d6f6c6f706f706e6e6e155b696d6a6d686861
444e484d4d4b0a1f4a4d4f58565a52575c5c5d64645f6268656266686a64686b6b6d6931
686f717573706f7376737775787979787a797c807f7f837e807c7c7a5925727f847f8085
81838a8786868b84838b898b8a8d8c8b8c8a8a87887a7f8e8e8a8e8f8d8c8a94918d8d8e
959195909597aee7f8f9cca39c9181306f8688838681807c8081797f80817c7d7c7c7f7a
7d78757c7c787a77713f356d7477797471747572717a767073737175716f707072727072
6e710d687371747575707171736f71736e797d777675777575757678787475721b6a7379
76747c797576787977737873777977787d76717976717677746e6d787774737376797471
727373757d6f707673717576767475717473717131626c6d767573727574727371706f6f
7271716f7071706f6e716f6e6f125d676e6a616d6665
4040465151420920494d50585259545a5c5c5a5d6161636664605f676a676b6d6a6a6a2e
656d736f7270737577757775767676767677787c7f7a78797a7a787a581e6e7f807c7d83
89817a808783838488898486898c8d89848c8c8989797d868a898e908b8a898d8e8b8b8d
9091908e938f95c3f7fce8c6c69b832d717e808687828284818580817f807e7d7f80817c
76787c7a7674777674564d72717372747475707070747673747171716e716f6c6d6e7375
6d6c0b6972717a777b7a767a6f6e7376767977776d707774757577757371756e1e6d7d79
747578777674777674767778767675787571707877757477756c6b797471767374777970
70727575767673776e73706d787272707373766e31697373747c777974726e7373737272
7373706e7474717070726e6d701461686d6a6664686b
3d4a3f4b495011204b574a524e494c55585c5c5c5e5d636665635d6269646c6b696a6b33
686d716b716c747370757774787775787c797b7b7b817a7379797c7b5d24717f7d7f7f85
8281838584858183848b82838686868c878a898a887b78868a8a8a8b8a898c888a8a918d
91909192949397ace9fdf8f5f7a7863075888f8c8582807f83898086818082838a80807e
7e777a7978737176715e5a787175727578756f757071717474737672766f716e6f717475
6f6f106c767175767e7c747673757f6f736e77726d75777376767373767a776f21717a78
7a7b797a77757c7a78767777757875747574757972757474706c6a787374777876787875
7077776e756f737571756f7273787572767874732d6a7977727b7879756e717578757674
75726f6e757371737173706d6b0d626e6966696a6965
414049454c4f081d47525750514d51605e595d57595d5f6565666363666466666b6a6932
656e706b706b736f6e7577747476737b7e7a79797e7b807c7777767c59116e827f788081
7a7c81817c847f7f82848186818a898589878388877c788989898c868a8a8b8b8c8d8f8e
8d90918f92959799b8eef9fbf7c69a367e8d928d8a858585827d7a818580857a847c7f7a
7a7f7e7c787a727471443a747273757575757276727070727570747179726e7472717075
74740873727576767375737a6f71727372767273757a7773747276737674747224777877
7d797b7a767b7d7d797278777a787774767a767775737479786f67767276787874707477
7577757379757d757375767580787875787872702970777674777776787276747475726f
776e706f747473746e73706f6c10636a686767696765
413d3b454c450c23444852524e4d4d59555b57565e5c62626363656369696166696c6b2e
676e6e6d6e6d706e6c757676797571787a727879757f777a77807b825b1070757c7f787b
7c757f82857d7b7f7b7f80857c8287868486858784777284898b8d888b8c8d8d8d8e898d
898e908f9190909495cae7ebfafbb2539094929182868b858c8581868387857e80858080
797a7f7a7b77787873402e7572747476747575717572727474726d6f72716f7073747373
75710a6e7276767475716e7f70717275767376797775757e6f767275737275701a77797b
7878797b777a7d7b767a757879787876777b77787979777d7e6d667976767e7376757a79
7a7d76767e7677776f6e72777d7f777379767674236e7776757878757571757272726f72
7770737172737872717271746f13656f6c6a66626466
414a3e4b454a061b4c4d5057564d4951515a59585b60625c61606263676c63686a6a6d2c
696e6b70706b6d716e726f747473737578757b787b78767c767a777a560f74797f7c7c7a
7c7c7d8081817d7f7b7d7f7e7c837c818182838487777484888987868a908c888f8a8889
898b8c8d90908f91949eacb4f3fedab2e0a5999b918d878a898780858585808188838181
78767974837e777a7b5e5478707672757479756e75747476737572717372726d6f727671
71700b71777574787775777376797176717576756e797977757977767675736e1d747e7e
75797776767c7a79747f787a757a7678757a78777a7f7e7a7c6d66757875787c7675756f
767f75767f7e757a7377727776787973796f7579216f777375767773787373777771707a
74717773736e787073716b70710f67696c6a66666662
3a3b454848400e1f4c52504d52525554555b5c5c5d5e5e5f62666463696b69696f686a2e
656e6b71706f6d7071717275737573767576787b7a7c767871767676570870777a747977
797f7d7a78837e7d777f797f7b847f80817d86828574798588868684888f89888a878a86
878d8b8a918e8f8e969a979bcbf2fef5f8d5c7edab8d8d8f8f87828b8789818587898380
7f7e7478807c757b7b5e537c767a7575767c75757471767673757571747276727472756d
6f7007727877776c7e777672767171737a7272777076737c737a75737674756e21727f7c
78797b79767c747e747c807d777a767b7275787c777c7674786d64757c7976747874766f
767577777675767c7a7577717a7776737e7a7371166e717d777574727675757578717179
716f737371727573716e69736f0968676f6d68686561
3e454b4a3e491618434b4652514e5554545957585f5e61616367655f65696b6a6b686631
656d6b716c706c6d6f72787274757375777573757b78787b7375787a541172777d7f7c7a
76777c7a7f777c7d777d7b7b7e7e7d817e7f80848171758582868885858c8a8b88878987
878c898c90888e91939992939bcbf8cdf7fdf9fbb89493908c8c89868789888585867e7e
80807d797f787878774a317575767878797a77767274747475737574737478737770706d
726e0a74747878737276756b72797572736f7f7a6e717373757776757771766f19757f7a
7b74787a767a7679777a7b78767a7b7b7475797c707674787772637472756d7f75767672
6e74797275727a7f7f717375777772727b767871126c71787673727578757275796d7173
736e6f716c7471746f6d6c716d0d6c6d6d6e6b686563
4044474a453e0a18454c51544d51575854585958555c59665d62605d6166656560656634
666867716c6e6d6c6d6c707171707576756f73706e7279747672707158246c74726e737d
797a77767673797a777c79777b787880837d797c7c6c6d7d7d7e7f818484868585858482
7f82867f8d828588898e8b898ea7d8a8ecf3f6f8e4a3a1aba0918c89898b868185878674
7a7874717f706f6d6d50376e676766706e6664625f725f605c5b6e745f5f5a5b6d6d5c59
5b5b1d5e5f636363676a6866696874736b6d6f696e6e6a6768636c735b635f5b41606155
595772675d5b5a6b765e555250687a5450535572555a575a6260645f55655f65716a6b67
686d7565676e6a6b7264605b6063675a5f53565742585048435072704941445975414847
4c5c5e4e4a4e517263535052522b6e726e726b696665
3b3f4545473f221f31313731454530303231473a31332f3d48322b32305d59333036353a
393a35424668414249494664585057575a675a595557606a6f646055504456544b4c5a73
443d413f50583c302c3b744332322f35754137393e414c494f515760806066676b71756c
6c6f75708a7a727373828a81716d7f82abbdbac5f9d2c5dead876b6583493e413c41733c
3f4640546b4e5256535a565d5b595b6b665c5c5c597056574f4b657250433f3c6765332f
272f532722242b2a324c2a1c1e21246d2f30313447593f4545575e73585d655d4b5b645f
61617466605a5e6c755a53544a6575423e3f3f69434136363d43583e383938376d40403e
3e556b4a445452596f5a4e605b606a686361615d376560595c5e777258525660764f4e4c
4c585d49424046735b3b3d3b37476c7172736e6b6d67
43424443433f321e211b22274142303536464b4344434349544c484344615e3f3f403d40
3d3e34393f653935363b345740373a3d41673e3e3d3d42686648494c5441545f5c636474
69646b6c716c656a6b6b7d686161605e795e5d585857585a60606568836567646b72756d
6e7174738c7f787c7c848c8b8487875580909cdafcfef9fcf3f8dccba89087807f7f8073
757471747a706f716251336b68686e77736a70716e766c6e6e6a6f74746e6f7272796b71
6c681371726f7676767a6f716e6f6b736c74736a6b72746e6f71707c6a75736a3a6f726d
757576747275767576757676737677737775757b7a7c747673725e7b7d797579807e727d
7c7679757675777677776b777273757174736d6e186e7a7676737b7a7174747179757472
72707273717072786f6f72706b196a6f72726d686870
35424942373c0e0f48424b4b4a4c4c574d4e5557595a595b5f5c5d5d5f65665e6064633a
61656564666e6c6e706f6d6d6c6e6f726e73746e74706d727673727054106e7779778080
717b7879727472767c757f777477767778787c797a6e6b79807f89838485858186838988
888988878b88898a888c8f8c918f843c7994a0d3ecf0fefdfdfdf3f4ecc4ad9895908988
8a8685828380787f7752287d7b777c7f7f787d7f7a777671747376727874767476777675
766f0d73767477757971767a7671777d77737678767577777374737a7d7e7c7032787a72
76777677797c7a7878797a7a767576767e7b787c7f7c757a78775e78777d81767f79777d
787476757f7f6f72757e7f797c7880767975746e1c747b787275737a75767b797b757376
7275767374736f78757572726a1e6f74716e6b616968
41433b3d3a3c150b415147504d4b4d525156585f59595d5e5e5c5d61676565636766633c
63696d69666f6a6d6f6f706d6e6e74717074766f74707573757373704c0f6c7775797c77
7273757c7575767477797b7f7674777b797e7a777d71657b817f8183827f878688838587
888884878a888a8a8a908c90908a84427794979da1a8f2f7fefef1f5fcf7f1d3cba9908c
8d8b878984807f807c60488280807d7d7a7b78797f777873777777757676777677757671
75731772756f7075757075767675756d6f7a77777e767f7c7d767c7a7e767b7133767875
7a7677767a7d7a75787c777b78777b7e7e7e79797b7e7b807c725b7d7e7f7e787d7d767d
7c8176777a757d7a767978807c7777797e7b7c7117787275747d747b7b73787a75787579
7272767270757276747373706c236d6e6c6d666b6e69
413d3e45433f150741443b4b4f4d52505453595d5f5d605d5b5c5f63666665676666653d
67686c6c6b6f6c6d6f6e6a6f7271757172717171717171727773737554146c7372738075
76767978767c7779767a747a79737478778076797a71617b80837d818181868589848a83
898a8a868785858c888b888d8d8b7c3674918e8b9094b0c5e6c9e3f1faf8f9fbf5dca29b
90918f918f8885828074698583818080797e75767b7878767c767776777676787b757572
726e1b6e76757c7a73727977777671767576757c76797c7b7d74767d8075776e38767879
79767a79777a7c787a7b7276787e80807a7d787f797a7a7e7f775d787b807f797c7e8280
7b807f76777f777a777a7a7d76807e797b7f797114707477797b787d7a76787674777778
7471767176797277747679706a2e6c716f71696a6d65
363d3e4140491712414843454f4f534f58565a5d5c60615c5c605e63626366666765633e
6167676b6c6b6c6f716d6a737371726e706f716e74736c737575736f5210657379737380
7a7471727b7679767b797c797c73767b767a76777c6e5f797e80807d7c7e808387828984
858b8b848487828889878c8c8e8a79336d8c908e8e9396949c99a9b4b0b5dcfafcf8e7cd
a49796aa998e8d8a836c4f877f808081807f7c7d7e7c79787a767b7b767376797d767373
726f1d7074717c777472797a75737d727c7673807e76787c7378787e807e7d6e3c727f77
78777d78767a7e7c7f7b777a7a7d7c7e777e7c80807e787e7e77607a7f7e7b7e7b7d7875
7e7a777980788080777a7775848178787f7b7f70146e777c747e777b7776797576787678
767478747b73747674757c766e396e726d716b676566
3d3a3b3d3d381b0d404b41494b504d4c585b575c5f5e5f5f5c646061625f68676564613c
5d6b67676a6a686d6e6e6f726f6e70716f6d6d7376717176706f6e6b510f637772737577
7673737977737b7780787c797678787b777c7779786d60777c7a7e7a787b7d8383818685
818686828888828c8a8a8a8a8b8a79366b8c8b968d8f919290948e959398a7cdf5fafbf5
e1d3dce6d9c4b49b8e88808e8284818384827b7d7f82787d7a7d7d7a78797776767b7b75
726927797875767a7e777c766f75797076786f797a7c79767579797978767f7642797878
767780797d7e797d81817f807a78797d8081818180807d7d7c76607b7e7e7d8081817d7b
797a7a7f8081837d7880767e807a77797e74787319707979747c747c747f787476777976
76787b76767277777976767473406f746f6e6d6d6668
3e40433c463a170a3c45484c504d4e56525052585c5e615f6062656964616a6868636142
5f6a6b6b6b6e696b716e70726b6f6e7171706e74707072777175726f5713637570707175
7277717679767c7d78777a7c79777879777876807d6f6179787c7f7979777e807f808381
8181828488868488888a88868788762f6c868a8b8d8d908e908e918f91929c9ab2c4f5f1
faf9fafbfbf2ebd6a6c7d4b795948a8a8a867f7f8087808383817f807c787877787e7b76
756e297475747c7775757674707a7d7a7f7d7f7a7a807b7a78767d81817c807049777c78
7779807b797d767d7e8480807f79767c7e8180807f7f7e797e795b7d7c8078787f7e7f7e
7b777d7f7f8180818180807d7b7e777780807c6c1b777f787d75797c75797e7276767a74
7d7c7d797a767a787b79777c7d627271706f6d69696f
4244454646361709394948525049505358565858585f5a60606162646464676a6d635f46
5f686b6d6f6f6e70726d6d6e6d71707070737170716f75756f7175715012647171707273
7573787872737a76717877797779757b797d7a7c7a705c79777b827a79767d7c7b80827d
7e7f8282858685848783878584897b346c8b8b898e8c8a8b8c898e8e8d909391959fb2c6
f4ede3ebfdfefef6cee3f1e6becdad9d9d8b8b8b8d8c86898a8681817e797b807d7f7f7d
7d6c2c7a77797777767a7476787c797880787c777e7b7e7676767a807f837c6a47767d7c
7978807e777a79808083807c837e7e7c7c7e7e81817d7c8080795c7b7e7f7781807d7b7b
8181807a8082777d808279847c7a807a7b7e79691c71797e7979797f7d7b80767a777879
7e7c7e7d82777f787b787c8caaa276747275716d6d6a
403a3f4546371c11424c444c50514d4d5056565a5a5a595b62615f666466656666655b44
5f676b6c6d6c6f6d716d6e6f70706e716d716f6c72707270727474715312627675777173
7b7a74797a74787e72747576797674797a7c7778736e567779757d7d78757f79787e7f7c
7e818281828582848383888685847632698a848b8b8a8c8f8d8b8b918d8d87878d929a9b
a7a4a4b7e1eceaf3e7e9f2fbeaf5ddd6cea7b8c0beada69888888881817c7f807a797a7a
7c692d7d77787a7d76807779767a7e73777b80767a787b7f767b797b7a817f704e7a7b7a
7f787b7e7e7c797d7f80807e83818380807f7f8180808183807756807c7f7c8281817c80
7f81807d83797a80777a787d808181807d7a7c681c6e7d7f7b80797c807b7c787d807c7d
797b8080847e807e848291b5e1cf79777373736e6a68
423f45433e3c1f10404a4347484c4c4d535a575956605a615f5a5d656565686569655d4a
5f68696c6b696b696f6c6e70746f6e6f707173747270746d6d6f726b53136472727a7976
7474737078747676707572717575767477787877736c587879767d817a747a7b7b787a7d
7c7c837f818280818584868988867432647d80848b8886898c858486878c8c8d8e8c908f
90948f99a6abb6d6f3f5f4fdfcfdf8fbf4dfebf4f3e1dbb58c8a8a85858584858280817c
7a6634797a7f7c7d747a7979737a7f7b7a7b7b7c7f7f797a7a7a7b7c79828276567b7e7b
7f7d7c7c7c817b7f7c817e8184858381838382827b8280838078527f7f7d81837a7b7c85
817d837d807b7f818384827d8384807c82807a6d216e7c8285867e7d81847d7d7e868581
7a7f8284868684858e94cbedf2d57b79716f6f6e6669
40403c3e43371d0d3744414443494f56525659585c5e5a605e5e5d616366666764665f4e
616967676c6968676c6b6d707371707170717477737173737170716f5514617677767574
7170737571757a7371777376757875767875767a736b5977797881807675747b7d7c7a7e
7c7b827b82838180828485838686723761878c89898584868c878489868a8b8e8c8f8e91
8f8f8c9393949ec7f8f6e7eaf6fbfafefefefdfdfdfcf5d89da2a2968f878b9087868381
826c3b7d83837c82817b797a7b81807f807b817c8283807a76767e7e7d7d807857757881
80807f7f7a847e827e7e81848585828082808383807e84818075577e827e7f857a7b7f84
827f85807d7b82808780808182827d7e7a81776621717f7d8284818281857d837c858585
80818486888b91aab8c1f3f6ecb2777a7576706d6d6c
38414345443a1a0d363f464d4c504d534d4e565d5e5d605d5f6061606366666463675d4f
606868686c6b686a6c6b6d6e6c7170716f6f7170737373737574716a4f155d7372716d72
7371707273767777757776767779757679777c76716b58797b767d7c747677777b7d787b
7a7d7f7a817e827d7d82818381827439618a8685858a848589878585858b86858c868c8c
8989898b8e9297bcf8ecc0b6c2ced4e8f3f7fbfbfbfdfef1c9d6d8c3b29aa8a58d858483
846f3f7c8182828482827d7e7b847d807a787e7d78797d80817d7f7a7c7c8176577b7d82
8580817c7b7e8183818087848182838380848484848482847d77537c8484828480858484
83848484837c8184868a87827e847c7981867a6728768283858681838584848582838487
84848b8b96a7bee4f4f2ead7bd72747978736f6b6a6b
413e3c3e4339180e37414c464b4c4f52545358585b5d615c5f6161606765646264685b4e
5e6a6b6a6d6b6a6d6c6a6f6f6a6f7272726f72717774737472726d69531a5e726e6e6e76
787676787573757572737374757473777a747a74716a59797b757778767777767a7b7b7a
7c7e7d7f7d7c7f787e817c817e8273375c8587818587878885888083828785858c8a8a87
8d8b8b8a898d94abeedc8e94989fa7b8c0c7cfd7e8f6f8f8eff9f9f4e0b3d8c7a1978b88
8974437d7c7d84827c817d817e84807d807d817d807d7d837d7d8280818585785f7a817f
8281837e7a838686888588867e8384838183858786847f817c77558384837f8283838384
84828382828083837e8582838584828285847e672e7587868a8780868587858585858588
8b96b2a9bdddf0f7f6e5ba988467747976716e706e69
393b4444463f1a103d45424a4a48514e53545557555a5e5d60605c61666463625e635a4a
5c696a686a68686c6d6c6f6e6c6c70706f7072707471737271736c6b521b617475747675
75717378746f7474727478777975727677757777726857787a767a7b7c777579797e7b7a
7b797b8181817d7a817f7b7c80816e3c587f8587868484878a888184868a868b868a8586
888a88858888939dcbb3698d8e8f8f9797979aa5b8c8d5f1f7f0f4f9f3d5ede7d8c3a8aa
a27d4c8388848a85848180807e7f82807c82847f7c7d82828483828485878378627c8285
807e7c828084878688848585858587858484858a8b85818785774f83868785808087858a
8b8987888c858684848a87858b8583858885826e33768b888b8a858a8b8d8988898c8b8d
91aee8deebf7f2ddccb58d84786b777773716f706c6b
403a3c413d381b103a3a3944454a474f4e54545358585d5c5b5e5e60625f63625e615e4c
6166666669686a6d706d6f6d6d706e6d71747472776f6e6f706d6e694c1c6075706f7074
717375747470757676787878767876797576787e7565537977797c797c78797c7e7d7b7c
7b777a7c757a7a7b797b7e807a8169365c8483817f7d8583898585858383858b89888784
8788898683868b919c8f778b8b8c8d918f8e8c8f9099a6cde3c9cee6f9f9fbfdfaefe5f0
d282578c8c8a85858a848380837d848482837e838084838184848485847f7c74657e8886
807e8286868488868781848687898a858687868a8d84898d887955878a8a8687888b858b
8b8484898f878b8b8b8c8d878a8a89878889856c347a8b8a8c8b8a8d8c8d8c8c8d8e9094
a1bffcfcfcf6d4a29189847e746b7575747173706a6f
3b3b3b3b3b3b1d123c393b4548453e49504e505859585f605d5b5d60636062656162604f
636667676b6b6d6e71706f6e6f716e6e6e756f71706e6f706e6e70704e1e577272737677
6f737575727576777675747776797a7c7673747c78634b7476767977767b7c797c79797a
79797a7c78787d7e7d80817e7c806635588284847e7c8180858583868384868684898686
888a87868486898a887459878a8b8b8c8b8f8a878b8f93a0b19ba0b9ddedf9f4fbfefdfb
e19b6f9499988a8b8a8783808583807f838383827e8481827f83808588847f766c7b8688
838386868786878a8c87888989888a86898c8a8a88888889847658898f888b8d888b8b8b
8d8b878a8a898a848a89868d8b8a8a878b8c89723d7b8c8f8d8f8e908f8f94959394a2bf
d4dffcf8f4e2a4888685827d7968707374726e6e6d68
3034353637381d0d30393d49464b4851534e4f5556575c5e5e5a5f626463646364645f50
5f686a6a6b6a6d6d706e6f7070707170717271716f717572746e6e6d5022597375737676
757478767875727274797273767a7f7c7872757b77624d777b767779767e797b78797a77
7b7c777a7b7b7c7c7d787c7b807a643455807d7e7d84857e838683868484868581848585
84848787858788867f643d8486878488888a8988898a8b8b8f8e9096a4bad7d0ebf4f3f3
f5d699b6cbcd978d8b88888485837e7c83827e7d80837d7c7f83838089848176687b8682
82848589888a91a19f938d8f919f9b8a8d8e918d878689878577578a8e89888a8a87878b
8c8e8f8d95998d898e8a888a878c8b8d8f8e8a7548859192928f93929cb6bdc8c0b8d4ed
f8f4decac5b68d827d807c7a72676d74716f706d6e6a
31373a3537321d0f324037404444474e4d484e5050575c5b575b5b5d6061605f62625d51
5a656769696869686a6c6d706c6b6d6f6c6e6d6e6f6d6e6d716e6b6c512252726d6d7273
75707572746f6d6d70717274747777717473767673625177767272726d76707471737372
746f6d7071716d6e6c6a6d6c6a6e65404f767474727b7f787c777675787a7e837f818180
7a7d7f7a797a7a77745c4374757673747573737170717272736f6f74787b8489a3b3b3bd
d8f1eeecf6edbe90837d7f7b78807e787c7a777a7674736e6e6f7170706e6e686469696a
6c6c6b6d6e728fc9b6857a849fc4af767a7d8798887d7d8486786481828080848984868a
908b89a0d5d48b8584858b7c7b7e8b9ca1797887aab29aae93a6c4bdafe5ebf1e6e6f4f3
efd188736d68655d5c5b5a5a5c5e707776716f6e6969
2d33383b3a34181030343437373b3b3c38393b3f3f3f393a36393839383236333236393c
363638393c393d3e3f43474848484b4c4e504f52535a5556585a545244324c5046483a38
37303432312a2c2c2b2a2626272d2f2a3033333237414a4545404349474f4f5053595e60
5e5b585a58575558554e4a48413f46564e2f2a2823201e191a1c2a2522292a3031363a3b
393f454c5252525a5f62585f6564646469666a6666696862635f5e61625d5a5c605d5d6b
88d0effaf9ebb3775a4f4c41454344404a4d4b505152575a5b595b62666a686b6b6e6c6b
72727074798bbeebd19791adc9e1c891989ba3c7a98c8e9898828181807270787d6b6f87
b58a688fcfd198c2bca6c98c898fa3d4c88797b9e9e5cfe5d7e1f1ede1f8fcfaf5f3e1cf
c69d67645e54524b48413f3e46587278776f6c6f6d6a
2a2c2f3431312c1a080505070c16181c1e21272b33333538383f4242413f3e3b3c413f3c
393b3a38363133323030322f2c2c2f30312f2f3036393b414242454c463a50595b5a5d61
625f5e65625d6064605d595c5d5a5b58555455544f504953554e4d5352545957585a5d5f
615e5e5f6062656667696e6d6a6b5d464970737578777675787672727579727572727274
72727170746e6c73705f45727575747777787c797c7f807e7b7c8085838386888c85868b
8c99b5e3e9edf8ecd2a19990898b8886868688847f8182838380807e7f7e827d757b8284
898d9ab7c7d4f5f8edd9dbf3f7faf4ecf3f4f5fcf7f0f5faefc9afecf5ede6ebedd3c2e0
f2d8b9e1f5f3e9f8f6f2f3e6eaeae8f5edd4e5f0fafaf6fbfcfafbfbfafbfbf5f1dbb29d
988983878a83817c7e7d787a766d6b7374756f6f6f6d
303233322e301d102b303938383b3e3d42454745494c4f50505356595b5c5c5a5d5c5a53
5967686966656868696b6c6c6b6b6d706f6e6f6e716f7273727471694c24577171716e71
717171757470727273757172727273727571727771604e747575747776777877787a7778
7878787773767674787a787777756239447a7c77767776787a787677797b78807c797c7e
7e7d817e81817e7b7a56367e7e838385828281838688888885858588868c898889898485
87837fa1a9c7fcfbf6d8b6a2938f8f8e89888883858b898b8e898c88868388817a868f93
9cabcfedf7f8fffdfafbfafbfbfdfdfbf9f5f0f0f9f8f8fdfbf6f0fafbfdfdfefef8f3f8
fcf0e3fdfbf8fbfdfbfdfefcfdfdfbfbfbf9fcf3dbe9f9f3e0e2d9d0e4d6dcc5baac968c
848784838682817f80807d7d7a6e6876737370716d6c
2c2d3032332e1b0e29353d43424645464a4d4e4c4d52585955585b5d5e65646062626058
5e676867686b6c6c6a6c6b6c6d6d6c6f6d70716e716f7272706f6f6e4e20556d72787b76
767672727572707375767678777777767675787772614c757576787a7775787879787776
7777777678777578777477777775653940777c7a7d7f7c7d7b7e78787a787a7f807d7778
797e7e7d8381817f7d67557e7d7f808583827f8186878383858385888588888685888585
888279949dbce9edf8faf4d79b9795908d8c8a88868786878c8b89898c878b8c87a0bacb
d2e0f3fcfcf3edfbfbfceddff5f2e8dbd0c9c3c1d3d4d7e5eae8d6dfdeebf2f4f3f4fbfb
fbfbfbfdf9f2f9f1f1f9f5fcf8f4f4f8f6f7edc396adceceadada29ea9a3a6978e8c8d8c
847e818183837f8180807f77756b6876727173716c69
28262a2f302e170e2730353c3d43444546474d4f5056595c58595a5c6163616466656056
5b6865666a6e6d6d6c6b6b6c696c6c696a707374716e707070716f6e4f2b547573706d72
7373727276767476787373737479787673777974725d4873737577787673787878787575
757b79797976797d7879797679746039427b7577767c7e7a7576797876787e7d79777579
7d7a7c82807d7d7d786a627f7d7c7e8584838282838281828584878886848386858b8986
827c758c919cacc6f4fdf9e0ad9b928e8d908a89888b8e8f8d898e8f8e8e8e8fa4deedf6
f8fbfdfbf1d5c3dee8e1c0b2cac3b3a79896929498989eabb2a5779d9ea9bbc6c2c3dee0
e1f4f7e8dbbdb9a8abbec5e0c4b4bfc6b4b1ac89617d9c9e92938d8a8d8d8a88888a8b89
8481837e8086838381807b78746b66777472726f6e6e
2d2d2d2b312f1b0c263b3b3e43484b4a484b4a5052565759595a5b5a6264636568645e55
5b6867686a6a6d6e6b6a6d6e6d6b6a6b6f736f73736f6e6e70716f6b4e275676726f7471
706e7375747576767772737777787674757c7673725d4a717373747579797779797a7576
797b7b7979787676787874767875653c417c7878787677797578787878797d7a7b777b7d
797a7b7c7c78797c725a457d7c7c80848480868384828285827e83868386838487898783
837f75898e919bb2ddf6faf5e0b69b908d94918e8c8f8e8c8c8d8f8f91959495b1f7fdfc
f9f6e8cdc1a89ea9b2ad9a97989591918f8d8d8f91918f9591795a8d9091939591979998
a8ccdba09792918f9291949c9593969794938f7751708d8e8e8a8b8c8b8a848888898987
868888827f868281807c7878756a61757475706f6f6e
2c323734332b190e2735363b4446484443444a4e535553575a5b5e5d6163626364625e55
5b6867696a6b6b6d6b6b6e6f6d706f6e6e6e6d70726f6f7170716d6a4e234e7371717371
727172747375757373757b787676757779787773705a4a73737475757678787677787675
7774747678777877767674787a7a673e3f767778757378757876797c7777787779757578
797b79797978777872513a7a7b7f80808182868484838385817e81858386858384858582
848177888e919396add1eaf9f8dfb08f888c8d90908e8d8c8f8e92929199acc3d4f4e9d8
ced4bca09b94919191909090908e8e8e8d8c8d8f919092958e7150878d8f8d8d8d918d91
96b3c795918c888c88878b8b8d8e8d898d8d8d78546c8a8e8f8a8d8c88898586888a8889
888887838283847f7d7d7a75736c6577777370707071
2a2c2f31302a160d2739383d3e4241454345494c505051555a5a5a5e6262636263636255
5767686a6a6c6c6c6b6c6b6b6b706f6e6f6e6d70706f6d7072706f6b4d27507678767675
7576736f727474747574747472757473747474747056467272757a787474767473767577
7678747578777678797877787774653e407678747375767777787473747473777979787a
767b7b7c797b797a756259777b817e7f7f8083837e7e8282828081848386838284888585
847f78858b8d8c8f939fbbe7f9f8e2b08f8c8e90908f8f8e8f9194949ab0d7eff2e7c2aa
a0a19991908e8f8d8b898b8a8b8b89898b8a888b8e8c898c86684c858c8f8c8c888c8c8e
8f8f8f8c8a888b8c8c8b8b8a8686878a8d8a87714d62878a8c888b8b8989858786878888
87888982848483807c7d797d796f6378757475756f6d
292a30332d2d1f0e2b424043423f43454742494f4951565a5b5a5c5f6364656062636051
5266686b6b6c6d6c6e6e6d696a6d7070706f6f707271717071706c6344244e7271727470
6e6e7473737173757274737371737371707274716d5547727377787b7674767576767578
7a787575777a7877797676797a74683f3c76787676777274777072727474747677797779
787876797676777b74625976787c7a7e7e7e7f7d797b8082807e818282817f8086888684
817d7a84898b8d8f8e9099b8ebfbf6d09792918e8c8e908d8e919194a7d0f4f9e8bd9f97
918e8d8b8b888b8a8988888587878787858485898d8b8a88816044828b8a868685858b8b
8c8c8d8c8c8b8b8b8a898585878889898d8d8975505f878a8a8586898b89888b88858684
84898a848484848580807e7f7a6c657c79777576736e
292e2a2c2d281d0f2738413e403f41484b4b4b4e4f525b5b585a5b5e6362626363635f51
5166696a6d6e6c6b6d6d706e6e706e6e706e6d6e7171706e6f7470674a2b4d7370717174
71767675737272777674737372737574747578786f544571727479777574757573757579
787576767677757276787776767063403f7678787979797a797575747478717273757473
75777374777676766e52417575777b7d7c7d7a7a7a7e80807c7d7d807f7e808083848381
807f788087888a8a909396a4bbccd9d5999093918f8e92929292949bb8e9fbf4ce999490
90918e8a8a8a898a888a888586868788858283868787878a8560417d888a87868784888b
8c8b8a8a87868586868589888c8a8a8989898773505b878d8b84878d8b87868587888787
888a8b86848386838281807f796a647b797675757270
272b2b2e2b2b170a21383f454443434549484c4f5153575c5a5b5d5e6162636765656056
576c6b6b6f706e6e6e6d6d6e7171706f71717171716f70757371706849294d7571717275
75737677757174767673747574737274757677786e4f4172747579757375767777767779
7677767675777874787575737772613e3c76797876747475787874757474767777737275
71707177797374736b4c3e75767a7a7c797c7b7e7c7d7a7c7c7d7a7a7b7f838282888483
837c747b87898b8b8c8d8f9094a2c2dfab8b8e918f8f8e8f9090939bbbeff8e0ae8a8f8e
8f8d8a878a8c8986838789868587868685868686888a8789875f3f7c8586878786848687
8a8e8c8486878b8c8c8d8a8d898a8d8b8b8b89745056878a8984868d8b8886858688888a
8a8988848482837e8182827f7868607a7b7871716e6d
2a28262d312c180d2333383e44464342454b4f5553505659595e61626362626567656155
586c6d6b6e6d6e6f6e706d6d707071716e6e6f736f6f71727475746c4b2a4e7675747977
75757171717070737573757576767576767376766f4c4175757476777676797b79767979
77797a7a787877777675747476705e3b3b74777677767371757475767575747574757275
72747574767575736f646075747779797a7b7b7d787677777b7a7b7b8080807f82888684
7d78737b7f808b8b8d90918f939ac2efce9892918f8e8f92929598a5c7ebd4b591859091
8e8a8b8b8c8b8983818787838184868584848586858685877f593d7a8686848685838183
838689858081858382838386858a88898e8b89734f538b8d8e898a8a8985898786898a87
8784807c828484818080828079645d76797875737171
2b2b3032322b16091e323e484544434140474c54515255575c5d60606061626566656155
566c6c6c6d6d6e6c6e71706f706f706f6d7171716d6f6d6f7474726c4d2d4e7271717275
76727575717473737172727175797775747678766f4f417474737575777a7c7b76767877
7979797775757575757676777771613b3a73737472707272747674717474737475737470
7174706f747371716d5a53747372757878797978747577787776787a7e807d7f80838485
7f7a747d84858886868c8e8b8c92abdfe2b398949391949796979ab0d7dbae9a89848c8d
908f8c8d8d888481848885807e828382818181848584848379534179878281818385888a
8683848684888a8584878a8d88898a898a8785734e5588888984858986848887868a8786
8383807f84868684817e8280785e5376787775747070
2b2e2d2e2e2a160a203743484a4a454649484a514f51565a5c5a5f5e5f61656461636255
546d6e6d6c6c6d6e70706f7070717172737272747474727070717169492d50716f707574
7575767775747373727370707175777774757a78704c40767774747475787b7874757775
757877747171747472757576787261414178787774717171757574727874747171747572
71726e7274727172694d4674737374767677767471757779787878777e7f7c7e80808081
7c7670798586868687868c8d8c92a2d1f3d0a2949390929497979ebbdec49990857d8b8f
908e8b8b89878482878280828384848181808182838684847d56407a8884827e7e838586
868786888786828486838487888886858785867551548889888383878485878487888886
83868486858783817c7d7d7e775d527879787673736f
282729292c2c1b07213e3a3d404244454a4e4d4f515557585a5b5b5d5f61616361615e50
526b6d6b6c6b6b6d6f6e6e716e7172727272716f7172716e707676704a2b4d7272747878
72737374757573747577777572737879787678776e4c4475777476757474757575747275
7575747473757677737573757574623e3f7474747373707072717272757271727474716f
6e6d6d7173716e6f68504b71727374777873737271737678797c7a797c7b7d7d7b7b7a7c
7e76717984858488888686898c8d94b0d9d6aa97928e8d8d9199aacee2b6948d817b8e8c
8b8a8a8a8887838284817f8384858282817d7e80808484857b553e738483818182838383
82858283828588898a8c8d8987858988888785744d4c8387878582848586848589898984
81858484848684807d7d7c8078594f79787775737170
2623272b2926160c253a3c423e3f4342424242474d535757575a60626564605f62615c4f
536b6a696b6c6b6c6f6f6d6f6e70717072736f6d6f6f70727374746c4b2f4f7174777470
71737776727374747272737574727373757775726a48447276767675737574757576787a
7675747575747474727574747674623f40777574706e70716e6d7070707373737476756c
6e7072727170706b69615f6f6f7174767471727273767879767978757777797c797c7b7d
7c75737a8387888988888688898b8fa1ceebc9a49592919298a8cde8cf9e948d7c778b8b
8b8b8a8b8b8783838485858281827f827f7b7f807e7d7e817a57417081838181827c7c7a
7e8583858983818484898b8984848488888585744c4b8389898785858887858586868681
8081848484868482817d7c8178554f7c7a7877767272
282b2c2d2e2c1b102c44454444464540424047494d4f5156595b60616463636262636051
546b6b686a6b6b6a6e6e6c6d6d6d6f6f6f706f6e6f717172736e6e6b4b334e6e73757474
746f726f727175747271727272727372757674736b474173767675747476787674787a79
7675747273737372737576787371603c3e727574716e6c6f6f707273757575726f737471
70727574716e6c6c6853506d6d6f73747272737375757678737678777776777b7a7a7b7a
7b767177828587848788898985898f9ec9fbf0c59492929399b0d8e7bd91908a7872898d
8c8b8c8b8a8687888787858281807e7f807c7a7b7f797b807856406b7e817c7c7e7e8382
83828484848384838489878586888884858684734a47808889868486878a898684858582
8081807f83818082817d807f76544d7a797676777272
25272a292721140a20363a3d3d4345413e3c41484c4f525857575d626466666565655f4e
506a69686c6d6a6a6c6c6e6f6c6c707270707070717170707272726a472e527373757773
7171737571717271717276767471747376747373684541737573757473767a7975747374
747273747574767573726f70726f623c3d74737471706f6f71737172727171707372716f
6e72737470706f6f6647446e6c7071737373737375737172747678797673747476767578
766e6c707a7f8382837f818686888e97c1f2f2cd9d95949499b1d3cea192938a766f858a
8a8988878687888787848180807d7e7f7e7d787a7b7877797454436a777977787d7d7f80
7c7b7f85868587858281838384858689898785754d487f87837d7f848789878383848380
7d7f7d7d7b79787c797979766e545176757475707071
282c2d2d3128160d21343c414644434141424c4c474e575959575a5f6163646365655c49
4a6565646769696a6a696968696d6d6d6c6c6c6c6c6a6c6c6c69676145304d6f74737673
6d6f7070707271706d6d71737270706f7173716f654342706f6e70706d70716f6e6a6a6d
6a646669696665646061615f5e61593d41696a6b6d6d6c6e6d6c6d6e6d6d6e6b6d6c6a66
65646768676665625b48455756585757575350504e4c4a4d5153534f5253565759595a5d
5f5f616566696c6d6e6e6d717574767f91b0d4c6927d7e7d8aaed1ae706a656666595254
5553514f4f55616d6658504f4e53575b5a58585b5d5f62625f5957626569666769676564
625f5d5955555857524c4a474544454944484a4e54544f47464545474a4c4b4f4f4f5053
55575a5b5a595a5d5d5f5c5c5a545d78747172716e6f
2a29252829281d121e262b30302d2d272221222627282a2a2b2b2a2c292a2a2e33363433
313332373b3d4044454748484b4d5153504f52555351535251504a47443d35302d2c2d2d
2722252424232123262526242727292d30333335383a3c4245484d5152575a585856585a
57565455534e4c47423f3a32302f33403b2122201e1b191a1a1d1e1d1e22252a2a2d3035
3a3c3d41424246494a4d4f514e52535453504e4a48454342413f3a373938353436333131
3439423f353a3c3c3b3d414750545964728cc3e0b68b8a96bde6e5b77e787773706c6b68
69676563616063696358524f4b4c4a4e4c4a4b4b4b494a4c4b4e5a57515457595b5e6060
5e62686c6a6b706e6d6d6e706f6d6d6e6f6d68655653676869666563605b595c5a595958
585c5d5d575656565958565756516077747473716c6a
2d2c292b2f2f2b1e1212171d181c262828282a313635363a3f424242403f403f41403d39
36373637393a3b3b3b393a393b3c40434344494c46454c53525255574a3d4a6061626766
62626565656462625f5b5d5c5d595557575653524e3e3e5355565859565c615f5c5c6264
6364646567696a68696a6c6e6f6f613f426b6c6e6e7074726f6d6d6d6c6a696462626364
615e5c6062626463594a4b656767696a6b6b6a6b6c6d6f6f6f6f6f6f73716f7173757373
7371696b75797d78787c818182858789909ebde3e6bfa9b4d4f4e2b48f8c898373738685
8484878687867b7877808380808081827e7b7d7e7e7d7b7e7152456a7d80818181808081
82848587898789868383828282818383828380734e487b868482838584807f7f7b808682
82848683807e7a7a797977796f4b4776747373726f6b
2c2d292a2e2a1b1122313337393b3d414346474a4c4c4e5457595d5e5e61656563645a47
4a65686b6c6b6b6c6b696d6e6e6f70717274757471707172747372664126497172727170
706e6e6f73716f7273727172747373767575727366424370717477767375767373757878
7574767574767572747576777773613b4372727173737171716c6b6f717271706f6e7072
70706d6d6e717271664a4d717170717273716f7273747575737374747373777978797a7a
75706a707a797c7c7a7d7e80858889878890a0cef3efeeeeedddb99f948f8b8372738987
8788898889888279767f847f7d7f8282817d7d7f7e7c7e8074564460787d8182827c7f83
807d82818285858382828485838282848585816e4d4d7e87838487898885818181838585
8687828182807d807b79787a6e47477475747473716d
302c2a262829190b1b2e3641454848484846494d5055575a5b5b5f616165686766655c46
4b696c6e6d6c6c6d6a6a6d706f70727373737270717071727371736c492d4c7474717272
757571717272737576767372737174777877757464404372727375757375747575787877
7677797674757675767678797878654142707171737573707272727473706f6e70757673
71717172716f70706b5c5e7170706f7272717173747373747475767673767979787c7d7c
7a766d717a77797d7f7f7c7d8486878a8d9098bbe7fdfdfaeecaa497928c8b8271738988
88868886868684807f8384818082817f817f7f807e7e7d7f755647657b7d7f82807e8285
85868381828483838281838382818485838484734c4a7e878486888a8984828385848382
8383808081807f7f7b76767968454671717677736c67
2e2b29292a291f16253b3e4042414043474b4c4d5155585a5a5b5e6062636566686a5e47
4e6c6d6c6b6b6c6d6f6e6f6f6f7074767473716f717371727171716b4b2e4d7373747878
7878747271777c78757274787876757578797674643f4774737473737376787a7a787878
7775777877767475757474767675663f4574737070737575737172747272717072717173
75747374737070726f66667170737272737272727271727475777574757777767676787b
7d766a6d787b7d7c7b7a7c7f7f818383878d93a8d8fbfdf6d9af98928e8d8d816e728b8b
89858484868687878787868785838282807f7e80807f8080775e4a617c7e7f8080828481
80838788858280828484858587858687888785754c487886868785858787838282848584
807f7e7e807e7f7f7b78797b6e464874727171706f6c
29292b2b2c29180b203d444242474746484a4d4e4f54575d5e5f5f61626363686c6d5f48
506d6d6c6c6e6d6d6e6e6e6f6f70737675747375747273767674746d4c304e7471717173
757675747374777776777675757575767777757466424a75767673737676777a79777878
777677787b7a7877787777777777663f4876797874737473737171707173767474737272
72717073727170716855576d6e727374716f6d70727271727378787676767a797675787a
7c776c6c78797d7c7a80807e7d8485858a8f93a1cbf4f6e9c39d9292918f897b666f8a89
8a898786878687878887858485848485837f7f81817e7e7d7457445d7d7e7e7e7e818281
8182848383838686848080858686898783868778514b7885868684838585858381828684
80818080817e7c797a7a797c6c414474727272716d69
2e2f2f2e2c2a190b1f364045423e3b3d41494e5052575c5f615f6163656565676a6c604a
546d6b6a6b6f6f6f6e6d6c6d7070717373737474737374777574726a4c334f7170747676
767371737375777573737374727173757678777565404974757675757677777777787a79
7878777778777675767977737272613f4b787b7976747371737371717373757473737272
7272717172706f6f664e546d6f707172726e6d7275747272727577767474767776777a7d
7c756c707d7c7e81817f7f7d7d80808387888e95a6b8b6ae9f938c8d8e8c887d686f8988
868685868684868786878685858383858584838383827f7c755b47617e7f808183858380
807f81827f808383828285858686888886858475504f7b85848585858583838481838681
7e8280818282807d7c7b7878694249767370716f6d6e
3232302e2e2a170e223d4448454142464649505354555a5d606063656567686968695f4d
576e6c6c6e6f6f6f706f6f717172727372707175757273757575756c4c334f7172737377
7b7a76777a7b7c7877797b7c777575767576777766414b757474767777757677797b7b7b
77777a787876787877787775747666424d7475767778767573726f6d7072737372727376
76757572717174726d62636e6e6c6d6f7170707176757072737473727173777877767879
76706871807e7e8182807e7e8082878786868a8c92969793908e8c8a8a8889806b718785
83838488888789898788898984818181807f7e808180807d755c445d7f80807d7e818485
8486878481838586858584888a878282848280734f4d798386868586858585848486867f
7b7e7e7d807e7e7e7975757568444b75757472717173
2d2c2b292a2b1a0e22383b4146424241454d505456595c5e5e5f626668696b6967685f49
536d6f6e70707070707173747272727172727273726f72737575756b492e4d7477797a77
767676767575767472747a7b797979777a79787967414e7876757677757678787a7d7c7c
797576787776787876747476777868434d76767677717274747373727275757474747375
767472727170726f685f626e706d6e717171707272706c6f707171717373767a79777775
746f666b797b7c7d7e81807c7b818687868386868a8b8b8d8a88898b8a87887e64698282
83848386878688858687878782818180807f7f7e7e7e7f7f765d43577a7e8080807f8085
84838587878485898684848384817e83868382744f4d778486858585858582828485827e
797b7c7f7e7877767676757464424a706f6e6f72716e
2f2f30312f291812263b3c40474746464951515154585b5d5f6264646465696a68675c46
516e70706f70707072737471707071707173737270707173747270694a35577b79777572
747a7977757475767675777b7d7c78767678777866404d767576787876787a78797d7e7c
787676777876797775737476767866415178777675757374747370707275767775737273
727071717272717067555c7171706f7172706e71706e6b6b6d6f71747675737778777574
756e6469797a79787b7e7e7f7e7f828485858383888a8b8c8a878585888887795e668386
868585858685848384858584807e8183828181817d7d807f775c415a7f82828486828383
8283868a868788868284868686838283828486744f4c748180817e81817f7e7e8180817e
797a7a7b7977787576746f7161404a73726f6e706f6a
282e2f2e2e2a1b1124393c42474946474c4f4f50555a5e606362636466696b6b6b6c5f47
526f706e70707070727373727270717372717473717474757474756c4c36547778767574
76797a79797775767776787a7e7e7d797677777a66424f75777a7a7976777676797c7d7c
787876777879787877797877787a66445277767675737476787673737575767879767271
73737273747372726b5a5e717170717373716e6f726f6e70707172737676767979787573
726d64687a7c7d7d7a7e7f7b7f80808085868384888988888985828386888a795c678787
84878682838583848584858485818283817f7b7d7e81817f785d425b7f80828282818382
818283827d7d838585838183807d7d82818081734c49707f7c7d81817f7d7a7a7b7d7d7c
7a7878747374747374716f7062414c71706d6c6b6967
2f303033352d1c12233a464c4a44474d4f535050555c61615f606265686c6c6a6a6b5f48
5471707171726f6d70727271727171706f707172717374737273736a4a33537774757a7c
797b7f7b76767576767877797b7d7d7c7877777a68445278787a7c7c7a7879797a79797a
797878797a7a7a7a797879787677634558787a7975787b7a797773737373797a78767476
77757473727273726e696a6e6e71727273706f6f6f707074747172757575777877757678
756e646a7a7b797a7d80808182818181848889868586868686878885808487785b688886
87878584848583828282838482818180807e7c7b7c7d7e7d7861485e8182828280808380
80858784808182818283858385828081817d796a4a496d7b7c7c7e81817e7b787b7c7b7a
7a79787775757372737373705f414c6e6e6c6e6e6c69
2e3134322f291e18283b454c4d4f4e4c4c4e4f51555a5e616161626364696b6b6a6a5c45
5471707274737170707073737273747373737473717375777574756c4c38577675767676
7577797978777877757a7d7c797578787677797968435477787c7f7d7b797a7a78787a7a
7b78777978777a7c7c7b797878796544557a7879797474797a7877757373747474727172
747674757372706e6b64686d6f727170706f6f6e6e6f7274747371737575777a77767677
766e616a797b7d7a797c7e81818081817f7f838483868483817f81818183857559698886
86898683838382828281838381807d7e7f807d7d7c7b7e807a61455b7e8180807f808380
7e808084858484838283848384848384807c7b6c4b4b6c797a797d7f7e7c7b7b7d7a7777
7676787675767676726f6e6f5e3f4f71716e6c6c6a64
3331302e2d2b20152b40434446484a4e4d4d545654575e62616365656668676868685c45
55707070727272706f6f716f707171727475747876747676777673694b37577674757a7d
7b7877757576767675787a7a7a7877787979797a64415379797d7d7c797b7c7979777a7e
7d7b787778797a7f807d7977797b66485c7b7c7c78777877787876767978757572707376
76757677787673736b60626d71737272716f6f6f70717174777773737778787a79797775
766e61687576797c797a7e7c7d7f81828082848687878685858787838384826f53668786
8587858484828385828182838281808081817e7f7c7c7e7f785d3f577d7e7f83837e7c7f
81817f7f8586848282807d7e7d7e7e7c7c7d7c6c49486a797b7a7c7c7c7b797978787775
7577777674747674726f706f5e3f4d6c6c6d6c6a6561
36342f2e2d271b172c3c42484b4e4f4f4a4d565a5a5b5e61626363656868676767695b47
59706f6f6f707171707072737172707175777777757374757677756f4f37537375777878
797c7a7879787b7d79787a7b7a7c7c79777877786242567a7a7b7a7a7c7f7e7d7b787b7e
7f7c79787a7a77787b7b7a78777865455a7c7b7a7a7b7b78777779797877787b79757578
797a7775767877756d62666f7072737372707071747473767a7675757576777778777675
756f646e7b7b7c7a787a7a787c807d7f8484848180848485848282828186836b4e658788
8585838385858483817f7f838583817f7f7f8083807c7e7e795d415b7e8081818382817f
8082838284848281807d7d7d7a787c7b7c7d7c6c4847677677787a787878787875777877
7577797675757473727173736045516b6a6b69696663
2f302d292b2c1e173045494a4a4e525353515659585a5d6165656768686a6c6b6d6d5e4a
5a71706f6f707272717172737472717275767774737676767777756d4d38577678787879
7a767274787b7c7c7d7b7b7b7b7c7c7c7a79797a6444587b7a7a7b7a7a7e80807d7b7d7f
7d7a787a7a7a77787d7c7878797962455b7d7e7b797a7f7f7e7a797d7e7d7d7b78757476
7777767677777674726d6f71727577777473737475727278797674737677777a7b777676
756d6168767a7c7c7f807e7d797980868584848583828181818383828284826e4f648687
848486888585838182838284858582817f7f8082827e7e807a5c3e577a7d808080807e80
818182818180818181807d7a7b7b7e7e7b7b7c6b4948697676777777757677797a787778
7776777675737474716f6f716047556e6b6867666363
30333331333020182b3f454b4e4e50535454565b5c5e646563656769686a6c71716f5e46
577372717173727272747272737373737374757473767a7a7a78776f4f395a7775767778
78767876797b7c7b7879797b7b7e807d7a797c7d65455c7c7b7c7c79797d7f7e7d7e7e7d
7c7b78787b7b797878787a7c7a7860435877777677787e7e78767676797b7b7977787876
7776797876757474706b6f75747476787878787775727376747476767776767878757579
796f5f68777a7d7e7d8082807f7f81807d7e82807e808183828180838483816d4f668485
84858787848586848485858385858382838383827f7f807f7c5f4259797d7f8180808383
8484827a7a8082808181807b7a7d7c7b7878786749496d7c79787a797877767779777577
7875737374737375716f6f6e5f4751696a6968686661
2f2d2d3233302119293e464c4f5251515153565d5f6064676465696a6b6d6d6f6f6e5b41
5571737373737373737472737577787574757574767878757678776e4b385a7c7c797879
797877777a7b7c817f7b7a7a7a7b7a7a7b7c7e7d65465e79797d807d7d7e7c7d7b7a7a79
7a7878797a7a7c7d7a787a7d7c7a61435b7d7d7a7b7c79797a79767b7e7e7a7c7d7a7775
76797775767475736c646871717071747576757373747674727274757677757677737375
776e5f697b7c7e7e7a7b7e7c7a79767d81807c7c7e807e7f82807e81807f816c4a608384
8484858483838484828180818283828180838283817d7c7f7f63445a7b7e7c7b7c808380
7f8486827e7e7f7d7f817d7a7a79787a79787c6d4c4a6978787779797876757576787876
7471707272717172706e6d6c5c48546b6b6a6b6b6964
2c2e2f2f322f211d35454a4d4f5252505153575a5b5e6365636265686968696a6b6c5943
566d6d6f706f6d6d6e6e6c69686a696968696a6b6c6d6e6d6f71746c4f3c57717174797c
797776767776787977767676747473747373716e5d48596d6d6f706f6e6e6b6a6a696768
6a6a6868696967666a69666868675b49576c7073716d6e72747372737575737374706f71
70716e6c6a69676563605f5e58585b5b565354535356585453545454565857585a5c5c5f
61605a5f666a6d6f6f6c6c6d717273706d6d6e6b6a6d6e6c6b6b6a676363645d5352585c
5b5b57565857595a5756555454585b5b5a5b5f5f5f60626464574a5866666669696c6d6d
6e707474706d6a69666361606060605f615f59534f515353505151534f4d4c4a4a4c4d4d
4a48484a4b4b4d4e4d4f4e4e494b5d6d6a6968696764
343336373637332420242326292a2a28282a2a2b2c2e2f2d2a292f323331323537393c3b
4046494c505352535656595859585552505251504f4e4b46443f3c3c4142312223222023
22242624202125282a303335363a4045464b4b4b4d51555c5e605f5d5f62615f5d5c5d5c
5c5a57534f4e4946443f3c3630313e4a39272523201e1c21282c2b2a2b3337393c3e4247
4c505455595c5e5c595d5e5b59595b5a54504f4f5154514b494845423e3d3c3a36343536
343d4a453a3839363638393a393a3f4143464c4e4f56585a5e5f6162626569635d606564
6363625f5d5c5d5b585958534c4d4e4b4947474643404043454d5651413a3d3e3c3a3c43
4444474a48474c4e4c4e5456595c5c5c5e5f5e5b575a5d5c5d5d5d5c5a575653504e4c49
4a4844403f3d3b3b373632303549616c6c6b6b696765
343534343639312b313a3d3f44484d515353545351515253504d51514f4d4b4b4a4a453f
444c4e4e5052535556575a5d6262606162626464686b6c6c6e6d6f6d53445d7578767374
757573726f6e706f6c69686967676969686968685c4f5f6f6f717170727474737374787a
77757577797b797a7a7b7c7a7675604a617978787a7b7c7e7e7977787674737272727070
7171716f6e6e6f6e6b666b6f706f7273706c6d6f73737172737576757474767776747475
756d606b797e82817f7e7d7e7e7e7d7a7c7f807a78797b7a7a797b7b7c7c7c684f627b7e
7f7f7f81817f7f80848485828181828181828386858481817f62435c7c8185848284817f
80838584817c7d7f817e7b7877767a7b7a767569504e6572747676767371727374747373
74757470706f6e6d6c6b6a695f515d6b6c6a6a696765
3335383e413c2c273e525555565a5c5b5d6162656668696c6b6b6e6f6f6e6f7071725c48
5c7274747677757576787a7b7b7673757678797b7b7b7a797976766f4f3f637d7f7f7f7f
8081828381818082818080828180818584818080684a6480828180848483828283848485
828081838485838282828483807c644b637e7d7d817b7a7d80818282807d7c7b7c7d7f82
807d7b7c7f7e7977726d73797b7d7f7f7c7b7b7a7a797a7a7878767676777a7c7c7a7a7b
7c70626f7c7d7d7e7e7f807d7e7e7c7e82838485878583827f7f81828586836a4f688385
8686858586858688888686898986848486898a8a8b88868481624560828684807f828585
86898b88837f7f7e7c7d8082817f7e7e7c79786b4f4d697c7e7c7b7a7c79777878797979
7777757374737272716f6f6d5f525e6c6c6c6d696463
3337383c4546363047565a5d5d5e616668686b6b6e6f7070707072737273747475755e4a
6076797b7a7a79797b7b7c7e7a78787978797d7e7c7c7d7f80817c73534569827f818282
817f8180807e8085868683828383838382807f81674b6581818183848384848584858888
858383858789878887868485858268536c81808082828081807e828281817e7a7b7d7f81
81807e7c7e7e7c7c7875797e7f7d7e817d7d7d7d797b7f817e7b7c7a7a7c7d7d7a767a7e
7e6856687b7d80848281828282838281848482818283827f828485858584856b4c668483
85858485898a898a8a888889898987878989898a8a8a8987856a4b628287868486878687
89888683828283817f81817f7e8082827e7f806f4f4a697f817d7b7a7b7b7a79787a7a79
7675767575767474716f6f6e63575f6c6d6a6765625f
32373f474d4d3d394f616668686b6d6e6f70727272717274757777767677777676786351
65787c7f7d7c7e7f807e7e7c7a7c81837d7e838380828281817e7d765443657f81828183
868887858483838586838688878687868382818168506d85828385848183868785868889
868686878b8d8a898b8a8785848268506a84858486858583818384818183858483827e7e
7c7c80817f7f7c7c7c797a7f7e7b7d817e7f807d7b7c80818180817e7c80817f7f7d7c7e
7f6e5e707e7d808283817f7f828182838689888787888986868788858383856a4e688584
848484888a8c8c8e8d8b8a8a8a8b8d8b88898c8d8e8d8d8b876a4e6787898886888a8b89
8483848483858786828181838483838483848272544f6b7e817f7b7a7c7c7b7b7a7a7c7d
7b7979777677777674716e6e665f666e6d6967696661
393e484e5050443e52646669696a707173767676767d7e7c7b7b7a787a7a79797b7c6655
6c7e7d7e7d7e7f80818181828082848481818384858385858481837b55446a8182868887
8886858585898c8a888787888b8d8c8a888989886e54718987898a878486888a8a898a8b
8a8b8b8c8e8e8d8e8f8b87898d8a6d5670858486878585837e8084878481848885818183
81818484828282848279777f818385848385827f80828282808282828182848686848281
8370617386898a8b8a89878482828686898f908d89888786898b8b898584866c506b8888
8886878a8c8e8e8d8e8c8c8c8b8b8e8e8d8c8c90908f918f8a6a4f6b898b8a8a8b8a8787
898a8d8f8b8585888784838889828184868482755a50697f8382807f7d7b7a7d80808182
827d7b7b78777877747473706860666d6a6868686663
3d424951565349475d6b717477787a7e7e7d7f8182828583807f808081808180817f6859
6f7f7d8081807d7c8184858586858385878788878887868685858378574b708986868684
878a8988898b8b8a898989888c8f8f8f8c8d8c8c725d758b8c8e8e8b8a8c8e8d8d8d8d8c
8c8c8f8f8f908e91938f8a898b8a705a73898b8a8886868687878b8d8887888887858688
87868687868787888179788389898a8a8887868687868584848587888987868788888686
887868798a8e8f908f929697938d8b8a888a8c8d8e8b8b8c8f8f8e8c8c8b8d73586f878b
8d8c8d8f8f8e8d8e9091909090909293919092939292938f8b70546c888b8a8b8e8e8f8f
8e8a89898988898a89868685837f808281848476584c6a828180828382828181817f8082
83817d7d79777677757574726a6366696a6a67666664
3b404c52555952516372797e7e7d7f838485878a8b8b8c8c8b8a8a898686868684836c5f
748484878888878584878a8a89898787878a8c8b888788898887898262557388898c8e8e
8e8e8e8e8c8c8c8f8f8e8e8e8e919293939291937a657c8e909191929193929291929393
908f919193959696989692929392755f76898a8b8b8b8c8d8d8f91908f949b9a96908d8d
8c8a8a8b89898b8d8b84838d9b9f968e8e8e8b8e94928c8b8c8f92908f90949495969393
988873808d8b8b8d8c8e9193908b88898d909191908e8c8d8f8f8d8d8e90937861798e91
9290919493929393949596949596969897989c9a9b9f9f9893795e738f928e8b8f949594
93949a97928d8d8c8b8b8b8a898584888b8b8a7e5f547288878583858585848483808284
858381817f7d7b7b787774736b656a6f6b686665635f
3a4650565b5b585f70777b8185878b8b90949393929496999c9a96938f8d8a8a8c8a776c
82999d958e8d8d8d8b8e8f959f9b9089898c8e8f8e8e9091939292896355788d8e909191
919596929295989a99969798969aa4aeb4b0a2a0907b8a9799a2a6a3a09b9c9ea1a9b4b0
9b929495979a9b9ca3a3a1a09d977e6d81969999999a98959492949292abd2d0af979499
958e8e9ba29a9495949495a7c7ccb1a0a7b2a5a7bcb49b92a2bac1b8aca8b0babdb3a29a
a7a0828892929190959ca8afa79b948f909396969faaa1949092969795a8c7a9767f9aa7
a69d9a9ea0a5a6a2a09d999aa3acaba5a2abb6b0b0bfbdaa9d87798a9896959292969b9e
9fb4d9d2ac9891909190929695918f8e8e8d8b82645c7b8c8b8b8b8e918d87898c8d8b88
888a8b8b8d8f887d7a7c7c7b72686c726f6c6a686765
464a4f596268656b7d84878d999e9a9aa0a5a5a3a09daac3d6d1c8bfac9fa1a3a5a8a09d
b1c7c8b5a49aa4a59b9fa9bdd1c1a093949b9e9a9aa2a8a5a9aaa59e807193a7a1a3a6ab
c0c7af9faac4ded4bbbcd0d8d2cdd7e5e7d9b9b9c3b7b4bcc9d5d7d3c7bec5ccd0dbeae1
c4b9b7b2afaeb2bdc6c4bbbdbbae9991a9c5d2cccadcdac1b5c7d6d8dde8f2f3e7cec8c8
b3a4acc3cebfb9c8d1d1d1daedefddd1dbe1d3d5e6dfc3b6cceef8efdbcbd4e6f1e9d5c2
cecfb9b3ada39fa6bfdff0f2e0cbc6b9a7adbfc4d0dbccb7a59badbfbac8e7c78b92bad5
dcd5d3d3d1d5d4cfcac3b4b2c7dadbd2c4c9ddd9d6e2d8bcb1b4c1c3afa5a6a8a6a4adc4
ced3ebe5bea8a7b9bfb0bacfc3a59a9a96979c9e9194afaa9794a0b8bfa7939fbab99e9d
a8aab2b2b4b9ac978b8c989a908880746e6d6b696864
3d4a51545d6a739bbbab9d9cb8ccc8cfe1e5e3e2ddcccce6f6f4f1e9d5d0d5d7d8d9d5d9
e5f1efe4cfbeced6c9cddeecf2e3c2b3bfd0cebdc1dae3dae3e2dee0cec5dae4e2eef6f6
f8f4e7e3e9f2f9efe1e7f5f8f6f3f5f9fcf5e4e5ece8e7edf4faf9f7eae2eef9fafcfdfa
f4f2efe9e6e2e3f1f7f7f3f3f0ebecf0f6fbfaf9f9fafaf8f5f3f5fafbfafbfbf8f2f0ed
ddd7e4f0f3eeecf4f7f6f7f9fbfaf8f7faf8f4f5faf9efe9f1fbfdfbf6f6f9fcfdfcf8f6
f7f5f3efeae5e2e6eef6f9fbf9f9fae6ced8eef5f7f7f3ebd3bac5e1e8ecf6d9b8cae7f5
f9f8f9f9f8f7f7f3f3eee2e2eff6f8f9f0e9f3f7f8f8f0e2d9deeaece0d9dfe5e0dae4f1
f6f7fbf9f1eff0f0f2e9e5eeeddbd1d3d4dadad6cfcedee1d2cdd7e7ead8c8d1e9e4cacd
dbdae4e8e6eae1cdbbb7ccd2c5c1a07d716d6b696664
3a414e57616c89c0e8efe9e3e9f1f1f4f8f9f9f8f8f0eef7fbfbfbf7f3f2f5f6f8f6f1f4
f8fafbfbf0e6eff4f3f8fbfafaf7eae4f1f9f5edeff8fafbfafafcfbf7f8fbfafafbfbfc
fbfbfafbfcfdfefbf8f9fbfcfcfbfbfafbfcfafaf9f8f9fdfcfbfcfcf6f3f7fafafafbfc
fcfcfaf9f9fbf7f4f4f0f0f8fcfcf8f5f9fcfdfdfbfaf9f9f6f6f8f9fafbfbfefdfafaf9
f6f7f9fbfcfcfaf7f8fafafafafbfbfbfcfcfafbfbfaf9f8eee4e9f3f7f6f7fafbfcfbfa
f9f5f7fafcfcfbfbfafbf9f8f9fbfcfbf7f8f7f4f8fcfdfaf5eef0f6f9fafcf2ebf2f9fd
f6eff5fbfcfcf9f8fafaf9f9f9f8f9fbfbfafafafbfcfbf9f8f5f3f7fafbfafafbfafafc
fcf5f2f8fbfcfbfbfcfcfbfafaf6f4f5f6f8f7f4f0eef4f9f6f4f7f8f8f5f3f4f7f6eff2
f4f3f3f5f7f7f8f5efe9eeeeeacd927471706e6c6663
4149535860708cbce7f8fcfbfbfaf8f7f7f5f5f4f4faf5edf1f7f9f7f9f7f6f8fbf9f5f4
f9f6f6f5f6f9f9f7f4f2f7eee6eff9f8efe5ecf7fbf7f0eeecf0f4f4f1f2f8faf8f4f0e7
d9ddf0f7f8faf9f7f0deced8ecf4e5d3d8e4ebefe0ddf0f9f1e7e9f0f3eedfe0e8e6e8f0
e8dfd9d8dce3d9cec8bcbed1e9f2e2d4dce9f0f3f2f1f1edeef0dfd2d8e1e8ebe6e2dde0
e8e6e7e8e1d9d3dbe3dad9e1e0eae7e0e4dacfd7e5e2dbdcc8b0b6c9d3d1d6e9f0e9e3e5
e3d8d9e8eeeae9e9e4e2e3e5e4d3c7dbf0f8e1c6cbe2eff4f8f7efe4eaf0ece5e6eaf0f4
e0c4c9d9e5e2cfcedee9efe9dad2d7dbe1e3dedfeaeee6e6e4d4c9d6e8f1f5f7f7f8f7f5
efd7cbdef1f1e9dfe0ebeeeff3f3f3f0e8e5ebf3f4e0d5e2edeef1f3f4f7f1eaedf3f5ef
eef4ebdbe0edf3f6f3eeedebe8bf87716e6d6a686664
40474e555b708e9eb3d5e7e2d8d6ddded2d8dfd3d7e9dec2bcc7cbcdd8d4d2dadbd2bdc5
deded1cdd6ded9d4cbcfdccabedaf4e8c4afc0e0eddbbeafadc5d1bdabb9cec4b5ada69f
9c9fb8c8bfc6c8bcb2a39ca2adb1a9a2a4a8b0b29c98b8c5beb3b7bec1bdafb0b9b7c3cc
bca69d9ba2aba79d968f8d97b9d6aa7f8b9db0c6c6cbcdbaadaca29693989e9f9b999a9b
a1a0acb2a69f9fa5a99ca0adb0bcb8aeada296a0b1afa8a69b8f8d9596929fbcc5b3a0a4
a98c809eaca19a999794929393908f9dbbd2c39f969fa5adb7b9aea3a7aba89591a4b1b8
ae9999a3adaca0a0acb7bcb8a99fa2a6adb0a7aabec4b3afac907b90afc4ced3d6dadfd5
b79d979aa1a19c9ba0a4a1a0a4a4a3a3a2a4c0e3d9b29fa4abacb5bcc7dcd5bbb3c0c6bd
c6d8c8abafc5d6dacdbebab5ad93766e6d6b6a686662
3c444e575f7b99948b8f979a999ca2a5a5afb6aeaaafaa9c989d9e9ca09e9ea4a49e8385
a6a99b97a3a7a09d99a4ab9fa2c3dfc79f929cafbaab958f8f94958c6c6987918c8c8888
8b90949494969290909091939393918e8f8f8f8e72698596939192939293919092969fa0
958e8c8d8c8e90918d8b8a8b9aa37c6478888d8f8e8e8d8c8c8a89888784878a8787898b
89898b8e8b8787898a8281899094908c89878586888b8c89858586888986898f8e898788
8969587385878688888987858586888a8c8f8c88888a8c8c8f908e8d8d8d896f687f9192
8f8b898a8c8f8e8f8f929491919192929594949597989496947863779099999c9d9a9892
8f8f8d88898d8d8d8e8d8d908f8d8b88888a949c816c7985878a929294a0a190898e918c
95a1998987909fa293827e7c776a676a69676564635f
3f444d545d74807a777c80858a8d8e8e8e8f91929394908e8c8984838787878888866c66
80898584868587878a8c8c898da1b0a28f8b8c8c8d8b8988888a8c815751768888858485
878c8b8d8c888b8c8b8c8c8d8b8c8d8988898988695e7a8888898b8a888a8c8a8b8c8c8b
8887888889898c8b8a88868588896e637c888988868585878884888c8884868887838381
8083848485848282847f7d82858584827f7f8080838383827f7e818487868384817e7e81
835f4e6d818484818283858481828284848282828586848386868786848484685d788787
8586858586878789898a8c8c8c8c8e90908f8f8f90908e8f8e6f576f898d8f9091918f8e
8a8888898c8f8e8a8a89858785808283858584815e537382818083848384838384838181
82817f7a7b797c7c7a7676777267656c6d6966646160
393d4951585b50556c777a7d83828285868787898a89898785848383828082818181655d
758282807f7e8485858587878585878786878886858687868789887e5550778584858785
8385878585888889888789898b88848283878686665c79888587888888888a8886888d8b
8884838585868785848584868886655c7985838284848382848484868685858481807f7f
817e7b7f828182837f77767c7e7f807f7c797b7e817f7e807d7d828385838282817d7c7c
7a564a65797d7e7c7c7e807e7d7e8080817f7f8284858280858683838181826457728180
82818181828282868888878888898b8d8c8c8d8e8e8e8d8c8d71596d878e8b8c8a888a8c
8c8c8a86848689898888838182817e818282827e584e6e7e7d7e807d7e7f7c7e82828180
7f7f7975767674767573706f6d625e65676769696562
353a464c5152454c626e7375747578797c7b7d7e7d7d7c7c7b7a7a7b7a79797b7c7d5c54
6e7d7f7d7a7a7f808182818181808282818183817e8285838483857d504a6f7f7f83827d
7c80858181858785838182858687838386878684635a7785838280828589858182838686
8484848382838285858485858786685d75828381818185878383838184817f827f7c7a7c
7e7f7b7c7f8281817d6f6c75797b7c7d7b79797a797c7e7c7b7d81827e7a7a7d7b7a7a7a
79564b667373787874747c7c767a7b78797b7b7e81807f8282817e7f7f7c7e6359727d7b
7d807f80827f8084868685868684868a8a8a8a8887868a8a886d5a6c858a898887838285
8682807f8084828180808483807d7c7c7d7d7d7b554d6f807b797e7c7b7b7b7a78787978
777774716f7070706f6f6d6c685c5d63656666656564
313941494c4d3c405762686b6e6d6e6e717475747476777471706e70717374727271554f
65727270706d6e6e706f6b6b6e6c6d6c6a6a6b6e706f6f707070706b4c4d6a77797a7878
787a77767677767570707473716e6c6a6868686558555d6261615f5e5f605f5a5a5e6161
62636261626463656865666b6f6f5f5d6b73717372727474706b6c6c6b686664615f5f5e
5d5a5555534d4c4d5056544b494a4c4d4c494a48494d515254585a5d5f5c5e61605f6164
66565360666766636261615f5e5e5c5957575756524d51504c4a46484543454f504b494c
4e4d4f4f4d4e50545456585c5d5e5d5f6162636564666a6f7069646b737471706f6d6c6c
6b696764616163645f5a595858514b4b4e4b47474c4a4b4d4a45464a4a4a4a4b4c4c4b4b
494b4b4b4a4e4f4f4e50505151505b6568676562605e
2e2f373b4047443a3536363a383c3e3c3d3f3e3e41403f3f403d3c3d414044484848474b
50545758595958575a595859595755504b464443423d3a36302c272742452d22211e1b1f
2627283034383c41464e5356545055585c5c5c5c595a5b5b5e5f5c5a575654514f4e4c4b
49474540403e3a3736312f31313241463732363a353030363a3c4347484c4f525659595a
5b5b5c5f605d5c5a5b615e5958575452504b484846444545464646464645464748464146
47484f5150535154555554565c5f61646263696b6b6a6969686869666362635a535a5e60
5f5d5a5a58555655545656565756514e4f4f4f4f4d505151515c68655e585a5a58585b5a
595a5d5e5e606162666c6b66686866656666626559535e65625e5a5a5b5854535451504f
4b47474444403f3d3a3a3a3939425765686562615e5d
313238383c423839444d5356585857585a5b5a585c5d5b58585857565757565a59564849
575e605f5f605f61646766676b6e6f6d6c6d6e6f70706f71737576704747697879777878
7673737372747270716f6e71706d6e71757572705c5b6c7476777877777878797a7b7b7c
7d7b7a7a7d7e7b7a7978787a7b79605f757d7d7e7c7b7a7979787b7d7c7b7d7873747778
77737372747a7774736b697279797676787676747374767574767a797675777672717477
764d4462737a7f807c7877797e7d7d7e7d78777a7a7c7b7c7d7b78797a7b7b605a717b79
7a7976767a7d7b7b7e828382858483848585838583818384856a4e63808583807c7e8184
7e797d7e7b797c7d7c78777878767675767674724f496a77777776767374757373737473
73717071706f6c6a6a6b6c696757546266676664615d
2c2b2c2f3937252d424f575957585e626262606064686b6b6a6d6f6e6f70717271724c49
6a7576767879747476777676777877787b78797a787877787b7b7b7347496d787575797e
7a75767a7c7d7b7e81807d797a7d7d7b7a7a7b7b5b59727e7e7c7b7a7c7c7b7d83838181
8384817e7e7d7d7e807f7d7f827f605a737d7c7c7d7d807f7977797a7b7b7e7d7a77787c
7b78777779797879776a6875797a7878787878777575787675787b7b7776757675737474
744a4064787f807a74757575797f7f7a7d7e797978797d7b78797a7a7e7d7d625d717c7b
7b7978797c7d7c7d7e81828386838486838184878784858483664960808986837e7d7e82
7d7b7d7c7b7d7f7f7d76767a78757679777778754b476a77747576777374747373737371
707273716f706f6c6b6d6b6867544f5e65646363635f
272b2e2f3231212a404a4d4e5153575c6060605f62646a6c68696d6e6e6f717071714744
6572747576787674747574747474757c7c7b7a7b7875757677787a7543456f7975777573
737777797a76767b7d7b787c7a787a79797a797a5a5a737d7c7a7a7a7a7a7a7c7f807f7c
7c7d8081807f7d7b7b7c7c7d7f7e625f757c7a7c7a79777b7e79787a7a7d7d7c79777577
777b7b79787a7976756d6e73797e7c797674747573737373737778787876747675777674
71454065777c7a767675797b7977787978787a7b797b7b79777576787d807f625c707d7f
7b7a79787a7e7c797d81828385828487868282868684858482684d617e8483817e7c797a
7e7d7c7e7d7a7c80807f77777776757475757676504c6b77777575737273727270727271
707070706e6d6d6c6b6a686666504e5f656362635f5a
25292b2a2a2815253d464c4e4f5054595d605d5c5c5f6466676a6f6e6c6c706f72724144
6674757171737475757674747677767474767a77737577797a7c7c703e456f7a7c7d7978
797a787978797a7a7776797c79797a787a7b79785a5d777d7a7a797a7a7b7b7a7b7b7d7c
787b7e807e7e7e7e7f7c77777a7a5e5e7379787d7d7975767576787875787a78797b7572
7579787677787878746f6f777b7e7d7a757276767574757677757473747373767a7a7675
72403c627375797c7977787875787875767779787778767778797b7c7b7d7d615e727b7a
79797b7b7d7e79787b7c7e7f8183858685818080807f84837e694e608288848180817b76
77797c7a7b7c7b7a7877747274787978757474744e4a68737676777572726f6f6e717272
71707072706b6a6d6e6c696768504e5c616060605e5c
232321212221131a3142494944464f55595a5859595c5f62656a6d6c6e6f716f6e6e3e41
6875746f6f717575747575747474757474787a7875787b797a767a763f41687875767675
777874787e7f7b79777a7a7d7d7b7b7a78787a795b5d767f7b7978787a7b7a7a7d7c7b7b
7a7b7a787a7b7b80817e79777778605d71787a7b7976797d7b78787c7d7d7d7f807b7777
777474767675727473646573787878767474747679787574737272717171747675767474
73423b5e707374797b79787c7c7b7a797877777577777877757376777878775d5c717879
787878777879767777787a7d7f7f7f808182837f7e8082827f6c4d5e7b82807e7d7d7a76
75787b797373737374747878797d79797876716f4c4d6a75747475747373706d6f717271
706e6f716f6c6b6e6a6b6d69664a475c615e61625e58
24232223252613192d363c42403f484a4f535355585d6062646766686c6e6c6a696e3d41
6671726f707072716f7475747474757475757776767778787575757240456b7576787a7d
79757276777b78767578797c7d7b79777676797b5b5c747f7d797a78787a7a78797c7b7b
7978787577797d7e7d7a78787b7b5e5e757e7c7a787778797b7d7c76777775747777797c
7b767477767673726f5f6270747475757575747476757372727274747677777775737174
77433d61727576797574757575787a7879777675777a7977767779797374765d5d707878
787978797877797b7a78787a7f807b7d7f80817f7f7f7f84836d4556777f7a797a7a807e
7d7b75767675757a7974747677757575757370704b4b6975757475747272706f73727172
706c6c6e716e6c6b68696b686446455b60626260605b
1e222223222211192c333a3d3838404850555150545960636366686867686867676b3d43
646e70727071737271717174767676757574767876797c7a757273704047697677747576
79777578777779777776757679777877767677775a5a727c7b7c7d7b78787c7b77797a7b
7977767678797978797a7b797a795d5b6f797676787a7a78777477797c79777777787577
7a757273737374737167696f747675767474737374777776737374747576747675747272
723f406878737377787b787574757676727377757576767775777574767676606072797b
79797c7d7a767a7e7f7b77797c7f7f7f7f82847f7c7e82807e6c445477807e7b78777676
767879777676767676787975747474767876747250526a7374767679756f6f706f70716f
6e6d6d6c6d69676a68696b6b6443465d60606161605d
1e1a161a1f1c0d1125313a3e39383f4b50504d5255585d6264676a6866666567696a3942
646c6f7172757673717172747674737373747475767473767272736f3a446d7777767675
78767574747474757574767775747473777977765a5b6e78777b7b7878767a78767a7977
767675747676767978777674777a625f70767574797b787775787a757678797979767373
747273747474757471676a737474787a7773717072777877737173727170727372717374
723e3a63747677757172717372717271717373737675777676777574777777636472797c
7b797a797779777b7d7a7778797a7c7c7b7c7d7d7d80807e7d6c4455777a787978777977
73777d7b777878757573757674747575747374734d506a7272737375736f6e6f7071706f
70716d6a68676969696968666241465c6361605c5d59
181e1c1c202111151c23303433384146484c4c4e565b5e64656664636668696a68693841
646d6e6f6f73737373737375747272737474747373737476747372703e4e6e7577767678
79777472717273767575767774747574747473775e606f76747775737575767776787a76
76767776767777797a78767878775f606f757674707476777473747376797a7877757573
6f6f7372757474736f586071737478797774737271727072707275747271727370737474
723d3a5e6e72717476757577767275777473747674727074767675777976756163707577
77787774767876767979787978797778797876787b7e807e7c704150737c7a7878787478
7c787674717575767475767575767472747672714d506b72736f6e70706d72747273706f
70706d6b68686a6a6c6a6969643f415b64615f5e5a59
211c1513191b0d142430353331343a3b3f4046484e565f62636566656868696967663540
646f706e6f727275737374727473747575737375737476737473706c364369716f6f7175
78767675737073767373747573747573717275765e5f7276757573747576787877797773
757778767779767775737377787560616f75787976757171757673737677767376767574
73737274737475767359606f727373757372727373747171707373737373747570707272
74403c5d6e706f71747573716f71717274747573757675777678777576767661626f7578
78797876767575757576787977767476797a7a7576797b7b7a6e3f507178777779797979
74737678757674757375767673727372707273714e536e7371707074716e70726e6f726e
6c6f6d68696b6b6868686565633c3e5c62605d5c5c59
1a1b1b1115170a14222c2f2e2c2f31393d4043474f575d63666767666765666665683141
646e6f6e6f717373727073727275767473727476747675747575716c3c4a6a7476727174
7373757274737475726e737674757575737375755a5d7076747473747579777677787370
73767877767675757576767577765e5e6f7a787475767472717475747576767673737070
717070717373727374686c6f70717171706f70737574736f6f7172737170727270717173
753e3b606f716e707170727373716e7074757477767675737373707174757563656d7174
7677797776747474737777777674737277797a7779767779786e3e4c7079787877737274
7272737173727174737476797672706e7170706d4c516a70707070716f6c6d6e6d707471
6d6c69686a69676665646564623a415a5c5e5c5c5a58
1d1a1b1c1b140714262f2b28282e3836393f44494e585f62656767666768686865673244
666c6d6d6f70726e6e7171717172727273717377767571747374736a3948687272717475
74767676767473777473747576777675737375745d5f717774757573767b797573757674
737575767674727478787473747461636f74747470717072727173767173777876747370
71727271717272727260666d71727373716f70717171716f6f7270716f6f706d6b6f6d6e
6f3c39607172737373747574737273737478747073787b7976746f7274737260636c7273
757977747372727373787776757373737578767676747578746c3b497079797671727274
777573727272737171737371726f6e747773706f4e5269727370706e6b6c6e6f7070706f
6a6867696b6869666564676661343b555a5d5b585657
1b1b1b1a1c210f0f1e2b2b28242b3332323a3f454f585f63636363636467666664652f44
666e6e6f6e70716f6f7072737270747275737372717372727172726f3b4a6b7375737676
75727175787871707173757575747575717374725a5e6e74727372717575747270737576
747274747573717276737273727260636c71727473706d6f7475747372706f7175757372
727271707071706e6d4f5a6b707274757471706f70716f7072706f6d6d6f706c6d6c6d6e
6c3b385b6d71737677747273726e70707175737278777674747471727576735f5f6b7475
737676737274737373747575757273747575737275747575716b3a4c6f757575726f7072
737274757370717174747572777575737473706f515668706f6d6f6e6d6e6f6f6d6e6d6b
6a6b6a686a696a6864616365653335545f5c59585758
1b1e1d1a18190b13212b2c2a2427363937363f4851596367656364646260636366652c46
676e6e6f706f6f716e707275736f71707175757474747272717372703b496a7677767473
7575717173757170727375727272727271716f70595f6d737373706e7272727370717371
717473727472717271717072736f5e627075767677777577727372717171717171727673
6f716e7070706f706e4c596a6f7172747371706e71727170706f6e6d6c6e706e6d6d6f70
6f3b36586a6f7377797671706f6e717174757273727371707273727172737261646b7170
717374747174747472717175757274727372717273717478756d3748696e707576717171
7573757473747376736f6d71747071727373706f5155656b6d6e6f716e6e6d6b6b6c6b6b
696a69696a67686a6663656665313c595c5e5c5c5b57
1a1e1c1b1d1f0e131a23251f232c3033363d3f4450585e616260646463616465686b2e48
686a6b6d6f6e70706e6e6e70736e6d6d6c6e707173717171706f6e6d3b4b697375727173
72747070747572717070716f7071737171716f6f5c626f727473716f71747273716e7170
7274737170727171716f7074757461646e71747272706e706f73716e71716c6f71717373
716e6c6f726f73737060656d6f70717472707171707372706e6f7271707271706e6c6b6d
6d393856656a6d727472706e6d6f707073727172727274707072727475757464676b6f6e
70737271706d6f7371727173707070707575717172717478736d38496870717171707173
767374747273747374747276737271707173716e5159696e716f6e6f6c6c6d6a6d6c6b68
64656969666265686666636261333d585f5f5f5b5a57
1b1f2020140f06101d24201d252d313433393f45545b5e605f6064656466666267682d4a
686a6b6e6f7071716e6e6e6f70716e6e6f6e706f7073747172716e6c3a4d6b7474717271
70706d70737672746e6e6f7272717474727377735c616e706f70717270717173706e7071
7471717072706e6d6e6e6f6e70706268717171706f6f6d6e7072717170706e7071717273
736b6c6f6f72726f6e575f6f717371737170706f6f6d6f72706f7373736e70716e6c6c6e
6e37385a6c6f7073716c6e707271737371777571757977757475737475757361626b6e72
7473716f706f6d7071737374727273737779737374737274746e354a6b73717274777371
7472727272747676767674737473716e6d70716f585d6d7170706d6b6a696c6c6c6d6d69
686463636161666966616061602c37565c5a5a595652
1b19191d1a190a111e222225242a303431353f4754595e61606060646365666467662b49
66686b6d6e6d70706d6d6d7072716e6d6b6e707172747674737272703a4d68707071726e
6d717372706f6f71706f727270717273707172745f646d70717171716e6e6f6f6e6e6d71
726f6d6d6d6f6c6a6a6a6c6b6c6d62646d6e72726f6e707372716f707170706f6e6f716e
6b6b6e6e6e7171727247546c71727172716e6f6e6e6c6e6f6c6c6e706f6b6d6d6e6f6b6b
6b383858676a6d7172706f716e6f6f6e71727274717171717275726f71717366686f7070
7172726e6e6e6e6d717172717171727474737273746f6f6e706e3a4b69726f6b71757271
6f6e71706e716e6f6e737572727571716e6e6b6c5859696f706f6c6c69696c6a6a696868
6766655f5e62686a625e605f592737565c5b5a565454
1f191c211b13060e1c211c191e2d35363539424d565d5e5d5d5f5f605d5d5e5e6061304b
6468696a696a6c696566686c6d696566696965656b6968696b6a6a6a42536a726e6d7170
706e6a66696e6f6d696c6c6f6e6b6d6e6a686a6b5c5f6767686867666260606060606463
615e5e5a5b60605d5a585e5d60605d5e5f6362616769686c6c6e6f6e6e6f6a66696a6c66
6765646869666564643f4c5d616364615f5e5e5d595958585553525555535558595c5958
573b3c4e595e606362626566686965646666686b69676668666c6a6863656660605f5f60
605f5b585453555452554f52525252555455545756545655555a3d495a5d5f5f63626568
6a696665686b6d6866666763626264646362615f57585c5a595a59525053504e4e4a484b
4a4c4c464042464744444447432e4252585655525554
19171515161c14090506090509100e0e191a1a1f212021222022242527292a282c30393c
3b40424444454c4949494e52545051525254514e4e4b4445423d3b34433c31251d1f1b19
1817161613151b1b1f2222282a292c2f323235384147434245454445484a48494c4e514e
4a4a483f4246433d3630312d2c293a3c2f211b161c17141515161316181c1c1c1e20292b
2b2b3036383a3c3e414c4746484a514f525354504e4a4a49474540403d3b393b39342a2b
2b4a5c39231f1c1c1612161a131812171c1d21252a2d333435363b4148494b5457504e52
54535354505051514d4c464a4b4643423e3e3d3e3d383531303652403029292624242422
221e1e181b1e212222222a333331363a36383b4554514d4c474b4c494c4e4c4747464545
4746413c393331302f2b292a27445857555657535054
171817191209131310161919202a2930312f363a4142434344444444444243414140564e
433f43434543454447494f50524e4e5355595e5c5c5e5c5e5e656862666a6865686c6a6c
6867656466615f5e5d5c595957585852545655555a5c5752535150505557555357585a59
585d5a595d605e5c6162616262676c6d6a686c6b6d6d6b6c6e6c696a6964636362616063
605e5f5d5c5a595a5a666159595a5f606266646062606263636467656567686a6c6c6666
66696d6c6a6d6f6e696a706c6f6c6e6b6a6e6c68686b6c6867686d6b6e6c6b6a6c6a6767
69696b6a696b6b6f6c6a696a6e6c6b696b6c72706f6d6c6d727475726e696c6f6e717171
73707070707070726f6f706c65666a6b6669656468676364636360606263635e5d5e605e
6364635f6262615d5e5d5e605f5f5d585a5a59585553
161315181214161d1c1f24272f3e3f3d3e454e5761605f656a6c66696e7378766d6b767d
7f7c736b6a6c6e6e6e717c8579717079838a817771757f838179737272717073747d8382
7a7572706f6f6d7a767475807a747372716f6f70706f6f6e6f71716d6f6f6c6c696b6e6d
6b726e6f70716a686d6c6d707272706d70717071726f6d716f7273737070706e7171726f
6e6f6c6e6f696b6e6e6f6f6d6c6e737371737170706e6f706f6f7171706c6c6b7072706d
6e6e6e6d71717072717272737070707075756f6d6f747374737b9ea38a7d91a5ac9d867a
94a5ab927d96a4a79c81716f7174757274788f83787275819399987f717170707475707f
8c857c757a858d8f7e757988968e7d73737371707070718d97967c706d6c696b6c6c8175
7480796c696865616163626263625c58585a59565850
1513141812171b1a1d27252b65896a4c4c7b96a5ae82799bafac838caab4b5a48779a0b7
b8b484706b6d7070737da5b899817b9db7c0ac8a798db4c7c29277726e7273778ab7d4d4
b183746f6c6e6ea8967d93a78c777b7576747372727171706e726f6c71706b6c6b6e6f6e
6d7271716e6c6b6e6e6f6e6f72737171706a6c6f72707273717270726c7071706e6f7272
6d6f6d6f6c6a6a6b6b6f6e6e6b6f7173747170717070706f6e6f6f716e6d6b6e6f70716c
6c6e6d6c6d6e6f7071706c6f706f7273727571707075747683a9c6c19987a8c5ccad8c87
b2c2c2b895bccac4c194756e6f7273727491b9997b7380a4c1cac9957a777775767579b2
d3ba977d98c2d5d1a08eaac4ccbca68175737070706e88b2bdbe9a796d6c6a6a6a6da38a
8eaf93756c6b676663636161605f5b58585753555855
09140d10100e131619232e4c6d707d61526687ab99739aaca3ad95a8c6b6a9b6ad8697c5
bda77e6e6e6e6f707693abb5b5958ab7b9b0bfb089b3c7b7baa28173726f6f83bdccadb1
cd9a766f717274b69f7f99b0928093999a8a7a7473716e6e706f6d6a6d726d6d6e6e706d
6a716f6f6b6b6d6e6e6e6e70726e6e6f6d6e7273737173707171727472707276746f706f
71706e6f6f6e6b6b6c706c6c6e6e6f72716f70727072706d6e716d6c6e6f716f6f74746f
6f706f696f6c6d6f736e6e6b6d6d6d6a6e74706c6e726f789fc8aaaf948183aeb4907f92
b2a398bea1c3bda6bd9f7a6e6e7172737fb2cea27e718cb19d95b6a07f767771717388b2
9bbeb893bbbc95aaa2b0cbb49bb1c58d756f6f6e6f70a8a5939ca07e6d6b6c6a696aad8e
9cc3a583888f8d846d666664605b595756595655554f
080e140d0d0e171a1a292e4f635d5d4d474e749e7966aaaf96ab9cadc6ad9db9b88678b1
9f7e6e6b6e6f6f7175908a9bb09893b39780baba96bfb590aca482727172768dc4c58f9f
cb957370727278b7b4a7b5bb969ebfd0c69b7c72716e6e6d72716d696c6d6d6d6d6f6e6b
686b6e6e6b6d6e6e6e6f6e706a6d6d6f6b6d7071716e6e71707378716e6f7173756d7072
726f6e6e71726e6d6d70716d71707273716e70757371716d6f716f6e6d70706e6f716e6e
706e7070706c6c6970706c6d6e6d6d6d6d716e6a6c6e6e759abbbdb892807ba4a9827c94
ae9381b9a1c4c9bac79a786f7070727383a4c8a47e6f787d7e8fb79b7d757170727285ac
91bcc099bfba93a5a5b4ceab89adcb9376736e717273b1977783a5846d696867676aafac
b4cbac91a5bac3b67f6763625d5b58585a5e554f4d49
090f0a0912151a0e1620293d749470524c4c6c987162adcac3caa4afccc9c0b897766eb0
9f796d6c6c6a6d6f707082b3b2928dae9781bdbe92c0bd8eaba57f7176857d90c7c48f9d
c9967771737474b8d2d1d4c6928897c5ac8575716e6e706d6b706c6c6a6c6b6c6c6d6c69
6a6c6e6c686c6f6f6c6c6d6c6b6f6d6f6f6d73706b6d71706f6a6f6f707271726f6f706f
6f707071716d6e6d6d70737170727373736d7172726f72707271706d6d70706e6f706e6e
706e6d6c6e6a6c7171716f6d6c6c706e6e716e6e717071727b97bbc29d7f79a1a9817894
b09483bda3c8cfc5b083716f706d706f7181bca37a6e727c9ebfc08e746f6f70727184b5
8ebbc498bfbd93a3aab6cfb18baacc95767391a39f80b2967782ab886f6b696a656ab3c0
c4cfaf8b8cb4bea375645e605f5d5d5b5b5954515051
111213110e16171917202b314f5e7e6448496b947264aebb9fb29eb2c8bfb8a07b6a70b6
a17a6e6c696c6c7171798aa4b8988db09481bdbb8ec2bd92ada37c7291c89993c6c88da3
cd977872727470b5ad98abba937f9bb38f767271706f6f6b6c6f6d6c6d6d6c6d676c6e6c
6a6c6c696b6c6c6e6e6c6c6c6e696971726d71706f70686c6d6d716e6e706d6f6b6d6e6d
6f70716f706d6b6f6d70706f6f747372706d706e706e7172726e7170716d7171706e7172
6e696d6d696c6e6f72726d6b696d71716c6f716f7171727485a89ab7a18379a2a981738d
b09485bea1c7bd9e8274706e6e70706f6d7ebda581757ea1c5c39b7d716d716f717183b8
93bdc395c1bf92a2acaeceb686a7cc92766fb3d4c287ad947980ac84736d6969696bb2a4
a3c5b07d83a698776461615c5b5b5c5d58565551524f
130d0a0a0a0a0d1a1a22264c6163836448496b947062aba87f9b99b0c3a2aca88f7172b9
a17b6d6c686d6d7073919fa4b2928ab1a297beb58cbabfa2b4a07e7498ca938dc1c7acb5
cd9077756f7171b79e8096b69388c0c3b0917b71716d6f6e6e6f6c6b6c6d706c676d706f
6c6b696b6b6e6d6b6c6c6a6b6e6f6d6d716f6e6d716f6c6a686f6f706f6f716d6d6f7170
6f6c6e6e706e6c6b6f6e706c7077727172716f6e71726f6f716e7171706c71716f706d71
6e6e6e716f6e6d7070716d6b707071706f6d71726d7174768fb1becb9c7f7b9fa7817584
b4bbbabc91c2ae897571716f6f717272779fcebea48496c9bdaea689786f6d6f717282b8
b0c7bc8eb3bab2bfa5a0bfbdb5c0c28d7873abc6b185a1abaaaead7f6d6c6b66666bb08c
88bab580a7ae9a8c6e67615d5a595f5f5654524b4d4f
110e0b0d0b0d111b202a2a3677906d52464c6b8e695ea49a75938da6b68e8ea9a47670ac
94776d6b6b6c6b6b7189b4c0997c7ca7bfc7b38f7b95b9cdc98d7770788277738abad8d5
af837472727370ad907790a88a91c5cbbe937770716d706f6d6d6c6b6d6b6d6c6c6d6f6e
6f6d686a6b70716e6b686a6f6f70706c6d6e736c6f70737272706f706f6f71716d6c6e70
6f706f6e6e6e6c6f6e6d6e6c6f7370747271717173746f7273727373706f72726f6f6a6c
6a6f6f6f706e6d7071723320586f73757375706b707275737a8eb3b18d797a8f8b787177
9cb3b7987ba1917c75717271736f6f727cabbfc2bd8e92b8c7c9c69c7c757070706f70a0
c8b3877581acccc98f7f89afc3ba997b74767b8380727fa9bbbc91746e696a65656b9e82
7ca6a181aabab6af7c66646260605e5f5b5450514b4e
0f12110f0b0a0d1119201e2c4555493e393d4c59575a726f6773747a7f726d7f84706982
756e6a6d6f6d6a6a6f7390977a70738590968474747a898e87757270707175727177837f
7874706f6f70708173727c82787d8b918b7b76706f70716e6c6f6f6c6f6b696e6d6e6c6a
6b6b686b69696e6c6c6c6a706a6b6f6f716e73726f7374707072706f6c6d6e6f6e6c6d6f
6f7071706d6d6d70706f706e6f717072737272737274717476747271717072706f706d6e
6f707073716f6b6f71706d6e6e73737175706e6d7074706d6f7784827b77707877737170
7c868878737b747074727272726c6c6d707e82827d76787c83827d746f6f6d6f70727070
7879756b6d757b7c767575767d7d7670706f6d6e6f7071818787736e6a696b6963657970
6f807871818a86846e6463625e5e595c5c585653524d
08130e0d04050c13141d21272f393735353e3b3f50595f60605f6063656461676b6a6c6f
6a6e6a717475756e6f7173707572716f6e6d716e6f727275716f71737679777472747472
6c717371716f7174716f787976777676707374736f6f6d6d6d6e6e6d6f6c6c6e6d6d6d69
69686b6b6b6b6e6c6e6d6c78737074736f74777b706f7276747476756f6f6f756f696c71
73726f6f6f6f6e726f737c72737b777172727474747472757475716e6f706e6e706f706e
6f7174727578756f6f7274706c6e726f7075746f7273736f6e6f73757273736f736f7270
7074756f75727a8285777a838787868272757272716f71707f8584746f73726f6e6e6e72
7c7c70716f70757074707472757074797972727977716f72746c6d6e6868686660606466
6769656364666165636160605e5e5a595850574f5050
051219110805090a0d1b1f27242c34313133333a48565d5e5b5b5f636363636a686f96a5
a1947696a5a7a07b718384789480726e717573726f72778f83777585a4b389747a95b5ba
9b786e70717573968d7d81a38e7c747473747570706e6d6e716e6e6b706e6a6d6d6c6e6e
6b696b696d6e6c706d6d6998876f7d977d87b9c497777ba88c77aca9816e707071686d77
a09477706f6e70716f80a37f8bad867671737575747173757474726e6f716f7471716f6d
6b6f736e7270727375707073736e6f6f6e6e7870727470727170767774716e706f6e706f
706e706f7586aabcb78a91b0b8bdbaae7f726f7070707281adbebe8d7872706d6a666185
b4bc93756e696d6f727da8b07f80ac8a85aec1c6c089706e706a6d6d6766686761656564
67676164616563656160615e5d5c5b58565456514a4c
061216160f07090a0a1d2222222d2e333135363647595d605b5d5e63666562696877b9b9
b7b584bebcb8be907da89d80b996756d6d707170717e9ac999788fb7cbcab283a3c8c3c4
c4877270716f76b29e808bb9927e80837f7b776e706e6e70706f6d6c6f6e6a6c6c6e7271
6f6f6d6d6c6c6e71716e72ba917699b088a6c7c1c1998ab9967fc6ba8b7572746e707da7
d0a77a71706f70707087ba8ca0d09186878b8979757072747474756d707074726d706e6e
6c6d74767676757476716b6e716c737873717072737371727474747374716f6c6a707170
6e6b6e7077acc2b3b99d93a4b8cebba67a70706d6a7179a3b5bbc1aa81706c6b6b7072b1
b5bac099746e6a706e85c0c68b8abe9491c4bbafb2a5767069666c6d696b6a6662656662
6769646464616161635e5e5e5e5857595c57554a4946
0a060f1408050c0b0a17181c262e31343532323648595c5d5a5e636363646066687bb896
9bbf89c39d8eaa9f84af9c87bd97756e6f6e707072a4c8d8987caecba28dbf9ac5c98d9b
cb8d7573736d71b4a28293c2988fbbc5bea180716f6e6c6e6b6e6c6c6c6e6d6e696d6f71
706d6f706c7071716f7170bc9d85a1b28eabae91c29d91c09982c7be8b736e737170acc9
d2a5796d6c5669707188c09baad496b3bfc6c08c787470727577746e717175746f716c72
6f6f71757476787775746f6f72706e71726e6e757372737375777673726f6f6f6e6e7270
6f6e6f6f73bfbb989f8e787691b88b776d726d6b6b6f81a08688a2ac88756c6d6f71709a
7ba9cba6726c6d6f717bbcc98b8abf938cc49b8e9bb07a6d6a6b6d696b6a6b6461636764
6564626265626161605d5e5c605555575857574b4947
08060906050109110b181a1a23242d2d2f2e3232415a5d5b5d5f615e61626469687abdb0
b0bd83c7b4acbb977fb0a6a0c194766b6a6b6b6f72a9afc99878aecea48ac099c9c88a9a
ce917070706e72bacac3cbd09991accebf947b726e716f6a6b706d6f6d70726f6f726f72
72706e7070707271707170a7beaac5a185a8cecfba8a89c1b3c3d7c28c786f717270929d
bea37b726f5e6b6c7087cdcbcedf97a5bed9d7907a74757274747473706f757776726f75
726f72706f7171727275736d7271727272757378767271706f727472746f7171716c706a
7171706f709ebdbcba8c737186b685726e716a696f6f72728badbda27a716a7b74707173
7bbbb3806d6e6a6d6e7db8d7cdcddb958bc2c3c7c896766b6f6b6e686c696a6465656764
6564626264625e61615e61615c535858514f53514c4e
000902000501090609181a1a1b2c2f2d2e2f38363d515d5b5d5d605f60636664687dc1d0
c09e7ac6bdb7c5937fb1babbc995746e6c6b716e707787bf9476aed1a787c19bc9c68497
cf8a7371717071b9c3b9bdc798848bc7997c73717072726c6f736e727071747171717372
706e6d727270716f6f6d727cc3c9d58e7ca5cac1c29c8ec1c2d2d8c28774707275747b7c
b2a57e70716c6e6c7289ccb8c3dd9684b7cbad8076757a717373777372717879726f7074
737071727270717072717172707373727373737576747272717176757374717171706e70
706d6e717187a7abb8a3777284ba8773706f6d6e6a6c707a95a8b7b0816f71b1997b7286
b4aa83716b6d6a6d7079b4d7b6accb9587bfc4d4c584736e706c68696a69656166666262
6265636160625e5c5d5b5e5e5c57565a564f4e4f504a
000101050a0d0201051716161a2b272a2c2c2c324350595b5f5d5d5f61625f60667eb5bb
b99675c5998caf9883b3c5c6c791736d6c6b7072757c89bd9b79b0cca98fc396c5c48c9c
cf887173696f77b7a79096be947cacb08b7a726e6f6f6e6b6e72707471707071716d706d
6d6c6e72716a7070696d7072bbd0c5827ba3ae94c89f8fcad1ccdec688737477737d7885
b2ac837471716e707187c990a0d59596c8b89782767875737473747475727573726f7071
726f71747275756f75707072787272717273727271757673707373716f74727170716f72
716d6e6e70a2ad96aaab7a7185bb8a736d6e6d6d6c707296928597bb8b7378c7a47e76ae
bb897c75706d706c6c77afcf8b83b59783b7a8a9c28d71686d6d6666676b676565636262
636566605e665d5d5f5d5a5b5b595a5d5a54524c4f47
010105050000000105111817202129292c27252f43545a5a5d615d605e645f5f647bad93
a9ae7cc8afabb98a7cb0bcb8c48f736f6b6c6e70729eb1cdbb91a4bfbdc0b48db3c5c8ca
c88170706b6c77b79b7c8ec09286cccdbf99796d6e6d6e6f6f74717374706d726e6e6e69
70706f6e6e6a6a7171707372acd0a57975a0c8c9b58885d0b09fd1c08a7d74777078a8c7
d6d3b27971726d707287c48696cf90bed6c8bf947b78737372747172757176757272706c
6f726f747575717271716d6f7172706d75757672737b76727175737171726f716f717074
706b6c6b7099bbbdc495746f7db6856f666b696a6c71759cb7b8bda17e7573aa8c7272c0
c6c8c2a577716b6e676ea1ce8377ac927faf93809eb17869696c676662676a666563635f
6065645c5c615e615d5c595b5957565b59514e514d3f
000a050d0200000001150f12171c202227202b2e37585a59605f5b635c63645e60708c72
81a076a8b1b1a674719689839e83736e6a6c6f6a73b6c3c5c5927b97bdc488757ea9c1bc
93766f74726b72988071819a8282aeb1a58a756d6d6d70727373716e756f70716a6c6f6b
71716d6f6b6f6a6c7370717196aa8871738eb8b9897f7d9b8377a4967673707272729baa
aaa79275707071706d7b927984a480a6b3b3b2897a7674737376736f7172767470717270
71717171747574746e706e707671776f706c726e7878707273716f7274726f686970706f
706e6e70707791a1a479706d7397756c6c6c6b676a6f7373aab6b37a706f6d706b6e6ea9
b1aeae8e736f6e606e6f8e9e736c8e7c738a776e798f6e6661686968626462636166635e
5c605a5c5c585b5a5958575856555555534f4e4c403b
00010a010100000000010511121f211f1d23292237545c605f5e595b5d5e615e5f636f64
647669777c79746e696d6d6a6c68696c686e6c686d6e7375756d6e73757174726e717774
74706c696e6d6f7b7171757b767a7f7e7a766f6f6c6c70707173716a6e6d6b6e6c6c6d6a
716d70706b716e6f6f6c6f6e7272726f6e6d727271716e767470767a7074747473727576
7a787a726d7174726f747471767f70767f807c767175727377767570727473726f6e7171
73737372717273726f706e746f7872716f7176757376726d71727271706f706e6d6e6e6b
716f71706c6e707174726f6e70706b6b686c6d63666a6d7072746c6c6b6c696d696a6e6f
6e716f6a656e6a676f6d6871716c77716b6a6c696c71666761686b66616163635d62605d
5e5b585b5b595d5a58564f545757545551484f484232
000001000000000000050e0e1117101e1a1e24232f4c565c5e5a5b585a5a595d5a5e5f62
5b5f64646668666a6d696a686867696b686d6f6a656f6b6f6e6f6a6f726b6f6f6b6d6a6a
726c6d6f6e726c6f7172717272746e6c70706d6f6d6c6c6b6e706f65676e666e6e6e676c
6f6d6f6e6a6c696d706d696d74706e6e696e6f6e6b6e6f79717571707376777075756e6c
727076727070716f6e74736f72757170737376726d7371767a7373707274726f6f737270
7570726e706d6d6f6f72706c6d7073736f7071727072746e6f7472716d6f71706f6d716f
6f6f71706a6d6d6e706f6c6d6d6b6d6766676b66686c676d696b666c6d666c6865656c65
6e6e6766686366666c65666b6c676c6d6967686b6d67666367676266605d61655f5e5d5d
5d5c585d595a5a5a5a54585658535a53534b403f3412
00000000000000000001050e120f171b1f121b202d455555585459595754585b595a605f
5f5b5f63606565666d69666567656a6d6a676866666a666b6b716e6d6d686e6c6a6a686b
6b6d6e6e716e6d716f726d6c6d6f6a6d6d6e6d6e6d6a696b6c6c6964646c676d6d6b6669
6769686c6865676b6d6a666d6e6b696d6e716b6e6e6c6e6e716e6d726d746c6d75707d6d
6c70726f706f6e6c6d6f726e6e72716e706f747270737176737270716f736e6f71707372
726e756f72726e727170726e6c7173736f7370716e6874756f6f72706c6d6f6b6d6e6e6e
6c6d6e6d6a6f6a6e6e6b68696a6d68676b666a626a6b6c6b67696b6b666666695f656863
686c695a696b66696961646764636d68646962636b66676460645c62615b605f625f5b5b
5b5c595b5a58575356535655544a534c4d423f2e2002
0000000000000000000001020215100c1111130e2e464e5556525552574f555555575f5e
615960605e6467606564645f6865656a686265666964676c6b6868686a686c6b656c626a
6c6d6d6b6d6b6b6d6d6b6d6b716c68696b6a676a686a6a6a6968656867646a6b66686965
62696367656767676b70696a68666a6c6b6e71676b6b6a6e6b716d6e6d6b6b746e70726e
70706f706e6f6e6a686e6f6f6e70706f706f726e7073707671706a736e716e706f707272
6c6c6b6b7070757872756e6b6e6b746f6f736f6c716e75706f716f726e6d706c6e6c6e6b
6e6b6c6d676c666e686c6863666a65686a6a646467676a696a686a676a69676861686663
676a685e66676764636662656862626763636465666165625d665f5d5b5b6359605f5859
5a5c585756555655534f4f4f4d4a46453e36270b0000

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%EndDocument

 endTexFig
 917 3043 a FH(\(a\))32 b(Computed.)1332 b(\(b\))30 b(Measured.)300
3265 y(Figure)40 b(5.11:)64 b(Input)39 b(and)h(output)h(noise)f(PSD)h
(of)g(the)g(circuit)e(sho)m(wn)i(in)e(Fig.)72 b(5.10)43
b(due)d(to)i(the)300 3378 y(opamp.)e(The)30 b(input)f(noise)g(PSD)i(is)
e(set)i(to)g(-61.5)h(dB.)300 3653 y(\(5.19\))e(is)d(automatically)h
(satis\014ed.)39 b(Hence,)30 b(the)e(computed)g(and)g(the)g(measured)g
(results)e(are)j(almost)300 3879 y(iden)m(tical.)300
4105 y FD(Example)34 b(2)573 4331 y FH(Figure)j(5.10)h(sho)m(ws)f(a)g
(lossy)f(SC)g(in)m(tegrator.)62 b(The)36 b(output)h(noise)f(PSD)h(due)f
(to)i(the)f(white)300 4556 y(noise)23 b(comp)s(onen)m(t)g(of)h(the)f
(opamp)g(is)g(to)h(b)s(e)f(calculated)g(and)g(measured.)37
b(T)-8 b(o)24 b(simplify)c(the)k(example,)g(it)300 4782
y(is)29 b(assumed)g(that)h(the)g(opamp)g(has)f(in\014nite)f(gain,)h
FC(i.e.)40 b FH(\()p FG(A)2364 4796 y FA(0)2429 4782
y Fz(!)25 b(1)p FH(\).)41 b(F)-8 b(ollo)m(wing)29 b(the)h(steps)g
(describ)s(ed)300 5008 y(in)f(Sec.)i(5.4.2)h(with)d(aid)h(of)g(Fig.)h
(5.4\(c\))h(the)f(follo)m(wing)e(is)g(obtained:)1076
5302 y(\024)1060 5325 y FD(A)1139 5339 y FA(1)1261 5325
y FH(=)83 b(1,)1522 5301 y(\024)1516 5325 y FD(b)1574
5339 y FA(1)1639 5325 y FH(=)25 b(0,)1836 5324 y(\024)1836
5325 y FD(c)1882 5288 y FB(t)1882 5348 y FA(1)1947 5325
y FH(=)g(0,)2165 5302 y(\024)2144 5325 y FG(D)2219 5339
y FA(1)2284 5325 y FH(=)g(1,)p eop
%%Page: 117 130
117 129 bop 3764 -200 a FH(117)1093 130 y(\023)1092 131
y FD(c)1138 145 y FA(1)1261 131 y FH(=)1634 69 y Fz(\000)p
FH(1)p 1425 110 536 4 v 1425 193 a FG(C)1490 207 y FA(1)1549
193 y FH(+)20 b FG(C)1705 207 y FA(2)1765 193 y FH(+)g
FG(C)1921 207 y FA(3)2001 131 y FH(,)30 b(and)2315 108
y(\023)2293 131 y FG(D)2368 145 y FA(1)2433 131 y FH(=)2612
69 y Fz(\000)p FG(C)2748 83 y FA(2)2807 69 y Fz(\000)20
b FG(C)2963 83 y FA(3)p 2539 110 V 2539 193 a FG(C)2604
207 y FA(1)2664 193 y FH(+)g FG(C)2820 207 y FA(2)2880
193 y FH(+)f FG(C)3035 207 y FA(3)3115 131 y FH(,)528
b(\(5.53\))300 448 y(for)30 b FG(\036)c FH(=)f(1)30 b(and)879
424 y(\026)867 448 y FG(\036)25 b FH(=)g(0,)31 b(and)896
742 y(\024)880 765 y FD(A)959 779 y FA(2)1081 765 y FH(=)1460
704 y FG(C)1525 718 y FA(3)p 1245 744 V 1245 827 a FG(C)1310
841 y FA(1)1369 827 y FH(+)20 b FG(C)1525 841 y FA(2)1585
827 y FH(+)g FG(C)1741 841 y FA(3)1790 765 y FH(,)1852
741 y(\024)1846 765 y FD(b)1904 779 y FA(2)1968 765 y
FH(=)2202 704 y Fz(\000)p FG(C)2338 718 y FA(1)2377 704
y FG(C)2442 718 y FA(3)p 2074 744 V 2074 827 a FG(C)2139
841 y FA(1)2199 827 y FH(+)g FG(C)2355 841 y FA(2)2415
827 y FH(+)f FG(C)2570 841 y FA(3)2620 765 y FH(,)2676
764 y(\024)2675 765 y FD(c)2721 728 y FB(t)2721 788 y
FA(2)2787 765 y FH(=)25 b(0,)3005 742 y(\024)2984 765
y FG(D)3059 779 y FA(2)3123 765 y FH(=)g(1,)913 1015
y(\023)912 1016 y FD(c)958 1030 y FA(2)1081 1016 y FH(=)1245
954 y Fz(\000)p FH(1)p 1245 995 117 4 v 1251 1078 a FG(C)1316
1092 y FA(3)1401 1016 y FH(,)31 b(and)1685 993 y(\023)1664
1016 y FG(D)1739 1030 y FA(2)1804 1016 y FH(=)25 b Fz(\000)p
FH(1)1652 b(\(5.54\))300 1333 y(for)34 b FG(\036)e FH(=)f(0)j(and)903
1309 y(\026)891 1333 y FG(\036)d FH(=)g(1.)53 b FG(C)1266
1347 y FA(1)1337 1333 y FH(=)31 b(300)k(nF,)f FG(C)1843
1347 y FA(2)1914 1333 y FH(=)d FG(C)2081 1347 y FA(3)2152
1333 y FH(=)g(100)36 b(nF,)e(CD4066)i(analog)f(switc)m(hes,)g(and)e(an)
300 1559 y(LF356N)k(opamp)f(w)m(ere)g(used.)56 b(The)35
b(clo)s(c)m(k)h(frequency)f(w)m(as)h(4)g(kHz.)57 b(According)36
b(to)g(the)g(data)h(b)s(o)s(ok)300 1785 y(the)31 b(t)m(ypical)f(v)-5
b(alue)30 b(of)h(the)g(gain-bandwidth)c(pro)s(duct)j(of)h(the)f(opamp)h
(is)e FG(A)2962 1799 y FA(0)3002 1785 y FG(!)3059 1799
y FA(0)3124 1785 y FH(=)c(2)p FG(\031)s FH(4)p FG(:)p
FH(5)32 b(M)f(rad/sec.)300 2010 y(These)e(v)-5 b(alues)28
b(are)i(substituted)e(in)m(to)h(\(5.53\))i(and)e(\(5.54\))i(and)e(then)
g(in)m(to)g(\(5.45\).)42 b(The)29 b(\014nal)f(result)g(is)300
2236 y(plotted)i(in)f(Fig.)i(5.11\(a\))i(while)28 b(the)j(measured)f
(result)f(is)g(sho)m(wn)h(in)f(Fig.)i(5.11\(b\).)536
2462 y(Note)38 b(that)e(there)g(are)h(sligh)m(t)e(di\013erences)g(near)
h(8)h(kHz)f(\(t)m(wice)h(the)f(clo)s(c)m(k)h(frequency\))e(where)300
2688 y(the)25 b(prediction)e(in)g(Fig.)i(5.11\(a\))i(sho)m(ws)e(a)g
(notc)m(h.)39 b(This)23 b(is)h(due)g(to)i(the)e(presence)h(of)g(con)m
(tin)m(uous)f(paths)300 2914 y(from)34 b(the)h(noise)g(source)g(to)g
(the)h(output)e(of)h(the)g(SCN.)g(The)f(fact)i(that)f(the)g
(di\013erence)g(is)f(relativ)m(ely)300 3140 y(small)26
b(strengthens)h(the)h(v)-5 b(alidit)m(y)26 b(of)i(the)g(prediction)d
(made)j(in)e(Sec.)i(5.5,)i(namely)d(that)h(the)g(noise)f(due)300
3365 y(to)k(the)f(con)m(tin)m(uous)g(input-output)e(path)i(is)f
(negligible)f(compared)i(to)h(the)f(sampled-and-held)d(noise.)300
3591 y FD(Example)34 b(3)536 3817 y FH(The)23 b(purp)s(ose)e(of)i(this)
f(example)h(is)f(to)h(illustrate)f(that)h(computing)f(only)g(the)i
(sampled-and-held)300 4043 y(noise)29 b(in)g(Example)g(2)h(is)e
(di\013eren)m(t)i(from)f(making)g FG(D)2143 4058 y FB(k)2211
4043 y FH(=)c(0)30 b(in)f(\(5.19\))j(b)m(y)d(adding)g(a)h
(sample-and-hold)300 4269 y(circuit)f(at)i(the)g(output.)536
4494 y(Figure)i(5.12)j(sho)m(ws)d(the)h(same)g(SC)f(in)m(tegrator)i
(used)e(in)f(Example)h(2)h(follo)m(w)m(ed)g(b)m(y)f(a)h(sample-)300
4720 y(and-hold)c(circuit)h(sho)m(wn)h(in)e(the)j(dashed)e(area.)47
b(The)31 b(output)h(noise)f(PSD)h(will)d(b)s(e)j(determined)f(due)300
4946 y(to)e(the)g(same)f(opamp)g(as)h(in)e(Example)h(2.)40
b(F)-8 b(ollo)m(wing)28 b(the)h(same)f(pro)s(cedure)g(as)g(in)f
(Example)h(1)h(and)e(2,)p eop
%%Page: 118 131
118 130 bop 3764 -200 a FH(118)387 36 y
 27037857 10115893 -65781 37100912 38942801 52099153 startTexFig
 387 36 a
%%BeginDocument: figs/int2_scn.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   [8 8] 0 setdash
   newpath
      501 2 moveto 965 2 lineto 965 402 lineto 501 402 lineto
   closepath stroke
   [] 0 setdash
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      964 138 moveto
      988 138 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      734 56 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      735 30 moveto (_) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      529 98 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      316 234 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      316 178 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      24 274 moveto
      24 306 lineto
   stroke
grestore

% OVAL
gsave
   newpath 24 274 4 4 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 24 170 4 4 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      27 241 moveto (in) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      28 170 moveto
      76 170 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      132 170 moveto
      132 210 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      132 242 moveto
      132 306 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      148 306 moveto
      116 306 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      4 178 moveto
      88 0 atan dup cos 8 mul 4 exch sub
      exch sin 8 mul 266 exch sub lineto
   stroke
grestore
gsave
   newpath
      4 266 8 3 0 88 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      8 306 moveto
      40 306 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      196 170 moveto
      196 210 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      196 242 moveto
      196 306 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      180 306 moveto
      212 306 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      196 210 moveto
      220 234 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      244 170 moveto
      276.00 170.00 294.67 170.00
      300 170 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      276 250 moveto
      300 250 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      276 250 moveto
      276 306 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      260 306 moveto
      292 306 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      300 162 moveto
      300 258 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      300 258 moveto
      388 210 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      300 162 moveto
      388 210 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      388 210 moveto
      452 210 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      348 130 moveto
      348 162 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      356 130 moveto
      356 162 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      348 74 moveto
      348 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      356 74 moveto
      356 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      276 170 moveto
      276 146 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      356 146 moveto
      420 146 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      316 146 moveto
      308 146 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      276 90 moveto
      196 90 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      356 90 moveto
      420 90 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      420 106 moveto
      444 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      492 74 moveto
      492 106 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      420 90 moveto
      420 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      420 138 moveto
      420 210 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      420 90 moveto
      436 90 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      468 90 moveto
      492 90 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      102 153 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      206 153 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      450 131 moveto (f) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      612 242 moveto
      588 242 lineto
      588 218 lineto
      716 218 lineto
      716 282 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      628 306 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      628 250 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      588 322 moveto
      612 322 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      612 234 moveto
      612 330 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      612 330 moveto
      700 282 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      612 234 moveto
      700 282 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      588 322 moveto
      588 362 lineto
      588 354 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      572 362 moveto
      604 362 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      572 370 moveto
      604 370 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      588 370 moveto
      588 394 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      700 282 moveto
      732 282 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      572 394 moveto
      604 394 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      564 322 moveto
      588 322 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      516 322 moveto
      532 322 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      612 42 moveto
      588 42 lineto
      588 18 lineto
      716 18 lineto
      716 82 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      628 106 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      628 50 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      588 122 moveto
      612 122 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      612 34 moveto
      612 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      612 130 moveto
      700 82 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      612 34 moveto
      700 82 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      588 122 moveto
      588 162 lineto
      588 154 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      572 162 moveto
      604 162 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      572 170 moveto
      604 170 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      588 170 moveto
      588 194 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      700 82 moveto
      732 82 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      572 194 moveto
      604 194 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      532 122 moveto
      556 98 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      564 122 moveto
      588 122 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      516 122 moveto
      532 122 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      516 122 moveto
      516 322 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      452 210 moveto
      484 210 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      548 184 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      565 195 moveto (4) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      852 98 moveto
      828 98 lineto
      828 74 lineto
      956 74 lineto
      956 138 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      868 162 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Symbol findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      868 106 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      828 178 moveto
      852 178 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      852 90 moveto
      852 186 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      852 186 moveto
      940 138 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      852 90 moveto
      940 138 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      828 178 moveto
      828 218 lineto
      828 210 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      812 218 moveto
      844 218 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      812 226 moveto
      844 226 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      828 226 moveto
      828 250 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      940 138 moveto
      972 138 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      812 250 moveto
      844 250 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      804 178 moveto
      828 178 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      853 227 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      871 238 moveto (6) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      732 82 moveto
      756 58 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      732 282 moveto
      756 258 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      764 82 moveto
      788 82 lineto
      788 282 lineto
      764 282 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      804 178 moveto
      788 178 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      1018 185 moveto (out) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      988 234 moveto
      988 202 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      996 146 moveto
      48 0 atan dup cos 8 mul 996 exch sub
      exch sin 8 mul 194 exch sub lineto
   stroke
grestore
gsave
   newpath
      996 194 8 3 0 48 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   newpath 988 202 4 4 tgifellipse stroke
grestore

% OVAL
gsave
   newpath 988 138 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      972 234 moveto
      1004 234 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      736 251 moveto (f) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      468 210 moveto
      516 210 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      684 377 moveto (Output sample-and-hold) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      12 232 moveto (v) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      1004 176 moveto (v) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      427 69 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      428 42 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      436 90 moveto
      460 66 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      532 322 moveto
      556 298 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      534 295 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      535 269 moveto (_) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      535 373 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      552 383 moveto (5) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      100 214 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      101 188 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      132 210 moveto
      108 234 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      108 170 moveto
      84 146 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      150 144 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      167 155 moveto (1) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      156 154 moveto
      156 186 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      164 154 moveto
      164 186 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      164 170 moveto
      212 170 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      108 170 moveto
      156 170 lineto
   stroke
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      214 213 moveto (f) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      215 187 moveto (_) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      212 170 moveto
      236 146 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      310 130 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      327 142 moveto (3) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      276 146 moveto
      348 146 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      312 71 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      329 82 moveto (2) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      348 90 moveto
      276 90 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      196 171 moveto
      196 90 lineto
   stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Sep 16 10:28:03 1998
%%EndDocument

 endTexFig
 990 1513 a FH(Figure)30 b(5.12:)42 b(Lossy)31 b(SC)e(in)m(tegrator)i
(with)e(output)h(sampling.)245 1844 y
 15238157 8944863 0 0 18945146 18945146 startTexFig
 245 1844 a
%%BeginDocument: figs/pic06m.eps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	false def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0793651 0.840526 0.0123607 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(2)] .18254 0 0 2 0 Minner Mrotsboxa
[(4)] .34127 0 0 2 0 Minner Mrotsboxa
[(6)] .5 0 0 2 0 Minner Mrotsboxa
[(8)] .65873 0 0 2 0 Minner Mrotsboxa
[(10)] .81746 0 0 2 0 Minner Mrotsboxa
[(12)] .97619 0 0 2 0 Minner Mrotsboxa
[(Frequency in kHz)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-60)] -0.0125 .09889 1 0 0 Minner Mrotsboxa
[(-50)] -0.0125 .22249 1 0 0 Minner Mrotsboxa
[(-40)] -0.0125 .3461 1 0 0 Minner Mrotsboxa
[(-30)] -0.0125 .46971 1 0 0 Minner Mrotsboxa
[(-20)] -0.0125 .59331 1 0 0 Minner Mrotsboxa
[(Noise PSD in dB)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
0 0 .5 r
.001 w
.04762 0 m
.04762 .61803 L
s
P
p
0 0 .5 r
.001 w
.14048 0 m
.14048 .61803 L
s
P
p
0 0 .5 r
.001 w
.23333 0 m
.23333 .61803 L
s
P
p
0 0 .5 r
.001 w
.32619 0 m
.32619 .61803 L
s
P
p
0 0 .5 r
.001 w
.41905 0 m
.41905 .61803 L
s
P
p
0 0 .5 r
.001 w
.5119 0 m
.5119 .61803 L
s
P
p
0 0 .5 r
.001 w
.60476 0 m
.60476 .61803 L
s
P
p
0 0 .5 r
.001 w
.69762 0 m
.69762 .61803 L
s
P
p
0 0 .5 r
.001 w
.79048 0 m
.79048 .61803 L
s
P
p
0 0 .5 r
.001 w
.88333 0 m
.88333 .61803 L
s
P
p
0 0 .5 r
.001 w
.97619 0 m
.97619 .61803 L
s
P
p
0 0 .5 r
.001 w
0 0 m
1 0 L
s
P
p
0 0 .5 r
.001 w
0 .0618 m
1 .0618 L
s
P
p
0 0 .5 r
.001 w
0 .12361 m
1 .12361 L
s
P
p
0 0 .5 r
.001 w
0 .18541 m
1 .18541 L
s
P
p
0 0 .5 r
.001 w
0 .24721 m
1 .24721 L
s
P
p
0 0 .5 r
.001 w
0 .30902 m
1 .30902 L
s
P
p
0 0 .5 r
.001 w
0 .37082 m
1 .37082 L
s
P
p
0 0 .5 r
.001 w
0 .43262 m
1 .43262 L
s
P
p
0 0 .5 r
.001 w
0 .49443 m
1 .49443 L
s
P
p
0 0 .5 r
.001 w
0 .55623 m
1 .55623 L
s
P
p
0 0 .5 r
.001 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.18254 0 m
.18254 .00625 L
s
P
[(2)] .18254 0 0 2 0 Minner Mrotshowa
p
.002 w
.34127 0 m
.34127 .00625 L
s
P
[(4)] .34127 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(6)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.65873 0 m
.65873 .00625 L
s
P
[(8)] .65873 0 0 2 0 Minner Mrotshowa
p
.002 w
.81746 0 m
.81746 .00625 L
s
P
[(10)] .81746 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(12)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.05556 0 m
.05556 .00375 L
s
P
p
.001 w
.0873 0 m
.0873 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.15079 0 m
.15079 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.24603 0 m
.24603 .00375 L
s
P
p
.001 w
.27778 0 m
.27778 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.37302 0 m
.37302 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.43651 0 m
.43651 .00375 L
s
P
p
.001 w
.46825 0 m
.46825 .00375 L
s
P
p
.001 w
.53175 0 m
.53175 .00375 L
s
P
p
.001 w
.56349 0 m
.56349 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.62698 0 m
.62698 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.72222 0 m
.72222 .00375 L
s
P
p
.001 w
.75397 0 m
.75397 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.84921 0 m
.84921 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.9127 0 m
.9127 .00375 L
s
P
p
.001 w
.94444 0 m
.94444 .00375 L
s
P
[(Frequency in kHz)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .09889 m
.00625 .09889 L
s
P
[(-60)] -0.0125 .09889 1 0 0 Minner Mrotshowa
p
.002 w
0 .22249 m
.00625 .22249 L
s
P
[(-50)] -0.0125 .22249 1 0 0 Minner Mrotshowa
p
.002 w
0 .3461 m
.00625 .3461 L
s
P
[(-40)] -0.0125 .3461 1 0 0 Minner Mrotshowa
p
.002 w
0 .46971 m
.00625 .46971 L
s
P
[(-30)] -0.0125 .46971 1 0 0 Minner Mrotshowa
p
.002 w
0 .59331 m
.00625 .59331 L
s
P
[(-20)] -0.0125 .59331 1 0 0 Minner Mrotshowa
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .14833 m
.00375 .14833 L
s
P
p
.001 w
0 .17305 m
.00375 .17305 L
s
P
p
.001 w
0 .19777 m
.00375 .19777 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .27193 m
.00375 .27193 L
s
P
p
.001 w
0 .29666 m
.00375 .29666 L
s
P
p
.001 w
0 .32138 m
.00375 .32138 L
s
P
p
.001 w
0 .37082 m
.00375 .37082 L
s
P
p
.001 w
0 .39554 m
.00375 .39554 L
s
P
p
.001 w
0 .42026 m
.00375 .42026 L
s
P
p
.001 w
0 .44498 m
.00375 .44498 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .51915 m
.00375 .51915 L
s
P
p
.001 w
0 .54387 m
.00375 .54387 L
s
P
p
.001 w
0 .56859 m
.00375 .56859 L
s
P
p
.001 w
0 .07416 m
.00375 .07416 L
s
P
p
.001 w
0 .04944 m
.00375 .04944 L
s
P
p
.001 w
0 .02472 m
.00375 .02472 L
s
P
[(Noise PSD in dB)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.18254 .61178 m
.18254 .61803 L
s
P
p
.002 w
.34127 .61178 m
.34127 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.65873 .61178 m
.65873 .61803 L
s
P
p
.002 w
.81746 .61178 m
.81746 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.05556 .61428 m
.05556 .61803 L
s
P
p
.001 w
.0873 .61428 m
.0873 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.15079 .61428 m
.15079 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.24603 .61428 m
.24603 .61803 L
s
P
p
.001 w
.27778 .61428 m
.27778 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.37302 .61428 m
.37302 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.43651 .61428 m
.43651 .61803 L
s
P
p
.001 w
.46825 .61428 m
.46825 .61803 L
s
P
p
.001 w
.53175 .61428 m
.53175 .61803 L
s
P
p
.001 w
.56349 .61428 m
.56349 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.62698 .61428 m
.62698 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.72222 .61428 m
.72222 .61803 L
s
P
p
.001 w
.75397 .61428 m
.75397 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.84921 .61428 m
.84921 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.9127 .61428 m
.9127 .61803 L
s
P
p
.001 w
.94444 .61428 m
.94444 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .09889 m
1 .09889 L
s
P
p
.002 w
.99375 .22249 m
1 .22249 L
s
P
p
.002 w
.99375 .3461 m
1 .3461 L
s
P
p
.002 w
.99375 .46971 m
1 .46971 L
s
P
p
.002 w
.99375 .59331 m
1 .59331 L
s
P
p
.001 w
.99625 .12361 m
1 .12361 L
s
P
p
.001 w
.99625 .14833 m
1 .14833 L
s
P
p
.001 w
.99625 .17305 m
1 .17305 L
s
P
p
.001 w
.99625 .19777 m
1 .19777 L
s
P
p
.001 w
.99625 .24721 m
1 .24721 L
s
P
p
.001 w
.99625 .27193 m
1 .27193 L
s
P
p
.001 w
.99625 .29666 m
1 .29666 L
s
P
p
.001 w
.99625 .32138 m
1 .32138 L
s
P
p
.001 w
.99625 .37082 m
1 .37082 L
s
P
p
.001 w
.99625 .39554 m
1 .39554 L
s
P
p
.001 w
.99625 .42026 m
1 .42026 L
s
P
p
.001 w
.99625 .44498 m
1 .44498 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .51915 m
1 .51915 L
s
P
p
.001 w
.99625 .54387 m
1 .54387 L
s
P
p
.001 w
.99625 .56859 m
1 .56859 L
s
P
p
.001 w
.99625 .07416 m
1 .07416 L
s
P
p
.001 w
.99625 .04944 m
1 .04944 L
s
P
p
.001 w
.99625 .02472 m
1 .02472 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.004 w
.04762 .08034 m
.05385 .08034 L
.06008 .08034 L
.06632 .08034 L
.07255 .08034 L
.07878 .08034 L
.08501 .08034 L
.09124 .08034 L
.09748 .08034 L
.10371 .08034 L
.10994 .08034 L
.11617 .08034 L
.1224 .08034 L
.12864 .08034 L
.13487 .08034 L
.1411 .08034 L
.14733 .08034 L
.15356 .08034 L
.1598 .08034 L
.16603 .08034 L
.17226 .08034 L
.17849 .08034 L
.18472 .08034 L
.19096 .08034 L
.19719 .08034 L
.20342 .08034 L
.20965 .08034 L
.21588 .08034 L
.22212 .08034 L
.22835 .08034 L
.23458 .08034 L
.24081 .08034 L
.24704 .08034 L
.25328 .08034 L
.25951 .08034 L
.26574 .08034 L
.27197 .08034 L
.2782 .08034 L
.28444 .08034 L
.29067 .08034 L
.2969 .08034 L
.30313 .08034 L
.30936 .08034 L
.3156 .08034 L
.32183 .08034 L
.32806 .08034 L
.33429 .08034 L
.34052 .08034 L
.34676 .08034 L
.35299 .08034 L
Mistroke
.35922 .08034 L
.36545 .08034 L
.37168 .08034 L
.37792 .08034 L
.38415 .08034 L
.39038 .08034 L
.39661 .08034 L
.40284 .08034 L
.40908 .08034 L
.41531 .08034 L
.42154 .08034 L
.42777 .08034 L
.434 .08034 L
.44024 .08034 L
.44647 .08034 L
.4527 .08034 L
.45893 .08034 L
.46516 .08034 L
.4714 .08034 L
.47763 .08034 L
.48386 .08034 L
.49009 .08034 L
.49632 .08034 L
.50256 .08034 L
.50879 .08034 L
.51502 .08034 L
.52125 .08034 L
.52748 .08034 L
.53372 .08034 L
.53995 .08034 L
.54618 .08034 L
.55241 .08034 L
.55864 .08034 L
.56488 .08034 L
.57111 .08034 L
.57734 .08034 L
.58357 .08034 L
.58981 .08034 L
.59604 .08034 L
.60227 .08034 L
.6085 .08034 L
.61473 .08034 L
.62097 .08034 L
.6272 .08034 L
.63343 .08034 L
.63966 .08034 L
.64589 .08034 L
.65213 .08034 L
.65836 .08034 L
.66459 .08034 L
Mistroke
.67082 .08034 L
.67705 .08034 L
.68329 .08034 L
.68952 .08034 L
.69575 .08034 L
.70198 .08034 L
.70821 .08034 L
.71445 .08034 L
.72068 .08034 L
.72691 .08034 L
.73314 .08034 L
.73937 .08034 L
.74561 .08034 L
.75184 .08034 L
.75807 .08034 L
.7643 .08034 L
.77053 .08034 L
.77677 .08034 L
.783 .08034 L
.78923 .08034 L
.79546 .08034 L
.80169 .08034 L
.80793 .08034 L
.81416 .08034 L
.82039 .08034 L
.82662 .08034 L
.83285 .08034 L
.83909 .08034 L
.84532 .08034 L
.85155 .08034 L
.85778 .08034 L
.86401 .08034 L
.87025 .08034 L
.87648 .08034 L
.88271 .08034 L
.88894 .08034 L
.89517 .08034 L
.90141 .08034 L
.90764 .08034 L
.91387 .08034 L
.9201 .08034 L
.92633 .08034 L
.93257 .08034 L
.9388 .08034 L
.94503 .08034 L
.95126 .08034 L
.95749 .08034 L
.96373 .08034 L
.96996 .08034 L
.97619 .08034 L
Mistroke
Mfstroke
P
P
p
p
.004 w
.04762 .58881 m
.05385 .5809 L
.06008 .57292 L
.06632 .5652 L
.07255 .55794 L
.07878 .55119 L
.08501 .545 L
.09124 .53933 L
.09748 .53415 L
.10371 .52942 L
.10994 .5251 L
.11617 .52113 L
.1224 .51749 L
.12864 .51412 L
.13487 .51099 L
.1411 .50807 L
.14733 .50534 L
.15356 .50276 L
.1598 .50031 L
.16603 .49798 L
.17226 .49574 L
.17849 .49359 L
.18472 .4915 L
.19096 .48946 L
.19719 .48746 L
.20342 .48549 L
.20965 .48354 L
.21588 .48159 L
.22212 .47964 L
.22835 .47768 L
.23458 .4757 L
.24081 .47368 L
.24704 .47161 L
.25328 .46947 L
.25951 .46724 L
.26574 .46491 L
.27197 .46243 L
.2782 .45977 L
.28444 .45688 L
.29067 .45369 L
.2969 .45011 L
.30313 .44603 L
.30936 .44134 L
.3156 .43596 L
.32183 .42994 L
.32806 .42368 L
.33118 .42073 L
.33429 .41808 L
.33741 .41592 L
.33897 .41506 L
Mistroke
.34052 .41437 L
.3413 .41409 L
.34208 .41385 L
.34286 .41365 L
.34364 .41349 L
.34403 .41343 L
.34442 .41338 L
.34481 .41334 L
.3452 .4133 L
.34539 .41329 L
.34559 .41328 L
.34578 .41327 L
.34598 .41327 L
.34617 .41327 L
.34637 .41326 L
.34656 .41327 L
.34676 .41327 L
.34695 .41327 L
.34715 .41328 L
.34754 .4133 L
.34792 .41333 L
.34831 .41337 L
.34909 .41347 L
.34987 .41359 L
.35143 .41391 L
.35299 .41431 L
.35922 .41629 L
.36234 .41729 L
.36545 .41818 L
.36857 .41892 L
.37013 .41922 L
.37168 .41948 L
.37324 .41969 L
.3748 .41986 L
.37636 .41999 L
.37714 .42003 L
.37792 .42007 L
.37831 .42008 L
.3787 .42009 L
.37908 .4201 L
.37928 .4201 L
.37947 .42011 L
.37967 .42011 L
.37986 .42011 L
.38006 .42011 L
.38025 .42011 L
.38045 .42011 L
.38064 .42011 L
.38084 .42011 L
.38103 .42011 L
Mistroke
.38142 .4201 L
.38181 .42009 L
.3822 .42008 L
.38259 .42007 L
.38337 .42004 L
.38415 .42 L
.38571 .41989 L
.38726 .41975 L
.39038 .41938 L
.3935 .4189 L
.39661 .41833 L
.40284 .41692 L
.40908 .41523 L
.41531 .41331 L
.42154 .4112 L
.42777 .40892 L
.434 .40649 L
.44024 .40394 L
.44647 .40127 L
.4527 .39849 L
.45893 .39561 L
.46516 .39263 L
.4714 .38956 L
.47763 .38639 L
.48386 .38313 L
.49009 .37978 L
.49632 .37634 L
.50256 .37281 L
.50879 .36919 L
.51502 .36548 L
.52125 .36167 L
.52748 .35777 L
.53372 .35377 L
.53995 .34967 L
.54618 .34547 L
.55241 .34116 L
.55864 .33672 L
.56488 .33215 L
.57111 .32743 L
.57734 .32253 L
.58357 .3174 L
.58981 .31198 L
.59604 .30618 L
.60227 .29985 L
.6085 .29275 L
.61473 .28454 L
.62097 .27463 L
.6272 .26209 L
.63031 .25437 L
.63343 .24532 L
Mistroke
.63655 .23451 L
.63966 .22138 L
.64278 .20506 L
.64589 .18418 L
.64745 .17134 L
.64901 .15629 L
.65057 .1383 L
.65213 .11616 L
.65368 .08771 L
.65446 .06986 L
.65524 .04832 L
.65602 .02125 L
Mfstroke
.65648 0 m
.65602 .02125 L
s
s
s
s
s
s
s
s
s
s
.661 0 m
.66147 .02163 L
s
.66147 .02163 m
.66225 .04815 L
.66303 .06923 L
.66459 .10155 L
.66615 .12581 L
.66771 .14507 L
.67082 .17418 L
.67394 .1954 L
.67705 .21161 L
.68017 .22435 L
.68329 .2346 L
.68952 .24993 L
.69575 .26076 L
.70198 .2688 L
.70821 .27507 L
.71445 .28015 L
.72068 .28444 L
.72691 .28816 L
.73314 .29149 L
.73937 .29451 L
.74561 .29729 L
.75184 .29988 L
.75807 .30231 L
.7643 .30459 L
.77053 .30675 L
.77677 .30879 L
.783 .31071 L
.78923 .31252 L
.79546 .31423 L
.80169 .31583 L
.80793 .31733 L
.81416 .31873 L
.82039 .32002 L
.82662 .32121 L
.83285 .3223 L
.83909 .32329 L
.84532 .32416 L
.85155 .32494 L
.85778 .3256 L
.86401 .32615 L
.87025 .32657 L
.87336 .32674 L
.87648 .32688 L
.87959 .32698 L
.88115 .32702 L
.88193 .32703 L
.88271 .32705 L
.88349 .32706 L
.88427 .32707 L
.88466 .32707 L
Mistroke
.88505 .32707 L
.88544 .32708 L
.88563 .32708 L
.88583 .32708 L
.88602 .32708 L
.88622 .32708 L
.88641 .32708 L
.88661 .32708 L
.8868 .32708 L
.88699 .32708 L
.88719 .32708 L
.88738 .32708 L
.88758 .32708 L
.88777 .32708 L
.88816 .32707 L
.88855 .32707 L
.88894 .32707 L
.88972 .32706 L
.8905 .32705 L
.89206 .32702 L
.89362 .32698 L
.89517 .32693 L
.89829 .32679 L
.90141 .32661 L
.90452 .32637 L
.90764 .32607 L
.91387 .32529 L
.9201 .32421 L
.92633 .32276 L
.93257 .32086 L
.9388 .3184 L
.94503 .31526 L
.95126 .31139 L
.95749 .30686 L
.96373 .30212 L
.96684 .29996 L
.96996 .29814 L
.97152 .29742 L
.97307 .29683 L
.97385 .2966 L
.97463 .29641 L
.97541 .29626 L
.97619 .29615 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
%%EndDocument

 endTexFig
 2275 1659 a
 13257874 10404916 65781 35916840 20523909 51901808 startTexFig
 2275 1659 a
%%BeginDocument: figs/pic06.ps


% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 311 string def

% define space for color conversions
/grays 311 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
1 546 translate

% size of image (on paper, in 1/72inch coords)
310.96800 243.00000 scale

311 243 8			% dimensions of data
[311 0 0 -243 0 243]		% mapping matrix
{currentfile pix readhexstring pop}
image

0a08070a0b0a090a0a090808080808090a0b0a0b0c09080a0b0b090a09090b0a0a0b0a0a
0a0907080808090806060609080806060707070707070707080b0b080504030305060707
070807060707060605060807070807050609080806050406080706050708080a0b0a0809
090b0c0d0f10101110121413141313141414131313131213131312131515141516171819
1b1c1b1a1b1b1c1b1c1c1d1c1d1f20212021212324252627272625242322212526242323
2624211f202425252220222321232222212223231f1b1b1d1f1f1d1c1b1c1a17191a1715
161615141515131213120f0e0c0e1010100f0d0b0b0b0b08060708070605040506050506
030101040605020304050504040405060708080806060504040606070606060505050505
06040404050505080a0705050605050504050505060605
080907060709090a090807090b0a0a09090b0c0a0a0908090a0a090b0a0809080608090a
080607070607080705040607070908080a09060507060707090a0809090906060708090b
0a0a0806070a090807060708090a0a0b0d111113131317191a1c1d1e2022222123232221
242426282726272727282829292a2929292828292a2c2c2c2b2b2c2e30302e2f31323334
3535343435343637353537363738373738383535393a3a3b393636353434333435373636
37393736363736343437373535363535373837373433363a39363534363734333333302f
322f2d2d2c2d2e2c2c2e2e2b28282b29282625262525242222211e1b1c1c18191a1a1715
15141212100f0d0d0d0c0c0f0c0d0f0e0f110e0a0a080605070807060606050504050607
0807070604040508090605060807060706050203040507
09090707080909090808080a0b0b0c0d0a090a0b0a0908090807090a090707080707090a
09090909080807090808090a0a0a0b0c0d0e0d0c0b0c0b0e0f0e0e0d0f10100f0f121314
171818171a1e22252622232727282a2d2f2d2c2c2b2e32312e2f32333335373435353534
353838383738393736363738373836353534343433343536353538373839393c3e3e3d3d
3d3d3e3f3c3a3837373938393d3e3e3d3c3c3d3e3f3e3d3d3a3a3a3b3a3d40403f3d3c3c
3d3d3f403f3f413f3f3f3c3c3c3c3a3c42433f3d3c3f4241403d3d3d3e3d3d403f3c3b3d
3d3a373736373938383a3935363739373636343435333331312e2d2e31303232322c2c2e
2e2825262827232424221f1e1f1f1e1f1f21221f1a191916121211100e0c0c0b0909090c
0d0f0e0c0c0d0d0c0b0806050707070604040403030303
07070909090a080a0c0d0b0a0a0b0b0c0b0a0c0c0a0b0a090808090a090a0c0d0d0e1011
1212131514121114151516181718191a1a1b1d1d1d1e1f2022232426262626292b2a2b2b
2c2c2d3132333333312f3234353636353435373a3a393b3c3b393d3f3d3c3b3c3d3d3d3c
3b3d3f3d3c3d3e3c3a3b3d3c3c3d3b39393a3939383736383b3d3d3d3f3e3e3e4141403e
3d3f40403c3d3c3b3e3e3c3e3f4142413f3f3f414041403f404141404244454240403e3f
43464745434649454344454343434244484a474240414042424040403e3d4245423f4142
42413e3d3b3b3a3b3c3a3b3c3d3e3e3b393a3c3e3b38363433363a3a3733323633303132
32323233302d2e2d2e2c2c2c2b2a2c2e2c2c2a29282626231f1d19171713131212131417
181b1b1a1b1c1c1a171414120f0e0b0806060604030303
060706070707070807090908090a0a090c0e0f0e0f10141719191a1e1f1e1f2021202222
212227282926232528292a2c2c2c2e2f323130313230302f30323434313030353534363a
39363638373a3937373737373a3c3a3b3e3f404545414140403f3e3f41403d3d40424242
444240413f3e3d3f3e3d3e3c3c3b3a3a3d3c3b3b3c3d3b3a3b3c3e3f3e3e3d3e403f3e41
42413f3f404142433f3e4142403f4347484646464544434242403f424445464343454545
464746444446494845474644454644464849474444424042454443414144454542434646
44444242403f3d3c3c3e3d3d3d4042414041403f3f403d3c3d3b3838373537393836363a
3935313132332f2e313331312f2f2d2e2f2d2c2c2926272828231e1d1b171819191a1c1c
1e2224262728282624242424211e1c19130e0806030204
0a0a09060507070607090b0e131a1b1f242526262629292c2f2f2f323433333536333433
3232343635323131333435333335373738373739373638373737353637363739393a3d3c
38393b3b3d3e3d3c3e40413e3d3e3f42423f4044423e40414143434242403f3f40404244
44444342414140404141403e3b3b3c3e3d3c3c3e3f413e3d403f3f3d3d3e3f3f40404043
424141424343423e3e41403e3d4143434444444443444746414144434446474642434a4b
4844414246494847494c494644474746474a464445444141454744424445474746464747
48474343444342403e3f41403d4346423e3f3e3e3e3d3c3a393a393a3b3b3b3c3b3a3939
393937363534343332323433302f2e2f302e30312e2b2a2a2a262524221c1b1e201f2022
252929292a2b2c2b29292a2924262728262018120d0908
0a090808080a0c0e131c23282b2c2f33343637353336393a3b3a3a3a3a3b3b3d3c3b3b3c
3b3b3b3b3a3a3b3c3b3c3b39373a3e3d3b3a3a3e3f3c3a3b3d3d3939393938383b3d3c3d
3e3e3e404242424141414242413f40424241404647434243424445454444434344434343
41434546454542414142413e3c3e3f403e3f3f4041413f41434342424140413f3f414445
42414443424445434242444445464847444242434445454647494744454b49433f44494b
4b49494a49494a494b4c4c4846484b4b4b4b4a474846424245474645474b4a4a4e515351
504e4c4e51504a434141413f403f464e4c4642403e3c3b3c4146413d3e3b36363c3f403b
38393532333533323231333635312f2f302d2e3030302f2d2b27262727221f2224222427
2a2b2b2c2b2a292a2a2a2c2a292b2b2a272324231c140c
0b09070608101d272a30343636373a3d3b3c403f3d3d3d3e403e3d3f403d3c3d3e3e3f3e
3e3f3f3e3e3f42413f3f3f40404242403e3c3d3e3f3e3d3f3f413f3b3c3c3b3d3d3e3e3e
3f403e41444545434241424242424345464445464645474b494744434243434345444344
4445454748474541404040403e3e40403f403f403f414545454546454342424242444848
44434543403f4144464647474a4e4d4e4b484b4f504e4c51575a54515355524d52545660
686a5f57636d6c5f514d4e4a484a4b586d6d594a484746454749484e5d64565268787c79
705f5b6c756c59474143444445495d757156444241413f4357695a556357444140403b38
39393838363433343634333333312f2e2d2e2f3133312e2f2d2928282726232424222529
2a2b2d2f2e2c2a2b2b2c2a2b2c2e2f2e2a282a2c27231a
0909070913212b3034363c414142403f3e3d4042424342424242434344423f4040414242
434443424143444140414245484c4c4b46424142424343484e514c4441404143433f403f
3f434b4f4e50514f4c474544444544464748494646464749494746474644444648464747
4545474745454442423f40413f3f41404142434342434345464443424142424141444643
44444545444343444344464b5d696f7a6c5b7292977a6d879e9d866f7b82706f7c75758b
96907c7085918a765b4e4d4c4b4c53677e7f6d554a4949494b4c4f648484625f8599958b
7c6a6b7e85826e52444344474c5e747871614d42423e3e4159705f59675c52545753483f
3d393737373534333335363634322f303031313031312f2f2d2a2a2a292826252626272b
2d2d2e2d2e2f2e2d2d2c28282b2e2e2b2a292b2c292723
0c0d111d2c33353737393d4148545a59544d47515d63655d545e6a6c695a4e4847464645
454644434646474b524e494b5766685b4c47494747494c596f776a53454142403f3f4144
45546e726d83938668514a464545494c4b4642434547484c4b4745494b494849484a4a48
484949454647474644444443434242444243454443454747474745424345434143454645
424244474845454647484b536c848c8c766e817b767776898a7771738589818379686f79
6e625e6a7e77787a6150504d4d4f5b6f7173715b4d4b4a4a4a4e5e7d948a656286958b7a
6760696e71847d5848494a4b526b776462645245413f3f4560776b67737284989d906a47
3c3c3d3c3a39353739373536343232343231323132333231302e2c2b2a27262729292c2e
30302e2d2d2e2e2f2f2d292b2c2d2c292a2b2c2a292926
0b101e2f383d3e3e403f3e475f7a857f7360586b81817e7066727e7c735f514b49474a49
47454545484b51657162525a71807f6d5346494a4a49566b787974634e46444344474846
475c7c7d747c75767e6b56535052524d4c4846484a4a4a4a484848494a484547494c4c4b
48484949494a4a4644454648464341424445464542434544444444454649454447474545
464545464a484646474849516a8b9a9277717f73707679878575717483908673605c6d7b
74645c6c8480847e604e4d4c4d4e587081806e594e4d4a484a4e5b708482635a76858a8a
7d6b6f7e899482594c535550516b77656567574944414247648e9e9e8a6352566874563f
3d3d3e3c3b3a38383a39383637333334323536343233323231302e2c2c2a292a29282c31
302e2e2f2e2e2d2e302d2c2c2f2e2d2c2a2b2c2a292927
0d182b3b423f3f4141414147627a7769717064737c6a5d596270696059504c4c4b4a4b4c
4c4e4f515257677e816957697e7773735a49494c4b4b5d6e615763655245444645454a50
5667828076787279857b787d69666d5746484b4f4e4b4a4a4b4a494b4c4b48484948484a
4a4a4a4b494848484947444445464240434749484443444647454443464949474849494a
4a4747494948484947484a5068879692777596a8a6938093a6a38970839c906e5b5a7392
947d646f939d9074584e4d4c4c4d58708483725a504e4d4b4b4c505c777f6351575b5f79
8a7566788d957f5a5a787e6a5a6c76686765524441424147637b6e6a705a4d5f6e5d453d
3b3c3c3a3b3b38393b3b3737383735363535363535343533313130302e2e2e2e2a2c2e31
31302f3132312f30302e2e302f30302c2a2b2a292c2d2b
1322333a3d3d3e404343454d6479786f7674657280776c5f6072797567544c4b4b4b4c4c
596d78776d63687371655a63797f7f73574b4e545856626c5f5464695648464446485269
83949a86788b9c93766679877470745b4a4a4a4d4d4b484c4e4d4b4b4b4b4c4b4d4d4a4b
4d4c4c4a48484847484845444446454243464847464542434847444344474a4a4948494b
4a48494a4947494a4a494950697a80877772857f7c7d7c8d95886e657f928772615d6e79
6c5c566b8f95866e564f4e4e4d4f5d7071757660504d4e4f4d4c515c778064576669687b
88735d62767d6d5663898f6f5a68766e6d634d4545474647607462606c616c8682685347
403e3b3a3a39393b3b38393a36343435373735343534343332333231302f302f2f2f3133
333031322f2f2f312f2f303130312f2d2d2c28292b2c2d
1b2c3b3d3a3b3f424342444c64808e8b7e665c718481776661727d7a6b564c4b4a4b4e4f
5b717b796b5d555c68655b60788585735a50596f7a6e686c5f56666b564a4948484b627c
7b7a89847b7e757c877e7d857572745c4d4c4c49494b4c4d4e4e4d4c4c4f4f4d4d4f4f4d
4b4a4c4b494c4a47454445484a4947474748474746464343454646434344484949494a4b
49494b4c49474548494b4d546a7476847671806f68727887817b7a71828d84837868717c
78706872828181775e514e4b4e525b718182715c514f50504c4c5d7a90957c6a77838585
7d6660727d6c584f5b70705e535d73857b5d4a45444546495e6d595a696d869c9c8a6444
3c3d3c3a39383a3a3a393a37363534343537383635373736343434302f303232312f3132
302e2f33302e303132302e303233312f2c2c292b2f2e2d
28353d403e3b3e4142464a4f627d87817461596e7c6b5e575d6d6b6059524c4b4b4c4e50
535657555452555f706d606a807d7b7860516386947a686d6a626b6c594d4a494d506379
717188857979707887756371888265524e4c4a4c4d4b4c4d4e4e4e4e5050514f4c4d4f4d
4d4b4c4c4c4b4b4a494747484a4b4a494a494847474847474749494643434345474a4a4b
4948494a4a484a494a4b4b536870738071707e6e687279867c6d6e72828471707a74788e
96917d7170676c6d5b4f4c4d4f52546378755f5553514e4e4e4e5f7a8789796364778278
62535a6b65564d4a4d4e4e4d4c4e59635e4e45444344484a4b4b464748484c53544e4842
3f403e3d3e3e3d3c3c3c3c3a373839383b3b3836343538393635343030333433302e3132
313032322e2e2f3131302f313433312e2e2d2d2f2e2a29
2c373b3e4142404243474d516278787072675c6b7b79756e6b6c6356524e4b4b4c4c4d4e
4d4b4b4c4f55667985816e67757d7f735c515b6e76685d6c7d837962524d4a484b4e5970
88979a86788da097775a53596d735e514e4c4b4e4e4c4d4d4d4d4d4d4e4e504f4d4d4d4d
4d4d4e4f4e4d4a4b4c4949494a49494947494948474b4a49494c4b49474645454848494b
4c4c4946484948494a49494e575b5a5b56555a5550555858565757575a5953575c5a5a61
62625d5857545554514d4e4f50504f525756525050504e4c4c4f51575859565353565755
524f4d50504d4b4a4a4847484b4c4c4f4c484848484c4e48464544404040444846444141
45474643403c3a3d3e3d3939393a3b3b3c3f3b3635363838393735353533343332303232
333232302e2d2e31343231323332302f2f3031302e2d2c
2e373b4041414347494b4e515d6d6b5e65675e66767d7d7365615b524f4f4f4e4f515051
504d4d50515669797e7a6b5d6171736255515252514f505c6c7164524a4a494847494e59
6165615955595c5a5752505252514d4a4c4c4c4b494a4d4e505051505051524f4d51514f
4d4e4f4f4f4d4b4a4b4c4b4a4948474646464947484a4d4c4a494a494745464a4b4c4d4b
4a4949484745454a4d4e4c4d50525052514e4c4c4e4d5052514f4e4f4f504f5052515151
53514e4c4d4e4e4e4e4f504f504f4e4f51514f4f4d4d4d4c4d4e4d4e4e5050515257626c
685c555859514d4b4a4b4c4b4b4f5a6860504849586c67514442423e3d3e42454b5b6571
87918c7657453f3e3e403d3a393938393b3a383838373738383635363333343433333335
343234333233343435353532313130302f302f2f2c2d2e
38393b3e3f4044484c4c4e5051545453565855585b5e5e5b555354514f51525051545453
525152555755575b5b595756565a5b55535556545251504c4d4d4b4a4a4b4a494b4d4c4c
4d4d4f515253514f4c4d4e4e4c4e4f4f4e4c4e4e4d4e515557555356595b5a5455565254
575452575e5a51505b656660544b474445464a535e676a5f4f49494947484b59676b5c4e
4946474a4a48464a4f585e585e6c6e63564e4d4e4b4c4e4e4e4a4a4d4f504f4e4e4d4e4f
514f4e4f504f4e4e4e4e4f4f4f4d4f5153525051514e4c4d4f4f4e4e504f50525b6d8088
7e666072725e504a4948494d4e59748a7f614e58768572574b4442424243434856666c7d
8b7e727c704f423f3d42433d393a3a393a39373738373638383634333334353434343434
3432313132343333323134323131303131302f2f2c2b2d
393b3b3e4144464a4c4f5050545d676a6c655a53515150504f5050525e6a6266797c6b5b
5451586a7670748388745e566078836e5e696f605d665f524b48474b4e4b4a4c4a4b4c4e
4e504f4b4c4e4e4f52514e4d4c4c4c4d4f4e5153566b8896947d606b889584696c716169
766a6276817664677e8987775f4f4b4946474e6077838d7c594a4b4b4a4a57758d918061
4e4c494748494b4f546b7c6d7997947d65545052515153514f4a4e4f4e4c4b494a4c4d4f
4e4e4e4e4f504d4e4b4c4d4d4d4c4e504f4f505251504d4c4f505052545250596f827f6f
615a6f887c5f4f4a484b4c4d5268716a6e665969735e4c49494945424345464a57686e7d
86746b7f7864706b545d64503f3c3c3d3b3a3a38373839393a3837333534353635333535
3433323434323335343232323131313232302e2f2f2d2c
363b3d3f42474c4d4b4a4f546a98bcc3bf9f6e56525152515052545678927d85abaf987a
5f545e89a298a4c1c19b6d5a699eb48a6e909a746f887e5c504c4b4c4d4b494d4e4d4e4d
4c4b4c4d4d4c4d4f4f5050514f4b4a4e504f51555b76867f7b79737679777d788092807c
8774727d7e7b6e73837d6f63554c494947474c58616b7c74574a494b4b49667a6c6b7367
554d4d4a494a4d5159727f6d74797a8777696d645b5e5a514f4c494b4e4f4f4b4a4e4d4b
4e4e4b4b4f514e4d4d4b4d4d4f504f4f4f4e4e50504e4c4c4c505c6b73756a6c8891836e
5d5a6b7f775d514d4f51504c4c4f52647164637882725749484644414149618197907981
9aa19988675f787459656c523c383b3e3d3a393a3a3a3a39383634343535343535343636
35343436373535353635343332313132302e2e2e2f2f2e
3a3b3e4042444747484d51546fa5beac9e866457545454535456585b87a98b93a9a9af98
6b56709ea797afc2b5a385626092a0746695a17a79927e5b4f4f4f4b4c4e4d4e50515050
504f4e4e5052534f4c4d50505152525151515254597581717177787b75717d7e879a8c85
8b77777a68635f6d817b6959504c49484a4847474a5f6e614e47494c4f516c7860637269
564c4c4e4b4b576a7487876f758b8e856b7285726e73604e4b4c4a4b4f4f4f4f4f4d4c4e
50514f50504f4f4e4e4c4e4d4e4f4f4f4f4f4f4f514e4d4e4e51657c888a7a78919b9388
77645e71755c4f4e5a6e6e5c4f506077715a5f7a8987755b4b444142435c7d7d76757581
89787283786878745f6b6d4f3f3c3d3f3e3c3a3a3b3a3938383833353533333435353435
32333536373534353636353334313031302f3032302d2d
3d3e3e41454646474b4f50536ba0c6c9bf9a6b575555555555627987a7b59197aeb1b396
6c65859a857da6bc9da0986b59889a7160849e92949a7a59504f4c4c4c4f50504e4e4e4f
5151504f51514f4d4c4e4f504f514f4e4e5052505573939f9e857386999b9b87808b8e94
9175777a6c6b6572898a765d504d4b4a49484648546d6c564c4a54676b61707963646f6b
5d534c4b4d526c8d979a8a6e7b9490826d7383726d7262534f4e4c4b4c4e4c4a4a4c4d4f
5351504f4d4f4d4c4d4e504f4d4f50504f51504f50504f5052535c65686762718e897883
88726173796454506e95947157607d7c63545d6c6b75765d4c464340415e807768707685
8b746f8174555b6c787c65473b383938363739393a3d3b393a3937353735353636353435
3333353838363534353736333433323132313133302e2c
3e44484a4a4b4d4c4b4d4f51596c7b819193755b565555575b7aa7b7c4be939bbcbeb494
6f7d917f6670a5bf989a9b705a88986d596490b6c7a76d53504d4c4b4b4d4c4d4e504f4e
4f51534e4f5151504f4e4e4f4f4f5050504f4f545b76909990726a7b7c7581817c7d7a8d
94797a7d7e8b7e7c827261544d4949484848494d6774604f4a4a66909675737967697264
50494c4d4f5a6d71657684777d7d7c88776d7b8185795d4e4e4b4647494a4c4c4b494a4e
514d4b4d4a4b4c4d4e4f4e4c4b5051525152504d4e4c4e4f50535352515152647f878489
826c6e838a7b6453647f7d655a7389887962596d848168534a46433e3f4d6c8c9f927a80
979c937d5d47486073664f403c3e3d3b393a39383b3c3b39383837393938363737383637
3837353636353535373837353534322f30313031333331
43434b4f4d4b484a4d4c4d51556669627a8e775d5555565962899f95a9b9959baaa7b5a3
85918a685b6ea3c0a79e8d695b8c9c70565a86b6c59a65504c4c4d4d4d4d4f50504f4c4b
4e4d4d50514f4d4f4e4d4f4f50525350505250515875807b857c7074695e737c7b786f85
907874818f9c897f8781796e5b4c4846484a4b4d68735f4f4b4a6383846967777a7e7660
4e4747474a556a7c828c876d799090806457647c7d66514a4c4c4846494b494c4e4e4e4f
4f4d4c4a4b4c4c4b4d4e4c4b4d4f4e4d4e4f4d4d4c4c4e514f51504e50505056667a867e
675e71868b866f534d4f504e52677a81735e4d556b6451474445423d3f454e595c554f51
5857534d45403e434946403e3e3d3e3e3b3a37383c3d3b39383939393635373938373739
3a39373735333536393936363734323231343431323231
3f4143484b4c484a4b4c5051648b9c909a99755b565353566387a2a2b5be989db4b5b597
9096785d566ba1c8c5a3765c6196ad815a5377b0b17d594f4d504e4f4e4d4d4c4c4f4d4b
4e4e4d4c4c4d48474b4d5050514e4c4e504e4e5056717966686f706d635c6c74736c606e
7a6864798b8c756f7e8683755e4e4949494b4d4e6064544c494c5257534f516b878a7052
494845464a4e617d8984715e697f775f5150555f61544a494c4d4d4e4c4e4d494b4d4f4e
4d4e4a4a4f514d4c4c4e4e4d4f4f4e4d4d4d4d4c4d4f5051504d4c4b4c4e4e5052565856
515155555352514e4b4a4c4c4b4c4b494b4b484648464446484946454440424445474645
44434240403e3b3c3c3a3c3e3d3d3d3c3a3a3b3b3b3a3939393a3c3a3837383838393637
37373738373838383737363534323232323434302e2f32
414443464b4c4d4b4c4c4f52596e95b6ba956856555455565a799fb1b7a8838aa9ac9273
7a7e6858576388a8aa886357658e9f805c536a8e8c6b56515453504e4f4f4d4c4b4e5050
4e4e4f50524e4f5050504f50504f4d4d4f515153535859535559595956575a5c5b595458
5c58555e65625a595f615f59504c4c4b49494b4e514e494a4a4b4e4c4745494d51524e48
464a494847474c51504f504c4e5152525252524e4f504f4e4c4d4e4f5052504a4a4d504a
4a4d4c4b4f504e4d4c4e4b4b4f5250514f4c4c4c4c4d4d4e4f504e4d4c4d4b4d4f4d4d4d
4c4e4f4f4e4d4c4a4b4b4c4a494b4c48484847444242444748444446443f3f4447474643
43423f3d3f3f3f3e3e3b3d3e3b3a3c3b3b3a3b3c3c3a393a3a3939393938373839373635
3534343535373634343634313133323333312e2e2f302f
3e4346454b4b4b4d4c4d4e505258667273675a565656565657626f78797063667273655a
60635b5756575f66645e5856595f5d5853525456575350515353514e4d4e4e4c4d505251
5251504f4d4d4f504e4e4e504f50504f4f50535351515150515556545051535552504e4e
50505050504f4f4e4c4b4c4d4b4a4a4b494a4b4b4a464849494a4b4a48454547484c4b46
494949484643474b4a4b49484a4a474b4e4b4d4e4e4d4d4e4e4e4d4c4f52514c4c504f4d
4b4f514f4d4e49484b4f4e4b4d4e4e4d4c4a49494a4b49484c4f4e4d4d4c4747494a4a4a
474847454444424342413f3f4042403f3f403f40403f3e3f3e3b3b3e3f3c3d40433f3a3c
3c37363838343535353434333030302f2f2c29292f322f27232222242421212224242324
2321202021242323242727262527272c30323131333434
4144474848494b4a4b4e4f50515154565757545354545355575757585a58575757585656
585a58565554545554555755545455525352525252504e5051514f4f4e4d4d4c4c4d4c4d
4e515251505152504e4b4d504f4c4e50524f4f4d4e4f4f4e4f4f5252515051514e4d4d4b
4a4e4e4f4d4b494847454645434245454244454140404141403f413f3c3e3f3f3e404242
434141423e393d424341414648434647464442444341403f3f3f40413f3b383737383835
313233353936302b2a2d2c2b2a2b2d2e2d2b2a2b2d2d2e2e313331323332313134343c41
3836353233313031322f2d2b2b2b282524232323201c1a1c1f1e1a242417131515141417
1a1c1b181a1a1b1a1d211f1d212929292a29262729282624262728262424242424262420
21201f1f21201f1f1e1d1d1c1d1e1f252d313334313335
414346484a4c4d4f4e4c4d4e4f5254535454525252525355565452565655535352555553
53555251514f4e4d4a4c4c4a484645434342444544434142444241434143474643434344
454644444545434242403f3b3837373738333031302e2b303d3d302a2b2c2c2926272a2a
282a2a28292b2a2a2c2b2c2b2b2d303030343330303130312f2e2f2e30312f2e2c2c2b29
2a272324231f1e1e1e1d1c28291f1c1c1b18191b1c1c1c1d1f2023282d2b2b2d2f303234
3335393935343537393c3a37363737373431313333312f2f313232303031323030313130
323537373738393a3d3f3c3d4040403f40424240414242434142422e2a39413f403f3c3c
3f4041403c3937353739373535353838373737342c1f2530343534353537373636383732
3333343638373335343534333234342e2d313435323232
43474c4c4b4c4d4e4b433e3d3d3f3e3c3a39393939363538383331333435343635363839
3a42413a3a3a3b3837393a3b3a37373332302f2e2f2c2929282624232226302f27221f1f
2121222123232326282b2a292c2f32343433353739393a3933343b3c3b3b3e3e3e3e3c3d
3a363634333635323232333334353434352e2d31353536393c3a3b3c3f3f3f3f3f434442
4144444446464443434444383441484c4b4745454a4d4a494a4a47464846464748484847
4748494a38373f44484d4e4e4b4a474647474b4d4e4b4a48484a4c4b4c4d4b4948483431
424c4c4d4b4b4c4b484949494d4c494748464545444647474542422d2838424649454244
40414141413f3e3d3a373a3b393b3e3f3e3c3c3b2f1e24343b3b3a3b3d3b3e3e3b3b3b38
3937363737373636383838373535322b2c303332313233
3c434745494b494841383738393a3837393d3e3f3e3d3e40414040423f3d3f3f3d3c3b3d
3f3834373e3e3d3d3c3f414345454745464849494a4a4b4a494a4d4e4f442b31484f4e4d
4f4e4c4d4f4f505152535253504b4d4d4d4d4d4f4e4c4c4a3331444b4a4c4e4f4f4d4e50
4d4848494a4c4b4c49484947484a4b4846302f40444446484a4b4a4b4d4c4b4b4b4b4d4c
4b4d4d4d4f4f504d494d4d36333f444c4e4d4d4e4c4b4c4d4e4944474a47494b4d4e4f4c
4a4a49473a3b444b4e4e4f5250504c4847494e4e4d4d4b4847494a4a4a4d4b4947473433
464d4d4c4a4a4948484a4a48484a4a4b47454345494644444341412b2737404041424341
3f4242424241403e3c3c3b3a3b3c3c3b3b39383d331c21383e3c3a3939393c3e3d3b3a38
3838393a39363737373535363534332d2d313133323232
4244464b4d4c4b4a3833454f4f4d4d4e4e51525051515354545354545453545555525354
543a35495355525352525153525354535254535150515151514f50524f462d334a515051
51525051525252545252515151515252515152504d4c4b473032454d4d4e50515252504f
4c4a4a494a4d4d4c48464749494a4b4b472e2e40454749474a4b4b4a4d4d4c4c4e4d4c4e
4e4c4b4d4d4c4b4b4a49483a39494c4b4e494c4f4e4e4b474b4c4a494a4c4d4c4d4e514d
4d4c49483b3b44474a4c4d4e4f4f4f4e4a4a4c4c4d4c4b4a4a4c4a49494d4d4b48493330
434d4d4b4a4b4a494848484a4c4c494949464247484544414547452d2938424340444745
41434243423f3d3f3e3d3a3a3c3d3d3d3d3d3d3b331f27373d3c3b39383a3c3d3b393a39
393b3b3b3939383735353537363535302f303233313231
41424241464a4f4a3134484f515052555754545453525658575656565653555657575656
5637364c55555453514e4f525553525150525452515150515552504e51492f324b535151
525355524e4d51534e4e4f504e51535352505151504e4d4d3331454f504d4d4e5152524e
4c4b4a484a4c4d4c4a4a4a494c4b4c4d492f2e424849494a494c4d4c4c4a4a4e504e4c4c
4b4c4c4e4d4b4f514c4b4b494a4a494c4c4847494c4e4d4d4f514e4f53514b4a494c4b4a
4c4c4a4c3d3b434748494a4d4f4f4d4e4d4c4e4d4e4d48494e4f4d49474a4d4c49483230
40494c4b4b4c4b4a4d4e4b484749484748484444464846414548472e2d3d444445424347
444443413f40403f3d3b3c3e3d3c3e3c3e403e39322227363d3c3c3c3b3c3b3a3a3a3c3d
3d3c3b3a3a3938383737393b3a37342f31313132333230
464847464a4b4b473438484f515255575755555757555656555657565755545554575855
543a384d5758585452515053565554525352545554524f5153514f53534c2d2f4750504f
50545453505355504d4e4f51504f4d4f4f4f5052525150503633454d4e4c4b4c4c4e4e4e
4e4d4c4b4b4c4c494a4c4d4948494949472f33464946484947484b4d4c4b4d4c4d4a4b4f
4e4e4d4b4e4d50514e4b4b3d3b494d4f4d4a4b4d4c4c4d4b4a4b4d4c504e494b4c4c4a4a
4d4e4d49393944484a494b4e514f4d4f4d4e4e4e4e4e49494c4e4d4c49494c4d4c4b3331
40484a4a4c4e4d4a48494a4b4c49464646474846464846474848462f2a3b434543434242
434442403d3e403f393a3c3e3f3d3d3f41423f3b322024353c3b3a3e3e3f3c3b3b3c3d3d
3d3b3b3b3a3b3938393b393a3a3836303234323334322f
3e42484949494a4a353a4f55565756555556565555565656575756565556565555555653
553a3a4f58565656535556555557555353525456565352535552515251482a324c535353
55545351545352514e5150514e4f5151505153555351514f36334851504e4f4d4c4e4b4b
4d4c4d4d4e4d4f4b494a4a47454645464630304146494c4c4745484749494b4d4b4a4e4e
4d4a4a4b4b4c4c4e4d4b483a3b484a4a49494b474b514e4b4c4f4d4b4e4d4b4744484b4b
4d4f4c493939464948474a4e4f4e4c4c4d4b49494b4c4d4d4d4d4c4c4d4b4c4c4b4a312e
4149494a4c4c4f4c4a48494a49484a4a46464744474c4b474749482e2a3b434546464645
414140413e3e3b3e3e3b3c3d3e3e3f3e40403f3d372124373f3d3c3e3c3a3a3d3e3e3d3b
3c3d3e3e3c3a38373d3c3935373836342e303132333333
40454849494d4a4634374c56565657565656585755565454565655565454535154545352
5234364e5755545252555553555655525251555554545454555556555247272f49545554
535452535455545452535453504c4e4d4e5252504e51504e333449514f4d4d4e504f4e4d
4c4c4d4d4e4e4f4b4b4b49484745484647312f3d464b4c4b49464647494d4f4f504d4e4d
4c4c4e4a4d4c4c4b4a49483f444e514d494b4b4b4d51525451514f4c4e4d4b47484a4c4c
4c4f4d4b3936464d4c4c4b4e514f4e4f4d4d4a4b4c4e504f4e4c4b4c4e4c4b4945452d2e
434b4c4c4e4e4d4b4a494b4b4b4a4b4b47474845434445434645462d2b3c404143414142
42403d3f3f3e3d3e3e3a3c3f403f3d3d3e3e3d3d37222236403f3c3c3d3b3c3e403f3d3c
3d3e3f3e3d3b3b3a3d3c39373939372e2b2f3131333433
3f4043454a50514d363a4c54565654565756575754545456575654565352535356555454
5334384e565753505356545455565453515052565556545355565452534c2d3249515253
51515355525255534f5053534e4e52535253504e4f52515035384c53514f4b4c4f4e4d4e
4c4b4d4e4e4e4e4e4c4b4c4b48494c4a453032424b4c4c4d4b4b4846494d4b4b4c4c4b49
4a4d4d4f4e4e504b49454544464a4f4f4b4c4f4f4c4d5251514d4d4c4b4e4a474a4f4f4c
4d4f4c4b3a3a474d4f4f4f4e4e4e4f4e4b4e4e4d4d4c4f4f4d4c4a4a4d4d4c4a47472e2f
444c4d4e4c4e4e494a4b4a4a4c4b4b484647484a474a474a4745422a2a3b42434545423f
3e3c3b3b3f3e3c3e3e3c3c3d4041403e4040413f36202337423f3d403f3e3e4143413e3d
3f3e3d3d3c383d3e3a373c3c3b3c392d2a2f333532302f
3e444847474d4f4f393d4e54555354565656575555545557565557575555555455555554
53353b4f575553545457575757555554525151545655555553525456554e2d354c515253
54525354525251505051504f4c4d5054514f4e505052524f32374b535352504f4f4d4b4c
4d4e4d4d4c4e4e4f4b494a49494a4b49463134454d4b4b4a4b4a4a4a4a4a4b4b4b4c4b4d
4e4e4c4d4e4d4f4a4745443a3e4a51524d4a4a49474c494b504d4c4b4b4f4c4a464c4e4d
4c4e4e4b353746484a4a4e50514f4b4a484a4b4c4b4b4f4f4c4d4b4c4c4b4a4a4a492c30
454e4e4f4f4f4c4b4c494a4a48494a484a484947474a474744403f292b3a424242424243
403e3d3d41403e3e3f3e3f43423e3e3e3e3f3d3e361f23363f3e3d3f3e3d3f4343423f40
3f3c3c3e3d3b3e3f3d3a3c3e3c3d3c312c333739323134
3e444a48494d4f503c3e4f53575756565656565656575857555255575755545352535453
53373c50575252535457585757545353535554535455555554535454554f2f344a515253
5351504d5054525050504e4d4e5051514d4c4f5150504f4a2f374b50505152504d4c4c4b
4d4e4c4c4d4f4e4e4d4b4a49494b4a49473234454a4b4a464647484a4c4b4b4b4b4c4d4d
4a4c4c4d4b4c4c4a4843453d3c444c4f4a47494a48494e4f4c4d4f4b4c4e4b48494b4e4f
4e4d4e4a3538444847484c4e4d4b484a4a48494a4b4e4c4a4a4d4e4f4d4b4a494b4b2d32
464e50514f4e4d4d4f4c4b4c4a4b4a4846494a47464c4c484241422d2d3e414344444344
40414043403e3f3f42404143413e3f3e3f3f3d3e392022363e3d3c3e3f3d3f3f40404342
403d3d3f3e3f42423e3d3c3e3e3d3d2f30333639353336
3f4645474a4a505d605b5857575857525153555656575757555554545553535151545352
5535384e54525151545758585654545454555455545455565858545255502d324b545452
52504f5051514f4e4d505053525152504e4f50504e4e4e4d33394c524f4f514e4f4e4b49
4c504e4d4c4e4f504d4d4d4a46494a4b473235444a4e4a4746474a4b4d4e4b4a4b4b4b4a
4d4d4c4b4d4a4a4c4842464041484c4c4a49494c4d4a4a4c4b4c4d4d4d504e4a4a4c4b4c
494847493638464c4744494f4a46494b4b4b4b4b4c4e4c494a4b4d4d4b4b484748482c31
454b4d4c4c4d4f4c4c4b4a4b494948484748484c484746474644432c2c3a404441454644
434441403f403c3f43404143414040413f3f3e3d392224373d3f3c3e3e3f3e3e3e3d4445
413e3c3d3f4042423e3b3c3c3d413d302f343536343634
3f4047494c4e5681a68e7161585757555457575657565657565857565553545253535354
5532364d555455565556585656565654535354545153555657585754534f2d3349505150
4f4f4d4f5055544e4b505453514f4b4f5350504f4f52524e32384b5050504d4b4a4c4e4e
4d4d4d4e4b4b4f504e4e4e4b4851504c49313442484b4b4644464b4c4d4d4b4b4c4a4c4f
4f4e4b4a4c4b4e504c4648424246494c4848494c4f4d4a4d4e4b4c4a4c4d4b4947484d4d
4b494c4a3432434a4b4a4c504d4b4c4b4a49494c4c4d4c4a4b4c4d494b4a4543484a2c2f
3f47484b4d4e4d4c4c4a4c4c47494a474548474a4b4a46464346462f2e3c424545434240
424544434342403e3f3d41423f3f3f3f40413f3c392223363e403f3d3d3f3d3d3e3f4546
413d3d3f3e414343403c3b3a3b3c393131363637383435
444544494c4e566f8fb7b581605b5956565759565455575656575a585552545352535454
5434384d545556575557575554575554535354545151545556575756554f2f3950575451
52515151545655525251515352535150504d50525150524f343a4c5052514f4d4e505150
4f4e504d4c4d504e4e4e4e4c4d534f4c4b343541474c4b48444a4f504d494a4c4d4e4e4e
4e4c4a484a484b4c4b46443a3a44494b4a4d4d4d4b4a47494d4e4846494d4847474a4a4c
4d4c4d4c3537474c4b4a4a4e4d4c4c4c48494a4b4d4e494a4c4f4c494b4d4944474a2c2e
3f46474a4b4a4c49474647494b4b48464849484445484847464141272c3a3e4749464143
4544444342424142414043403e3f4141414142413b2122363e3f3e3d3c3c3e3e3f404341
423f3e3f40424141403d3f3e3e3b372e33383737383636
40454847444c525e7ac3cf8f655a5a595858595656565758575658585554545453555556
5334394e55565656555556565555565754545657565556565856545455522f3951575754
545250535656525354545555555554515251515150505351373c4c505051504f4d52514f
4f50504e4e4f4f4d4f4f504e4b4a4a4b493336434b4a494a494a4c4d4d4d4b4e4d4d4d51
4f4b4a4c4e4c51504f4d483e3e40414746484a48484c4d4e4f4e48464a4c48484d4d4e4c
4d4c4b49353b47494a4e4e4d4f4c4c4f4a4b484a4d4f4d4d4f4f4d494b4c4c4848482a2b
414b484b494a4c494747494c4c494745474a49474444424245453f292e3b414144454241
414141413e40413e404040413e3d3f3f413e3e403a2125374041403f3c3e3d3f40414041
403e3e3e3f40403d3e3d3e3e403f3b2f31373433363534
3e424549474c5355529ad7b780655d5a5959585655565758565556545454555455565454
54333c5054565653545557555455565555565758565857575856545354532f3950565554
56535455555655555351515356545451525254555353504f3a3e4d515251544f4f4f4e50
515050504f5051504e4d4e4e4a4b4d4b473236464b4a4a4c4d4b494d4c4a4a4d4f4f4f50
4d4d4f4d4b4d4b4a4d4d4d494747494a4a494a4a484b49494c4c4a4f4c4c48484b4d4f4d
4c4c4a4b363c494a4b4e4e4b4e4e4b4d4b4d4b4c4d4e4d4d4d4f4c4b4e4d4d4f4d4a2c2e
424c49474b4a4a4a4a4a4b4d494646464a4e4b49474546494442452a2c41444649494240
41403f3f3f4240403e3d3f3f3f42424041403f3f3b2027383c3f41413e3f3f4040424243
3f3c3f3f3e3f413f3f3c3c3c40433b302f373634343333
4241454a4a4b5052455eb0d8b483685b5a5a57555656565655535555555554565657534f
4f333e5256545555565656565757575356575857575756565654555556502c3950565651
52535255534f5253525455545653545554575752525253533c424f53505050504f4c4c4f
4f4f4f52514f4f4e4d4c4f4e4c494d4e493238464b4c4c4d4e4d4c4c4c4b4b4b4e4f4d4c
4c4b4f4f4d4c484a4a48494141484e4c47494b4f494b4b494d4f524c4b4e4d504f4c4b4a
4d4f4a4a353a484b4c514e4c4d4e4c4f4e4e4e4d4e4e4b4b4c4d4d4b4b4c4d4f4c4c2932
464c4a494b494b4c4b4c4c484848474447494240434541434448422c3140403e40434442
4241404140403d3d3e3c4042403e3d3f40403f3f3c2226383d3e40413f4040414040403f
3d3c3d3e3d3d3f3f3f3e3e403f3b392f31363839373636
41464a4a4d4d5053434b79c7e9d591655c5a59585655575855535456555454545556534f
50333c5054545453545556565757575757575758575555545453525456512e3b52555753
5555565757555656565555555756555154555554535353513d44505150505453504f4f4f
524f4e5050504f4e4e50504d4b484b4f4b323845494a4c4c4a4a4a4a4a48494a4c4e4f51
4b464a4d4d4a4a4d4f4f494040454d4e4b4c4c4c4a4b4a494b4c4c4c4a494c4a49494c4a
494943432d3749494c504b494d4e4b4c4c4b49494b4e494849474644444547454242262a
3c41404240414542424040403c3c3b3c3d3b3e3f3e3c3d3b3e3f3e2e343c3f403e3c3a3b
3e3c3737383937363536363632302f303130332e2d24272a2b2927292b2a292b2b2c292b
2a292927282a2d2b2b2d2d32302a292b31383b3c393735
3e43474c4c4c4e5140475c98cce8b279625f5c5b58575657565555555351525155545353
52343b4d5053525352535554565655555654565656555352555252565653303b5255524f
5353545555565555555658585757575453535353545453513f4450514d51545350504f4f
504f4d4d4c4948494a4b4b44454745464434363f403f423f3d3b3e3e3d3c3d3f40404040
3f41444440424645454544413a3e4645474441434446434043443f3e3e3d3d3a38353735
35312f2c2a2e2f2e2d2f2c2c2d2e2b292b2c2a2a2a2d2d2c2e2c2d2d2c2e30302b302828
2d302f32302e2e2e2c292628272625211f20201b1b1b191a191815242119171512141316
181a1e1c1b1b1c1b22252224232126292d2d2e2d2d2626292a2927292a2c292b2d2b2c29
26272422252526201f1f22201f1e1f29353b3e3a363835
3f444445484b4c4d3f4b586a95cbdab07c6a615c58575755565655525050505050504e50
4d363b474749484847484645484645444744454548434444464746474846303747484545
484b4a4a4945424341403e3c3b39363333322f312d2b2a272b2b2825262828282a2a2728
28282a2b2a2b292c2f2f2f2e30313030312e313131302e2e2e2e2d32322d2b2b29282623
222323211f222d29201b1b22242017191e1b1a18181b1c1e1f202423292b2b2c2c2c2f31
313331342f30353736393833373938343435363734322d30322e31323230313130342d30
3238383a3a3938393a3d3e3f403c403f3e3f3f3a3f414342423f3f2b2e3a3f4245443f3e
3d3d403e3c3c39393937393a3633373c3e3c3b3d381f25353c3c3a383739393b3d3f403e
3a3938393b3c3d3e3a393d3a393b372f35393a37363936
3e40464947494d4f4a433d3f4e70b8c696876e52423c3a37333635333131333634363839
3b35363837373837383a393b3a383435353331322f2c2b29282826232629342f29272526
25252425292b303033393836393b3e413d3f444542424543393e42424243424142413d3c
3d3c3c3b3b3936373937383637373737383132363739383b3c3f3c3e4241403f41424341
4346494848474548484546423c484b4c4b44454c504d494a494740424749494a47454747
464443442f37444648494945494b494a4a4b4f4f4f4f47484d4a4b4c4d4c4b4d4b4e2b32
424a4b4a4b4b4745494a4d4b47434744413f424543424347494340292f3b3f3f4245403e
3f40413e3f444240414043403b3b3e424241403f3b2127394141403e3e3f3f3d41403f3f
3d3d3e3f3f3c3e423e3d3f3d3d3c372d33383b3b393632
41444545474b4e4f4645464a50619dd3d9d7a97a5e524e4a464246444240413f3f3e3e3e
4135383f413e3f424546484c4a4a4b4d4f4e51524e4d52544f5053525451324053575455
59585756555555555757575656555653525555545051535547485152525552545553524f
5255535152514c4f4e4e504c4c4a4d4a4a363d44484a4a49494c4a4d4d4c4d4e4f4e4e51
4e4d4e4f4c4c474c4e4e4e4742434a4f4c4c4c4d4b4a43494d4e4b474a4d4a4f524e4e4c
4c4b4c4b2e3a484d4d4c4b4d504b494b4b4d4e4e504f4b494d4f4e4b4d4d4b504e4d2930
444c4a4b4e4b464549484b4b454245443e4244444343414144413d282f3b3f4142424041
4343403f41414341413f41403d3d41413e3d3e3f3a2027384043403d3e41413d3f3e403e
423d3f413e3b3b3f3c3d3d3c3e3d382d34393c3a383a37
42424348494e4f4e3e444f55596075a5dbeee7d49f71615d595757575657565355545454
5537414f53535152535656525353535455555456575758575453565554512e3e51565755
535458595755575759595756565659575858575755545756464d55555453515557575555
55565653524f4e514f52504e4d4e4d4b4b3b3f474a48494c4c4e4b4c4b4c4b484a4c4e4f
4e5153514d4c4c4b4b4d504a3f454d52514e4b4a484d4b4b4c4f5050504a4a49474d4d49
4a4a48492c36444c4d4c4b4d4f4c4a4d4e5051514f4e4c4b4d4f4d4d4d4d4b4d4d4c282f
444b4b4b4d48494c4a494947443c413f3e4148454046464543434229313f43424142403d
404242403f3d41403e3c3c3e4142433f3e403e3c3b202639434340413c3d3f403f3f4241
423f42413e3e3d42403f3f4142423b303539393b3a3b36
403e42484a4c4f4b414b55585959607fb1beddf1d9b3916f605b5b5a5857565555555556
573c43505653545455565653555654555757565756565657565555545554324154565656
545559595a5856565657565757585a575657565655545556454753565856535658575656
5455545552514e514f51514d4d4e4d4d4d3d40464b4a4b4d4d4d4c4a4b4c4a484a4c4d4b
4e4f51514c4e514d4e4c4d4a49484f534f4d494c4c4c474b4f504d4a4a4c4c4d4b4d4d4d
4e4c494c2c37434b4f4f4e4e4f4e4f4f4e4f4e51504d494a4c4e4d4c4e4c4e4e4d4c2a30
4349494848484b49494946434242464843414044414340404040442f363d3f4241414244
4541414442403e3e3b3e3f3d3d3d3e3f4042403f3c1f2539414342423d3f413f3f404445
414347423f404343413c404040413b31383a3a38383d36
3c3d41484a49474c3d46515659585b62727997add8e6d7926a5e5d5e5d59575656555655
563e46535655565454565757565353555658565655565657565655575755324454585756
5759585658585a5a5a5957565858575555555659575959594a4b57585758595957595757
57565352525352515253524f4e4c4e4c4a3c3f484e4c4e4f4b4d4d4b4d504f4a494a4e52
534f4d4b4b4d514e4d4e4c4541474d4e4a4a474950514e474c4c4a4d4c4c4b4e4d4c4c48
4b504e4a2c36464c4e4d4d4f4d4c50524f4e4f4e4f4e4b4b4d4d4e4e4d4d4d4a4849282f
404646444a4949484948454443434445444441494d47433f3f43412b313f3f41403f3f3d
42413f404342403f414141413d3e414143443f3f3a1f273a43423e3e4140413f3f414844
3e4245403d3e4243413b3c3d43443d2f363b3c3935372a
3c3e4043444545483e444d54565656595b636a70beeaf0d0926b60605d5b5a5a5b5a5856
573e495458565856535659565652555857575656575455565457575757563244565a5959
5a585856575a5b5957595959595857565959565957565a5a4c4f56595856585856585757
5654515254535553525251504f4e4f4d4b3e43474c4c4c504d4f50524e4e504d4d4d4e60
59524e4f4d4c4d504d4d4a443c444e4b47474d4b4b4c4a4e504f4c4a4c48494f504d4d4b
4a4c49462636474e4f4f4f4e4e4d4d50504f4d4f4c4c4f4e4d4c4d4c4b4b4c4b4948252b
40484644474848484845454442434544444645484a4547434142432d303c3e3c3d3e3d45
454440414242433f3e41413c3e3e3f42434340403c212a3d433f3c3c3e3d3e3e40434542
423f4042403e4043413f3e3f41423c2e343b3b3a373730
3e414243444549473c425053525556565b5e5c5e83a4c7e7cd8d7066615e5c5d5e5b5a59
59424d5659575556575759575657585757575857575453575554565655533345565a5755
58595958585a5b5b5a5a5958585757585455575758585a57494c575a5b58575958595757
5755545354535556525253504e515150504246474c4c494c4f4d4f4f4c4d4e4d4e4c4c4f
504e4e4e4f4e4b4d4e4c4a4b42484c4c48464c4e514f51514f4e4e504e50504e50524e4d
4b4d4b4b2938494d4f51524f4b4b4c4d4f504d4b4c4b4c4d4d4a4a494a4a4d4c4a492527
3e464749494a4845444342444543454846454448464442444340412b32383f3e41444140
4340403f434445414041403e3c40424042403e3e381f273d423d3a3d3d3c3c3e3f424142
44424041403f4344414041403f413c30353536393a3b39
3e3d3f4345474d4c3f424f5251545557585a5b5a646d7dabddd1bb99786a616664615e5c
5b4751595a58565a58575856565656545558595756555357565756565654334557585755
5959585859575c59585a5856565757585c5956585a5a59574d5359585957565a5958585a
58575553555656555155535252525354524648494e4b4b4d504d514e4f4c4c51514f4c4e
4d4d4f4f4f4c504e4a4c4f4b46474e50504b494d4947494b4e4c494b4e4f4d4b4a4b4a4a
4d4f504d2b3a46494d5053514d4e4e4f4c4f4d4d4d4c4a4b4d4d4b4b4c494d4b4847252b
4144454a4a47474743424447464347484744474746423e40423f412f353e424243474342
403e40424240403f3f4242433e40423f43403f3e3b1f263a3f3d3c3d3e3e3d3e3f424244
433f3e3e423e4242424041403e3d3930363a3838383735
3e41434a47454a4d42454c525052555656595a5a5f636374b7e8f1dcc3997a917e696461
5e4f545d5c585a5a585959585757575755565a5958575958575958595653344755585756
58585957585a5954575d5c595a575957585a5957585959584d505659595a5a5c58585959
57595656575a57555254565655535352544b48484e4b4d4d505052504e4c4e5151524e4d
4f514e4e504c4b4f4a46484c3d45505452504b49494d4e494d514d494c4d4b4c494b4b4b
4d4f4e4d283b44484d4f525151514e514e514e504e494b4c4f4e4e4d4c4848484b4a232c
4249494b4c4d48484741464446464445444542444644414340404232373e3f3f41423f3f
414340434243404340454340403e40403e3d3e3e3e2026393e3f403f3c3e3f4240424344
46413e3f47454043423e3e3f3e3e3a3036393b3c3a3632
393d4141464949493e404a4c5052555455595a5a5a5e5e6385bee2f3f2d6c3d39f867e79
6855595e5d5b5b5c5a5a5c5958585859565559595658595b5657595a5955344655565859
59575a5657585859585a5a585856565757585857585a5958525257585a595b5b59575758
56595956575856555455575655525153534b464b504e4f4f4e4e52514e4d4f5051544f4f
50514d50514c4c4c4a4b4e5141444f4c494a4e494d504c4c4f4c50515051484746484b4e
4f4f4a49273a474d4d4c4f4b4e4d4c4d504f4d504e4d4f4e504c4c4e4e4a49494e4e242a
40484b4c4c4b4747434145454643464342464241454442444543443236403f3f43434443
414344423f403f4244424241403e423f3d413f43421f26393e3d3e413d3c3f41423e4040
47433f4246474040413b3f3f3f423b2f353c3e3e393636
3d404242484a4848403f474b4c50515354555755565b595c687f98b4d4ecf5f3cecbc1b3
81676a6b67625d5d5e5e5d595a5c58595a585c5858575a5c58585b595652314755535757
565757575c5957575859575a5858575a575a5959575857554e4e565a5a595b59595b5858
595b5854565758555657535554535452514b4750545251504f4e524f4d504e5152514f51
514e4d4b4a4f51504f4d4d4948494e4b4c504d504b4d46474c4b4f4d504f4e4d47494a4f
4d4b484b25394a4d4f4d514b4a4d4d4d4b4c4a4c4f4f4e50504d4d4c4d4d4c4a4c4d2425
3f4a4b4b4848434748484743454647434647454646423f41403f3d2f383c424341434342
4043434443433f40423e414341403e4140413f423e1c253a413f3c41403e403e3f403f3e
43423c3d40413e3e423e3f4140423c31353836383a3837
3c3b3e4140474a46403d474d4e4f5255565455525557565b5e616a768daeb8bee0f0eee5
b5aeb4ae896c6361605f5c595b5c5a5a5b595b595756595a5a595a5a59563b4854575655
585856575859585957585a5a58585658595a5a5657595958534d545759595a595b5b5857
5758565658585656555856545254545152494a52545153535151555050504e5352504e52
50504e4d4f4c4c4e4f4f4f47414649464b4c4b4a4f4e47494e53514e4c4f504d4a4a4e4f
4f50494923394a4f4f504e48474b4c4b4b4e4b4b4c4c4f5351504e4b4c4e4b4c4a4a2325
3d464a4c4b474345454a47444548484248494549464440444545452f383e404544404646
474943434542404043454343444244403f3d3d3e3b1f263a413e3f42454140403e40413e
3f43403f3f423d42433f3f403f3c3b2e343c3b3b373837
3f3b3f403f4845423e40484c4d5153515253514f545757575a606264666f7489d2e6eef6
ebe4efe7ac7b6a6c6864635c5d5d5c5a5c595b5b5a58595b5e5b5b5e5c57394956595755
555857595c595b585c59585b5b5b585b5c5b595757585957524e575e5d595a585b5c5859
58595755575758555653555555555452514c4a4f5355545656525452524f4d5152504c50
514e5051514d52514f4f4b4937484e494b4f4f4d504d4a52524e504c4d4c4a4b4a4b4e49
4b4c4e4d2434444d5051514a4b4c4d4d4d4e4f4c4b4c4f4f4d4a484a4e4d4a4d494b2527
3f454b4f4a464443474845454647464444454847443e3e41444543353c3f464444434041
4444474442413f413f43403e3f4141423f41423e3a1b22373f3c3f3d4340403e40414241
414342403e4142423f40443f3b3d3c2c343a3a38393938
3e3c3e3f434144423c38474d4f52504f5153554f505556565b5e5c5f5f6266719baabdd7
eed3d7dcccaf9faa967e826c66616a625e5d5d5c5d5a595a5b5c5c5a56573e4c575b5759
5a5959595b5c5b59595856585a5759555759585959595a595450565b5e5b5b595a5a595b
58585856575959565553555556555554504f4a4f5456565655555452524e4f5250505053
504e4c4f50504b4c4a4a4a4a34414d504e484949494a52515454545451484a4a4b4c4f4e
4a4c4a4a2335464d4e4f504e4c4a4f4d4c4f4a494b4a4b4d4b4a474b4f4b4a4e4d4b2629
414a4b4f4a4645444549464645434540414449494543434743424730363b434445454543
413f403f3f434041434445443f3e3e40404244443c1d243a403f3f3e3e3e3d3e40414242
4240403f3f424347413f3f3e3c413e29303d3c39393936
3a3b3b3e424240443c3542464b4d4d4e4f51524f51575356595c5a5d5c5d61646d717c93
af9799c7e9eee9f2dfb7bd938578987a676061636b5e595c5d5b5959595b4451595a5959
595b5857595c5c5b5b5c59595c5d5d5a585b5957575a5959564d555a5a5b59585a5a585a
5858585858595857575657565556555552514b50545554575553555455524f51504f4f4e
4f4f4b4c484b464e4f4d4c4a4b464a4e504a4d4f4d4c474c4d4c484b4d504d4c4a4b4b4a
4c4c464a2435444b4b4c4e4f4c484e4b484d48494e4d4a4c4e4e4b4e4c4b4c494b492226
4148494d4a4946484a4747494a4648464544454545434342404244373c41424746454543
46444041403e3e3f4244414443403b3f41404145401e263a4340403e3f3a3c4143403f40
4240403f41413e44423e404040403d272d3c3c3a353738
373b393e414341413b3b47494d4c4d5051505051545555555759595b59585b5d63626469
71676f9dbfcae3f1f8e6e9cccdbad0a184756e839f76625e5e5c5b5a5c5b46505c5c5b5b
5b5a56595c5b5856595a5c5a59565a595659565858595959584c535a5a59565759595859
58585758595956585959585655565856545249515555575856535555545551525250504e
4f4e4a4d4d4a494e4d4b4c4939414c4d47464a4e50544e4a4b4c4a4b484e4f4a464c4e4a
4a4a464624314148484c4d4b4a494b4b474c4a4e4f50494c4f4d4e4e4b4c4a4647492026
3f44474a4946484c4a45404746454344444441444143424041443e33393e4343473f4644
3e454544414340454442404343403e3f403d3e403e1e23393f3d3d3d3c383b43433e3f3d
3f3e3e42433e3a3d403c3e3d3e3d3c252e3c3d39343635
373b3c423f4347423b35474b4c4b4d525253545351535355545857575658595a5d5f5d60
635d606f787f9fb6bfe5f3f5f2ece7d6cca99bc7e59469606566635f5f5d4f555b5d5a5a
5d5c5c58595a5c5c5a59585d5d5a5b5b595658585a5a5959574c575d5c5a595857595b5b
5b5a57595959585859585858575859535251474e51555555555455535354524e4e52504d
4e4e4d4e4d494e4e4e484a4430454e4b494b4b47474c4f4b4d4c4e4c4b4a4a4b4b4d4f48
424649482132464b484c4d494949474945444445464543484544444242424041403f242b
353c3d3e3f3b393f3e3f39383a3c3c3a393f3a3d3b3f3f3f413b3c35383d3c3a373d3a3c
3a3a3a36363539363330332e2c2e3030302e29292d25272927242524292827292a282d2b
2a28292d312c282b2c2b2c2c2a2d302b323a3c3a353835
3b3e3d41414241433f36494a49494e4e4e50504e4d53535252555555555958585b5b5c5c
5b59575e60656e7374bfd2e2cae2edf4f9e1dfe7efa48e818d8f7872655f515b5f5f5e5c
5c5a5a5958595b5a5a5c5c5b5a5a5b5959585858575a56565446515759595a5752555556
56565154525254504f4c4c4a4b4a494645444340424542424448434248464243403f3c40
4241424441404141413d3d3f2c3c3d3d3c38393b3732323336322e2e2d2d2b2928252728
252522232c432c25262729292928272b292827272a2d2f312e312d2d2d2e3031302f2b2d
2e2c2d2d2f2a2826262222222124211b1b1a171a1d1b1718181814201a19181518191c1e
1f1f1c1f21232123212024272d2a2a2a2d2b282b2f282d2d2d2e2d2a2d2c2b2829292d2b
2a26262928292525262324211d20252a35393d3c363935
393e3e42423f42403f3342484c4d4b4a474e4c4a4b4d4a49494c4a4d514d4f4e4e4d4c4c
4d4d4b4c4c515052568489977fb0b7bbd1dee0dedbc4dac8dee2b4aa7b6761625f595757
58544e4e4d4a49464640433f38383531313334302c2e29272e302f2b2b2e2e2d2c2e3134
33353335373a3b3a37383b393b3b38393b383d34373936343637313532312f2d29282127
232221282421212022231e222f282227262625292b2b2e2f2c3633343737363637383737
3737393824383531363a3a3a3938383a37363635373733373739353332373a3838362729
34393a3e413f3b403f3f3f42424341404242424545454040404142393d403b3e43414140
3f3f393d3e3f443f3a37373d3c3b3c3c3b3a3d3c3a2327353e403d3b3b3a413e3d3a3e3d
3e3b3a3e3e413f3f413f3d3b3a3e3f27333f3e3a343236
383a3b3c41404143423126222226262921292a2c2c2c2c2d3133333637373b3a3e3e3c41
4343424244464746485054504b615e697d91a3b6a0ccd5d5d8d0ddd8a58c9e997e5c5556
5f4e4746464b51524f534e4e5253504f504f504f4e4b4b4c4b39454849494a48474b4948
4848464245474447434747464749484746463d44474b4e5051514f4f524f514f51554c4e
4f50514c514e4f4e4a444a4c29414849474947474f5045494e494d4a4a4d484842464848
4848474a203444484a4d4c4d4c4b4c4c4c4e4f4e4e4b494a4d4f4c4948494b4a49482224
3b46454c4744454848454147494a484645494846464541424247493d3c40424441404144
454442444748454041434743404343403e3f43413e1f2237403f3c3f3c3d434140404142
40413d4241424042433e3d3f3b423e21303e453e353537
39393e4140414443483137393a3d403d3e403f3c3d3e3e433d424142414243434549484a
4e4d474d51575857595a5d5b5b5d6063656799b890b3a4d6ced0dee4e2e7e3f5e4c08eaf
cc886c64636362799a6f5f5d5c5b5a5a5a585b5b5a585758553b4e595b5b5a5658585758
58595a575a56555a575757565457575352513e4b53565656555557535654565555575252
555052514f524d5050464845273f4b4b4644484d524e4c514f4c4b4f52544e4c4a4c4c4b
4d4e484b1f31454b4f4d4c4e4c4b4b564e4f51524f4c4c474d504c4b4c4c4a47494b2927
3f4a464b4a444649444447494b4b504646464a49464b45424448463c3c4042423f444545
4545454448443f43434548443e3f42434140434642202339424040424040423f3e404443
40433e4644433f3f3d3e423f3d4741203240403b383a35
373a3e3d41424244452c3c403f464b464b4a4a4a4c4b4e50494c4d4e4e4f524d4f544f53
5452474e55595a575a5b5d5e5d5d5c6160616e736a6c68918281898fdef4eef0f9fde1ee
f5d398706d7080b3cf82676163615f5e5a565c5c5b5a58595836525d565b5857585a5859
58595b575957565a595659565556565351523b4a54575655555355565555575756555454
5556565051535451544c494c2c434d514d4c46484c4d514f51544b4c4d544b49494e4e4d
4d4d4e4b1b30464c4d4e4d4d494d4c524b4d4e4f4b484d474c4a4b494e4f4a48494a2b20
3b4c484a4b4b484a46474c4a494646454a4b4649484d45474447463c394243423f484544
4347424544424140454b4748404343404241434240211d3a414242434242413f41424540
403f3f444144403d3b3f43404245432236433f3b3e3a37
393c3a413f3f4247422a404340454a4a47464948494b4d4b4a4a4a4b4f4f514a4d505152
534f414d5353585758585b5d5d5a595c5d5e5f5d5f605e636365666dabbba8acd1eef7f9
f8fcdea3b4afe0f8ee97726c8c74655f5b5b5e5e5d5e5b5a583956585659575857585759
575a57585a595759575757535857575655573d4b54585455525257575357575352565352
5354535453525254514f4d4b43484d504d4b4a4b4f524e4f4b4b4b4a4c5147494e54524f
4f4f4e4b1b324c4d4c514b4f4d4f4b4b4b4d4b4b4b4a4e4b48484c4d4e4c4c4c4b442921
3d484a4a474c464943484b4b494846444a464548454549494344443d3a464b4447444443
41424046454545434045454b454242454343423d47261737414243433f41404242424442
3d3f3f3e3f42403b3b3e413f4142411f35383e383a3a3a
393b3a3b3f3f3f41412e4645474a444446494b46464d4d4a464c4c4c4a494c4c4c515450
514d405052535556585857585957595a5a595a595b5b5c5e605e5f62686c64677fabbabe
b2dcf9fbfef1f9f6f5e2b096dd956e635e615f5f5e5d5c5b5c35545b5859565757585858
55595759595759585657575355555a575757394d54585757535455565455545455575656
53555454555257565250555323414a4a4d504f51514d4c4e4d4a4e514c46464b4b4c4f4f
4f5048491c31464c4e4f4f4f4d4d4d4c4c4d4d4b4e4d4d4b48464a4c4a4a4a4c4b44261e
404a46454948454946464b484a474c45464b4544434445454144493d39434242444a4442
443d41484347434244444249454040444342423f44251936414345453e3d424343434443
3c40403e4041433c3c3c44413e403e1c32393a393b3438
3b3b3b3f3f4145453e273f46484447454245494643494849464b4a4c494b4d4e4c505150
4f4a3d5055545556585757575757595859585a58575a5a595d5c5b5c5d5d5a5b62686a6d
6d91d4f2d6f1cbaedbf9fbebf5a67f6d6a656690765f5f5d5a324f5b595959565758585a
555757575a56585957575756555759575858334a52595a57525255565555515455585657
585759575654585b585351511e414e52514a4f5151514c514c524b4a524f4b4846494e4f
4f514e48182c464a4a4b4d4d504e4d4c4d4c474c4f4a4b4b4a43464a4747484b4c472a1b
3c49484848434848484b4f4846484c454b4a4843444a4a4643404142353d4745454a4745
454444454844404042444245434042484143434540281b3742484944413f444240404541
3e4443404140424040403f3e3d3e3b1b373f3d383b373a
3c393f4142403f4143273f474948454345494645434a45464a4b4c4d4c4e4f4e4c4c4f50
4e4c344e53525556575657565656585757595a58565a58595a5858585e5e5a585b606361
646b82c08f8a7c80c1edfbffede8e3ac927773bd8c69605b5d2e535e59585a5757585a58
5958555559565758575b5856575a585859572f4955595a57565558525556555559585657
5858575857535559575756532a4b50544f4c4c5455554e4f4c544b4e51514c524f4a4d4c
4c4d4e4f1b2d444d4c4c4c4c4d4f4f4c4e4e4c4f4d4d4d4e4b464b4b4a4a494d4b4a311b
3a48474946444948464c504b4b484843454443444344484a46484340373d4c4748423f44
45484345434343444342444343424347433f414542231839454547433f3e42433e424543
4244423e4140404241413e3c3d403a1836393a373d393f
3c39403f3f3f444541254246464641424248464948494a4647494f4849484d4c4e4c4c4d
4d48314850515356535654545657575758575856565a5657585858585b5a57525d5e605e
646664716a6d6a6d738dabcabae9fcf8f6debecf966d645e5d31555b5a5a5c5b5b5c5c59
585758575b5757565a5a5855585a575657562a4d5658595656565954575756575a5a5657
575b585658575b5b565757564852565856545151525253514a524d484f514c4d514f504a
4c4a514b1e2d464f4f4e4c504c5151504c514e504a4d514c4b484c4c4a4e4a4b484a351a
404a48474447494c47494a43474848474443424240494a4a444248433842484e4c4b4745
454a474848423e414447434442424246413d3d424125183a434742433f403f4443424242
4141433e40403d3e42403b3b383d3e1434393837363537
3535393e3a3a3e41411e3f48424544404246454a44444b46434448484a484c4a4d4b4b4b
4e472d475150545351555254545555565756555554585555565658565856564b595a5859
5f5f5d6160606466636b6f757e82bfcfe6faf6e09f716b636033575e5d5a5a595b5d5d5b
57585b565b59575759595957585a565556562950595c5b59585558565455545a585b5956
565a5b5755575c5b545658551f4a5559524b4f4f544f4d504c504b4b4b4f4e534e4c504e
4d4a484b1b2c484a4d4d4b4e4e504e514b524a4d484c4f4b49494c4e4d4c4b4a4c4c351b
3f4b4e4b4644484a4a4747464846424844484645454a4a43454545422f444642484b4745
424d4443484742404248464340454445414541404125163544454040414141454141413f
3f3f453f4144403f3f3d383b3c3e3e1330353d3c3b3733
393a3a3e3f3e413e3d1b3741424343404648484544484b48454848464f4d4f4b494b4e4f
51492b48504f5252515450535458555654525656555755535654555757595644555c5b5b
5c5e5c5b5b5d60635f616468666c767a84c0f7f4d1b28f81723759605e5b5a5a5a5e5c5a
58595b575b59595a575a5959565a56585556274e5b5a585958525954545452565a565856
555a57565754595b5c575452204b5558545452514a504a494c52514b4b505050504a5050
4f4e4b4c1c26494e4d4e494f504c4d504b4f4a484749484b4a4b4d4d4e4c4d4a4c4b361a
3f4c4d4d4c4a494948484a4949464548464843454645484141454240343d3f44484a4645
4248464245444544444246454243434142443e43422e14384b46404041423f434345413e
3f413e43413e3e43403b3c3c443b3b143137393a393a35
363939393f413e3c3a1c3d3f3f43424343464647434a4a49434a4642494a4c4d47484c4e
4f4e28474c4f515054525152565655545552565657535552545952585856553c5052595a
5a5d5b5b5d5f5b5b5f5d5d606064686668769edff6f5e6dece846861605e5d5a5b5c5b5a
5b5c5a595b59595958575956545959585458254c585759595655585355535558585a5657
595b59575754595a555856513549535654584f51564d504b4b53514c50514f5154535050
4d4e4f4b192a494d4e4d4d4d514a4d4c4b4e49484d4949494c4b4b4c4a494e4c4c4a3618
3c494b4a4b4b4a4a4746444b494546494546454c48434346454342442f3d47494e444845
4344414242484344454446403f433d424444434444300f3b474245413f4242434243403d
40453e433f3d3b423f3d3f3b3b3b3c13363b3c3d403c3b
3a3636383e3f3e3f3a193b3f41433f4340434245444b444744494847494b4f4a4b4a4b4b
4c4c24424d504e4d5050504d5153514f5051535253524d55565854545756503850585958
565659595b5958585c5c5c5e5e605f6264666b9ee9f6fefdf5c37c656261615c5c5c5d5b
5c5d595d5b595b5b5b58585858595a59585a254e5859585656585b5a59585755575d5658
5b59565a57565759565758563d525855565651515454564e50535451514f4a5254555154
53514e4e1b27454c5050504c5050534d4e504a4e4e4d4b4a4d4d4c4e4a4c4e4b4e4c3717
3d4b4a4f4e4b4a494b4c464a4b454848454a474b4440434c4a464545324044454b414443
4243434a4648454944443f403e413c43484545444731123c404243403d3f454440414542
4043423e3c4342403d403e3a3b3c3813333d423f393938
35353c3c413f3d413c193a4145423f423d3f454746454b4547474a484a4b4d4c4b4d4c4a
474b21424e4e4f4e504f504e52505250525353515155515656535258515451354b585854
5859585856585a5d575c5b5d5d5b5f5f5d62616f8695c0d9f8c7b17d736a615b5d5b5f5b
5e5d5e5d5e5c5c605b5b5b5a5a58585a595a204c5859585758585b5b59575454585b5958
5658555557575657545450541c4f544d4f544f4f58514b52565151544f4f4b4b4c484e51
504d4d4d2221424b4f4f4f4e4f4e504f4d504c4f4c4e4c484e504d4c4e4c4c4c4f4e3918
3f4e4b4d4c4b4a43484b4b464c4643464949474946444442454b403f313d484e43454945
42424545454e4a494044414446424148494543443f31163b414041404140444443444544
3e3f413f3e44433d3e40413e42433f123738403e3d3d3b
39353f3f3c3f403e3c193b3f42444043404240464347434849454545464c4b484a474b4a
4c4c1d464e4d4e4f5053525352515256505057535152535355524d575155513250545554
585855565b585b585d56565d5b5b5d5c5e5c5b6164667b91c18fe5d7b38d675d5d5e5f60
60606063605f5c5f5e5e5e5a585a595b58591c4a5758585a5a5a58565855545655575458
5454515757575455515150541e4d5654515856585651565151544e5454504d4c464d534c
4a4a4c4c1e1f3f475053504e4f50504f4c504f4f4e4f4b494f504c4c4c4b4d4b4e4d3f12
3f4c474e4b494a41474a48494544494a49444049484340444140413d2d42494245424942
4244454b4643424942454543444242444a463f423c30163d403e4143404142404040403d
3e413f3f403f443e3f3f45404545421633333a3a3d3739
363a3f3c393f3d393f183d3d424340414041474347464349464542454a4c494747464b4c
4f4a1c444c4e4c524d54545250524f54505155504f545252525350534f4f502b4d565258
54545558565b60746b5855565c5f5a5b5a5c5f5f5e63656a7e78f2fcf0e1826465656366
6765647864616062625e5f605a5b585c5b5b1d4d5a57575a585957595658565754545557
5457535757535358575656543853565451565454545654545651515451544c4a4849524b
4e4b4f4c212041454d4e4f4a4f514f504d524a4c504c4a4e514f4a4b4a4c4c4a4b4c4112
3d49494c4b4e4a424a474749444248494a3f424b434443423d453f3f2341454545454549
424040434845404942424244444048444946404440350e3d43444047414241413d3f433a
3e41433f3f3b423e3e3d3f3d3e443f1533383c38373c3b
3936393e3f3f3e3a3b123c413f3f3c3b3d4241424248484b484142454b46474745494c4c
4d491b3f4e514d4e4d4e55514f4f51544f50524f4d5453575651505252504d2251565654
585154595858565f626f595659585f5959595d5b5f626060695ec8ebf9fcab72789cab95
ac9a80b7706b8098939486695e5d5b84705b1d535e5a565a57585b585858595655555857
56595858565753595c555456314f565954564f58565454565851545551545353534f4f50
4c4f4d4c2520404a4b4c4f4b4d4d4e4e4d4e474d4f4f4950514f4a4c4b4f4e4d494a3f17
384d4a4c50504946474c4c494143424644434347433f4548494042421b42454248464545
4244474343453f3e424240434541434346413c403e370f3b4745434542413d403f3f4a3f
3f3d453f433e42423e3f3f3f3d403c1338393b3c404040
3338393c3c3f3a3c3c163e3d413d403c3e4441423f484647463f4249444547464646474a
4b491a424d4f4e4c4b4c4f544c4f52544e4f52514e4f50575551505557534e2053545656
5654515556555755585656595956585856595d5d5b5f5e5f6237778e9bc0e78bb9e7eee0
efe3cce79397c1e3dedfbc7c7a6762bb966421677d5c585b59585a585956585a56565757
5757575b55535657565655581c48535b56585158565656545156565654514d54554c4f50
494f4c4c272342494b4e484b4e484c4d4d4d484b4d4d484f4b494a4a4a4b494a47494316
374546484d4a424344474946444143453f4545423f3c45454643433b203f3f424b433f42
404043423f4041433d403f423942403b403c3e3b3a3516373e3739393737363438353a35
353236343a37373636333333303130193e3b3e3f3c3a3b
3b33323e3f3a3e3f3c133b3f403e433d3f4042404044434742404049404643434b444347
484915404d4f4d4a464b4b4e4d4d5051504d4e514f494c4f4f4e4e4f4d4d501d4a505056
564f4d5354535154515950505555565652545a5b5b5a5f5c5f2b5e666b97e39fedfef5fc
f9fef9f9dbdff1fbf8f9e3b1bd8e87cda26c4d8fad584f524d4b4a4b4b4b4b49494c484a
4b4b4d4e4a49494c4c4b4a4b1f464c4d4f5250544d4e474f4f4d47473e413e4240393c35
343a3332312e322c2d312c2d312b2e2a2f2b312b2f302e31302f303131302e3532323422
3b33353a39373031353638373932353431322b2c2a26262223211f1a2c1a191c1a191918
1718141b1d1d1c1c1e1e23241e2126202823262c2831242d2e2f3031292e2c2d302f2f2d
2d2d2b2d2e2d2b2b2d2a2a2b242624273a42453f3e3c40
3532393c3c3941403c113536343a36353533363634373538323230362e313033372f2f31
2d32233038373735303531353a383c3d3e393f3e3a383a3f413d3c3f3d3e3c22383d393b
3c3533352f302b2b2f292b25302a2428282a2a2c2c2c31312c41383c3f4e8ca6bcb3a6ab
a6bbc7cfecdec2b5d9e2f0e9edd1d0d8ad989bb9bf584848444040403b3a363334352f35
2c2f302d2d282628272626224023212022221f23242125222a2b2d343334383434323939
373533362f2d393434373e38383332353438383135323332352e30302c2f2c312b2a3027
312f2f312d2e2b212d2a2c323431312c30372d363c3b363e41424242203f403f3f3e3f40
3b3c3e3f3e3c393c3839393f3a343a3b3b393d3c39331b373b3c3d3b3438373e3e393a39
3a3937393b363c3c3f3b403e3e3c3a1236404241423e3b
35323236393b3f3c3a271e1d1d1f2424262c27282c2b2c2a2b2e282f2d2c2d32322e312f
2e31252f342d312f2d2d2929302c2c312b2a2d2a27252a2f322a3232302e2e2a35363835
3c373d3b3a3942424549494f49494c4c4d484d514f4a4c504e29525351547ad69f7c726f
6c7b878eb6a281779b9ec0eceff6f7dfd9e1c5e2d595735c5a575b595655545655535356
57535257565057575257544d265458595454515154505052544e5352515352534f4b4b4d
49494549271c414845494c4a4a44434a49514b4a4d4d4a4b4c484c4e4a49484b4a4a4810
36495048494b463a4d3f424946474940483f4a413d44404a454942431a43423f3f494245
414442434542414242444446423f48454848464545370d42454345464541414347464140
403f4441423f4546493f474342433e0c3d414240453d40
3939393b393c3d3f39152d3535353635393a3a353a3a373a3b39343a3c3a3d3e423c4141
4643143947444a4b4a4c484a4e4b4e50494e4d4a49474e4f5153544d514d4c11484f514d
535151554f4f545151545154514c515755555858544f5858591b585a5b5d6de697696563
6365676c7a6f67696e6b7fa4b1b6b8b0ccd2cbefece8a36865605e6663605d58575a565c
58525657575659585d58565425555958585856595654565454594d5554555556544f5050
504c494d2e17474c4b4d4c504f494b4c4e524a4c4f4b4d4c4e494c4a4e4b474d4c4c4710
374b4c494b4a46494c4545494943494240434645434345403f4142481240494241424c40
484342403f4a4244404445484a41464849464548483e0e41454542434342444847494041
46404945454245494941444544473f0f3b41403f443e3b
3932353939363e3c3b143b4040393c3a3a3b413d3f3f3f4140433e403f40454447414447
4545113948494c4e4f4e514b4d494c4f4f4c4d4d4c504b4c525250514f4e4c124b514f53
50514f545454545154574f51545154525256565a5655565a56165b5c595b66e09065615e
5d6162615e60605f5f5e61686f6f7075838893bae2e9cb9c9683829787896861595b575e
5756555759555858585756572f5751595454585658585656565857545154555654535450
504f4f4c2816454f4f4c4a4b4d4c4c4a4d534f4c4d4d4e494f4b474c4c47484e4c4c4712
314e4b4d494b48494a4c4c474c444846424e4846484849493e41454511414f4044454245
454b4d484549494342424846494442464643484b44400f43404b41414744454c47474845
4c47494b4943474949424740464740113b443e4540383f
3932393339393d363f153c3b373c3a3b393e423f3f3b3c433f404343443e404243474347
464812394a474b4c504d514c4f474d504c4b4b4f4d505054555250514b4d4c144b4f4c51
534f5454515454525858515154544f515353565a5855565a591c5e5c5b5b61d88263615c
5b5d5e5e5e5d5f5b5b5d5c5e616462626268426d9fabf7f0ead4ccf2d4df81735e5b5d5c
5857585b58585a5958585159465458595854585454585856635a5454545a565654555150
4f4c48502c0e4554504e494b4c4c4b4e4c514c4c4c4f484a4f4a424a4a484b4e4e4b4715
2f4e4b49494b434a444343444841474843454548474349494445423f0c424242424b4542
453d464548464244444546434c454c4548474647443f0e45494744464a43484c43434647
474c454449444949454446404142481040473e403e433b
302f323236353c383b19393e3a3e3b3a39423f413f3d3f4141404145483e3d3f414b4443
4b46163b4b484c4b4d494f5150484f504b4a4e4e4e4d50524d4e4f5150514b1143514f4b
4f4f514c4f49515154565154515151535957505454565658551e5a55595b5fa2675b5e5b
5b595e5c5c555b595b5d5c5b5b5e5d5d5d5f29536477c4d1def7f1fbf7fbb7aa6e605f5c
595b595957575759585756592a585857555855555856585756575658555657525558514f
534f484f330f45514f4f4d4c4c4c4c4e4e50454c4f4b4d4c504b4449494b494f504a4715
2f4c4f47494c434d4a454948454a4f46464943454e4d4a4240494240104545424f4f4549
4f4b45454348454349484847494b4b4346494845483f1045444243494b474e4f47464947
454a474449454948434a4a42403f421141424542444439
34323935323b393c3b123c4141443c3b403f44423a3f42413c423f44413f413e42464542
464516394a494a494c4a4f514d49504e494e4d4c4e514e55514a4d514d4e4b1149515145
4f504f4c525154514f55555551515556555254595958565a532155585a585b6b5b5a5b5a
5a5b5f5b5b55585b59595b585a585a59585b23496061727c91c5e0d0dde2fbe78f6a6465
5f595a5b5a5657595258565431545856565b5158515859564f5858585659525554565550
504f5254331142514d4b554c524c4a4e4d504c4f4e494f4f4e4a4b484f4949494e4b4715
2e4d51484b454b5045464a45464b4b494b464943484e4b494c4949480c3f49454c464945
49454e49454c45424346494446444647484449484b411445434244494c44504c4b474c4c
4b464b4a46464a48494c4945454846154242424047433c
333338333842393f3818373b40403c3c3b3f3c3d3c4347423b443f404041404145454346
424511374b47474b4e514b4c4b494f4c4a4e4d4c4f4f4c4c514f504f4f4d4d1144514d47
4c554a465551514f4f4f515455515555555458585857555a542356585b575959565a5b58
5b5b5e5958575759565858585a5657585a5a20435b5f5f6166768d798d9ff7f5c99f886e
625e615b605757595858585942565756585c5556585956585858565d5756585556585555
54545454390e48544f4e554f54504e4f4c4f4e4c4f4f4d4e4b4b4c495049494a4b4b4417
2b51504d4e454b4f47494d46494a4949494b4848454c4542454b3c3c0d42424549454248
41434a454046494a444d4647454a4a4d4b4746494a431245484243474c444c4649434c4c
4c474b4e42454b494649494646493f1947423c3e434443
3034322f343a353c341a383b3c3a3e3c3c3f3b3c3e404340414240424244414145454247
46420f324b49494b4e4e45494c4c4b4f49494c4b4a51504f504f4f4e504e4c123d51464f
4c4c464c495151555255545152515658555559595856585955265656595a585655575d58
585b5b575657575755585457575756585a56233d585b595b5d5f63636a70c5ebfbf9d994
83726b6e6458585a5859575e4a58565b54585156565659545858585f5855585658585751
565557523d114755514f54504e4f514e4a4c4f4d50504b4f4a4b48494d4b494f4b4e431c
2c504b4d4b464c4c4c4c51494c4c48484a46464542454942494945400e4f4c45454a404c
4b4e494b5248494a4b4a4d494546474b4c4b4c44494a124c494646474e4b4d484744504f
4d4c4f4a46494c4645454a404148401d4041424446423e
2b2b32322f35353c3218393a373c3b3a3c42403d403c4141424340454442414143454447
4541162e47474c4a494f49494f4f4b504a4c524b4a524e4c4f4f514f4d4e49143d4e4d50
5150494d4f4f51554e4a51545151565755575356575255554f2258565857565555565958
565a56525455545254535354575554565553263855565757565b605c5e5d73aee0eefef3
e2ad87a5705f5c5f5e59595739565859555556565b595956595856575656565856585555
565655543f13465154534e514d4f4f4d494d53505049494b4e4d4a474f4c4a4e4f48421e
2a524a4d4a4a4c4c4a484e4d4e4f4345494a48473f45464a4542424312434c4f4b444c4e
4e4a4d464f4640464f4b4d4b494a454a4b4a484852441546494d4d504e4c4b4948474f53
4c4b4e464d494f4946494b43424b3f1a3f3f4745474744
2b2f35323539393636173a3b3a3a3b3b3f3c3c41403c3d443e4546454144414046494147
4840192c43484c4d4a4e4e4b4f4e4d4e4d4f504e494f4d51534f524f4e4d3f183b4c4c4a
514b4a4c4f4f4f5451515451514c56555252515555525655502453585654545451565555
54555450545451535153545256545054534e22354f535456535859575659617293b3e6f9
fbe5dcdc98766064615959594054595d5956585658585958595956555556585555565551
51565150441049515553504f504e4f4b4a4e50504f4b4a494e4f49484b4a4a504c47421b
284a49524c4d584d49444c4e4e5049424945444d474c4f4f4b4546420f45464e494a4c4a
4f4c4f4b4a4b4a4b534b49464a4a494a4b4a504b4b481a454a504b4d4e494a4d4a4a4f4f
4d4c4b4c4a4b4c484240474746493e254041453e444342
2b2f322f32323135331b3637393939383f3e3d403f3c40433f4546484345464249484347
4843182e464a494c4f4f4b4b4d4d514e4d4f51514b4c5052514f4f504e4c4617394f514e
494c4c4d504d514e4d515451544f4f524f51535255565452522753545754515251545254
5556555156564f554f54545355535354504f232c4e515455525859555657595e6277a0dc
eff8fdfaecc46d706763626056565959565956595d585856565656575955545756565654
515551513f17475451515151514c504f4d4e4d4d494c494e4c4d474549474c4d4a4b461d
254b4e4d4b4c554d4b464c4a464c4c42464948494c494c4d43454c3f10454c4945454a4e
4e4d4e4c4d524a444d4d4e4e494c4e494c464c4b4d4e1d4c4c4c4a4c4b464b4c4a49524f
4f4c4b4c454b4b4846414243494b432742463e41474443
2b2b2c313535343a301f383b3e3c3938373d3d3a3f3b4242414343444242434649454849
45421a2c494b474a4d4e4a464d4d504d4c4f4f52474b4d4f514e4f4d524949102f4f4f4f
4e4b4b4a4e4d4f504d54534d534d5151515654514e5557545025515755544f5455544e52
56555250545551525054545253525450504e22284d52525550555754535555595a5d6b96
a9c9e2eefcf3a3a28195a36e54595b5659595859585b5b54565154595858585655555551
575154524717455551534f5151504f54504d4c4d4d4c464d4c4a4b4a4a494c4e4e4d4720
234c4c4f4a494c4c494c4d4d4b4d4b474c4a474a4c4a4a474d454b4610414e454949464c
4c49464c4a4f4b494e4b4d51524d4a4b4c4c494c4d4c1f4e4b4a4e4e45484c4a4d4b524f
4c4b48454a4c4c4f4c4447464b4a462442484740454444
32322f2f30383639351f36373f393b3e3b3a3e3f40404244424442423e41454948484a47
47421b2b494948474a4c4c4a4b4f504e4e504c4d4b4c474c4f4a4c4a4d4c46172c4b4c50
4f46464c50504d5050504f515550504f5052555350555752502c50555452535555525151
56555152515252505452525350544f4f504c262a4e555054535655545256575957595c61
677291b1e0f5fcf8d1e0d9875759595b595656585b585656595857565855554f55525451
55504f5547184351545253545351505550524f4d4e4d454d4d4b4b4e4c4f4e4e4b4b4723
214d4b4f4c4b4a4c4c4c4e4b4f4a4b4d4c4a4f4a504e4f4e4542443e134e4a50464f4c49
4d4f4e4e4f4e4c4c4f53464d4e4e514e4d4e4e4a4c44214b494a505249494d4b4c4c5153
4f4c49454b4a494f4b494c464d4d4729434549424b4941
292f2f2f32353536331f32363b3e3b3b3c403c3c403e424340433e423c414646474a4748
46411f29494c4b48474c4e4e4d4f4f4f494e4e49474c4e4a4e4d4a4e4649441f2d494a4c
4e4e4d4f4f4f4f544f51514f555151504d4f525053555554512f5354524f545455545451
56515053505151515150505151534f51504d2c2a5155515353555752505354585457545a
5b5d627290cadbf0f9f5eabd6b64615e5959585d5b5f5d56585a58575558555658555157
57545455471a4455555355555551535051534e4c4e4e4d4d4b4e474c4f4e4d4b484a4321
1f4e4e4e4e50484d4f4d524e4d494b4a4f4e4d4c4d4a4d4e494946440f454a4e4546454a
4e4a504e4f504e4a4b4f4e4f494d4f4c4e4c4b4b4a43224e4e4f50514f494f4e4a4e4f51
4e4d4b4e4c48474c49494b4c4b4c492c45434a454a483e
2b30302f31343435352337343a3e3c3b383f3c3f3f3f3f403f443e3f3e4441454948474a
44412127474a464a494c4d4d4d504c4e4b4c4a4d4d4c484c4945474b4949431d29494e45
4b45494a5151534f494f494f50545154554d5256515154544f3351545155515153555450
51505455535450504c54504e4b53524e504c2c254f504f4f515552505050555753565657
57585861667280b2dcf6f4f5bd917664595956595d56585d565759555455545856575656
56555355431a4355525154545254555251524f4f4f4e4f4c4b4f494c4d4e50524c4a4324
2051504d4f51504e4f4b4d4e4d44494f4a49504d4f4f4c4b4c4a4b4214495050504f464f
4c4d5549464a464e4e4f4d4d4e4c4b4e524f4e4c4b4529505050514f514d4c504a494d4c
4f4f4e535252474c4b4c4a4d4c4b4932444245484e4545
2b2d313032323433331c34383b3a3c3c3b3d3d4141414141414040403e4244414645464a
49452124454746484a4c4d4d4f4e4c4d4f4b4d504f4e484c4c474a4b4949421c29494a4a
46464b494a4f4b4a4f4b4751504f4d5252505055545352534c324d55535355545354534f
5051555150524f4f4d504f4e4751504b504e2a254d4a4c4f50554e50504f525451545555
58565556585e626a7badaed7f2edd689655e565458595856545456555457545252565554
56545153481a3e5252515653515256534e5353504f4c494e4e4f4a4c4f4c4f504b4b4427
1f504d4b4b4e4e4f4c4f4f4d4c464a4f4b4a4f4c45504b494c4c4942104542434e47494a
494c4a494b4f4a524c4f48474a4b464f4e4d4f4c4a442b4c4f4c4f4b4d4f4d504e48514d
4c4f505554514a4d4f514b4d4c4e49354549494448464a
2a2b353532353335331f343b3a3c3835363f45403e403d4441393f403d4144434444424a
49432223454547484c4d4b4c51494c4e4e494d504f4e4e4d4e494a5049484320274a4b4c
4f474a4e4d4e4a514f515151554d5153534f5354535556574c3350545451555655555450
53524f4d4f4f514f4a4c4f4c4a53514a514e2d2449494c4f4f545250505053524f515655
5550535556575a5c5f636da3f4faf1ce97625f58575658585c5659555552544d53565251
55555550401a395050515354514f53514a4f53504f4746494c4947464b47424644474029
1c4341474242424545454847463e44444345404740433e41474a473b1244464f48454649
4948464c4847494d494644444546434646454643423e2e42403c3f3d3e3f42403f3b3e3e
3d40433d3e3d3f3e3f413c39393a3439484c4d4c484b49
2b293232323234352e1d383534363533383d433f3e413d3f413f433d3c3e40454243434a
473e2124444446464649454c4e4848494c484c4a4d4d4a4b4844464a464440232b494243
45474b524a4d4550504e4a4d5050534f4a4b52514f50515149374c504a4f494a4d4e4a46
464643414141403d3a3d3d393a3d3e383d3b3128373a393b3d3d3d3d3d4040433f424645
4343474948474e505651566597bee2e5b16c59504a3f42403e3d363335352d292e2d2b29
25292e292b36362c2e292a2c2f2c2d3130303432342f322f3431332e33332e333535332f
25323137342e2d2f3432352b2d2a2926282626251e22201b201e1b1d331118171e1c1718
1c1f1d22241e212c26242725272929342f2f313434323635333637373836373939393636
3638373534353c353030332c2b2d2837484c4e49495046
253132302b3231312f233231302d3030323437373836303132312f303131302f2c312e30
302c2a29322f312f313131383835373839353636383a3435332d30303233312f2a302f27
2a2b272a24282420201f1e1b211b1c2122221f2425242026272b2a25272a2a2c32332e2f
303135323034353233343232313333313131312d2f302d2c2c2e2e2b2b2b2b2b2b2a292c
2825272629282c31322f353d486fd5eae7c1aa81574b4a494541414043463f4444434546
444649413f26364142403f40403b3c3d3d3d3c3a363737373836353232333a3638373530
2536393d3c3c3d3e41443d3c4442444245464648454a4949494646411d4a4a4e4b49454b
4a49494744454648444541434448494d4b4949424944354645484b4948494449494a4a4a
4a4b4a4a4849504b48494d494c494537484a4a4a4c504a
2b2d30333331333431291c1d202020222426292728282b2d2c2b25282d2f2d2b2b2f2a2d
2c2a2b2b2f292a2c2c2c2c2c2c2c2c2c2c27282c28282a2a2a282c2d2f2c2c2c28363c3b
3e3b3a3c433d4344434a484244494b474445474448474344443843444346454744423e43
464544433f4242414444434343454744434331224445454947474a494a4c484d4b4d4d51
51524d4d5051575655565558545d88b8ecfffffacd675d595758575655564f5453534f50
4f5454504a1f34505154575955535554535454544e4f504f4f4d4d494a4e4f4d4a4b4a2c
1d4c504d4d4e51504f4e4d4c4d4e4d4c4a4c4b4b4e514d474e4f4c3c1852474d4b4f4f4d
4f53514d4d4f4d534d4e534e5356505055505251504e354b5654565554565353514f5455
57565454525051514f4f504e504d4b3b4d514e504d4a49
2b2d362b3232333531242e30323534343534353335343639383535363a3e3c3c3d3f3c3f
3e3c2721414242464a4a4a4d4b4a474a4a45494a48494a4a4b4d4a4b4b483f201e454c4b
4a4c504f5051504f4f50515050504f4c4d504f4f51534e4f4d3a4e535155504f50504f53
525253504e4e4d4b504b4a4b4e4f4e4b4d492c194b4a47504e4b4b504f4e4f5152515451
4f535155564f54565755565653555f6f9ff5e7edf7ceb1835f5d5d595b57535655555554
545655514b222f5454565655555456555155555552505050524e4e4c4d504d4c4d4f492a
1b4e4e4f4f4f4f4f50524c4d4e4d4f4f504e4b4e4e4f4e4d504e4d3f1a4a4d51514f5150
505054534d504e4f554d545151564f535455585855523c51585658575656565551535657
5c5755535555525551534f4d4c50494149504b514f4c4b
2f2f2e35323232333223333b3a36363b383c3d3a3e3c393b3c3f3f3c4243474646444444
42402921434545494c4e4c4c4f4e4b4d4b464b494d4a4a4d4e4a4c4d4b45422520454b4e
4e49484f554f4f514f4f4f51514f4f4f53514e4f51524f504c3d4f52515251525051504e
4f50504b4e4d4c4e4f4749474b4d4b4c4d4b2e18464e474e4e494b4e504c4e4d53544f52
504f505252505656575354544d4e595f73aa7c8ae0fef1bd8375a5595758555555545857
5452564e46243354565556535456525453565654545152515450504f4d4f4e4c4e4e442c
1d4e4c51524e4d4f4f4f4c4f514f4d4d504f4f4b4e504c4e4a4c49411a4e4d4f54545152
554f54555557564f55575854545655575857585a5853455558595a595858585958565859
59585755575554575756515151514e4347504f4f4c4e4f
2c2f2f2f30353230322737383738373c3c3d3f3c3f3e3b393d403f424447434743474345
453f2c24434846494c4d4e4c504f4e4f4e4948464a474c4d4d4b4f4d4a4840262143494b
4749454d51504c4f4e4b515451504d5250515554505150534c404c535655515254535250
4f50524e4f514c4c4e4949494a4b494d48462f1a454b484c504c4d4f4c4e4d514f4f4e53
534e4f544f4e545254505657554f5658565e5f6aa1f0f5f5de9dc45d585b565852565658
555154534a29305453555551555551525455535555545352565353524e524d4c4e4e4930
1e4d4c50524e4d504d50504d515150504d4d5354504f4f4e4c4f4a4626494b5350505051
515051555756555450545856585858585d59585b58564f5a5b5a5a5858595b5f5e5f6360
5e59585b56575756575755545452524b495053514d4c4e
2d2d2a32333434362e26353537363e3c3c3a3c3e3d3d3c3a3d3e3e414045454041464245
433c2920424749494a4b494d4e49484d4d47484947484a4e4b474b4a4c4846281f464d50
4f4e4c4a50514f4a4f5051504f4e494f505050525154545550424b565555535455545250
5250534f4d4f4c4e4e4c49474c4d4a4d46442f1d474c4b4c504f4c4e4d4c4d4f4f4f5051
545250554d4f4c4c515151524c445659565b5f61729ad7fef9eccb655c58585858585758
585151534a272a5051575552575251535357525354575251535653505052514f50504b36
1f4d50504e4b5050504f4f50544f50504f4d4f51504d4e4f4d4f4f472c55545151545454
515555545051575656545856595b5b5c5b595c5e5e5a56605e605e5e5f5f626771889c82
655b5c5c5b5d5e5b5f6358565655544c4950504f4f4e4e
2b2b2b30323233342f26333938373b393b3b393a3a3e3c3f3e3e3e403c3e463e41444245
443f2921404449464b4c4b484c48494b4945454b4b464a4b4a4a4a4a4a49462b204f524c
4d4a4c4d505050515050534d4a4c4c4d50515351515252554c414c5656534f555151514d
514f514d4c4c4b484a4b49464f4f4c4c4b48301e49504d4e4e4d4c4b4f4d4d504f4c4b52
53554f4e4f51525051504f4c453c545658585757606eabd2d5fbda7f615b595c56595656
565356554a2a2a5254555654555153545255555254535253545253524e52515250504a37
1b4d50504d4e51515451514d54514d524e4f4f504f4a4d54504f57482653505455575154
52555557575b59585d575c585f5f626c6761647e95746b7372897777818793a1bacfd8ac
7e72707a71807c78918e5d57575b554c4d4f504d4d4c46
2a292b2f2f3031342f263135363738373a3e3d393c3d3c3e4041403f403e434141424144
453e2a2041474343494a4c494d4d4f484949474a4b4a4a4a4b4748494c45492f2143494a
4d4f4e4c4a495350524a4f50494d4f4e4c4a4f4d505350514f434a525157514e5352514e
514e4e4e4e4c4d494b4c4a464d504e4d4b4a311b4b514e4e4d4c4b494f4f4e4b4e4a4d50
4d4f4e4d4f515251514d504e4d3f515653565157595d6f6d7eafdfcd916f615f58575855
555657514c2b2d55555258575451545651565456535153565753515553524f5152514a3a
1c515150505051525453545151534f50504d4f4c524d4e52515254462c54545454515050
50585e5d58585e5e5e5c60666a7587c19d85a1d3dab6bdb29ad7cfd0d4d9dfe7f5f8f2dd
c6bdb5c1a9b8b5bbd8bb675b5b5a5b514951504c504e49
2b2d2e2e2e3331362c28323535373b3a39383b3a3c3b3a383c403f41424141403f404045
433c2b2041454045474c4d4c4d4c4b4c4b4b4b4b484d4e4e4b4c4a4a4d46422b20464a4d
4f4f4e4c4c4d4d4a4e504e4d505551535151504d4d54504f4c4548535656554e4f50524f
514f4f4c4c4e4d4e4d494b474e4d4d4d4c49331a464e4a4c4c4b4a4a4e4e4c4c4c4e504e
4e4d4e4d4d4d4c504f4e4f524949504e4c55524e5658595c6173a8fbecca92625b565552
56585854492c2b50545156565452565253565553555756575555535554514d4e53524c3b
1d4d514f4f4e51555455525350535051514e5054515052555452554a3756525554565959
5d5d5d5f5a5e5f6465697eb2accfcbeedfd3e0f9f8f1f1eee1faf4eee3d3e0f7f2e9dae0
e8f1f2f6e8e7eef2eeca7b726c6e73684d52535051524d
2e2d313436333734322b343436393b393a3b3b38373a3835393f3e403f3e3e3f403d3e42
423e292142454247454e4c4d484a4a4a4c4a494a4a49494a4a4c4c494e4d46301e45474a
4e4c4d4e4d4f4f50534e4b4a4f5653504f4f4e4c4c4e4d4d4842475152514e4a4f504e51
514f504d4e4c4c4e4d49494a4d4d4a4c4e49351a434d484c474946494b4e4e534f514f50
4f4d4a4e4b4d4f4f4f4f4b4945374e4a4c4c50504d525858596388daf8eeb46f5e5a5655
585957544828275051535353555455515156545556575757565553565451515152504b3c
204b5050504f5454515352555154515251545152525151545155544939575958585a5d60
6271766b6c6768707683b6f3f0f9f6f6faf9f5e2c8d0c5cfeed1ad9d958b97b3aa9e9098
b0ececc9ddf1f2f3ede0b9b4a9aca3934f54535252524c
2a2a323232323231312d35323236373838363c393b39383a3a403f3b3c403f4240403f3e
413d2b2241464548464c484944484a46494849474446484a494a4a4a4b4a442c1f454b4e
4d4e4f4f4e4d4e4c4d50534e4d504d4e4d4f51504e4d50514e42474f504e4e4a4f534f50
524f4e4c4c4d4e4e4a49484c4a4b4a494b48341b42494949444747474b4a4d4f504d484d
4e4b494c4e4d494c4a4e4e494237494b4f514f4b51535958565c637999c0ebc287605e58
595a59574d2f2653525553515555565353565456585758575756575655525451544f4c3b
204e50534f515554515154535154524e50535255555550545358504e3e5657595c646267
84ced79e8094abc6b5cdc3d3edd9e3eae8eed3a07f7f76809a8a746c67646a716c69676a
7cbaaf7f93adb4b7bed1eff5f2ebc6ae5355555553524c
29292c3032323232302d343736373637363837373b37393c3d3e3d3a3b41404241433f3c
40392920424944494747444445454e4849494945454d4d4e4a49464c4a49442c1e444b4b
4b4c464d495250504c4c4a49494b4c4b4c52504f4f4e4d504d42454f4f4d4c4b50504e4b
4d504e4b4c4e4f504d4a494c4b4b48454948321b3f47454a454547484c4c4a4a4c49474a
4b4d494b4b494b4f4a484c4c42404d474f4c4a494751524f5157585f688ee9f7dca58b6f
5d595a564d3026535455565354575754545156575756575757565756575755504f514d37
23505051515256534c5152505155535453515458555656555053584e4358585e6363656c
8ee9e5cadaeeebf5f4f4d88e8d8892988e91826e615f5a5b656463615d5e5f5d6060625f
6574716163676d6d7288b3cbdde2e5af4e57565251514f
2827262b2c2e322e2c2a2f363534383938363533393a3c3b3b3c3d3c3d403d42413f3d3c
413a261f424847484a48484649454e484849494846474b4f4f4a4248484646301b45474a
51534e4d4f504b4a4c4c4c4c4c4c4d4e4c4d4c4d51504d4e4b4743504e4d4f504e4e4b4f
514f4e4a4c4d4f4f4f4b49494a4b47494c4b351c4149434846494e49494e48484a47494c
4e4f4b4b4e494a4f4c4b48454030424a4d494b4c4f4c4d50515452565c71aad0ebf1dda1
6e625a574d3127515155545554555655555156575756595958575655565655514f524e3a
234e4f4f52535755515050504f5350525454555455575a56565c5f5b5261728183a48b99
befaf5fafbfbfcf3e2bdb46a646463686262605e5a5b56595d5a5c5b58585b5b5c5c5c5b
5b5c5b5a5a5b5c5c5c5e6c7b8da2e1b84c545150504f4d
2d292f2e2c2f3031302832353334363636383436383b3a38393b3e3c3c3e3e40413e3d3e
413c2b213f4545464946474a4a474b4845454a4a4946464e4f4d47454546442e1c44494b
4d4f51514d4a4c4b48484f4f4f4a4c4c4d4e4c4d4e4d504f4c4140494e4b4f4d4a4c4c4f
504e4b4d4b4f4c4c4f4a464a4748484a4b47331d3d464446474c504b4c4a484c4f4a484b
4d4f4b4a4a5151504d494a43392d4a45464844464c4e484f4f514e54575b697eb1e4f4e4
d0af63574f35295350565457525657565557585754535859575455565657555456534f3c
214c525351515554545256515256565350545455575857585f5f64749290bce9e4fdfaf9
eecabad8ddaea58e8478735e5a5c5c5b5a5a595a595753525957575858595a5b5b585a5b
585958585857565658585a5f6073aa9c4753504e4f4e4c
2d282a2f2c2c30302d29303733343132353738393839373b3b3a393a3b3d3e3c3c403d3e
413d2b1f3e4244464444484d49494b4844494e4e4d4a4a4e494a49484948402f1f3f4a4e
4f4c4d4b4a4a4e4a484f4e4b4949494a4c4e504e4a5050504d43434f4c4b504f4b4a4b4e
4f4f4d4a4a4d4d4b4b48474a49494a4946462f1b3b444448484c49484b494a4d4c49474a
4d4e4b46484c4b4c49484b45392f4644464948474d4a434a4b5453515150555f7192bbf7
f3d2805f4f392b545155555456575553565555555256565857555656565657565855503c
254d4f505251555352535855545655535055565a5c595d63656679b3e6fafdfffbf4faf1
dba7757a786e67616164635b5b5c5857575757585755514f565757575a5859585a57595a
595756565856565656575858595961583c53504d4b4d4a
2a2e2b2d2f2b33322d292e343435343333383836383a393c3b3a393d3b3d3f3f3c3f3d42
463d291e3d4243464545464b4b48484b474a4f4e4c4b4c4b4a494a4b4c493f2e1f41444b
4c494649474d4f514e4b4b4b4d4d4b4a4b4b4d4f505155524a4141504c4c514d4c4b4b49
4e4f4d4d4c4d4d4d4b484a4b4a4a49484647301a3b454648464a474848494649474a464a
484b4748494a494b4a4a4b4a4041454141424b46494a4c4d5051504d515252575a678fe2
eee3b18256402b535254555757565554545655545255575958565752535657575753513f
2a515052525252555351565758565358585754585a5e7190848abde7eaefdbd2be93a37d
78766563615f5a5b5d5c5c5c585857565657575555565149545857585757575757575657
5757565857545454555258595755554b3b5154514c4f4b
2b2d30312f2f3032312e3033333437333136383a3a3a393939383d3d3c3f3e423f3f3f40
433c2c1f3e4343484747464a49484a4d4a474c4c484949494b494b4a4a49402d21444849
4d4c46474b48494f4d494c4a4749494c4b4f4f4e4e5352514a3d3f504d4e4d4d504e4c48
4e4e4c4e4d4a4e4d48474a49474846444745311a39474d4948494846494a46454748494d
4a484847484745474a4b4a46342b474a46484544444c514d49484f4e4f4e4c4f555b678b
aedbd69963472f5654535458555455535255545354545554555755535456565655545140
2c5353525350545453525557585655545758585a616a93d7e2e0f9e9e0c0847168636261
606564615e5a595959565754585457565657565555534d43535555575858565454585454
5554545656535252534f565653504e463a4f514f4d4d4c
2b2a2f2f303130312d2c303732323430313536363738393b393a3d3b3a3c3c3e3d3e403f
41392d1e3a42444647464247494b4c4c4a474b4d4a464a4b4a48464c4d4f452d21414a47
454b4a44474b4a4b4a4d4d4c494b4d4c484e504d4f514e4c493f3f504d4d4d50504e4d4c
4d4d4c4a4f4d4c4c4847494a4b4947454540331837464a4947464647494748454b46464a
4a4545494748474a47444740372a4843424748454949494c4c4a4c4d4d514e4e4d525660
75adeed3ae6b365756575553505254515255535251504f5053504e535252534c4c4c483b
2d484b47494e504a4a494f54514d50535a615c5e728cafe7f9f4eadea992695c5b5b5757
52565b585757575756565451504f4e4c4d51494b4d4745414245464b5351494644474a52
4f4346474d4e3f404241464b4141403e3b4f4d4c4c4d4d
2c3030322e303030312d2c343330323232323330343536373638383839393936383d3e39
3834291e33393a3c3e413c403f434541403a3d4342423f3f413f403f43413c2d253b4041
3f424543404244484e4b494844464a44424444484c433e3a3b36343b3c3a404239363a39
383f3d3639393b40323234383e473b3233312d222b3130343537313335383b40393a3a3e
4037353939363b3f372f2d2c2e292a2a292929312d2422232c382928292f423f2a2c2f3d
5776b5c6af7945343434353735303135414f3e3638383a464f3e3b3f424a4c3a3e3e3c37
3039373739414b3a383742514a3b3e5176907c6aa7e2e9e2baa26b5a4238312b26324c39
2b2b313542472f2a303340463134363740483b39383a3b3d383d3b414f4d423e3e3f4754
4c3d3e40494a373536363b41363434373f4e4d4c4a4c4c
2a2a2d292d3232302c251e1e1f1f22292c211e1f202127272122242d332923252b38372b
25292a242a2b2c3035372f302f3135352f2d2b2c32362827292b3224242420282b21181d
1e212c331918191b21251b1f1d2b3b2b21202c3f3e2e2e2c2d32343534353c4436373836
393e3f3638373c40333537374047362f32312d28282826282a2e282425262f3b2828292f
38352c2d302e3340372b2b2e2c2a363534373b3b3a3b3c3e404744424545474642434549
52629ae4dda75d4a49494647434242414750473f413f444b4f42404243494f434848473f
34484747484c524d494f54585a5666a0eef6e9d5f4eed8a26e68605751565b5857525253
534f52515457514e4d4d4f50494c4c4d4f514a4b4947403c4a4b494e514f4d4c4d4c5057
5451514f50514c4c4c4d4d4e4e4d4c3e304d4f4c494e4c
23242d2d28292d2d2d282928292a2d2f302b2b2b2f302f312c292c32362d2c2d3337372e
2d2f2b242e3132373a3e35373b3b3c3e3c3c3c3d3e403f424042443d40413c31243d4144
464949454549494a4b4a454844474f4a47464a4e4e4b48433f3b394746484b4b45444648
48484b494643484a454648474a4a45454847361e32424847454544423f4245494743464a
45474a4a484141434241403c3226424440414243484845474b49474a4b4b4a4e4f50534e
4e5874b3e3dfb08f7a655753515355565454545556535853535455565757555654565644
335555555657585857595c666d708ac4f9faf4e4b78877645b5a58524c58595a57545354
5353525350535555575455534f525556555556565450473f555354575653515354565555
56535453515453535150515254544f3f2d4f4f4d4b4b49
2d272b2b2b2c2c2f2a232a3031323132363632353b3a393939393a3a3d3b3f3f3f3f3c3c
3f3b2b1f393e404446464746484745454548494b484949494849494644444533233f4849
494748484b4a4b4b4e4a48494e4d4d4a4d4e4c4e514f4d4a47403a4e4e4e4d4c4c4d5051
4d4e504d4c4c4c4c4d4b48494c4948474646361e31434947494a45403f434547494a4d49
42444845464447434444433f3324423e444443434847444749444343494544474a4d5052
4f4e576f9dbecee3c9905755545253565453535556545553555556565757565654565545
3555565656575859595c6a8da7accde8dbd5ba8d635c5a5c5957554f494c585756545356
575454565355565654565453535456534e5357585753473d545355565655545354575654
55525052515253525253535454534f3b264d4f4c4d4d48
22272a2d2a2e2d2e2c292c2e2e32323434373434383b3c3a3c3e3e3d3c3b3f4040413f3e
3f3c29213b3e42434244464646474a484748494c4a4843494746484a4947442f203e4b4b
4a4a4b4b4e4c4b4a474a4648464b4d4c4b4e4f4c4e4f4d4c483d364c514f4c4c4c504f4e
4d4c4e4f4f504d4c504e4949484b4a464645311e31464649474b48414242454646484a46
4246474544434243454445453e364646454946454948484a464748454a4a4847494d5051
4f4e4e58646c88d9dba76156565352535353535352525354575754555757585856565545
3856565857585a5d637097d2f3f5f3d39a816a6058585558585853514b4b4b4953535050
52545456565653515150535252545653535557585751463b545456555454575454555555
55545453525353535152515454514d3925484d4e4a4944
28282b2d2d2d2d312c272d3131333333373633333536393b393c3c3d3d3c403e3d41403f
3d3a2b2038414545464646474a4a4949484a4e4c484746494b4c4a4b4c4a462f203c4a49
474849474c504d4a494849474b4d4a4c4c4c4d4f5051504e473d374b4e4d4a4a4d4f4d4d
4d4c4e50504e4c4d4e4e4c49494c4a4a4946312235484849474746474540434648494946
424545444545404247403e3e3b3847444345454443454546444142474a4b4a4c4a4a4b4c
4e4d4c5152474ea2d8cf8757565352525254545353535555565556575656565957575645
3a56575757585d6375a2dffaf9f2d49061615d57585554575754534c484c565453545250
51545454525353515355525254555355565656565752453b555456545553565453555555
555553545253545252515251514f4c3a264a4c474a4b48
2727292b2d2e2e302b282b34323334333636353434343a3a373b3e403d3d40403e424444
3f3b2b2038444545484844434749474746484d4b46474749494b484c4c48443220364b4b
474648464947494b4b4b494a4b4c4e4c4d4f4e4d4f4e4e4f4a3d364c4e4f4b4c4d4b4a4b
4c4d4c4c4c4c4c4e4f4e4d4c4d4f4b4949473523364b49494a4948484644443f44434444
43464746454344454945434031244042404647434345423f414748494948474a47484749
4b4a4c504d3c3c81beddb15e575455545456565454535755565557565757545658595545
3a5855585a5e626a91d0ede3d8c594605b575554545453555453534c484a505351505050
535354565452535154565351565453505355555454524138535456555454555554565654
555553525350545352505151514f4c36264c4a474a4b48
22272b2c2d302c2d2f272a32313331343437373535373938393a3d3e3e3e3e3e41424344
403d2a1f38444647494a4846494847494a4b4e4c4b4a4a4d4c4c4e4e4b494634233c504f
4e4a4a494d4a4e4e504e4d4e4c4c4c4d4e4c4f514e504f504b3d354e4c4a4d4a4d4d4a4a
4c4c4a4c4c4a4b4e4d494a4a4c4a494a4a49351f32494949474647464547484243424545
49494646414142454440443f322745444649464541434141494842474a48464948494848
49494d4e493537637aacd08e5e5856525353545456555655535556575757575658595747
3d57575b5f6a8393b3d2b8867b79675a5757545554545252524f4f4e494c555552524f4f
505552525456565353515152565756565354525355534238555457565556565655555554
53535353524f5352525050504f514c3422474a49494741
26262a2c2c2b2e2c2e2a2b313233363433353634373737393a3c393b3b3d3e3f41414343
433c2a213a444548494b4a494b474a4a4a4c4d4848484e4d4c4d4e4b4b4c483322384c4c
4c4e4f4b4b47494b4b4c4d4b49494b4c4d5050525050504f4a37324f4d4d4e4b4b4f4c4a
4c4e4c4d4d494c4c4a474a4c4b4b49494d4a372131464848444545434341454745434246
484944434343454846434443413f4645424545434443444546434345494a4d4c46474949
4848494d493833575e86cbc3795957515051535454545757545556565555565757585646
3f595b626e96d8eff1d699605e5b565558555455555454535654514a47495150504f4e50
5051504f4d4d515454505252565655535556545558554336555658585653545754535355
53525152524f505350504f4e50514b3120454747464643
26292d2f2f2d2e2f2c2a2c31323234343336373739373a3b3d403d3d3b3d3e3f3f414043
453b29213d464543454749484c4a4b4b4c4f4e4e4d4a4b4a4b4b4e514b49483524374c4e
4e4d4f504f4d494a4b4949494a4c4b4b4d4b4f5151514f4f4d39354e4e4b4b4b4c4f4e4a
4a4e4d4d4b4a494a48484b4a474949484c48341f30474846434440404442434747484243
434645424243474744494a44322a444345454443413e42454747474a4b4b46464748494e
4c49454746373153596ea0c4956359525153545354535657565556565656575957595448
435d637398cef1dfb397715a59575856555656565553525451504f4f4b4550504f4f504e
4e5254524f50525053545455535456555553545758534134565558575553565856565353
55545251535350504f4f4f4c4c4e483122444645464443
26292d302f2b2c2b28282c2f2e3435343535363337373a3b3d3f3e3f3c3d3e3f3e403f41
433a2a243c4846444445494a4b4a494b4d4e4c494d4e4d504e4a4c49474844302137494c
4d494a4d4e4c4b4b4f4b4a4e4d4f4f4c4e504d4f4f4f4f4f4b3a334d4f4e50504d504d4f
494d4d4c4c4d494949494a48454645474b472f1c2d464645454443414241444745484545
464946444241424341444441302644444041414142404040434042454647444246484848
4b474545443a3150535d7bb5cf9d6c54555656545554555555555757595858585757554b
4560749fd5f4dd9e675f58595854515152535456535153515254534d4245534d4c4d4d4f
4d4f53555552555552525454545455555452535356534136555658565557575756555455
565452515151504e4d4f4e4b4b4e4b3123444745464744
262b2e2d302f2d2e2c2b2f3231313532323335383937393b3b3a3b3d3d3f3e3c3c3e3e3e
3e392a253d474747474648494a49494c4e4d4c4a4b4d4c4d4c4d4d4b4949433320354b4b
4c4f4f51504e4f50504d4c4e4d4e4d4d4e5151504d4e4e504a3a304c4a4d4e4b4a4c4c4f
4d4b4c4d4d4c4a49484749464548464647442e1e2b474a4745454342403f424243424546
474748474441444341424342322744424243423f42413d4147413f44474a474246464546
4b4644494638334f54566aa8eed69356545556535655545354545656575a59585657574e
4b6c9fdcefdea5655e5955545555545453515352524e4f514e4e514e403c4c4b4f51504d
4e4d4e504e5257555452515255555352524e515156523f36565656555357575656555656
55525352514f514d4e514d4b4d4e4932213f464749463f
2a2c2c2c30312e2c2c282c3231313232363633363936383c3938393a3c3f3d3d3f3f3e40
3e3a29233c47464547494849494a4d4e504e4a4b4c4d51504e4b494d4c48443521334c4b
4d4f504d4d4c4b494b4d504d4e4d4d4d4e51504e4d4d4c4e4b3a344f4e4f4c4a4d4c4d4d
4c4d4e4c4c494a4a48484b464347454344422f1d2b4649484543414040403f3e41454445
49474441423e41444142403e3b3b42444345444442474247484441403f3f414345464845
4846494a4939314a5052608fd4e3ab635655555555565452525557555759585858585751
517ebde1c9a2745c57545453545352515152535454515154534c4d4a3c3e4c4c4f4f4f4d
504f4c4f4f4e525656545352535454555453515154503d33575857545455565453545454
5350515050504c4d4d504c4b4c4d48311f3b4645494743
2b2a2b2e2e30302f312c2d323131313334343535373435363739393b3a3c3c3d3e3d3d40
3f3a272139454445454747474b4d4c4f504d4c4c4d4d4d4f4d4c4d4c4e4a443423354c4e
4e4d4d4e504f4c49494c4e504d4c4a4c4e4e4e4f4f52514f4a3632504e4e4e4d4e4e4e4f
4d4e4e4e4d4b4a4a47494b4744464444464234212e4747474440414042423f3f43434345
47464544434244464545433f2f2740414143424144454447464342444b4a484547494747
474746474737364e4f50596c9ccabd785755545454535352545556565656575758585850
558cb69972635a59565655525251525455515053504e4e50504f4d493c3b4f535151514d
4d4c4a4e4e4d4f5255535756545555535254525255513b34565756555556555453535452
514f4d4e504e4b4c4e4f4947494c462f20394546454544
292b2d2a2a2c2d2b2a26272c2f302f30303234343434353739393a3a3a3c3a3a3c3d3e3f
403a2720374143454548484647494d4e4c4c4b4d4c4b4d4f4a4a4a4c4e4c473624374e4c
4b484c51504d4d5050504d504d4b48494e51504e4c4d4e4b4533324d4c4c4f4f504c4d4f
4d4d4e4e4c4b4b4a494a4c4946454546474333222d4547464543403f4243424142434244
46464643424145454242423f2e2945413f40413e40454242464244484b49464447484442
434342454338384f504e555c7fbbd99d5b54535453525151545555565758585858585654
62a1ba725c5b59595554555554515050514e505050504f5052514d4b3d3a4d4f4f4d4e52
4f504f4f51504f5451505552515252545251525255503a32555757555355575555555452
52504f4f514c4c4d504c4945454b452e20353e42464545
2b2b2c2e2b2d2e2e2a29282b2d2f2f3135353335323237393c393738393b39393e403f3e
3e3a2b20364141454848474748494c4c4a4a4a4c4c4f4f4f4e4a4b4e4d49463624384e4f
4f4e4e4c4c4d4d4d50504e4c4d4e4f504f5052504f50504f4a3735514e4f4e4d4d4c4b4d
4c4d4e4c4e4d4d4d4b4b4a4948464545464232212c444745464341404143434342414242
45474545434141424141423e32304141424443424040403f454544454949464242464640
3d4142454339374d4e4e51566fa2d3b36c56535452525352545556555556585858585c60
7fb7a65f59585959555356565755505052504e4f50515152514e4d4b3e39505356555350
5052504e50515150515152535151535555535254554f3a33565758575555555556555253
5252504e4e4e4c4e4e4b4c4b484a45311f323f43454240
2b2b2a2a292a2b2b2b29252a2c32313233323232343234353538393a38393a3a3d3f3f3e
3f3a2a2236404345484a4b48484b474a4c48474a4a4b4e4f4d4b4a4c4c4c493725324f52
5153504f4b4c4f4d4d4c4e4d4a4e505051514e4b4e504f4d493632514f4d4c4c4d4f4d4d
4b4c4d4c4c4b4d4d4947474749464848474534222943474345444545414243403f414240
4042444343454143454140423c3541434345454042474442414342444745474746424042
42434447463f3d4e4d4b4d525c75a5c19259555451525453525555545556585a595c657f
b7d8985b58585857565553545554525051504f4f4f515154524e4c493a364f4d4e4c4b50
5254514f4e504f50515153515251545554535150514d3a33545754545454535151525052
5151504d4c4d4e4f4e4d4e4d4c49422f1e323f40424242
2829292929292d2d2a28282d2d2f32323434322f302f34353436383938393b3e3d3d3d3d
3f3928223543434443474b48494a484948484a4b4948494a4b4a4c4c4c4e493827344b4f
504c4c4c4d4c494b4e4f504c4c4e4b49484c4e4e4c4d4e4e4836335150504b4b4a4d4d4d
4c4d4d4d4b49494b4746474747474748474232212b464642424243434445444041444340
4142403f403f41444444403a29253e404040404041423f4246434341434345464948443f
3f424444463d3b4c4f4d4c4f535f8fc5a55a55545252525051515556565656595a6484b4
c6a371585656555454515154535353505052504d4d4d4f4e4c4b4d4a383751534f4d4c4d
5152524e4e4e4e4e525251515451504f4f505353534c3733535552505252514e50525051
4f4e4d4c4d4c4c4e4d4d4a4b4c49402e2337433e414443
282829292b292a2c2b282a2f2c2e313233312f2e3133343436373738393b3c3e3f3e3c3b
3e3a2920374443414347484747484a474646484b4b4a4748484a4c4b4b4c47392934494c
4d4d4c4b4e4d494a5150504e4d4d4b4c484d4f4e4b4c4f4e473632494b4d4c4b4c4d4d4c
4f4c4d4b4b4646464542424645423f42443e31232e43413f3b3a393a3c3b3a3939393838
393c3c3c393637393b3a3b3a2b273a3a3a3b3c3d43443e3c414242403d3f403f3e3e3937
37393d3c3a35363e40414240414971a2894844413b393a3b3d3c3e403e3e3f43475d9acc
a3564943424445444342414142454746474644434445454344423f3e3231454542413e3d
404142424040403f4040403f3f403b39393b3c3a39363132383c3b393939373736373838
333231333535363636363434383a362d2d3a4541434445
252929272728292a2826292c2b2d2d2c2e2d2b2c2f2f312f2f2f2f2f2f3132323234322d
2f2f27242e3231313235343233383736373636383836373b3938393c3f3f3a322a2f3c3b
3a3b3b3737383736313131312c2d2d2d2a2b2c292b292a2c2a2b2c2827262829282a2b2b
2b2b2b2a282a2a2a28292a2f312e2c2e2f2d2b25283030322d2a2929292a2b2a2a282a29
2829292525222121201e1b1d222317171814121513141719171919161b1e1f1e1d1e1d1e
1f22252727292c282b2e3332353c527a7e4e403c3736353839393837353436393f5892b8
833b33302d2b28292c2925242627232021201e1d1c1d1d1b1918191d2429212121222228
2c2b2d2f2c2c313535353534343737343639383b3b372f2f3a393a3b3936343534353535
2e2b2b2c2d2e302c29292826242426282d374242444345
22212425262a2a2928231a18191a1b1c1e1d1c1c2225211f2022222322252727282b2b29
2a2928272828292626282727292929292725252523212325232222222322232d30262223
24262625282a2b2d2f2d2e3133343939393e3d3a3b3a3a3a372e303e403d3a3b3c3b3b3b
393b3936333336312d30303333302e3132302a24272f30312d2c2c2e2e30313232353838
373a3b393435393b3b3935352a2a3839393a3e3d3c39393b3a3a3b3a383c3d3c3f3f3a37
383a3a3e3d37353b4044454343485988b2905f4e4c4d4b4c4e4f4d4e4f4d4f555c75a4ab
78545553525451525254534f4e514d47474a4e4d49494c4c4a4b4b45322f4b4d48494a4c
4d4e4f4d4a494d4c4d4c4b4847494c49494b4b4b494835304b4d4e4d4b4b4a4a484a4c4c
4945474a4b4c4b494847464845484536232d4245444445
24232221242a2a29292725272827272727272725282c2a2a2c2e302f2e2d2f3131343436
36332926333c3c3a3f403f4044464545434645464341474a474949474749483a29334b4e
4f4c4b4a48484b4b4b4c4c4f4d4c4f4a4a4c4d4a4b4a494c45302f4b4e4b474a4d4c4d4e
4c4c4d4b484a4b484546474748464345464134242c434343423f40434342424244434242
42424442423f40424343413c2e2c41413f4040434241414541404140464a464345413e43
44424246443e3b454a4c4e4d4d4f5c89c3b8775953535352535454545355585c678fbdaa
6e545755565856555354525050514e4c4f4f4f4f4c4c4c4d4b494a48312f4d4e4b474648
4c4f5453504e505052545352514e4f5052525654504b37324e5152515253524f4c4e5251
4d4c4e4d4b4b4b4e4c4a4a4c4b48423627314241454346
242424222628272b2724262c2c2d2c2d2e2f2c2c3033313133353839353739383a3c3d3d
3e3929223644434347474745484a4747474a48454747494b4c4e4c4e4e4a45382830494f
4e4d4e4e4c4d4e4d4d4b4a494e504e4c4c4c4c4c4c4e4d4e432f304e514f4c4e4c494d4c
4d4e4e4a4b4c4b494848474649474443444136252c424242414041424444434141414241
40413f41424140444642403a2c2c404241413f413f404042424143403f3f41413e3c4146
4442424749403a434a4a4a4d4e4e5671abc6926251505150525454545456595d71aedba7
6453575557565755555455534f4e4e4e50514f4d4a49494b4a4949412e2d484e4d494e4d
4d4f4e50514f4f4f525452504e4e4b5052545655544c36314f5151504f52524f50505251
4e4f514e4c4a4c4d4c4f4c4b4c4a4639252d4245444345
222221222426292c262323292c2d2d2b2c2c2e2f2f32333131333639383a3c3a3a3c3b3c
3e3928213441414247474747474747484a494847484b4b4a4d4d4b4b4c4b463928324c4e
4b49494a4d4c48464b50505152514f4c4b4d4e4a4b4c4c4d4330324f4e4c4d4f4f4e4c4d
4d4f4c4a4a4949484847474748484544474739272d4543403f4041424444424245454141
40414241403f4141403f3d403e3b3f43403f403f3f414040444744464441424242414243
44464446483f3b40484b4d4f4f505166a4d9b574525151535352545655575c698dc2c07e
56545855545456545357555350514f4d4c4a4c4d4b4a4b4b4a4a49412d2b454b4d4d4d4c
4d4e4c4b4b4e50515052505152514e5154545454554d3735504f4f4e5051535250505050
4f4f51524f4e4d4b4b4d4d4d4f4b4636252e4444474747
21221f2127292b28251f20282b2b2d2e302f2e2e2d2f323333353436393838393b3c3b3e
3f3929203445444545454745454647494a474545474a4b4d4b4c4c494c4c463c2b334e50
4c4c4e504d4a4b4a494b4d4c4a4d51514f4a494c514f4d4d4733334d4d4a4b4c4b4c4b4e
4f4f4d4e4d4b4a4a4a49494a494847464a4c3e272b444342404242444745414243434445
4141424444434646413e3e3b2f2e3e42403d413f424444464541414247444241403e4346
46444547453e3940474a4d505050535e88c4c282535153525352515454575f7cb2c58f5f
51525656535352515254535150505050504c4b4b4946484a48464a422b2944494b494d4a
4b4d4d4b4d5253514f5050515354545456575756544b35364f4c4c4d4f5153504d4e4e4a
4b4e51504e4d4d4c4b4a4b4b4b4b493a272f4746484544
231f2120212628252625262a292a2c2e2f303030303335343335343536393b3b3d403e3f
403b2b23354546464445454645474748494749494a4a494949494c4d4e4b46392c354e50
4d4c4c4a4c4b4c4f4b4a4d4d4b4d4e4c4b4a4c4d4f4c4b4c4532364e4f4d4b4b4d4e4c4b
4c4a4c4d4e4c4c4d4c4a494a4c494645484a3e282a424545434343424241404144454544
44434141413f42433f3e3d372a2e3f404142414040424647484745424342424443404247
46454448463e3b42494a4e4d4f5050566fa9c38c545454525251525354586793c3a86655
4d4d56555555545354525254524f50504f4f4c494a4b4a4a4c4a4b422c2a42464a47484d
4f4f52504c4c4f52535350525353555556555453554c36364c4b4f4f4f50514f4c4e4e4b
484d4f4e4e4c4c4b4a4c4b494748483a25294347464846
2420222623242426252224282c2f2d2b2c2e3031313133343132343737393b3e3f404041
3f3b2a2236444544444546464647494a48474a4a4948474847484b4b4a4a483a27354e4e
4c4a4a494b4d4c4a4e53524d4d4c4b4c4c4c4c49484a4b4b4431344c4d4d49484c4f4c49
4b4d4d4e4d4c4d4c4a4748484946464748483c2a2c434545454543423f4041414242413e
3e414243424143443f40413c2f2f3d3f3f3e3e4040414446434243464945444749464445
44434849453e3b434c4c4a4c4e4e4f51669cc79d5c54555455535352545a72aaca945b53
4a4b555656565653515252525151514f4f4f4d4c4b4c4b49494e4d432b29484c4a48494c
4f51524f4e504e51514e4f50555655535153504f524b38394d4e4f4f4d4d4f4e4d4e504d
4b4d4f4e4d4c4c4a4d4d4c4a4846443a272c4548484545
1f1f20222224252422202327282a2c2b2c2f2f302e2c2f333331313638393a3e3d3e4040
3e392720324245454445484748474948464546474747494a474546484a4b493829394e49
494948494a4b49494e4f4f4d4c4b4c4c4b4d4a48494b49484033374d4d4d494a4d4f4e4c
4d4e4c4d4c4a4b4a4845464a4c48484748473a272d444444474844444242434040424343
42444443413d3c3e4042413e3a3a3d4043403f4145454547494745454948464a48474745
4645474948413b414a494a4c4f504f4f5b80aea26857555454555554535870a0ac7b5752
4647535456555455545353524f50504f4e4f4e4c49494c4e504d49402c2e4447484a4d4c
4e514b494c4e5153524f4d4b51555454504d4e4e4c4636394f4e4f4f4e4d4e4b4a4c4f4c
4b4c4e4f4f4f4d4b4a4c4a4b4c4a453a27294046474644
1f1e1f2225262322242226292a2d2c2a2d302f2c2d3032353434353839383b3b3c3d3e3d
3d392820334144454446474949474a48464646464948494a474647494a48453727344c4b
4a4848484a4c4c4c4b4c4c4e4c4b4846494e4c48484948494231344b4a474a4c4e4e4b4b
4c4c4c4c4d4b49484747484b4a474446484536232d4243464646444241423f3d40444745
413f4145413e40424041403a2e33413e3f3f424243484645444243444844404144494946
4746464847423d424a4c4c4d4e4d4c4e546586906e5655535555555654576a90946e564f
4244515453515051525255555455544f4e4e4e504b474954605b483e2929434849474a4a
4e524f4c4d4d5053514e4f4e515454524f4f4e4c49473a3b504d4c4d4f504e4b47494b4c
4c4d4d4d4e4f4d4b4a4b494b4d4a453a262a4148474646
23232123242626262421242927282d2d2c2c2d2d2f3033343535343537383c3d3e3c3b3d
3c382924364443444447474746454746454748474648484a4a494a4a4948453926334c4b
4a4a4a49474845484d4d4b4b4d4c49494a4a4a48484b4a48402d30494a484b4b494b4d4b
4b4c4c4c4c4d4a47484949494a494648494434252e454546434344424241413d40414142
3f41434341424342414240382c303d3d3f42414143434142413f3f3f43413e3e42484745
4547474848443d3e484a4c4d4c4b4e4f535c728a7659545353535353545a7396966e5850
424754525250505150515252545251514e4c4b4a4a484a4c4b4a4b442d2b43494b4b4a4a
4e504e4e4d4b4b4b494c4a4e5353545552514f4c494336394c4f4e4d4f4f4f4c4a4a4d4b
4b4f4e4d4b4c4c4c48494d4b4c474339272a3f46474443
201f2020201f2425231e2229282a2d2e2c2c2d2d2c2f31313336333234353a3d3e3d3d3e
3c372823344445454647484747474745454745444545484b4a484849484b483926314947
47474646494d4c4a4b49494a48494746484b4c4b4b4b4a474230334c4c4b4b494b4a4d4e
4d4c4c4a4a4b4a4948494a474848484949443527324745434243424240403f4246443e40
414341423f4041423e3f3f3d3637404040414545444747464543413f4043444143484848
4646484a4740383d4a4b4c4c4f514f4e5159749d956355515354545556638ebaa6715850
41465353535153525152525150504f5050504e4c47474c4d4e4d4b422927424a4a4c4b48
4b4e4d4b4d4e4c4c4c4e4f51514b4c505253504d4b44383a4b4e4e4e4e4e4c4c4a4d4e4c
4a4e504e4b4946474b4a4b4e4d49463c292c3f45464543
24232122212324272321262c2e2d2d2d2c2d2e2f2d2d2f2f3135353436373a3d3d3e3e3e
3d382a2233424446474a4845464848474645454344454a4a494a4b4a484843362632494b
494647464546464c4d4b4c4d494647474948484a494a4b473e2e31474a4b4d4a4b4d4d4d
4a484848484a4847474646464748474b4a43372931444442424645424041424042434241
4142413f4142414142403f3d3b3b3f3c3a3b3e3f403f404245443f3d4043404143444547
45454443453f3a414c4e4e4d4d4e4e4c4f546fa3a76e5451535454535467a2caa36c564e
3e43525251515251515252504f4b4c5154504e4c4a4849494848483f2a2b42484a4c4c4c
4c4e4c4b4a4b4b4a4b4d4e4f525250515152514c4a443a3b4a4a4b4d4e4c4b4d4c4d4c4a
4b4d4f4f4c4845484c48494e4b45433b28293c42444342
2221201e22242424201f242a2b2c2c292a2b2c2d2d2e2f30333536373737383a3b3d3d3e
3f3a29233341434548494746474846484646464545474946444647454245443728344b4c
4e4c4a4b4c4c4c4a4a4d4d4a4948464647464b4a494a4b4b412c31484a4a4b49484b4c49
474a4c4946484646484644464848494b4944372a3343444441404242444343413f3f4244
4341413f3f3f4242413e3d382c303d3f413d3d3e3e3d3e41413f3f424142414244464646
46444446443f39404c4d4d4d4f4e4c4e5052689ca975555051525351536ca7bd885e554c
3e41515353515151514f4c4b4e4f4f504e4e4e49494c4a4a4b4a473d2b263b46484c4b49
484c4e4e4e4b4a4b4f4f4d4c4e514f4f4d4c4a4845433b3d494a4b4e4b4a4b4b4e4e4a4b
4b4b4c4c4c4c4d4e4b4946484945443e2b283c45484741
202021201f1f2224211f2327282a2b2a2b2c2d2e2d2d2f31343436353634383a3a3a3c3e
3e362622323e404446464342474745444543434344454544454546474645453a2734494a
4a4a4a4c474446494a4d4b49464544464949474446494b4c432f384d4a4b4a4a4c4b4a4b
4a4b4c4a4948464749464446464646484845392b354443414142403f4042444342424443
403f4041403c4043403d3e3a31333b3c3f3f3f3e3d3f4041434041414141424347484645
4745444544413a3f4c4e4f4d4a494b4a4c516599af805850515252525575aeb47b5a534a
3c42545352504f4e4e4f525251504f504e4d4e4e4c4c4a494648473f28233e49494b4e49
484d5051504d4b4c4b4b4d4e4e4f4d4c4d4e4d4947443e3d45484d4f4a4b4d4d4c4d4b4b
4b4847484b4b4b4b4a4849494745433b26243c43434440
22222120212222211d1c1e252829292c2c2c2b2b2a2b2c2e313435353536393c3c3b3d3c
3b362621323f3f4345454444464848434141424244454745434648474846423426344546
484d4c4646494646494d4b484544464949494846474b4849412c324849484b4c4b4c4d4c
4b4d4d4a4949464749454343454648474743382b34454340414242403f40413f40403e3f
3e3f424340404144413f3f3c37383d3d3e3d3f4146433f3e3d3e3f423f3d3d4045474344
474544444440383e4c494b4d4a4b4d4b4d516394b5916151505151505573968961565148
394053525150514e4d4e4f50524f4d4c4c4b4c4d4c4a4a49464546412d2b424a49454649
4d4e51504f4e4d4c4c4c4e4f4d4c4a4a4b4c4a4c4b48403e44464a4c4a494c4a494a4a4b
4a4646474c4b4a4a4a4a4b4c4a47423724223741424344
222526211f202122211f202325262a2c2e2d2e2d2e2d2d2e313535343437393a3b3d3f40
3c37292232403f404343444545484744434445444544464846454442424241342532484d
4c4b474546484a4c4c4b474343444646444345464849494942303549494949484a4d4c49
47494b49464849474642424343444747434136272f434542413f3f41413f3e3f40414241
4140413d3d3e413f3b3b3e3f38373e3e3d3c3f3f403e3d3a3b3e3e3f3f3f403e40444445
42424445453f363b4a4c4d4e4e4e4d4b4d505f91c3b57852515151505a798a7158535146
343e53535250515050504f504f4f4f4d4c4d4d4c4e4e4c49474545412523404e4c46444a
4e4f4d4b4c4d4e4d4b4d4f51514c4b494b494a4944433d3e4447474848494949494a4b49
4a4948494b4a494a4c4b4b4b49454137232336403f4243
212221212223201f1e1e21222226292b2d2b28292b2d2d2e33353736343638393b3d3e40
3d372923313f3f404242434344434446454644454545464947454343474945382a36494b
4745494a494948494c49464444494a4946494945494d4c4a3e2a31474a4a4b4b4b4e4b48
4a4a4c4946464a4a4542434241424444414037262e42424041403f41413e3e40403f4040
414241403f3f42403c3c3b3630343e3e3d3a393a3a3e4040403d3e3d3e3f3f4042454342
43413f44453e333642474a4b4b4c4c4a4a4d5a8bcacd8552504f4f516491976b55524e42
313b514f4c4c4c4f4d4b4c4d4d4d4c4b4a4c4c4c4b4a45434444433b28263c4a4b494849
4d4c4a4c4d4a4a4d4c4b4c4b4a4b4a4a4846474642403c3e464747464548484748494644
46474645484745464743434442413f372726363d3f403e
1e202524211e20242220212325282a2b2c2d2a282b2d2f31333435353635373c3e3e3c3c
3d3627223340424242414144444443454544444546444343424343414345423527334244
44444444424244464746454647474846454749494a4c4a473d2e374c4b494a4a4b4a4749
4a474747454245454442413e3d3d3f3e3b3b3429303c3a38383c3c393938383736353436
38373a3a3835363a3a3735322d2e36373a3a3b3a39393c3d3a373737393a393532353635
3837343535312d2f353736373536353636384161949d663d3a37373b5589834f3d3a3937
2e313d3b383636373a3d4143423d393b3d3f42413c393939353337342624303536353235
3535343230313131322e2b29282b2a282826252423242a2b29282726252728292a2c2d2a
2b2c2c2d2f31322f2e2c2b2b2c2c2c2b272c363c3e3d3a
22232423232321201e1b1f24262425272826262728282729292b2a2a2c2b2a2e2f2e2b2b
292a26242a2f2f2e30313131353433343534343332333434333437363335362e262b383a
383534343434332e2d2e2f302a2929262729282625262626272625242524252524252528
2725282929292828282a2c29292c2c2c2d2b2a2a2b2c2c2a2a2d2d2b2a2b292626252323
22212223211f1f211e1a191b1d1b1516151415161614131317191d1c1a1b1d1f20222324
24252728272729292c2d30313233333334373c49687a5e3d363230344970653a32322f2f
312f2c2c2825252625282d2f2a23212222232226292927262324282c2d2b2b2f312d2e31
3335353638393a3b3c3c3a38393a3a37363537353230323232322f2d2d2d2e2e2c2d2f2e
2c2a292d2d2d2b292626252628272526252c39403f3c3a
22272621202020201e1b18181918181a1a1b1a1c1f201e1d202123242423262829292a29
28292a282627272828272624252625242321232420212323212122232323222524242526
26282a2a2c303231312f2e2f3232333334393b3938383939322a313d39393b3c39373938
3736353537373330303232312f312f3032312c2b2d31312e2f32323130312f3033333233
3738393837383a3b37383b3831323a3d3b393a3a3a3b3b3a3a39393636383b3b3c3f403d
3a3b3c3a37312e343e4042434142444547494b526b8874534c4b4b4d5d766b4f4e505043
333d4f4e4c49494a4b494441444a4b484c4d49474849494b4d4b4a412e2637464846484a
4d4e4a494947494a48474949484848464547484949443e3b424744444447484642454645
434245474949474441414242424342372220333d3d403f
1d202021211f1f21201e2125252526262725262728282728292b2e2f3032353637383837
37352c24313d3f404241403f3f3e3f3f3f424546434346464344464543454537252f4246
48454443464a4641403d3f404448494648494748494a49483f2e384848484a494b4b4b49
4849494a4a4a474547494844434244454644362c35414141404042413e3c3d3f3e3e3d3f
42434242403c3d3f4040403b36383e3f3e3e3e3c3c3a383b3b3d414544413f4042464848
44434544463d323a46474a4b4a4a4b4c4d4d4f556f92825d555352505e74665050504f41
313c4f504f4e4d4c4b4a4843454a4a4a4c4c4d4d4a484a4b4c4c4b422d24374a4b4b4b48
474c4f4d49474b4d4b4c4c4c4c4c4a4a4849494b4a483f3b41464648484b4d4a474a4b49
48484948494a4c494545464743413f372620313b3a3c3f
1d20212324242323211d21272928282a2c2c2c2c2d2b2c2e31353737373a3c3c3d3d3e3f
3d382921354443454443434442424141434647494647464543424646454441362b384a49
4b4b4948454442404143464849494746494c4b4c4c4b4a4a3d2f394a4c4d4a4a4d4d4b4b
4c4c49474847494746484846454444444443392c34404042414244423e3b3d3e4141403f
3e42434240403d3d3d3e3e3b333841403e3c3e3f3e3f4344413d3d403f3e3e4042444442
44464645463e3137464848484b4c4b4a4d4d4d5368898461525152526075664f51505042
313d4d4a4a4b4c4c4947484546494a4b4c4c4e4e4d4b4b4b4b4d4c40262037474b4b4a47
4b4e4d4d4c494a4d4d4b4b4c4b4a48494b4c4a474644403e43484b4a47474c4c4b4c4c4b
4b4b4a494a4c4c4b484646474540403a2921313e3a3c3e
1e1d1f2123202123231f202627292c2c2b2b2d2c2c2c2e31323637373a3c393a3c3d4143
41392b243644454345474344464442434343464a4746484844424345454846382c3d4d4b
48494a49494c4b474140444a4c4c47454749474a4c4947473d2e394c4e4a4a4a4b4c4c4e
4f4e4b4848494a494747474a4b47464747473e2f3741414042444344423f40404142413f
3f403e3d3e40403e3c3d3e3e3c3c414241403f3f42454442413f3e424342414043444444
46474646463d2e3541434749494a4a494b4d4f515f7b8065515053566a8570504f4d4c42
333d4d4e4d4a494a4948484b4d4f4f4d4b4d4e50514f4e4d4c4a4a422f26394b4c4c4d4e
4d4e4e4c4d4d4d4d4c4b4d4c4a4a4a494749484644454140434a4b484646494c4c4c4c48
494c4947494a4c4b464042464540403a2820313f3e3f3d
1e1e23242323222323202327292b2d2f2c2b2b2c2c2e3131323436383a39393c3e3f4043
413a2a223545464446454346484543424344484a4747494845424445454847382837484a
4e4f4f4c49484949464646464a4b4b4d4c4b4b4a4c4b4a483f313a4d4f4c4c4b494a4e4f
4e4c4a4a48474a4b4847484a4c4a494a4a463a2f39454544434343444443454542404142
41413f3d3c3e4042413f3f3c36393f413f3e3d3a3c3f4345423c3d444741414347494746
45444243483e2e35434647484a4c4a4a4c4d4f525c798e7858505155779a7b514f4d4d43
323d4e4f504e4b4b4c4c4d504e4d4e4f4f4d4d535755524e4c4a4b4430273a4d4c494949
4b4c4a4d4f4c4c4c4d4d4d4a4a4a494547494948494a453d4148494a47474a4c4b4c4a48
4a4b4949494b4b484644424644413f3b2920303d3c3c3c
2124232121202525211f2326292c2c2b2b2c2a2a2c3031303335383939393c3f403f4241
403c2d2537454645444344464644414243454847474949494343474b4c4b48382a394a4b
4c4b474649494b4a43464a4b4b4c4b4b4849494c4d4e4d4e43353c4b4b4e4e4d4c4d4d4d
4e4e4b4a4b48484a47464949494949484744392f3a464846434244454342454544444647
47434242403f3f4141403d3934373d3f3e3e3e3d3a3d3f3f3f4040414140404446484848
494b4745433a2e3948494c4d4d4d4d4c4c4f52535a7da48f61515157758e74524e4e5042
313e4f4c4d4e4e4c4b4b4d4f4e4e4e4f4d4d4b4a4f4e4f504d4c4c4633273c4f4b48494d
4c494b4b4c4c4e4f4e504e4b4a4a494847494d494647433c404546484847494b49494949
4a4b4b4a494b4a464745424242403f3c2c1f2e3d3f4144
23242424222221201e1e24292b2c2c2f2e2d2d2d2e2f2e31323638393b3c40413e3d4042
403a2c2537444445434445454744444646454848474646494947474a4b4d4634283b4c4a
4a4b494a4c4d4b4c4c4c4c494a4947494c4c4c494b4e4f4c4235404e4e4c4b4d4f4e4e4c
4e4f4a484a49494949494b494848484747453d323845474542424645423f434241464745
43454744403e404142413e3b38393e4041403e3c3b3c3e3f424140414142424347494948
4647474745392e39494b4e4e4c4c4d4c4c50525255759f926352515c7a896b514e4d4c41
2f3d4f4f50514e4b4a4c504e49494c4d4e4d4e4f4d4b4c4e4a4a4a46312536474a4c4d4d
4c4c4e4f504f504f4e4d4e4b4847484747494b474445413c3f4547484948494848494948
484a4945434747454747444042413f3b2a1f2f3e414242
2324212326252221201f242829282a2e2f2c2c2e2d2e2f3235383a383a3d3e3d3c3d4143
433c2b25394747454447454445474b4c4b494a494849494a4b464649494947392c3d4e4e
504e4b49484947484c4d4e4d4b4b4d4c4b4a4b4c4c4f514f41333f4d4e4d4c4f52505050
504d4b4b4a49474a4b4c4b4a4b4a494846453d3339454746444345454241414242454744
414243414144444343423e3d3c3d3f4142403f3c3a3c3f3f42413f3f3e3f444445464546
4748464646392b3545494c4e4e4e4f4f4f4f4f50536a938e66535264888c68514e4d4d40
2f3d5151504f4d4d4d4f4f4f4e4c4d4f4e4e53574e484a4948494a452f243a4b4b4a4c4c
4c4f4f4e4e4e4f4f4f4e4d4b4949494846484c4a4647423b40484b4c4c4d4c4b494a4949
4a4b4a4644464747434344464644423c2a203140413d3c
20232424262624242220242b2c2c2c2e2f2e2e2f30313233343538383b3d3e3f3e3e4345
443c2e26394847454647484644474a4a484a4b4c4b494b4a4a4a4948494a45362c3d4d4d
4e4d4c4a4b4e4d4d4d4c4c4c4a4c4d4c4c4d4f4f4e4d4d4c40323f4e4f4f4e4f514f4f51
514d4c4d494647494d4d4c4b4b4c4b4a4843382e39454547464446474441434543464849
44434242434544444646423f39393f41404140403d3e3f414344434545434244484a494a
4a464648463a2c394748494c4e4f4e4e514f4f51516890926b555367857a5b5150504f40
2f3b4f505051514d4e504d4c4e5150504f4e4e4e4d4c4a4948484b4632283b49484a4a48
4c52524f4e4c4c4b4d4d4c4d4c48484a4b4c4e4c4a4a413940494c4d4b4c4a48484b4b4a
4b4d4e4b4a474849454343454847433b2b203040423f3b
20212223242324231e1d262c2a2a2d2e2f2e2f2e30313336393a393b3d3d3f3f3f424644
423d2d27384445474647484949494948474a4c4d4b494b4d4a4748474a4b46372d3c4b4c
4d4b4c4c4e4f4d4c4d4c4a4e4f4f50504e4e4e4b484b4c4c413541504f4f4f50514e4f52
53504e4a4a4a4b4b4c4c4a494a4d4b484a473b323a4446474a4744444644434545434646
4345494845444745444545423b3b3e3d3d4043424345423d3f4345454443434243464a49
4a484647483c2e38474a4b4b4d4e4d4d4d4e505051658d926f5854677c6e5552514e4d3e
2f3c4d4f4f51504d4c4d4f504e5053534f4e4d49494947474a4c4d463127374a4b4c4d4f
4f504e4c4b4c4d4b4d4d4a4a4b494a4a4b4a4a4b4b4841393f494d4d4b4b49484a4b4a48
474b4e4b48474847444547454644423d2d22303d40413d
2022262724222324201d232a2b2b2d2e30302e2f2f30313336383a3d3e3e3d3e3e3f4142
423e2d27384546494846474848484a4848474948484a4e4f4c4948494a4a47372b3b4c4b
47494e51504e4c4c4d4d4c4d4e4f50504d4c4d4e4f504f4e433643504f4f4f504e4f4f4f
504f4d4e4b4c4d4c4c4a4b4b4b4d4a4849473f363f494848484846474747474a4a494948
4545494b4a4844424141434343444646434042454545454444464444424343454749494a
48474745463d2f3a484c4f4f4e4e4e4d4d4d4e50516489927258556881705651504d4d3d
2d3c4e4f5153524f4c4c4e4e4f50514f4f4f504d4c4c4d4d4d4a4a4434293a4b4f4d4d50
504f4c4c4f4f4d4a4c4d4d4b4747494b4b4a4a4a49464039434c4b4c4c4b494a4b4a4b49
46494c4a4a494848464748464544423f2e24313e3f3f3d
1f222423222223231f1d252c2d2e2d2f312f2e303331333537393a3c3e40404041404041
423e2e263a4747494845454947494a494a4b4a494a494c4c4b4a494c4d4e4b3a2937474b
4c4d5052515050514e4c4d4e50504e4d4d504e4e4f50504e42374452504e4d4e4f505151
4f4e4e504e4e4e4e4d4b4b4d4c4c4b4c4a463c37404947474746484a484546494a4b4948
4442444545454647464544413d3e414245474644424446434447454746454747494b4b48
48464344483c303f4c4e4e5050504e4e5050515151608593775c576f897356514f4f503f
2d3d4d4e4f5253514f4e4e50505051525152524f4d4f525250504f493427394a48484b4f
50505051504d4c4c4c4c4e4d4b4a4c4b4a49494947463f39404646474b4b4847494c4b4a
4847484949494847474546474543403c2d21303d3f3f3f
1e23262422242525201e272b2b2c2f2f3132303131323535383a3a3a3c40414342434343
423e2f293a47484a4a46464747494b4d4d4c4c4b4a4b4c4b4a4b4b4c4b4a4b382a3a494b
4c494b4f5050504f4e4e4f4f4e4d4b4b4d4d4c4c4e5051504337434d4f4f4f5253525252
5351504e4e504f4e4c4a4a4c4a4a4a4b4c494037404948494746474949484a4c4b494847
4545474a49464649484645413e3f4344484948484b4c4949494846464849484a4b4c4e4e
4d4946484a3b2d3d4b4e4f504f504f4f51525252535f81957d60577291765751504f4f3f
303d4c4d4e5050504e4d4d4f4e4f5151504f505150504e4e4d4e4d493527394e514f4e4c
4c535351504e4a484b4b4b4b4948494b4d4c484748453e373e444446494b4845474b4b4a
4a494948474647494b4b49464747443d2c21303c3c3e40
1f202426252425262120272f3032323236373331323336393a3c3e3e3f3f404443434545
433d2e283a4647484747484848494b4b4d4d4c4b4a494d4d494a4b4e4b4a4a382b3e4e4d
4a49484c4f4e4e4d4d4f4e4c4a4d4f4f4f4f4e4e504f4f514539444f4f4f4f4f52504f50
51504f4e4f504f4d4b4b4a4a4948484b4c4a40383f484a484848494a4a4b4c4b49464647
4846464949454646454544413f4040434647474645454a4a4645494c4a4847484a4b4a4b
4b4a47484a3e313e4c4d4d4d4e4e4f5051515251525c7e9984615775907254545250513f
31414e4d4c4f5254525050504f50504f4e4e4f4f4f5052504b4c4d4a37293a4b4f514f4f
515656504b48464b4e4b4a4b4a494a4a494949494a473e3a434a4c4c4b4d4946484c4d49
474a4b4948484a4c4d4d4a48464745403025313b3c3f3e
2021222527272728232029302f302f30323233323234373a3a3a3b3d3f41424140434545
453f2f2739454545474848484b4c4b4a4b4a494a48494b4a494a4b4d4e4b49382b3c4a4f
514f4d4e4e4f4e4c4b4b4d4e4f50514e4b4b4e4f505052524438454e4f4f504f4f4f5151
504e4e4f4f4e4c4c4c4c4b4b4b4a494c4c483d373e484a494948484847494b4946454647
4949494846484b4b4a494642434545444544434346474747494946494c4d4b494a4b4b4a
4a4b4c4c4d3c2e3d4a4c4c4d4f51514e4e4f5051525a7b9988655a78927256545352513f
304150504e4f5252515051514f4f4f4f5050504e4d4e4e4d4d4c4c49362838494e4f5050
50514e4b4a48484a4b4b4b4d4d4b4949494c4c4b4a483e39444c4c4a494a494749494a49
48494b48474a4b4a4b4c4a474544423f3226323e3f4142
21222123272725252221292e2e3031303031303132353737383a3b3c4043414042444748
47423129384546484a4a4847494a4a4a494a4b4a47474c4c4b494a4c4e4d4a382c3d4b4d
4f4f4f4d4e4f4f4d4c4c4c4e4e4f50514f50504f505151504439434c4f5251514f4f4e4f
4e4c4c4e4e4e4e4d4d4d4c4a4a4b4a4c4c493e373f494d4e4c4b4c4a47494a4a4948484b
4b4a4a4646484947494e4f4844444749464648464546484a494846474a4b4c4b4c4e4f4f
4d4b4c4c4d3c303f4d4e4e4d4e4f4f4f4e4f5255555b76988f7167889b755754514f4f3e
30435253504f505151505050504f4e5050504f50514f4b4c4d51504b3627384a4d4d4d4e
4f5252514b48494a4b4b4a4d4e4d4a474649494846494139414b4e4c4c4e4c4b4a484749
4c4e4d4b494a4a47484a4a494641413f302434403e3d3c
22212124282925252220272f2e2f3132313133343436383838393b3e3f41414144474848
494431293a454647494a4848494a4c4b494b4b4a474b4c494847494c4e4a48382c3d4d4f
4f4f4f4e4f4f4e4c4b4d4e4f4d4f5051514f4d4d4f50504e41394650505151525252504f
4e4d4f4e4f504f4f504f4e4b4b4c4b4c4c493e373f494c4c4b49494a4847474b4d4a4a4b
4c4c4b4744464947484b4d473d3d444845484a46474c4b494744444b4c48484a4c4b4a4e
4e4b4b4d4b392d404f51504c4a4f505051525354565b7aa9b8aca9b4a8735352514f4d3e
304252524f4f515352504e4e4e4d4e4f504f4e4d5151504e4f4e4b4936283b4d4f4e4c4b
4b4f52504e4c4b4b4c4b494a4d4d4b4a474545454346403940494d4d4d4e4f4c4b494848
494b4a4947494a484745464945413f3f3225324143403e
22252829282826262220282e31333233343435353637393a3c3b3b3b3c3e3f4044464646
46402e2738434345474849494847454647494a4845464746454446494a4946372e3f4d4d
4d4c494a4d5151504f51514f4f50504f4d4d4e4c4d4d4d4f453a444c4d4e504e4d4e4c48
4a4c49484a484747494746454442424243403934373b3f413f3c3c3d3c3b3c3d3e3e3d3e
414243403e4143403e41403f3b3b4243403f404243444543404041444948454241403f3f
3f3e3c3d3d352d373d3d3b3a3a3b3c3d3e3e3d3e40455f91b9cad1bf8a543f3e3d3c3d37
31363c3b3c3d404042444240404243454342444545443f404445433f332b373e3f3f3e3c
3b3b3939393a3a383734313335333434312f2e2c2a2d303030302f2e2e3032312e2e302f
2d2f302f2f31313032323030312e2e312d2a3945454243
20232729282c2d2c30342c2a2b2c2c2c2e2e2d2c2e2d2e31312f2d2c2c2d2e2e302f2e30
2e2c2c2a2e2f303033363737363435373636373635383a3b373434343335342e2c323531
2f2c2c2b2a29292420202020201e212322201f1f21222325282b2725252627292a2b2b2c
2d3032323535343437353535353332343433313230313132302e2e2d2d2c2a2929282927
262526232021211e1d1c1b1c22251d1917181b1a1b1c1c1c1e202021262927292a292a2a
28292b2e302f2f3334353634353637383a3c3c3d3e414d6f9dbecdb477483a35302f3133
35302d2c29282a2828292a28272826252425272725252626221e222a30322e29292c2a2b
2f2e2d2d3130313132353537383736363532322f3031323336353332313132302f2e2f2e
2b2c2c2b2a2a29282727252522201f21242c384044413d
24242425292c2b2b2d292527282928292c2b2b2e30302e2e323334323032333434323233
312e2d2d2f302f2e2e303232312f2e2e2d2c2b2b2d2d2e2d2c2f31323436332f2d333639
3b3c393a40434644433f41454446474948454341424244443e393f414241404141424140
4141404142424242424242413f3c3c3d3e3e38353b3f3f3f404141424242454542414444
44474a4845464444444645433d3a414647484a494b4c4b49444242454746444442434445
4545464847382e3a45494847474a4a47484d504f50525a74a7cdddc7885d5553524f503f
354652514f4f505152535152534f4f4f4e4e4f52504f4f4f4e505049362738484e504f4c
4a4a4c4c4c4a49494747494948464747464445474b4b3f39454b49494a494a4847474948
47464748494a4743444444464644403e3026323d403e3d
1f232527282a2d2c27242c31363939383b3b393b3b3c3a3c3f4142454646444546464647
4842322e40494a4a4c4f4f50504f4e4e4d4e4f4f4c4b4c4f4f504e4e4f504e3b31424e51
514f4e4e505150535251535050545452535352534f4e5154483e49545554525352535454
545454535352535353555250504e4e4f514f433c464d504f4d4b4c4c4c4f514f4e4c4d4e
4d4e505050504f4d4c4f4d4640404a4b494b4b4b4e4f4e4e4e4b494f514f4b4d4e4e5251
4f4f4f4d4e3d314250535452535553505053545454575c75abc5bea67959555756555340
3446535351535352545351525353545553504e4f50535354524f504e3929394c51515150
4f5054514f4d4c4b4b4c4d4d4d4d4c4c4e4e4c4b4d4e443d484f4d4d4e4d4e4e4c4c4c4b
48494d4e4c4b49484b4b49494a484340312737413c393a
26292825282c2e2e26262f35393c3f403e3e404142414143474847474b4c4a4a4d4c4a4b
4c473330444e4d4d5052535251515151515051524f4d4f4f5050514e4e504f3d32435152
52525152555655555452525351535352565654525152535449424d565556565656555455
545556565655555555555452545553535450453e4750514f4d4d4f515153524f4f50504e
4f5051504e4d4e4f5051524e45474e51504f4d4b4f504f4e4f4f4e504e4d50514f4e4f50
50505153513f33434f505254555554525353535455575b77a6ac89706359575756555543
364653545452555756545253555554515251504e505255555352514e3b2b3b4c4e4e5052
5153535050504e4d4e4d4b4d4e4d4d4e4d51504e4f4e3f3949504e4e4a48494a4b4b4a4b
4d4e4f4e4d4c4b4949494a4a4847433f302b3d45423e3d
25282929282a2f2f2c2c3538393f414345444445464947494d4e4c49484b4c4e4f4d4d4e
4d47343045504f4f51545656535353525352515051535453535452535354503b31455354
5150525456575657585756555454555757575553555454564b424e565555555758555454
5355565756575756565756555557565656524841484e5050504f52535254535151545451
4f50515152525151515252504d4f525150515151535253514d4b4c525250535352514f50
5252525455403041515355575757555455565656575a5d6f929373625e5a585857565540
3347545555545555555553535454565454565555555457565856535341313f4f55545554
51514f4e50504f5051504e50525151515153525050504039495351514e4b4a4a4d4e4d4f
52504e4e4e4d4b4a4a4949484642414133283845443f3f
2527292b2d2e31322d2e393f42434548494747494d4f4e4d51514e4f4f5250504f4f504f
4d4c393347525253535556565353535252525253535457585654535454545540374a5556
56565758575858595a5a5a575757595759595858575659574c4750565658595a5b585857
5656575756585958595957575758575758564c454d525152525454525254545253555352
54565250515556575553534f41404f5553514f50535352534f4c50545555565756525254
55565453554233465455585857575555595a5a595a5d5e63707165605d5a595859585744
384b57555555565757575556565756555656575756565756535254513b2c3e4f50525254
565554565753504f504f5153545353545554505252504039495353535150505152525150
5152504f4e4e4e4e4b4a494747454447382b343f434340
242425292c2e30322e2e3a414649494c4d4f4f5052545453535455555656555252515251
524f3b354a5455565657575858575655555555545457595855545555555554413a4d5756
5556565759585758595a5958595b5c5b5a595c5b5a5a5b5b4f49525959595a5d5e5b5a5a
59585759595a5a5c5c5a5a5c5a5958595a584d4650565454545556555558575656555555
575552515355585552525352433f4d565755504f54565652515353545655575656545455
585857585c483e4e5b5a595c5a5a58585a5a5a5a5c5c5d5c5c5d5c5a5b5a585a5b5a5b47
3c4b57575757595b5b5a58575656565557585a5c5a595857595856554135455154585a57
55575a57545656545352515253535455565552515254423a4c5454545252525354545351
51535252525150504b4b4c4c4a4c4a48372b343c3f4240
1f21252b2e3132353438434b4b4e51525455545659595a5758595a595a5a575654555454
54523d394e5756575859595959595958595957565556585756565858575756433d505a5b
5a5959595b5b5a595b595a5b5b5c5c5c5a5a5f616060605e534b545a5b5d5e5e605e605e
5d5c5a5b5c5b5a5e5f5d5c5d5e5d5d5d5b584e4850595a595859595959595b5c60625e5a
5857565757585758595958574d4a51565a5c5c5a575656585956555657595b5b5959595a
5f62625f604a3b4d5958595b5e5d5b59595a5a5a5b5c606162605e5c5c5a5a5c5e5d614f
414e595b5c5a5a5c5c5e5e5d5c59585a5a595b5d5d5b5d595a5d5e5b422f405359575659
5a595c5c5a5c62615b59575657575658575655555655443c4c5455565555545353555553
545555555654535351504f4e4c4e4d483a333b403e3c3d
2526262b2f333436353b4a505254575858595a5c5c5d5e5f5f5e5d5e60605d5c5c5c5b5a
5a58443f515c5d5d5c595a5b5c5c5d616669615b5a5a5a5a5c5c5c5e5d5c5a4642535f60
5e5e5d5c605f5d5e5e5c5c5c5c5c5f60616668686c6c68625855595e6062646564606163
656e70665f5d5d606263656666656464615a504e585f6360606568626160616579877864
5e6164615e5e5c6065625e5e5e5f5f69899c82686567636f76675c5a657e8779716d6d6e
777768677d6e4c535c595b5f66767969615f5f5f5e62676b767c70655f606262626c8777
5456616b6d66666664686b686665605f636b6e67646c736c6c8281674c43525c5c595a5c
5e5e61626084b19f705e5f615d5d605f5f5c5a595958474051585857595a5a5c5d5c595a
5c5a57585a5a5b5b5c5d5552514f4c4a3e373c3f404042
222727293035383d3b405158595a5e626463636465666766646669768b8e837b6f666668
66655d5c687b82756760616668676f81968f726260605e5e65686f76706c6e5a4e5f6c6a
67686b70746f65616071878a786f7d8b8298bbc2c6ba91828e86716e8398918d8b7d8394
a3b9b18a76706c6a6d727d8a9089828c846e676c819594858ca1a08e8a8d9296aec6b393
828b95846f707393ab947c7f90938d9bbfcaa790b1c9a2a2ac896e6f99ccdac3a699a8c2
d1bd9791b3a785867c696980a1c3bea698928470728a9b99a7b3a18a777890917f8cbeae
70627da0aa9f99958c9aa395877f747183a0aa92809fb8a497a79979738a896d61646664
666d8a96819dd2bd866d84917c70859d8c6f656163655b6d8a8570635f6b748589716076
806a677b7f7e8c888a8f79635b686b5a57554c46464342
2327292c3237393c4165877b68666883998b7a7f949d9d94887f8db3cecbc4bc9b8593a2
918b8d95a4bdc5b39378818c8f92a6cbddc6967c858a7c78919cb0cdb9a7b1977c8fb5ae
96abc3d3d9b48c909cb5dad5a7a1cce9d7d1e6f1f2dfb9b1c5d0c8c6d4e2dddaccb3bedb
e9f1e9d3c8c4beb1adb7c6d3d8cdc1cdc6b3b5bccde2dfcdd8eff0e1dbe3eef4f3f1f0ee
dedadab6a4becfd9ddd3daebece1d7deeef6e7e4efe6dce6f1dcb6b5daf5f9ebe0e4f0f3
f4eee4dde3d8cbcecac0bdc7deeeeae7e2dfc89fa1c9e1dee2e9e0cba5a7d1dac2c1d7c0
999bbad5e8f2f4ece2e5ebe9e3cfb4bbdbe9ead9c3d6eef0eae4cdb2a7b7bfb6c3d6ceb8
b2c2d9e3e0eaf2e9d2bfcbd4cebcbed0cabaafacb6b08ea2d1d2bca9a5aeaebcc3ae9fb5
b89da1c2bdb6d3d6d1d4ba9e8ba3a8899794664b454141
2626292c3034383f4d8cc3bcaaa39bacc7c6bdc7d5d7d9d8ceb6bddfeee9e6e5cbc2d4e1
d1c5bdc3d9e8ededd4b1bacad4dce3f0f6eeceb8d2e0c4b8d6eceff0eae9f1e3dbe8f2ec
e8edf7f9f9f8f8f9f8faf8f4edf0f9fbf0ebf5f9f9f7f3f1eff0f5f6f8fbf9f6eae3edf5
f7f5f7f8f9f9f9f1ede9eef2e9e4e6e8ecf2f2f2f5f7f8f8f5eff1f4f3f2eeeff4f6f5f6
f8f6f4f2f2f6f7f8f9fbf8f7f4f4fafcf6f3f8f8f4f7fcf7f3f9f8f8e7d8dcebf6f2ebed
eff4f6f6f2e2deeef6f7f6f5f4edeceeeceae6dddfdcd9e9f8fdfff5dcdaedf4f6f6eede
dcecf5f7ebe7f3f9fbf6eeeff5f6f6f9f5f5f8fbfbfaf7f9fcfcfdfdf4eef5fcfcfdfcf9
f8f7f4f7fadfcee7f7f8f6f6f4f1f0f3f1f1f0eff2ebd2d1e8f3f2edecebe7e9edece8ec
e6dee5efe5dfe0e4ebefe8e7e0dcd9cccca4624943403c
2529292c3034383f538ac1d9e0e1dedcdfe6e5dedadddde1e7e4ded7d8e5eaeaeaebeff2
f0edd7d3e4e2e5e9e9e8ebf0edeeeeddcedae5e9e4e5eff3eee7d9d8e9f1eedfdff0f7f6
f5eee5cbcde3e7eaf0f2f0f3f3e0c5c4ded6b7aabdd5e3e4dedeeaf3ece3dbdde8efdcc6
cbd2d8dbcdc1bfced1b6abaea29ea7aecbe8d9c2c6d6e5eedfced6cfd0c9b3b5c5cecbc6
c7c8ced8dccdcad0cdd1bdb7b9b8d0d4c2ccc9bec6c1b3b0b5b9cfe4bb857a9bb2a4a3c2
dad1c5d4d6b5b3d2dbcfcac3b5adb0a99b9ab5dcf0cba0a2b5c6d2dde5dac7c4d0d8d0c3
ccd4d4debfa5b5c9d4c7a6a6c2dce6dfbdb1c2ccd8d8c2b8c7cfd4cba78daadef0eff0f5
f8f7efe3ca9f90acccc6ad9eaabdc0c8d3d2c7b9b6cdd6b6a1a9bcc7ccd9e7e4e3eadacb
d9e3d8cad6e6c4aabfd5e4e9e1d5d1d6cc92574544433f
2427282a31363b42546e8babc2cdccbab6b7c0bfafb7b3b6cddcc9a295adb7b2c1c7bfbf
bfb8a2adcfc6b3aabed5cec3babfc6a486a1d6deac9ec6e1c5977d89b4bfa5889cbebdab
9e89776c717b98a3999ca6ab997b70717e7e716b72788184808aa2aaa2989196a6a48c7f
86979e958277748083746c6c6762626890b7a0767287a2b19e96a2958b826e686d70706a
6766686d6e6f828a7567646b5f597e8775858879746c64656d6e74786a5e5f6769656a85
9281757f81635c76817d7a78706e6e6963647591a693746a6e7a85909c8e746f7e867c6a
78848490846b666b7c7c69636d7a847e6b6361656b6a65657d837064514454708297a09c
9ea396817266636a72726b686a7171767b7b78727197a07963676f767c8a95939eaf9a7f
8e96877b94ad8f717c95adae957c73776e56444244433f
2425282b3034373f5562656a727a7c7878777f827b8889828a9186716a72736f787e7976
736c57678c8b76697b8c7e74737b7b6c6587bdb07b687c9788685f656d6c614d4f606561
615c5a5b5c5e606060606162605f5c5e5f5e5b5b5b5e5f5f5a5a646a676664666a67625f
62696c645e5d5b5b5c5c5c5c5a5a595a6c7b6a5a575b60636160635e5959585857595957
5757575654555a595858585646424e555456585958555457595958585756585958585b5f
605a595c5c43394c595a5959595958585b5b5c5f64635e5f61605f5f5f605d5b5d5b5849
48565c5c5b595756585b5a5b5d5e5c5958575656585c5c595d5e5c58453645555b616767
686864605d5a5a59595958585a5b5c5b5c5c5c5a5b6a5c49505556575a5e5c5c6770695c
5b5c5a5760696058565a65655b514d4c443d3d3e40413e
2224272a2b31343a48545658595c5b5e606061616168696765646260605d5a5b5c5c5b5a
59564343565d5d5a5c5d5d5b5a595c5b5b6c887e63595e5f5b5a5857575957434153595a
5a575658595959595958595a5a5958595a5a58585a5a5a58504e575b5b5c5b5a58595a5a
5a5a595757585858585757575756555759574e4d53555556575653545556555454575452
52535251515150505457534f4b4d4e515455565757575654555554545454545557565656
56565655553e3245525753525254545354555757595858585a5a585757585a5957575546
4450565757565354525256585757565554555254545557575857585641303f545b5a5b5c
5a5a5a585954545553545355575857565555525456553e38495454545455535656545254
545354535252514e4d4b4d4d4f4c49453e383a3c3d3f42
26262826292e353a393f494e5253555758595756595a5a5b5b58575b5958575757565657
57543f3e4f565855555658585454565757575a5957565858575658575555533d3d4f5556
5757555556565555565656575758575756565656575858574f4d5358585a5b5857575656
5657575455565654565554565454545556524b4950525354565554545356525252545250
525352505053504f5252504d3e414b4e545453535452514d4e5152545351535353545655
55535253523a314453545351515251525454545353565657575655545656565757575544
404e54545453545451515253565555535152524f52545352535552503f2f3d4f53535455
5656555654535456555350525554535353504e4f54543b36495453525354505052515053
504f505150504e4d4b464748474544423b383c3f3f3d3b
232626272d2f30322f364347494c4d525454515356555252545454555353545251525354
55503b3b4b54545252555754535454555655555454565755545452535554523d3a4b5457
53514f5154524f54575657585556575756545353525456554b4952565756555757545253
57555555565555535356555454525255555149464d5151515355555253514e4e51535352
5051514f4e4d4f4e4f50504b3736444f4f51514f4e4e4e4e4b4c5052525152525352504f
4f4f4f50533b30435050514e4d514f505253504f525353545555565552535252524f4e41
404c52524f4f504f4f4f5050515051504e4d4f515252514f525353513e2f3d4e5352514e
4d5252505050504e4d4f4e4e504f4f4f4e4e4e4e4e4e3533454f4f4e4e4d4c4c514f4e4c
4947494a494948484440403e3e3e3f3c36363b3b373734
24252224272b2f2f2a303e444847494b4c4b4b4e50504e4e504e4b4d4a4a4a4b4b4d4a4b
4a493736454c4e49494c4e4b4c4d4b4b4c4e4e4b4b4a4b4b4b4b4c4b4b4c493938454c4d
4c4c4d4f4f50524f4e4e4e4e5051524e4a4a4a484647494845444a4a4744454747464345
46454643414243414142403e3e3c3e4443413b3a3c403f3d3f3f3f403d3b3b3e42404041
40424243434040404445413f3433383c3e41403d3a3b3e3e3a3637393937393837353433
312e2f302e2e3335322f2f2c2d2f2f303030303033373635353537393939393837363938
3a3b3e3e3d3e3f3e3b3d4142424242423f3f3e4042403c3838373737393b332c2a2d3133
312f2f2c28282a272827272728292c2d2b2a272628272c2d2c30322d2c2f303337363333
3534303033333333332f2d2f2f2f2c2c2b31383a3a3836
222526252627292f2d2b3032332f2e36383635353334353332323131302e2e3031302d2e
2f333231323435343436373738393635353a3b38343535323232302e2d2d292e2f2a2825
21211f1d1c1d1f1d1b1b1b18191e211e1e2324202124272d3434312f2e2e313433323536
363839373637363738393736353335383634323533343534312e2e2e2a26252424222224
2426252022242423202021222a2f282324242725292a2c292a2f32333535353637383939
39363938362f30393d3c3936363433353635373635353735323233323132312f2f2f3335
34302e2c28282a2d2c2e30302f2e313131302f2d31333334353a3b3c3d36373b39383c3f
3e3c3d3f3d3c3c3e41413d3b3b3b3b3b393b3a393938302f33393b383535354145393535
3836323132302f2f302d2b2b2d2b2a2c2b303536373739
1f2122242623252a27252c2f313432373a36363936363734343634353434323434333331
3434312f2f3033333435353636373738393b3d3b3a3c3d3f3f4142444544423333424746
48494744484d4d4f514c4d4a4848484746494a4747484848434044474949474848474848
4747474744444647474747474748474946433f4145494a4847494c4b4b484648494a4c4b
4b4d4d4d4b4c4a454548484430314149494a4c4b47484a48484545494b49424144494b49
4846464746302a3b484c4b4b4746464b4b4d4f4e4c4c4e504f504f4e4e504d4e4e4d4f43
404a4e4e4e4b4b4b4d4d4f4c4a4d504f504f4b4b4d4b49484a4b484b3d2b35484b494a4c
4e4e4d4c4b4a49494a494a4b4b4b4c4b4b4b4b494a4d3331434c4c494948475456504b4b
4945464a484645464543413f3f4143413831343737393a
222621212120272b22242c2e313133363a393c3e3e3b3c393b3e40404243424547464646
47452f2f3f494a4b4b4b4a4b4e4f4d4c4f4f4f4f4d4e4c4d4e4f4f504f4f4a3235485050
4f4c49494a4b4d4d4e4e4e4e504e4b494d504f4e505352534541474d4f51505151525251
514f504f4f5050504f514f4f4d4e4f524f4c4341484d4e4d4c4c4e4e4c4c4b4b4a4a4b4c
4d4b4c4d4b4b4b4a484b49443133454a4a4b4d504b494b494c4c4c4c4c4b47484a4c4c4c
494948494931283c4b4a4b4c4e4c4d4d4c4d4e4f505250504f4e4f505051504f504e5042
404a4d4e4d4c4b4b4c4f4f4a4b4d4f50504d4e4e4d4c484a4c4e4e4e3a222f434a4c4e4e
4e4e4c4c4b4c4c50514a4b4e504f4f50504f4e49494b302f3f474745474947494c4c4848
494746484846444647444241403f3e3f3934383d3b3a39
21252523232526261f222c30323132353736373b3a3a3e3f3c3d3e3f4042444746464545
47472f31424c4d4c4d4c4b4d4d4d49494c4b4d4b4c4d4d4d4c4b4c4d4d4c4c3535444a4b
4c4d4e4d4c4c4c4c4e4c4d4e4f50524e4d4f4d4f4e51514f4341474e4c4b4e4e4f4e5152
5253504e4f50504e50504e4b4b4c4e504e4c4340484d4b4c4c4c4c4c4d4d4b494a494a4a
4a484a4d4b4c504d47474948343645494a4844484d4949494a48484b4b4847494c4f4c4a
46474846462e253a48494c4e4e4e4f4e4e4d4e4f5051504e4e4e4f4e4e4f51504f4f5041
414b50504c4b4d4d4d4f504f504f5051504e4d4e4d4e4e4d4c4d4c48372230464d4e5050
4c4d4b4b4c4d4e4c4b4b4b49484a4c4c4c4c4a484a492e2e40454744464a494749494446
4b4946474948474745413e403f403d3e38353a3c3b3837
2326212123242527201e252c3233323538373538383b3e403e3d3c3e4042434645434444
45442d3042484b4c4d4c4c4e4d4d4a4a4b4a494a4c4d4c4c4d4c4c504e4d4c3737454b4d
4d4d4d4c4e514f4d4c4c4d4e4f4f4f4e4e4f4d4c4f4e4d4b4441474c4b4e4f4f50505153
5350504d4f4d4d4c4e4f4e4c4d4c4f4d4d4b4342474b494848494b4a4b4b494747474b4b
4a45474c494a4d49454847433f414748454546474a4e4b4b4b4943414548484c4b4d4c48
4a49474748312638474a4a4b4f4c4d4f4e4d4f4f4e4c4e4d4f4f4f4d4b4e504f4e4e4f41
40494f51504e4e4d4e4f504f4d4e4c4b4a4a4a48484b4d4d4b4c4f4c3c242f44474b4b48
494a4a4a4a4a4b4b4a4947494b4a4a4a4849484748472c2f3f434847444a4b4a4b484443
4948484848474743403e3f433f3c3d3c3631353637393a
1e22222120211f1f1b1e282d302f2e2f31323333363838393a3a3b3d3e3e424442434241
43432c303f45494a4c4a4b4e4e4e4b4c4f4c474a4c4c4d4f4e4c4d4e4a4c4c3432454c4b
46484a474a5152504c4a494c4d4d4f4c4b4c4d50504c4a4c453f464f504e4f5251504e50
4f4d4d4f4e4d4c4c4d4e4e4d4c4d4f4e4e4e4742464b48474746494849484a47474a4c4d
4e4e4d4946494b47494d47412b2e424a494745494b4c4c48494b4d4b484748484b4d4b47
494947494b322636474b4a4b4e4e4d4f4e4b4c4e4c4a4c4c4d4c4d4d4b4b4b4e4d4d5041
3f464a4d4d4a4a4e4f4f4e4d4e4c474b4c4b4c4c4a4947464747484d3d243043494c4c4c
504e494b4c4b4c4c4c4d4b4a4c4a484a4848484747462d2e3f4746444244464848464243
47474a4a48444243413e3d3f3f3c3b3835313338393a38
1f212022201f1b1c181b222729292b2c2d2f2f333736383a393a393c3c3f414140424242
44432c2e3f4648494d4b4a4a4b4b4b4e4d4a4b4c4c4b4b4b48474c4f4d4c4a3437474f4c
4b4b4b4c4c4c4b474645494f4f4f4d4b4e4d4e4f504d4e4c4240474e4e4e50524e4d5153
514c4d4f4d4c4b4c4a4b4b4f4e4c4c4e4b4d4640454b4b49474848464847484845474a4c
4a4948494a4b4b4c4c4a47442b2e4246484240434344484b4a4b4b4a47444b4b4c4c4a49
494947494e33253745494b4d4c4d4c4e4e4c4c4d4d4b4b4d4d4c4f4f4e4b4b4e4e4c4e40
3f4648484c4b4a4b4e4f4d4a4b4b494b4b4c4c47494a4a4b4b4846483f252d424648494c
4a494a4d4c4b47484947434445484c4b484749494848302f404744424245464443434244
484544494a464547443e3b3e3f3e393431303135383937
1a1f2021201f1d1e1a1d2123272929282a2b2a2f3435353738393a3b3e3f424042434243
44402c2f3f484a4b4d4b4a494b4c4c4c4a4b4c4c4c4d4d4d4b4b4e4e4b4b4b3436484e4c
4a47464b4f49484c4f4f4a494c4c4a474a4f4d4d4d4b4d4d4641484e4b494b524e4c4e50
514e4e4d4b4b4c4e4c4c4c504f4b4a4c4a494540474c4d4948484544464546484744484b
48474a4a4646494a4748474431343b40434241494c4c4f4b4647494a4b4c4c4c4c4c4b47
4445454a4c32213443484b4c4d4d4e4d4c4c4d4b4c4a48494e4d4f4f4e4d4b4b4b4a4c3d
3b474a48494a4c4a494b4b4b4a47474a4a4947464848464a49494c4a3c262d434644484a
4c4944454b4d484a4c49434548494b4c4847494747452b30434947474849474444434044
474441434547464e4a403d3e403d3937332f30373a3837
1f201e1d1e201e1e1a1a1e202626272728292d313234313436373b3e3f43454342444242
44412b304146484b4b4847484c4e4a484a4b4c4c4c4d4f4e4e4e4d4d4a4b4a3239474d4a
4949484748494b4c4e4e4e4e4b4b47484d4c4b4c4a49494a444245494c4b4b4d4f4e4e4d
4c4d504f4d4b4a4d4e4c4d4f4d4c4d4d4c464140484b4b49494645454544444443454748
4648454447484949494949453e3e4042434443444b4c47484a464a4b4c4d4a4848484747
4346484b4b2e1f314347484b4e4e4c4c4c4e4c4d4e4b4a4a4c4c4c4c4b4b49484c4a483c
3d464c4c4a494c4e4f4d4a464547494a474a4a47494a47484343474538202c4343454a4b
4b4b47494a48494a4b4a484648484b4a4b4b494945442a2f4046474a4a49454243424145
474542414347454f483f3e3e3c3b3b3b362f2e32363735
1c1e1f2122221f1f1a1a1e2325262728292c2e2d2f32303333363a3b3d42434242444340
42412b2f4144454847464748494b48474b4b4a4b4a4e4e4d4d49494948484b3637464b4c
4c504e4b4b4a4a4b4a494c48454545474947494a4c4c4b4b454044494a4b4e4f4c4a4c4e
4d4e4d4e4f4c4a4e4f4b494e4c4c4c4c4c47413e45494a49484645424443424345474446
4545454644464645434441402a32404144414144454542474a4846484345494747494443
43424245492f1e2f3f4448484b4d4b4c4b4d4c4c4f4c4c4e4d4d4c4a4b4b4a48494a483e
3c454b4e4d4c4d4d4d4d4d4b48494a4b49494d4d4d4746474b48484640283245494c4a4c
4f4c4b4a4849474647474544484b4c4b4b49484647462c30404644454946444143454544
484746464646413f3d3f403e3a3a3d3d3a323235363838
1b201f221f1e1e201a1d212224252826282b2f2d2e31303135393a3c3e3e404240404141
403e2a2f4044464845474747494a49474a4e48474b4b4b4c4c4d4b4a4b4a4b3537454a49
48494a49494646484445464545464545474845474848494b46414648494d4e4f4d4b4d4d
4e4d494a4d4d4e4e504d4b4d48474b4b4d49413e42484b4b484845414341454547494747
4547444445484642444444422c2f3e444341454a47474a4845414344444548484b474442
4548464a4a2f233544494d4c4b4e4b4b4b4c4d4e4c4a4b4b4d4e51504d4c49484b48453b
3c454d4c4a494a4c4c4d4c4c4b464949464649494844494b4c4948453d24334447454747
454547454244424447464143454446454948494845462d31414542424442444542484b45
4545464643434242413f3d3f3f3e3b3a39333536343635
1e1f1b1c1f1f1f1e191a212121232526282a2a2c2f312f303235393b3f3e3e42413e3e3f
40412a2e40454547464547494b4b4a49494b4747484a4d4a4a4b48484848483236444b50
4d4947464545484a474846484a4a4744474b4c49494c4948434145474948484c4c4d4c4b
4c4c4d4d4d4f504a4d4e4c4c47484c4d4d4a423d43474a4d4c4846444646454745454645
4747464342434543464645412f3443464442474543454242404145424348494446464546
4445474b49312135464b4a4a4b494b4c4c4c4a4c4a4848494e5151504e4c4b494b49463b
3a454c4a4b4a474b4949484a4b484644484a4b4846484c4c494749483f252d3e46464846
4543454542464c4a494a4846474948474b49484848462d344143434245484a4746474a48
4847474744424247423d3e403f3c3a3a382f3237373737
1c1d1e1e1b1c1e1f1a1d20212023212324282a2b2a2c2b2e31333a3c3d3f3f4342404040
41422a303f44444747484647484849484848474746484d4b4847494a4b4a493638464a4b
4a4949494947474544494a4544444545494a4c49474a4a473d3c474b4b4a4c4b4b4b4c4c
4b4c4e4d4d4d4c49494a4d4b494a4b504e483f3b43494a49494547464342434442434443
4648474743434344434445433b3d4245444344464442434748454746444747474949494a
45434242432b1e3543494b4c4e4c494a494b4b4d4c4a494a4f4d4d4d4b4a4d4b4a4b493d
3e454a4947494a4c4a464845444645444243474a4b49494a474748473f252d3f44434749
46484c4a43474b4a47444343464a484446484746484a2e303f4447454343454446434646
46454748454346453f3c3c3d3c3d3936322c2d3235373b
1c201c1b1c1d1d1b171e202120202123262727282b2a2d313838393a3a3e41413f3d4041
43432a313e434443454645454849484a4747464844484b4948454a4c4f4947323a494d4a
4846494a4749464746434746454443494b4a4b4a4844474a4240484b4a4b4b4c4c4c4f4e
4e4c4c4a484a494949494b48484b4f534f443d3a3f474546464545454541444141414548
454645444342414543434241292e3f414144414545434142424143494b4745494945474a
48454445452c1f32404b4c4c4d4b494b4c4b4c4c4b4b4b474a4b4a494c4c4d4f4c4c4a3e
3f474c4a494a4a4645434947434046454444484b4947484645484a483e24334245434447
45464949494b494948454343444849484849494a49482d313d4346434442424445424441
3e4147474241403f3d3f3e3c3c3c3937342b2e373b3a38
21221f201f1e1f1e181d1e20222220222525232326272c32383d3c3b3b3d3f3f413e3e3d
40402932404445444446474648494a474947474743444747474b4c484a4b483437454a4a
4a47484c4d4c4c4f4a48444247474547474a494a47454548403c454a48494846474a4a4b
484a4a4a4a4b4a48474949474a4b4d4f4b44403c3f474547484744454642424144464543
4245444240414347444544442b2e3c424649474749494844454442464546464949484949
4742434c482b1d324349494a4c4d4b4a4b4b4b47474b4c484647474a4d4d4b4b4b4b493c
3e484f4b484a4a4845464948464446484444484c494a4a474646444340242e3f48474847
4745454746434242454848484947474a4847444444442d34404446434341424246474342
3e3f424643403f3f3a403f3a393c3b38372f343a3e3934
202424201f1e1c1b181c1e212323212222232525252c2d32383c3c3a3c3c3f40423f3f3c
3d3d28323d444546454a494948454746474848464445474647494744464a47343844474c
4c4a474545494a494747454649474149484849494b4d4948453f454847474a484744474a
47474a696d574643464846494b4b4a4a4847423b3f464848484642434541404042464543
424342424043434444424340333641414343404646444644424144484644424345454647
45414344432a243844474b4a4848484444494a4545474a484644464a4a494a484b4c483f
3e464d4c484b494647464547474343474546454747474a454a4c48433f242e414344474b
454642474848494b4847474e4b4b48494b4b464243472d33434846424042454443444341
40403f404041403d39393c3b393a3c3638303238363433
1e2122221f1b1b1a15161b1e2124242423232626252a2c32393a3c3b3a3b3d403d3d403e
3f4029313d44454643494b4c4a4946444545454448484746494b4a474947463136454748
45464946484a4a4b4c4c4a4a49454444464947464c4b46474340474b4c4b49494948474c
48494a5a72614a46494543464a484649464841383d444647494846434440414140414542
41434242414244424542464333393f414145424547464141424646414346464542454847
4444423f3e2721374047494545494843414449464544474a49464a4a44474a4b4a4a463d
3f47484947464547454547474a4745454446484c49484b4c4c4845464122334448454443
41424343464a4a4848484946464646464749484548482d33424945423f44454342424040
4141423e3f403d3c403e3d3e3c3a3837392b3138373333
1c1f20201b181b1910151c1f1f21212525242626262a2e323838393b383a3a3d3d3e3f3d
3f3f2b354045444646494a4a4b4b47454748474648474a494a4b4c4a4a4c483238414548
4a4748474547444247454445474c484947494b4a48464547413c474b4b4b48474647494a
4a4b4b4755534c4a474343424443454747463f363d3f41434746454544403f4042414243
3e3f42414242424145464140272f3e454746474545414348474344464644413f3e434748
44414041412a24384149494546484846464747444345444b4a4a494a4345484a4b49443b
3b45474647484847454245464744444445474749474444464b4949443d232e3e413d3e42
40424242424545474a4b4743474747444546464646442d323e454344414142403e3f403f
403f3c3c3f3c3c3b3e3c3c3b3a363433362c2f34343437
1e1e1f201b191b18151a201e1e2120222627252528292b313937393b3837383b3c3d3d3c
3d3f2b343e40404245454445464746464643454442454546494947444445443237434644
4947434244464340414242424848464544454946474644433e3741464847444140414442
42484640403f41413f3d3b3b39383f3f3d3d36313338373637383935313435383836383a
36393a3a39393c3935383938272a363a3d3d3c41423b3c3c3c3c3e3a3a3a393735323737
36353232332a283033343435353431323434312e2d303136353431343333343534383532
2f3234353637383435353437393838383b3d403f3d3c3a3a3b3c3e3a34232c3534343133
333333313232333333312e2f2d2d302c2c2b2a2e2c2c2c272b2b26282928272828272829
29282928292b2a29252726272928252527292f34353436
1b1f22221e1c1f19151619151619171b1e20211d1f211f242423252524232826292c2925
282a2a2a292b2c2f322f3031323333333434333636333637353433303033373430302e27
292324222322211e1e1f1d1a20202021211e1e1e1d1d1e1c1f2724222528282425232524
272827262527292c2d2f2f2e2b2c302f2f2d2d2e2a2d2b2a2a2826262525252525232322
1f1e1d1e1d1d1c1c1b1c1a1a2a24171314161515161619191a1d1b1a1e1e202123232426
292628272b3739332e2a2e2f2d2e2f312f2c2e2d2e2e32302e2d2f2f2c2f2c2a2a2d292d
2d282628262525232322222124231c1f24231f1e1f212322202120222d3b2d2425272c29
282a2c2a2a2e3032333130322f32353230323334312f37333130302d2e2b2b2b2a292829
27282825252a24201e1e1e1f211c1b1d212e3536363536
1b1e1d1f1b1b1a181a181615181a19191f20221f1f25282a26272a27282a2d2b2b2e2c29
272b362f2b2a292c2d2b2a2b2e2b2a292b2b2b2b2c3032302e2e2e2f3230363e3a363435
36353534353a373a3b3c3b3e3c3f3a3e3d3d3d3f3c3a3e4945403e3c3b3a3a3635363636
373735333634373433353737343637383b36373836343537373839383736383a39383b3e
3f3e3e3d3c3d3e414040413e434142403f41403d3f444441443f3c43413e3b3d3a3b393c
3d3939383942403a3e3e403e3c3b40414140433d3e3f40413f3f4545454a4c4b49454a4d
504d494a4c4b4c49464b4f4d4d46464949474846494b4c49454548474644464545444643
3e3f444345464444474041454542444343444341414040414648474646454140413f3f3d
3f42403c3e443d3937383737363436343c3a3839373332
1b1d1b1b1a1919181d1d1c1c1c1f2327272627262a2f333d393b3a3a4144404042454542
3e464b4b4c4c454346464646474c5255544e4a495154534e4d5657504c49454447494a4d
4b4c4f4f4c4b41424340434a4c47494e4c4744484948474a4b494b4a4b48474647454648
47454346474445413f4143464343454a4c46464341404242414245444343424341404545
4042454345484743423e3e3f404041424043414544494442444541434847424646444646
43444242434444454645434545454648474748454344464845464847566f786d59506471
7567544e636d5d4f4c657173664f46474444474b4d515e564b49586e796f594d49494949
484e6d8084664f495a766e564c4f63767c604a454245433f44546e7b71564540413e433f
45544e43585c4a3e39393a3b3b373c3839353538363231
1a1a181b1a181617191d1f1e1e22243f52584030304c616f654b475d6e7154546776755c
4d5c6e7877755a4642474647576f7b7a725d5260746d5f5559767f6b574d4a474a4a4d50
536b8778584d4c444146496b6551596e5c4d4b464b4b484a47484b4c4c4a464648454448
4748464849464440404342454544464b4b46474645444449464545464444464644434845
42454848454242454444414343434345444646494a494647474547464444424649484747
43404345444743444748464441454447474744444444444545484b48718486866359718f
92745a5a7e8b7d625a86969285614d474447494a56717c5f4a4874878785644c4543484c
4e57787e7c806752777d80775c6b827e796e5646484a484352747b7a7b6048403f40423f
48685a4972785843404043433e393b3938353337353232
1313171b1a1816171c1f1e1b1e202c485053564234496d6d5c495d727174636684837a72
575e708b897c594642484a476b89918d765e55777e80735c748182836e544e4b47484950
728c7e89684f474642424b776d5a6277605b5c5d5e554d494845494b4b4a464749464445
464747494a45444542434445444546464747454545454546464343444143434442444748
484443414142414141413f41424646454545454545484a4644424045433f404044484343
4347484846484545454a46444346484a46474344444643454648474e7f72647563555375
6e5853686f628376617e7562826a504647484954728c89644c4c645b5e836b524a4a484a
4e656d615981765e7d6b7f8c6b7d8a6e6371584948464648608a6e5a6f674d4441403f41
4c706251797f5e5b676a6b5f443a383738363435343433
1919181d1d1d181c1c222322252434423b39433b31395f58474870776367696f86776375
57494c7a7256484243494b476880817d6a5a5a77637f8160816c6e8b78544c4d4c4c4755
7e886383664b454a47454a7574666d80718b9da09873544a4643454d4943474a49454447
4a4644454644434342424347444747434646434142464544444542434246424242424243
4342434145403e3e4045424143434443404142464b484747414344474641404347494345
43464446454647464546474346484747464545474845454443464a4f727f80795f524f71
6a5450646e5e80746285897e87654e464544495a70707d665148465374876448484b494a
4f626e5b5482745f81677c916e7f8b665c715947474c4b4b628c694f6a664e46413e3f43
4c7c81778b855f67798e8c6b4a3c3b393a373533343438
1515151a1a181a191c1d211c23232d4b595b493931305a4f44447388818472728a8a806c
4f4344776e5045424545494a5e757a7b7c665e7c6281826585696e8b78564e4e56585359
808963846b4f474849494a799ca3a2936b626e887a5e514e4e4845494948464949484145
494947464544474544414344444745464946434144474544454440434042444341444446
414243404244404443443f3c3c3e46454144434745494644404147494544434048484243
44444540424047454341444247464549464548494745444142474b4e627a858968524f70
69534e636f5d82745f89948b71544945454346454d597a645048587c876d4d434a4e4f4a
4e606d5b5483785e826779906e7d8c6a5e725b4a4d74684e5f8a684e66654c4441404040
487e857c8c875e4c5a726a4e3e3b3b3836373333353435
1014161818161a1a19191d1f232323384549574635315b4c3c3c6f8175786d728888855e
454246796e4d434647454648505354597b6b5f7b5f7f806283656c8c77534c5c85866760
838a6382684d4849494b4c7877686c7e5f5f7e89654f4b4c4c4746494848484646474644
47494948474246454241464443444346464441414641414646424241423f434345474342
414143454242424542454241433f474141414547444947424744474746484843484b464a
44464845424646494643423f454746494542474845464744444a4b4c6a6768816e524f6f
69554e63706582705d7c6f584c4846424247454552617f695549797d61554e484a4c4849
465a705d5483795d82697a916f7d8e6c617a604e4e887a575c856b5469644c424444413f
477869507384604c6b64574c3e38393833363537333335
13181617181b1a18181d1e1f1f222c37393b5747322f59493c3a6d735660657084747a5f
474349796c4e444847494946586465657a695b766a817c5e7e70768972534c5f8c89635b
7f8c6a8461504e4b45434d786b576178638491826d5b4e4b4d4a4a4645494a4949494744
434847494343454240434444434142464744434444424143444643404042424241454343
424340433f4344454442424345494447464541434443424243444046464843454a4a4747
4143454745484844464b46444549494a45434948474b4a46484a4a4d7081868a67524e6c
674f4959737d7a615476674f4542424644484853738b99948c62859797966b4f4b4c4e4c
4a547c90947e64516c888d745c6178858f73554b48645c4b51697d82846249404644403f
4275644b6c806160827a6f6545383c3935353133333332
13171a1a18191818181919191e232a4a5b5e4e392f2e58483d39686d505a606d7f666566
4d424574674c4547474949485a7582816e59516c7e7c645265818b785b4a4b56615b5350
5a779581584d474c4d474a7767535c716a8e9e9b9370554e4f4e4847484a484a47474645
44444847424342413f41414341424247464343434040434243474442434341414044423e
3f42454240424348454042433c424044454543403f43494940404646454546474a4b4446
4146474846454945454c4a4748474a4a49464a49484d4b494a49474d5a757b74594f4c5e
5947424968765c4a4a5e574a45434342444444556c7879766f56666f7271594849494a45
40475c6768544e4b556762544a4c58676e5a4f4b4b4b4643444d666e684e43404642403c
3c5b524759644e5f74767468493b3a3837373632323432
12111718161a1b1a1818181b1d2125353d503d322d2d3a3937374e52454c4d525d4f4954
4842465f53454246474849464c63706f554d4b5b675e50494d6160514a494a4d4c474a4d
4f585e56504d474a4c4e4b54524f5153545d5f5f5a544f4b4a4b4b4b4a4a454644494748
47444a49444845423f413f4341434548423e434343434341434644434545434443434243
42434548434343424347434241434545484b4943434548494448424646474a4c4a4d4e4c
464a49484848484a4a4a4847484647474843484848474b4a4d49484c4e51504f4d4a4b4a
494745454847464443464c4d4a424343484a46434b4f4d474846484e4e4f4e4745454542
3e414f5d51454846484d4d4744484b4d524d4b474845444341464b47414040404242403a
3b42423f43433f4145443f3e3c3c393733323033333032
131210151c1a171617161b1a1e2021252a322b2a292b283238373d403b3e414143423f3f
3f43484d464343474c4c4e49494d4e4e4b4c4a4d4a4e4a48474a4c48424750524f4c5049
4a4d4e4f4a4c4c4c4c474a4c4c4a494e524f4b4d4a4d4f4a4e4f4c49494b484b49494549
4a44494a47494645454140434346464e4744474e4a5255554c4a474e494e514944424745
4745444e4949454544424643444c4a42444e4644444a4444444447454945474a4b4a4a4e
4a4c4a4444494345494e4544484545474845484547474b4a4b4c4a4a4c4f4c4d4e48494a
4646454446494845454f5c625d48535c60615850474b494849494f585b59514b47484444
3e424552574c484645484744464f5b574d5c53555e625d4b494645403f443f3f4444423c
3e3f413d3e403e3c3c3c3d3a3a3a3a38362f3233333433
15151516151a1c18181617181d1d1f232424282d2a2a283339363839383b3e3d40413f41
4353656c695c4e5d6d6e6e5556584e4e5e564c4c494d4e4c495a534b474b57646f685c4a
4c596c63554f484a4e4f4d5d5b525068574f4c4d4e4e4e494d4e4b4a484c484c4a464549
48474849484b46434445434545444a65574a52616078827e6a564e69526f6d54463e4144
45445169614e4747444141414e7882585d835d4b444a484b4e46454a4948494c48484b4c
4847484542474847484947474747474a4d4b494848494d4b4d4b4b4b4b4f4b4c4c474347
4340464547494343496487908b61708b9d9e83594745494c474a6592a092634a3f414345
444a5272895d4848484544474260806a5375616e898979584c48404140433f414142403e
3f3e3e3d3c3c3c3b3b383b3b3b37343336353034353330
12171616181718181816181d1f1f202124252a2c2c2a29333836383839393d403f414144
4d6d88857e785d7d878787666d684f517c695447484b4b4b4e7e65514a55728c928b7458
5e838f835f524f4f4b464c756855597759505353524c4d4a4a4a4d4b494545494d494648
454749494a47494747464a4a4746507b674e5d737388857e7f65597c5985805d4c454442
47506d9075534a434240424453858e64669263545756544e4b46494949464946454a4f4c
4645454445454944484a4e4c4a4a4b4b4d4e4b494a464b4a4b4a4a4b484c4a4a484a4944
46414745444848464d847f6773625c5d73785e4d474a4a49494b80685a77694e41414445
444774929b5e47454446484943658f745a8064748f74795f4b473e3e4b493f403f3f3d3d
3e3e3c3e3f3e39393634383b393838353434333232322e
111415161718161612161618211f2123242629292b27262f3439363939393d413e404246
51768a6f697c60837168716e736a5455806b5549474d4e4b64926a514d6c8e76667f8d67
818a658a674b494d4d4a4d756a5b5c7e627a898c876d5b504c4a4c4a4949494a494a4849
4847484a48474a494a464b47484b517c6c57637170776661866b5c7e6689815d4a464442
4567868e7757464042353d43538192696c95648ba6a5a6705047494b4745473f43484a4b
4445464645464747494c4b484c4d4d494c4a4a4c4c494c4b4b4b4c4c474b4c4d4b4c4c46
44464947474646474a7c7e6a63534f50666f564d46484944494b4c55617b665049464543
434f737d905c47484644474642608c83728e62718f787e604a443e3f48463f3f4140403d
3f3b3a3c3f3e3d383635393b3a38383839343433333431
0e111617161718151616151721212123262325282826242d343a3a3939363a3f40434347
5178877776815e8476727a6b746d69668368534b4b4f4b4a768c6a504d7090735f7c8d6a
858c62886151474a4b4d47768685868b6b7b818e8867554e4c4b494d4d464b4c474b4b48
4a4a474a474a4a474744464549494c697a6d7b6a6c86858382645c808593845e4c454244
456165756d554743403841435487a1a5a8ab6d606c8f946146454d4849484946494a4a4b
494a464845494547494a4a4a4d4f4d4b4b4a4b4c4e4e4d4b4b4e4b4c4b4e4f504b4e474a
4749494a49424345445e81918c614f526670584c4446464849464a7b979466514a515f53
474650688c5d484444414744405c8f998d95616c93927d554644404040423e3e44413f3e
3d3b3b3b3b3d3d3c3637393b3936353939363233393734
0d10161618151518181b16131a1b1b1f1c24242b2727282f34393a3a3c3a3c3e40414143
507a8d92897257838684866a72768a8289664c4b4b4c4849527f684d496d8f745e7d8d6a
858a5f84634f4a4c4c4949768a87898b655c718d6c56514b4d4a4b52504b4a4c464c4c48
4c4b474b44494c464545444749464a51828391626888858082695d86929d87604d494546
4549506d6b534744424644445180997b7696654d838a674d464a4c4a4b46434b4f4f4f4b
4b4c464b494a4c4a4c4c4a4c504f4d4d4b484c4c4c4d4b4a4b4c4d4e4d4f504e4f4f4a4c
4b4a46454a464145455d686278684f4d6271594f484c4c4641475659586c6a4f59889e65
474248638b5d4c4447424444475d8b876e8c6068908c7656463f403f45443f41453f3f3f
3c3e3c393a403e3b383534363836343637333336353131
0c0f1415171b181618191616191c1f1f2a573327252a262c363636383b3e3d4142434241
507a88867f6453826b62736b747e88898a664d4a494d47494f7f6a534c718e715c7a8865
84865e87654a494d4c4c4c7669575f7e5e6d897f5d524b4a4b4a494f4c48464a4b4c4c4a
4d4c4948474b4945424345464947464c758b855867796863886b5a8b8a9d885e4f454743
434f5a76725f5645414242454f7d916463906564816b5f4c4a4642474943474b4d4c4f4a
494945494a494d4a4a4d4e4a4c4e4c4f48464c4e4a4a4c4b4b4d4e514e4e4d4c4f4a4a4b
49484648494544494a797d6f7b6a4c495e7455504d4a4a494949816b66746a555584985d
4e4b5d7494745f4c4a484241435b8a7d57835c648b6c725c4b42413c3f4040424240413d
3b3d3c3b3b3b3b39393536353937353835343439363432
090b0f1415161214171311161b191c1f3a392a2324272429323535383a3c3b4143444042
507a7f6c7574548374717f637481717e89634e4b484a474b608a7b6f5d6c847c79857c61
79827b8861514a4b4a49517b68545980648fa0978c6e554c4c47464d4c44484b4b4a4b48
454b4849464646474443474747454749688d6f4c648384827b5b57876f8d7e5b4d464b47
4a68869694917850443f424854808e5b618b6288a3a0a16c4f44484d474849494b474a46
4b4b4a4846494a4b4c4c4d4a4b4b494b474b4c4b4a4a4c4c4c4f4d4f4c47494b4b484c49
44414744444442464b5d7b8e8c5a4d4b586c504c46454543474d59899995604b4b525245
434b819398907a584543444141557870507953597e5762574b444140423e403d40413e3c
393c3a3b383a3635363237373b37363836353333333231
0f090c1315151517151113161817181f26252120242426292d36383b3b3d3b3f40433f3f
4c6a69535a6e53747f8480556461565c6e584b4945454849798f908c6a5867878e795d4f
55738f6d524c4a4b474d506f5b49586c617c84837c634e4a4e4b4a4f4c48464748454743
4145474a484245454645474744474a4b5a6b5a4954737b7b5b484f64526b63524345484c
4c60717470715c4b484240434e5d594e4f5e525e62605d514547494a4743434a48494747
484c444a4b4d4e4c4b484e494b4c484e474b454a494b4a4b4d4c4b4a48484b48494c4847
46454744474a4743474b5556554643454c514f4c494c4743424756545757524846464447
4946505855554f4841414042424a55524a56434754464a48423f3e42433d3d3b3e3f3e3c
3838383835373435353035393a38313436373233302f2e
0c09090e1011171c130e10141815181d1f201f202121242c2e333638393c3c423f403e3c
404d4e3d45514a56595a54464d4a474a4d45494a48464344515252534b484e5051514e4f
4a4d544e4c4a494b4649454f504c4f4d50565355534d4c4646474d4b4c4643494a444947
4644454548434042454944433f45444a4a474946444d4d4d47434849434b4b4943434448
4a494f4e474f4b4a484343444a4b49494545494d4b4a4c48454344494c4a434d4a4a4244
4a4b434a4c4b494a4a454d4d4e4b464b4b4a464a444b4c4a4e4b4c49474a4e49474a4740
48474a464549464345434a49464247494a49474a454c444548434746484e474344434242
444348434543454344453f414042454446413c40403d3f3f3e3e3e41443b3b3a3c3e3e39
3938373a353735373534333532323333323532322f312a
0c0c0913141114120d0f100d161616171c1a1f1d1e201f2b2d3232313638383e3f3e3c3c
393d40393e3e414444424240424142464640464542494645494a494b4c474a4942494949
4a4b484c4f474d4f4745474f49474e504b4a4c4a5050484a494648474946444847454a47
48464546454141454145433f3d423f474941494444484745454647474146484645444643
45444646484b484b4542444047464543474c4147444a4e4544484b4b4a4946464c4a4547
474647474649484a494d4d4f4f4a4b4c4a474b49464c4c484f484d4b494a4c484a4b4744
444646474549474241444449474a46474d4948484b4745414145424746424a4442454241
47433e3f4141423e404644464241434142433e3f3c3f403e40433e3e413d3b3b373d3b39
3c3a3835353739383234343432313533333130322f2d2b
0a0a0a090f101110120e0c10111415161e18181c1f1b1e292c3030313538383b383a373c
373b3d393d3a3d40403d424140403e43444041404043474544454948484844484943484a
4b46444c4a44444545494b4c4a48464645494649494e454a464946454948424546454745
45484546434242433f3b414040404147444046434245434346424240433f404643404846
47434346474944484a42403f444840424843514a4a4648464245464b4c4245494c4e4246
494749484a4346494a494b4a4c4c4a4b4b4a4849494b4c48494a4a4a48494a4649494348
4542444443484140424145444943424445464042474543403e4740403d41444342444341
403d3c4140403d3c40413d3e3f3e393f3c3f3f403d3e3f3c3f423d3c3e3b393835393738
393736363536383b323133332e2d31302d2b2d2d2b231d
0c09080a0c0c0a0e0f0e100d101415181a1a18191a181d26273231303336373939373939
353a3b3c3c3c3b3f3c3c403d3c3f4141413f413c3d4242443f4144424645464b45454545
484647494643444e443f44434444464447494648494845464846454548453e4444444544
4445434344443f3e3c3d403e404242474440403f3b4142454543423f423e3e443d404449
424243494446454444483f3d4a4c45454541424c42444549444444454542424a4c45464c
444945464544494c49484945474c484a4a4a4a48494d4c464c4e4b484547484547474147
474a44443f443e3e413d433f494444414449444443444545483f4446464540444540443f
3e3f42423f3c3c3b3c3e3d3c3b3b3c373b3c3c3d3a3b3d3d3c3b3b3b3c36383b35333335
3737343635353637322e3031312e312e272529231e1307
0c0c0c1407090a0d0c0a0b0c0c14111515171818161d1a22282e2d2f2f3233343b353835
3438383a3738363a3c3a3b3c3b3d3e403e3e3e3f3c3f4140423e3f43404645453f434843
423e434741474648494c464245424b4b43454a4c4745454345464140424340473e414441
4642424243413d3c3e3d3d3c3d4243464441433e3e403e3e4040423f41413d3a3e444644
4342413f423f47414247474345453d4442424245454045423f454547443f40484a464648
4147454544484447474448444948474b49484749484949464b4a47423f454a47494b3f45
474a42434042424141383d3f44433d3d4044424244424142423f3f3f3d3e44433d41423f
42383c3d423f3e3d383c3c3a393c3c3637393b3a3c3c363a363a39363736373c35333334
34363433323432302d2b2a2b29262724221b19110a040a
0b0c0c0f0c0909080d0a090b0c0c0c0c101110111215101a2126262827282a2a30302e2d
2d312f34323431373536373835383938373a373a383d3a383b3c3f423e3f403d3c414143
42423c3f42423f423f424244414c46414441454345453f46494344403f4243433d3f3f41
42434240413e3a3e3a3c3e3f3d4240414140413f3d3c3a3b4042423d3e3e3d3d4040403f
3c413e413f41423b41403c3c4244414a4542403f3c423e3c41424140434340474549484b
41414147434c444a464147484745434b454a4548424847464845404140424745454b423e
43483e3e4042413d3e3c3f4242423c3f3d433d413c3f3c413e3f3c343d423f423c3f3c41
37393a3b3b373c38393d33333634373535373836373333363434312e32343237302f302d
302a2c2b282c262322211f1c1512110f0b08050707050c

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%EndDocument

 endTexFig
 917 3203 a FH(\(a\))i(Computed.)1332 b(\(b\))30 b(Measured.)357
3430 y(Figure)g(5.13:)42 b FG(S)927 3444 y FB(y)968 3430
y FH(\()p FG(!)s FH(\))31 b(for)f(the)h(circuit)e(in)g(Fig.)41
b(5.12.)h(The)30 b(input)e(noise)i(PSD)g(is)f(set)i(to)g(-61.5)i(dB.)
245 3770 y
 15238157 8944863 0 0 18945146 18945146 startTexFig
 245 3770 a
%%BeginDocument: figs/pic05m.eps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	false def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0793644 0.871428 0.0123607 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(2)] .18254 0 0 2 0 Minner Mrotsboxa
[(4)] .34127 0 0 2 0 Minner Mrotsboxa
[(6)] .5 0 0 2 0 Minner Mrotsboxa
[(8)] .65872 0 0 2 0 Minner Mrotsboxa
[(10)] .81745 0 0 2 0 Minner Mrotsboxa
[(12)] .97618 0 0 2 0 Minner Mrotsboxa
[(Frequency in kHz)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-70)] -0.0125 .00618 1 0 0 Minner Mrotsboxa
[(-60)] -0.0125 .12979 1 0 0 Minner Mrotsboxa
[(-50)] -0.0125 .25339 1 0 0 Minner Mrotsboxa
[(-40)] -0.0125 .377 1 0 0 Minner Mrotsboxa
[(-30)] -0.0125 .50061 1 0 0 Minner Mrotsboxa
[(Noise PSD in dB)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
0 0 .5 r
.001 w
.02619 0 m
.02619 .61803 L
s
P
p
0 0 .5 r
.001 w
.12119 0 m
.12119 .61803 L
s
P
p
0 0 .5 r
.001 w
.21619 0 m
.21619 .61803 L
s
P
p
0 0 .5 r
.001 w
.31119 0 m
.31119 .61803 L
s
P
p
0 0 .5 r
.001 w
.40619 0 m
.40619 .61803 L
s
P
p
0 0 .5 r
.001 w
.50119 0 m
.50119 .61803 L
s
P
p
0 0 .5 r
.001 w
.59619 0 m
.59619 .61803 L
s
P
p
0 0 .5 r
.001 w
.69119 0 m
.69119 .61803 L
s
P
p
0 0 .5 r
.001 w
.78619 0 m
.78619 .61803 L
s
P
p
0 0 .5 r
.001 w
.88119 0 m
.88119 .61803 L
s
P
p
0 0 .5 r
.001 w
.97619 0 m
.97619 .61803 L
s
P
p
0 0 .5 r
.001 w
0 0 m
1 0 L
s
P
p
0 0 .5 r
.001 w
0 .0618 m
1 .0618 L
s
P
p
0 0 .5 r
.001 w
0 .12361 m
1 .12361 L
s
P
p
0 0 .5 r
.001 w
0 .18541 m
1 .18541 L
s
P
p
0 0 .5 r
.001 w
0 .24721 m
1 .24721 L
s
P
p
0 0 .5 r
.001 w
0 .30902 m
1 .30902 L
s
P
p
0 0 .5 r
.001 w
0 .37082 m
1 .37082 L
s
P
p
0 0 .5 r
.001 w
0 .43262 m
1 .43262 L
s
P
p
0 0 .5 r
.001 w
0 .49443 m
1 .49443 L
s
P
p
0 0 .5 r
.001 w
0 .55623 m
1 .55623 L
s
P
p
0 0 .5 r
.001 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.18254 0 m
.18254 .00625 L
s
P
[(2)] .18254 0 0 2 0 Minner Mrotshowa
p
.002 w
.34127 0 m
.34127 .00625 L
s
P
[(4)] .34127 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(6)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.65872 0 m
.65872 .00625 L
s
P
[(8)] .65872 0 0 2 0 Minner Mrotshowa
p
.002 w
.81745 0 m
.81745 .00625 L
s
P
[(10)] .81745 0 0 2 0 Minner Mrotshowa
p
.002 w
.97618 0 m
.97618 .00625 L
s
P
[(12)] .97618 0 0 2 0 Minner Mrotshowa
p
.001 w
.05556 0 m
.05556 .00375 L
s
P
p
.001 w
.0873 0 m
.0873 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.15079 0 m
.15079 .00375 L
s
P
p
.001 w
.21428 0 m
.21428 .00375 L
s
P
p
.001 w
.24603 0 m
.24603 .00375 L
s
P
p
.001 w
.27778 0 m
.27778 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.37301 0 m
.37301 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.4365 0 m
.4365 .00375 L
s
P
p
.001 w
.46825 0 m
.46825 .00375 L
s
P
p
.001 w
.53174 0 m
.53174 .00375 L
s
P
p
.001 w
.56349 0 m
.56349 .00375 L
s
P
p
.001 w
.59523 0 m
.59523 .00375 L
s
P
p
.001 w
.62698 0 m
.62698 .00375 L
s
P
p
.001 w
.69047 0 m
.69047 .00375 L
s
P
p
.001 w
.72222 0 m
.72222 .00375 L
s
P
p
.001 w
.75396 0 m
.75396 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.8492 0 m
.8492 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.91269 0 m
.91269 .00375 L
s
P
p
.001 w
.94444 0 m
.94444 .00375 L
s
P
[(Frequency in kHz)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .00618 m
.00625 .00618 L
s
P
[(-70)] -0.0125 .00618 1 0 0 Minner Mrotshowa
p
.002 w
0 .12979 m
.00625 .12979 L
s
P
[(-60)] -0.0125 .12979 1 0 0 Minner Mrotshowa
p
.002 w
0 .25339 m
.00625 .25339 L
s
P
[(-50)] -0.0125 .25339 1 0 0 Minner Mrotshowa
p
.002 w
0 .377 m
.00625 .377 L
s
P
[(-40)] -0.0125 .377 1 0 0 Minner Mrotshowa
p
.002 w
0 .50061 m
.00625 .50061 L
s
P
[(-30)] -0.0125 .50061 1 0 0 Minner Mrotshowa
p
.001 w
0 .0309 m
.00375 .0309 L
s
P
p
.001 w
0 .05562 m
.00375 .05562 L
s
P
p
.001 w
0 .08034 m
.00375 .08034 L
s
P
p
.001 w
0 .10507 m
.00375 .10507 L
s
P
p
.001 w
0 .15451 m
.00375 .15451 L
s
P
p
.001 w
0 .17923 m
.00375 .17923 L
s
P
p
.001 w
0 .20395 m
.00375 .20395 L
s
P
p
.001 w
0 .22867 m
.00375 .22867 L
s
P
p
.001 w
0 .27812 m
.00375 .27812 L
s
P
p
.001 w
0 .30284 m
.00375 .30284 L
s
P
p
.001 w
0 .32756 m
.00375 .32756 L
s
P
p
.001 w
0 .35228 m
.00375 .35228 L
s
P
p
.001 w
0 .40172 m
.00375 .40172 L
s
P
p
.001 w
0 .42644 m
.00375 .42644 L
s
P
p
.001 w
0 .45116 m
.00375 .45116 L
s
P
p
.001 w
0 .47589 m
.00375 .47589 L
s
P
p
.001 w
0 .52533 m
.00375 .52533 L
s
P
p
.001 w
0 .55005 m
.00375 .55005 L
s
P
p
.001 w
0 .57477 m
.00375 .57477 L
s
P
p
.001 w
0 .59949 m
.00375 .59949 L
s
P
[(Noise PSD in dB)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.18254 .61178 m
.18254 .61803 L
s
P
p
.002 w
.34127 .61178 m
.34127 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.65872 .61178 m
.65872 .61803 L
s
P
p
.002 w
.81745 .61178 m
.81745 .61803 L
s
P
p
.002 w
.97618 .61178 m
.97618 .61803 L
s
P
p
.001 w
.05556 .61428 m
.05556 .61803 L
s
P
p
.001 w
.0873 .61428 m
.0873 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.15079 .61428 m
.15079 .61803 L
s
P
p
.001 w
.21428 .61428 m
.21428 .61803 L
s
P
p
.001 w
.24603 .61428 m
.24603 .61803 L
s
P
p
.001 w
.27778 .61428 m
.27778 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.37301 .61428 m
.37301 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.4365 .61428 m
.4365 .61803 L
s
P
p
.001 w
.46825 .61428 m
.46825 .61803 L
s
P
p
.001 w
.53174 .61428 m
.53174 .61803 L
s
P
p
.001 w
.56349 .61428 m
.56349 .61803 L
s
P
p
.001 w
.59523 .61428 m
.59523 .61803 L
s
P
p
.001 w
.62698 .61428 m
.62698 .61803 L
s
P
p
.001 w
.69047 .61428 m
.69047 .61803 L
s
P
p
.001 w
.72222 .61428 m
.72222 .61803 L
s
P
p
.001 w
.75396 .61428 m
.75396 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.8492 .61428 m
.8492 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.91269 .61428 m
.91269 .61803 L
s
P
p
.001 w
.94444 .61428 m
.94444 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .00618 m
1 .00618 L
s
P
p
.002 w
.99375 .12979 m
1 .12979 L
s
P
p
.002 w
.99375 .25339 m
1 .25339 L
s
P
p
.002 w
.99375 .377 m
1 .377 L
s
P
p
.002 w
.99375 .50061 m
1 .50061 L
s
P
p
.001 w
.99625 .0309 m
1 .0309 L
s
P
p
.001 w
.99625 .05562 m
1 .05562 L
s
P
p
.001 w
.99625 .08034 m
1 .08034 L
s
P
p
.001 w
.99625 .10507 m
1 .10507 L
s
P
p
.001 w
.99625 .15451 m
1 .15451 L
s
P
p
.001 w
.99625 .17923 m
1 .17923 L
s
P
p
.001 w
.99625 .20395 m
1 .20395 L
s
P
p
.001 w
.99625 .22867 m
1 .22867 L
s
P
p
.001 w
.99625 .27812 m
1 .27812 L
s
P
p
.001 w
.99625 .30284 m
1 .30284 L
s
P
p
.001 w
.99625 .32756 m
1 .32756 L
s
P
p
.001 w
.99625 .35228 m
1 .35228 L
s
P
p
.001 w
.99625 .40172 m
1 .40172 L
s
P
p
.001 w
.99625 .42644 m
1 .42644 L
s
P
p
.001 w
.99625 .45116 m
1 .45116 L
s
P
p
.001 w
.99625 .47589 m
1 .47589 L
s
P
p
.001 w
.99625 .52533 m
1 .52533 L
s
P
p
.001 w
.99625 .55005 m
1 .55005 L
s
P
p
.001 w
.99625 .57477 m
1 .57477 L
s
P
p
.001 w
.99625 .59949 m
1 .59949 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.004 w
.02619 .45562 m
.02699 .44012 L
.02778 .42811 L
.02938 .41001 L
.03097 .3965 L
.03257 .38571 L
.03575 .36904 L
.03894 .35635 L
.04532 .33747 L
.05169 .32353 L
.05807 .31248 L
.06445 .30332 L
.07082 .29549 L
.0772 .28867 L
.08357 .28261 L
.08995 .27717 L
.09632 .27223 L
.1027 .26771 L
.10908 .26353 L
.11545 .25966 L
.12183 .25605 L
.1282 .25267 L
.13458 .24949 L
.14096 .24648 L
.14733 .24364 L
.15371 .24094 L
.16008 .23836 L
.16646 .23591 L
.17283 .23356 L
.17921 .23131 L
.18559 .22915 L
.19196 .22708 L
.19834 .22508 L
.20471 .22315 L
.21109 .2213 L
.21747 .2195 L
.22384 .21776 L
.23022 .21607 L
.23659 .21444 L
.24297 .21286 L
.24934 .21132 L
.25572 .20982 L
.2621 .20836 L
.26847 .20695 L
.27485 .20557 L
.28122 .20422 L
.2876 .20291 L
.29398 .20162 L
.30035 .20037 L
.30673 .19915 L
Mistroke
.3131 .19795 L
.31948 .19678 L
.32585 .19564 L
.33223 .19452 L
.33861 .19342 L
.34498 .19234 L
.35136 .19129 L
.35773 .19025 L
.36411 .18924 L
.37049 .18824 L
.37686 .18726 L
.38324 .1863 L
.38961 .18536 L
.39599 .18443 L
.40236 .18352 L
.40874 .18262 L
.41512 .18174 L
.42149 .18087 L
.42787 .18002 L
.43424 .17918 L
.44062 .17835 L
.447 .17753 L
.45337 .17673 L
.45975 .17594 L
.46612 .17516 L
.4725 .17439 L
.47888 .17363 L
.48525 .17289 L
.49163 .17215 L
.498 .17142 L
.50438 .17071 L
.51075 .17 L
.51713 .1693 L
.52351 .16861 L
.52988 .16793 L
.53626 .16726 L
.54263 .1666 L
.54901 .16594 L
.55539 .16529 L
.56176 .16465 L
.56814 .16402 L
.57451 .16339 L
.58089 .16278 L
.58726 .16217 L
.59364 .16156 L
.60002 .16096 L
.60639 .16037 L
.61277 .15979 L
.61914 .15921 L
.62552 .15864 L
Mistroke
.6319 .15807 L
.63827 .15751 L
.64465 .15696 L
.65102 .15641 L
.6574 .15587 L
.66377 .15533 L
.67015 .1548 L
.67653 .15427 L
.6829 .15375 L
.68928 .15323 L
.69565 .15272 L
.70203 .15221 L
.70841 .15171 L
.71478 .15121 L
.72116 .15072 L
.72753 .15023 L
.73391 .14975 L
.74028 .14927 L
.74666 .14879 L
.75304 .14832 L
.75941 .14785 L
.76579 .14739 L
.77216 .14693 L
.77854 .14648 L
.78492 .14602 L
.79129 .14558 L
.79767 .14513 L
.80404 .14469 L
.81042 .14426 L
.81679 .14382 L
.82317 .14339 L
.82955 .14297 L
.83592 .14254 L
.8423 .14212 L
.84867 .14171 L
.85505 .14129 L
.86143 .14088 L
.8678 .14048 L
.87418 .14007 L
.88055 .13967 L
.88693 .13927 L
.8933 .13888 L
.89968 .13848 L
.90606 .1381 L
.91243 .13771 L
.91881 .13733 L
.92518 .13694 L
.93156 .13657 L
.93794 .13619 L
.94431 .13582 L
Mistroke
.95069 .13545 L
.95706 .13508 L
.96344 .13471 L
.96981 .13435 L
.97619 .13399 L
Mfstroke
P
P
p
p
.004 w
.02619 .57488 m
.02699 .55971 L
.02778 .54798 L
.02938 .5303 L
.03097 .51702 L
.03257 .50629 L
.03894 .47557 L
.04532 .45351 L
.05169 .43539 L
.05807 .4198 L
.06445 .40616 L
.07082 .39415 L
.0772 .38353 L
.08357 .37411 L
.08995 .36572 L
.09632 .35821 L
.1027 .35147 L
.10908 .34539 L
.11545 .33987 L
.12183 .33483 L
.1282 .33022 L
.13458 .32597 L
.14096 .32202 L
.14733 .31835 L
.15371 .31492 L
.16008 .31168 L
.16646 .30863 L
.17283 .30572 L
.17921 .30294 L
.18559 .30028 L
.19196 .29771 L
.19834 .29523 L
.20471 .29281 L
.21109 .29045 L
.21747 .28813 L
.22384 .28585 L
.23022 .28359 L
.23659 .28134 L
.24297 .27909 L
.24934 .27682 L
.25572 .27452 L
.2621 .27216 L
.26847 .26973 L
.27485 .26719 L
.28122 .2645 L
.2876 .2616 L
.29398 .2584 L
.30035 .25479 L
.30673 .25064 L
.3131 .24577 L
Mistroke
.31948 .24004 L
.32585 .23345 L
.33223 .22641 L
.33542 .22302 L
.33861 .21993 L
.3394 .21923 L
.3402 .21856 L
.3406 .21824 L
.3408 .21808 L
.341 .21792 L
.3412 .21777 L
.3414 .21773 L
.34179 .21777 L
.34259 .21788 L
.34339 .21802 L
.34498 .21839 L
.34817 .21945 L
.35136 .22074 L
.35773 .22344 L
.36092 .22461 L
.36411 .22557 L
.3657 .22597 L
.3673 .22631 L
.36889 .22659 L
.37049 .22681 L
.37128 .22691 L
.37208 .22698 L
.37288 .22705 L
.37367 .2271 L
.37407 .22712 L
.37447 .22714 L
.37487 .22716 L
.37527 .22717 L
.37567 .22718 L
.37587 .22719 L
.37606 .22719 L
.37626 .22719 L
.37646 .22719 L
.37666 .22719 L
.37686 .22719 L
.37706 .22719 L
.37726 .22719 L
.37746 .22719 L
.37766 .22719 L
.37806 .22718 L
.37846 .22717 L
.37925 .22715 L
.38005 .22711 L
.38164 .22701 L
.38324 .22687 L
Mistroke
.38643 .22649 L
.38961 .22599 L
.39599 .22471 L
.40236 .22311 L
.40874 .22128 L
.41512 .21926 L
.42149 .21709 L
.42787 .2148 L
.43424 .21241 L
.44062 .20992 L
.447 .20736 L
.45337 .20472 L
.45975 .20202 L
.46612 .19925 L
.4725 .19643 L
.47888 .19354 L
.48525 .1906 L
.49163 .1876 L
.498 .18455 L
.50438 .18145 L
.51075 .17831 L
.51713 .17511 L
.52351 .17187 L
.52988 .16859 L
.53626 .16527 L
.54263 .16191 L
.54901 .15853 L
.55539 .15511 L
.56176 .15168 L
.56814 .14822 L
.57451 .14474 L
.58089 .14124 L
.58726 .1377 L
.59364 .1341 L
.60002 .13039 L
.60639 .12647 L
.61277 .12219 L
.61914 .11726 L
.62552 .1112 L
.62871 .10749 L
.6319 .10313 L
.63508 .0979 L
.63827 .09151 L
.64146 .08352 L
.64465 .07329 L
.64783 .05975 L
.64943 .05115 L
.65102 .04079 L
.65262 .0279 L
.65341 .0201 L
Mistroke
.65421 .01104 L
.65501 .00022 L
Mfstroke
.65502 0 m
.65501 .00022 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
.66257 0 m
.66377 .01558 L
s
.66377 .01558 m
.66537 .03033 L
.66696 .04172 L
.67015 .05846 L
.67334 .07026 L
.67653 .07898 L
.67971 .08558 L
.6829 .09067 L
.68609 .09466 L
.68928 .09781 L
.69247 .10035 L
.69565 .10241 L
.70203 .10557 L
.70841 .10791 L
.71478 .10978 L
.72116 .11139 L
.72753 .11285 L
.73391 .11422 L
.74028 .11555 L
.74666 .11684 L
.75304 .11811 L
.75941 .11934 L
.76579 .12055 L
.77216 .12173 L
.77854 .12286 L
.78492 .12396 L
.79129 .12501 L
.79767 .12601 L
.80404 .12695 L
.81042 .12784 L
.81679 .12866 L
.82317 .12943 L
.82955 .13013 L
.83592 .13076 L
.8423 .13133 L
.84867 .13182 L
.85505 .13223 L
.86143 .13257 L
.86461 .13271 L
.8678 .13283 L
.87099 .13292 L
.87258 .13296 L
.87418 .13299 L
.87577 .13302 L
.87657 .13303 L
.87736 .13304 L
.87816 .13305 L
.87896 .13306 L
.87936 .13306 L
.87976 .13306 L
Mistroke
.88015 .13306 L
.88055 .13307 L
.88095 .13307 L
.88115 .13307 L
.88135 .13307 L
.88155 .13307 L
.88175 .13307 L
.88195 .13307 L
.88215 .13307 L
.88235 .13307 L
.88255 .13307 L
.88274 .13307 L
.88294 .13307 L
.88334 .13306 L
.88374 .13306 L
.88454 .13306 L
.88533 .13305 L
.88693 .13303 L
.88852 .133 L
.89012 .13297 L
.8933 .13288 L
.89649 .13275 L
.89968 .13259 L
.90287 .13239 L
.90606 .13215 L
.91243 .13151 L
.91881 .13063 L
.92518 .12945 L
.93156 .12788 L
.93794 .1258 L
.94431 .12304 L
.95069 .11946 L
.95706 .11493 L
.96344 .10961 L
.96981 .10415 L
.97619 .09977 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
%%EndDocument

 endTexFig
 2275 3585 a
 13257874 10404916 131563 36048404 20787036 52164935 startTexFig
 2275 3585 a
%%BeginDocument: figs/pic05.ps


% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 314 string def

% define space for color conversions
/grays 314 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
2 548 translate

% size of image (on paper, in 1/72inch coords)
313.99200 245.01600 scale

314 245 8			% dimensions of data
[314 0 0 -245 0 245]		% mapping matrix
{currentfile pix readhexstring pop}
image

010606090909050a060a05050a0a01050a05050a0a0509050609090e090409010505050a
04050507070508050503050703070a0c0a0509050f05070b0a0a020a0a060a0a0a0a0f02
0e020b0601050a010105050a0a0a0a0d050913121010101c1516121919191e1d1c141918
1d1c1e201c1f1b1c1a22201d23212720242227272b252d28302b2b2b322c332b322f2928
30302d312c2b382f2d2b2b2f31302b2e32302d2f2b322b2c2b2933342e2d31333834332f
33383433332f31383133302e29333131342c2f312f32322a312a2d292927262c2a271e29
281f211e1d1e1e1c221a241d171e1917111819160f13101712140c0f0f0c0a0a0b0d0706
050405050805040301020200000001010100010101010101000104020000000200000202
0100010103010301000300000101010100000101050000040401
06090a060606060a0a0a0a0a0a0f050f050a0a0a0a0a0a0905060607060506080d09050a
02080805080b0705050505080508080f0a050d050f070e10110f0b0f0e0e0d0e0e0d1111
0d1818171b1a1a170f161f201d21252717242b2b2b2a24302d31332b2c2e33362f262e29
3032313030342e312f332f3436353b323439333935343c363637393c363940363c392e3b
323b3f393132363f303434333b403a39363c3f3c383c3b3f403b3f403a3e3f43403e4346
47483f444042464040444044403b3e43493b3645323f3f3d3f3b3c383b323d3f3b393838
3131322f3031362d39363b322c33272c2c2f342a252a28312b2d232b2823222027252021
1e191a1e1a231c14141814141a13161913150e0e11090d09010809010000010003040403
0400040303020303000101010100000702000004040100000000
090609090a0a090a0f0f0a0a0f0501050a0a05050505060a050d051009090d060b0a050a
0b0a0d0b0f120b0d0d0d100e11121012100e140f13111b1a251b211f241f1d2123212024
23262f2b2e352b322e2b2a2e252a342b2c3137384032363c3c34413737393c3739363532
3a39383c373a37403c3a3a3f3c3e3c3c3f3a4139373f423e3d473d413f393c41443f4147
43413c4b4044403c343f3f423e3f3e433d4442444345464c4b4949403e40474943494848
4947465045464a4f4249474a46464646423d444741404a4a4043394648473f3d39403e3d
3c3838373a3e4238353d3c3c383832393d393c323b32393b3335322d34352f312e30312d
2f2f2c212b2e2626202a29252a222e2a211a1d19171c161e0d0a0e0f0c040c080505080b
0b0b1012160d0d0d090508030303030704010101010101010101
060a0707090b010a0f0a0a0b10140f050a0a050f12120e1811161919161a1e1d1313171d
1b1716161e1d181d1d161e1d20262020212025231f23292c2c212c2a37272c312e332c2f
2b2b3532352f39393c2f3b383a333b383d3a3e3f464240413f3c3f3c3e363c3e3f3f3c39
3e3d3a3e3e3f3e45443d42414343423d4240403b4240443b454747414140464a47414144
413d454340414646434a41474b4445454547484b49484a494e4a4a41423e48464d514645
49474e4e4a484a51464e474a464442454745484a4a474444444a434a4d42413f4441403f
42403d403d3843403c433b403d363d3c3f3f36373d393f3a35353e2f3934393331343234
2f31313033252b2b2f2e322b2f2f2b2e25282924242923281b1415130f0d0f0a0c051012
191d1f1f221919161516130b0b090a0201020101010001010100
0a0a0e0e060d020b0b0b0710141a1e1a1e1f2823272c26242b232d2b2128272d25252029
27252a232b2524252a22272a29292a2d302a2e303030303236302f383132353a3c3c3433
33303f393a36353c403f39323c393c393d403f3f3e433f42423b43463f383a404040423d
40423b3d42424047433c3f41454444443f4140434a40494241454741414a41463d44414c
404444494141424743484549444d474b494b45474e454c4c4d494b4745464b454d504c4c
4c4b4f5151464b4f4d4b47494b45484b4d4a4c4d474d4a4a4a4a4d4d4a444446474d483f
403f43483e3e423d3f4742413c3b433c4041383c3c3b4038373a3c3a3835393b403c3c3b
333c3836342b3430322b2b2f2f2b2f2a2f292a2b252a25261e20171c12121118120f1b16
1722232226241e221e271c1a1a161a120a090401010101000100
0a0a0a0a0c080c121b1c1b23252f26322f2a222b2b2c2b2e2f282f323032352a303a3031
2e31322e33312e29312f2b3332303535372f373237323535413a33383a3b373e3d3b403d
363a4040403f3c3d44403f3c3f3f40453f3d404140454543424344493e3f3c4041414b3f
444247404444434a433e414141404447424744484b434948424c494a4e4c4e3f474f3f41
494c4d40434146404345454e4a4d47464c514e484d4c4b4e49464f4f4650535052545151
4e535254564b4f504b4e4946464c4d544f50454a47414d44474a4d504d47444d4e4d423e
434a4e4a4c403b3f41423f414448514541414042423d43503c42454c393c3b3b3c3a3936
353b323a302d31342f3b2f322f2f2b2e2f2f2a2b302a25251e2520191c1e1e1e16171920
1a262a222527252924242222251e23241f161108060101010401
0a0a0a0c1617192a2b2a27313233353535392f32353734383a3734353032333837383831
2c373a33373c3830363a2e393e383a3634393e3739353a3b36383f3f3c3a4139443e4244
4044414a41404443443f403f3d3f414544464c494a4d4b4847454444423f423f45414c43
49484e48494748493b4848464143454548454d44464846434446414a4542484d474a5147
4a4d474944434741464e425a4f524c4b51666c6550576c6c694e51664e54716158747773
6d596b737158525453564f504b534f51676c514e4a41474f3d4d4e56734c42778e8d524a
4a69926d543b3f454341404a5b7d7f5f44423c483c464a754244546d3e3e433f3d413d3a
3636373f3a353f2f3632302a35252f2f322f2a2b2c312b2a292a271f1b17221e141d1c25
19292b2324232b2a23242324261f252225252116130301010101
0a0c0e132425262f352c322b363b39322b35353e403f3e3f4642433f373a3a393f3a393b
353d3d373f4a4f493f3f415751463b383b3e413f434a5856525654403d3b3f3b423f4542
4f4d4b545c5e4341444c474341444d4449474d484b494a484c44464a4741464845464c4c
4d4d504f4d474f4f464b45444646484c4442464d504d4e4a46494b47484c4d4f504b4d4c
4f4d4d4b484b4446514966905a825a4e5f94938a606f928d886c5a85585f886558a49591
8461989c9b80665351545156555054639f9350534a4f4f56494d5d8aa1515b8e7d7b835f
518779897d4e434348464b628685758644423e463d4158894b44577a4149625b6556403d
3a3a3c3f3b393f313f333939323232352f2b2b3134322b2b2b2e2a22201b28211b211e20
1e25252423272a2a272525272525252026272315170e01020401
0b171f202a2a2b303932353d636d6a4f3c3a73797e745464888882713f34363c3e413937
3b3e3f3a477680765348677f755f4042443f3f4044648c8b87887747423b403d40453a49
676b5a7ba5a15f534d494549474e4a424c4c4e4d4c4d4d494a4b454c4e494b4f46464b4e
4a4d50504d454b50494c48484a444c4d4c453f51504e4e4d50534d4d4a454d4e41444d51
514a504b504a474d525176af82a2645c8176727d78738175748e6591667d735957a86c6b
605fa1717aa480525450505457586d8e60534d4b4d4d534b54538e95a1525963545d9d67
506a5c908e584a4a4a494e6e9a7c69994242404440455b8e6a63707b4a57878b957d3f36
3f423b3c35363d40393b39353c322b2b32352f322c322a2a2a2a29252723292720231e23
27262627282a2a2a2724272a262524232824211e251d05040101
122626282e2a282c38303b4c907e7a6557478e706c5e4266756560534237383c403e3e3a
403c3b415d6f6f6d765485796f7a4c4145464344496e9f8a7d755d4744403e414a4a414a
6d6c60796c5a8c50485e4f505e55564d4d484b4f4d4e4a4b4d4b4c4e4d4a4e504e484a4e
494f4d4c4f494953494b49484b4748484b4d4f4b4d47494e4d4f5052514f4e5850454f53
494c424a51534d49495278aa94996362917774818973857d7e88669d88885a5462ab7b73
5c63a4858a99755554534f505262989a6f6154504f444f4f4f6c85779e57565977947954
4f588b876a574d505652505a7b8c8a9b4746484144485e9783868c77484a6171825a403c
3e483a3c3a3e3b3b3835383b38333e2f333835372b2c2e292b2b26282625232625232123
292a2b2d282d2e2b272729292622252a26222325262010040101
2028262e2a2e353434353f4d7a4c4a82694d844a4944456a5d464543413f3f3e413f4550
5553464554504d597f5c8c5b53884e434a4246464e6a8f878a815b47424741494c4b4d63
786c5c7a746a8a595c884d4f884e504f4c4a4d4e4c4a524f4d514d4d4e4a514d4e4c494e
4d504f4e504d4d514d4d494b4a4b454b4e4e494c4b494f4e51504d514b4e434e5151504e
494c514e4d4e4f4f4f5677a7978c6765979c989b8a78a0a1996665a79284585564b19982
5d64a5ae9e6f5959555a56535164a1b99d7f5954514c4a4b548d99a7b1794c55717a9566
4e59708d805b4e738d66544d5d6c7f93474b4e40474d5b9267656e794b4b6a847d4b4539
3e43403d3b39333636343334353934333b3f353634332c3027303126282322262c282b27
292b2a31272b2b2b2b29282d2a262b2c28242525232515010301
252b2b2b30353535303339507f7172775b5390857852476d90836b434543434542434f7d
87805b454e595f6e5f568d5752875543494f5e52525866666b7c86464748434b524a609b
9d6f5d7da39a665a5b8f585992524b4c50484b4d4c4d5550524e4e4c4a4b52494b524b4f
4f555552514f4e534d4c4c4b4f4d4b4b4c54504b4f4f514b5554544f514d515150554e42
464a4e514f4a4e4b4d5475a471816967927a707b85779295905f65a38289665863a66a60
5c639d87846556575655545250689f98669d59504a4a4f5752788d8da8695a745b64a069
56855f95905651829f68504d4f5e796e484847434552598d514b5e754f57958f7262423f
45423f37373f3a3937343b353339393b3533323236383237302b302b292728282b2e2f2b
2d282d2d302f282b2a2a252c2a29282c26252228272719010101
2929332f302f3636363a42499182874d4953886b5f4a4d6d776354473f403f3d44474861
69685144588185784c588f5b56865746516e8767525264555c778f4d464a4e4d4f608c63
76755d777067935d60876c62924f47545350494a4e51574e4e4d4e4e4b4b554c54584c4e
5252575454505152524c52514e4b4f524d5053514d4f4f4e56554d4f534b4d4d4f544f50
504d534f514f4f4e505c7aa2617f6864886358698673796e807b64986e7a7f6865a8807b
7465966e94826454525b534f55628d93819757514f514d4f4f525d6d9c595f8f9a997960
5582968c695050656d584e525a7e7a5148464343444857794b465964536292908d834345
4448453f3f3b3c3e373c393c3c393b353333373337323035302f332b2b2a2e2d2e2c2b29
2b28292b303328282d2a252d2a29262a2829292e28231e050104
2a2c34302d30393b38403b447b646f5f464d814f494d516969494e424142403f413f4142
4a494549648780715c608e6e6e85564958768565525f80756f81874f4e484e494b5f896c
777b5d777876875a587f8d7e6e504d5451524f4e4f4d554b4a4e474c4f4e515155504a4d
524f515255505254544e504d51524f4e4e4c50524f4f5053524f51525154524d4b4e4f51
5050544e50514e4a516075975c7c5d607e5955657969685d6c79607f5b657e6960979d96
8568815f728c74545a5b5154505266849668545455575c5350545b6272515371756f5f52
515b7462564b504c524e4a51586b5d4b4a49484742434b5446424f494c555d5959504a47
3f403f3d3c3a3d3c3f393c3c3c393e353435374039373234302c31302b312c2f2c2e2d2f
2f3028272b2e28282c2a272b25292928272b2a2c271f200e0102
2d2c323035372e3c3e393f577d4f536c6a53818a8e846a636a40434143433d4042474548
4b49494b678e8a85785d7a8584754f50525c605452586d7f8d87674f4b524a494f4e629f
9c705a79a79e554f515e7383574c514d4f4d4b4949504f4e4f52485052524d534f4f4f50
53524f4f54534e55524e504950564f4f504e4e535456504d514854524f51564f4d4b4857
4d50554f51514d4a53585863565f54565e51555b5e5d5d59585b565c5359635657646565
57595e5c5e5b5b575959585751545751544f5257565451505655514f5348565958595656
53555b56564e524e554e4a5150554d4c484b515243464a454648484a4b4d4c474c554c55
514f49473f4148413f403f363c3c3f3a34393c333331383833352f302e322b2e2a313234
2d2f2a2c282b2d2b2a2a2a27242629272a2a2b2c251f21130106
292f3034353a3438393c4049634a4c64604b676f6e68524c45414541424a434642444549
444444465573756c66515b736b5c4d4f4a4a494c4d4d535d62584c4c494f4b4d4e49595d
5a54535550564a4c525a5f595247484a474d4f4f4f514f5050554f57504c4f5453555456
5553525452514c53534e514d5055524f504e4e565257594e545454505454545358515058
545454514d4f524754525052545556545051535054595752555451504e51555354515359
535658585556595959555355545755525551534e514d514f4e55515054545d6a6c6c695a
4f5b707971554f5356504d525e7a78524d4d5c76464a4b464a4c484a4a47494750715884
82827154424041423f3f40403f4040393a353333363a37303438332f2f32302f2e323230
2a332d2d2a2d2e2d2d2e2d2b2a272c29312d2a28282622170208
292d2f333032333338393d3f414543474746474b494447474d4549494248484b4a434345
474a46434d4c4d4b4d485453545451514f4a4e4e4e494d4e4e524e4c4e514d484e554e51
4e504e4f4e5752524c4751565255514d4d4e51525b5f5b5652565e6962535463585a5e58
58596a726853555e6f6f655a5057554f52596e716d6e5b53545751535158616a6b5c5454
544e4f4e4e50574e695a607f8d7c52504d494b495056524f53555257535458545357565b
5a595659575956555655525052565354545451545659514f5155555051577baca89d8b62
596b918971555354514f5263838884764f5571994e4e4a4a494744484846484e578f6099
867c807b4a464a4647423e3c3c393c393937342e3c3532394038342f2f3732312f322d2d
2b302d2c2b31312a2c2f2e2e2a252b2d2f2e29292c211e150401
312d332d343638343b3c44435257585858434140484543474648505a49556d6d63474143
4e505f495c79776d514d61777f6a54696b54596963484c4b4b4e4f4a514f4e4d52574e4d
4b504f5253484f4c464f53525452525552535a80a29f987d63648b96896762896362785c
5e6c888f886660789b92795c52524e52536199a0a6a3594e514b504c536289a9a685654d
4b4f545151525b5b855e759a8b806253534e4e5055585252525757575656575653565558
575853575a5756565452565453515252565356534f595b595b504f56555a758f837b675c
62857263555451565055567495796e8f586f9198514f4e4f4a4742454948565f67926894
70648481566a515e7f71423c3d3e3c3d3d363434393b3d393d393a343332333432333033
2f3432302e3033302e2e2d312a292a2a2928282a27261e140101
32313336343839393f4148599297928f7c4d45414a4842454a4e62785670907a6e4e4848
495d72526991847c5c516287976f5c86895a6a90794d4f4d4b4b4c50554e5150544d4f4d
51524c504c4c53505050524b50504e4f5451618aa2827a91836b927a88886ca576698965
63837b787d6f607d8a735c5350514f534f58646174895d51514f55555b8b9e746f968e55
545056544e4f56698a60729c6f7c6f606b60576376575352565757525453555452555656
54565452595758555455555752525455555051505254555255596767686677a8a2937861
6f9e806b545453585655556e878782795b708391514b4a4d4e4d44464d567b82879662a2
968b846c567959638b7245443a4043403c3b3a38373b3635363134373036323134383331
3735322f3031373732312e2e2e2c2e2a28282b2c2b271f1b0301
2c343731363a31353a3f4a5c8c77615f56463c3e464345444c526a8057718f5f6a554646
507367556783676e7752546b85585c898a616c917e53554f504f484e5351565158544d4c
51504f50524f5554595052544b5053534f505b87a27b7795896d94788c9a72a881788765
6e8c605a6461647a8b70544d5354534f53555459738458515552514f63899d716c9a9456
53505350525269989c6475a29c9163657a66596e8e584f50545456525352515553575959
555652505b595757575956565a565959555758524d5658505e92aea9a17c5f69696f916f
71a99283755d5a717f64566b8f8e847c5759668f534a47474b4c49494d6686828792659c
8274817c5c795f678a71483f3d3c413b3e3d3c34353a3b3c343936343935363134353936
3e35383534353b332f33312e2f34302a2a2b2c282b27221c0801
2b3135343c403d3636424554909992805e4a3e444443434d5d7485885771927a7f534a45
5977545266805a668850526786585b79877d7e8a70534f4d4f56505253535251564c4e49
5251535551504e4e4d545151575351515454598ab2a89e896a72ab9aa59e72a78d8d8f65
718a625e6d69667ea386595058524e4d5057627c895c5952545f675b5f859b716e958e51
51545658596b93929464779a85836c6780685d708d545052505056565254555759595b56
575859575b5a565358585957565755595451505256545257585d635e5f5659635c669d75
7099749089635f899f705b769b7f728e53566a9459504744474b4346556d7865708d6792
6b6583825e6589876d4e3d413c363a3d4043403a3a3e3d3e3538343636383f3338323439
3a373935333235313233313131312f2d29292a2f2a2a26230801
32352e363a3f3a3d3e3d3f44514f5970835743464340485a888e8c875b6f9280775b4957
72625155648056648b4f536a855757627e9e997e56514d4b4d4d4c5055514e51554f5256
585a554f51575550575553575651544b4d52628ba9968f716073987b8e9874a2859da06a
718b666e877c657a8a6a5c56565354535058729f805656525e8da170628398726e9a8f4d
494c535364859c74886672916c7a7061788c79846d5352524e5056575656585659595d58
565959565756565457554f5151585654585555575556545a5659595854566c827a7f916a
69908f92755a5b7781625568888f897757728fa2755148464a4a43434f64818989866495
8e8779594e54726c4c3f3f403b393a3e433f3c413b3f3e3c3c3d353534363a3437363739
3735362f31322f333534342f2f3030312c2a2a2a2a2c2b1f0901
303835383c3a38403e3e3c4455565576855c45494c45485d815e71815a6c89666c5e5264
74534e5565805f697751556c845c545b718887694f4b4c504e4e51505050535251515257
5958514f51564d54514c51535752545253565f8ba28391866a728a637f947399709a9d6d
6c887e889583647a8c786d5a53505453515b78a17c5654535f85956c637d958283968150
49494b56617b9398986674a09a90625b668a978457555351535352565a57545157585959
575857535857565757515152525557575754555753504e5859555750505768949e8d6559
617a8c715d5555595c504d58667a7b5e566b8483724f4742494d49464b4f6f7b7567586c
6a685447484d4d4b4840403c3d403c3e43403e423f3d3b3e423d393a3a3a3f35353a3636
383a35333634303033333331302f34312f2e2a262b26251b0f01
333736393d3c383e424142547f6e66777b55444647474b5a7e7e8b84526c8f7f77525767
5f524c4f6c96877a564f628293705254596870534d5054544f5454544e51565453535351
5558565651535053524e55545554534f565464879570758e7e6a7a5b788b6d8a63798266
6378909392765f799891815e50575453555b7193735351545556515252607c9f997e5851
4e484c4e5a5c72877e5f6f81806e55555a6a74645151515458544f5457585657565a5559
5959555455505858535653565555554f525350515458524e565453585954566063605a54
54576058515155534d494e565656574f4d535756504c46474b4f4b4d5147484f5148484d
4c4a4c484a4b424145463d3f3f403e423d413f3f3c3b3a3c3e3f3a3c3d393837353a3433
353936373436323233373230303035362e2d2c2c2d29221c1002
3132333641413d3d3d41464960828d73594d44464b454352737c7b7152637775654a525d
53494d4b617e7b6c4a505f797d704f4f535c5f52524e4f4d4f4e4f525155534f56565351
585a5e565856545a565954555252534e4c555660635b5b63615a5e56626a5e6a595f685c
5c627375705c5a636f6a625852544f555b5b575854514e4a4c4f4b4e50565a5b5c5b5553
4f4f4c4b5456565d5e59565c5d59565455585954504f4c505554505356565959575b5759
5658575455515656565855525155555552524e53545a5a51555558564f50504e4f545257
4f4f514e4e4e4c4f524e5251544f4d464852534f4e48494c4c4e4a4d4a47434949464947
44434648494c4342434a3f41413e363a3d3c383c3e4038353a3c3c3b403b38393a373435
37373434333633353735342e2c2d313530302f2d2b2725211504
313334363f3a3a413e3c42424c4e44444342474a4c4f4b4a4b4d51514a5052514d4c4c4d
4d464c4b4e5151504c514f5052524d4f4c514e4b4d504b4c51514e554f53575558575454
56525152585754515555595752515451525155534e525556545356575958565656595957
58555759585859585955555556525157565451565658514d4d515152545359595a52514a
4d51504e4e52525056575355525551505554575253514f53545552565756575458575757
56565752565553525553535855515152555151565952535255575a5650525454514c5152
4b4b4f504e494c514d4b4f4e514e4b47474e5045433e404440474742413d363a393d403d
353e3c393f40353c3b3c3c42393c3b3a39363538393b3837342e313131312c2e2b2a2a2d
2d2a282a292b2927262222202023312f2d2c31302c2729241503
322f2d3c3e3a3a3c4040434849403f494d424a4d4c4c45434c4d4d4848484b44484d4d49
45484d4c4849464a494f4a434b4c4f4e50504d4b4b504e50555552535154555455545458
5455545353565350535653555b5650505653505254565953515354575353585656545353
5352514e4c525353504a484c504e4c4e544b474e4e4e514d4a4e524f4d4e4e5453515858
544d53504a454e4f54504f514d4745484847474345413d3f403d3f423f403f3c40403c3f
4042474c413b4243424442444246464748444249494442443f3a3334362f2d2d363c2424
27282323211e2425252527292b2a292a2d2e2e292827272d2b3236322c2c292a2829231e
1e21201c19191316191614130e0a0c10111010171d2515171214151818191512191f181c
191e1f1f202321191c1b1d1b191b29312d2d2e2f2d2d2a261808
3434353b3e3e3c3b373d3a3c3f403f413f4448494649474a4944454747474a4843444142
45433f3f44434141443f37353e3d3e3e4039353738393d3d3f3f434549504d4441444148
45494a484345423e393c423d3e3b332f322b2d3134364443332f2a2a2a2b31312f2e2e2f
3134353230323333373835343636383b463d34342f2e2d282326262624221e1919171a1c
1b1718171a191d1e24314330262725282e2f323032332f3333313538343435363333322f
2d2f2f3527272624222121222122231f1e1f23221f23242627263236343b3b3b342d3737
3b3f3e3e393a3a38393a3837332f3030312e2e2e2e2c2a2d30343634343332383a383537
3c3d3839393534393d393839393a3c3d362e32362a1c302e302f2f2f302c2c2a2e332a2c
2c33302a2c2e2d292e2b2d2c261f182e2f3131302e2a2b281e09
363a3b40413c3b39382d2c2d2d312a2b2927242624201f1f1c1e2022201e1e20211f1f29
3826232427292c2b2e2d27282d2f2c2c2d2a2b2625242726262823222b382d1d1c20201e
19181b191c1c181c21252b2c2f342e303736373b3a37342d37363634373a393b38363534
373632322e2c2d3031302f2e313534363a3e36353d3d3f3e4247474945464d4c4b475054
484a45464041403e443a2333424541424446454246464545464a484d4c4c515150545752
52503e294f4e5455595852535050505255555656534d4f52534d4b5053534f5142304b4e
4b4e55514f514f52524f504c4d4a4c4e4b504f4a4a4b49454845403c4d4a4646464b504e
4e4746464747464243434245403c3c3f403a3c3e281b3a393b3a3a383b3a3b3c3c3b3b3a
3b3f393536373a3a363532312d21102c2f3133302c2b29261b0c
3533343b393734282221212125252926292a313430313739383b3a393a3d3a3c3b363832
2839393835373737393937363c3a3b4040424e49464449474a504a4a3c223a504f534e4f
535554565654515153514e4e4e4c4a4b514b4c4f4e422d26484c4d4d4e50515352545550
56524f514f4f4f54545553545754514f494e525559534f54555858585658535559555a5b
5755595b5757514b4e371d3a54565657575553535554545453534f545858545857575a5b
58523e29524e5352565455565353545658595b575557555354564c4c5455564f41304e50
51515453535451575550504f514e4a4e4f534e464b514d4948473d394f4d474647484e4b
4a474a494549423c3c3e3e3e40403b40443f3a3b2a1c3c3a373839393c3b393a3e3a3b3b
3f3f3e3b3b3d3b36353736352e22123135332f30312f2c261e09
3732333a3e3a28152a414347454747394142424243474b4b4b4948494348464a4b474335
234b49474a49474a4a4849474a474a4e4d4f5655514d50505153514a3a1d395453555655
5759595954565855525456545154555352515452544832234b4e53535251555352595951
51505153555151535055565a575154544a50545754545657585656555552585651545b5d
5a5a5a585c585152533c254357545957535355525557515655545055585954585955595b
574f3f2c5452595a55545255565459595b5c59515358595859595450504e4a4e45324c4f
524e505051515155514d504f4b4b4d4c4c4d4a454d52504e47473d3a4b4a43484e4b4644
454b4a4543454441413e3f434242403d3d3c3d3b2e1b3b3b3a393b3c3e3d3a373736393d
45453e3e3b3c3d34353537373020173535353334342f2d2c1e10
35363a3c393825142d46494b48464b414b55524e4d4a4b49494a4a4b4a4a4c4d4c494635
224847484b4a4b4c4c494b48484d5053524f5252514e5354555551513f1a345354585657
595b5a5550535759535457565353555552545254574c2d204d5556535252515356585652
51505153555053565451535859545351464b5551555654535358565a56555a5452505759
5b5a5a5656555655544a404b555457555052575355575757595653585958585b58565758
5551432f5552575a585450505156545656545651555353544d50515452524f5042314f4e
4f4c4c51535354545654534d4a4b4a48484d4d494a4a4c4d494c40374b4c45484a4c4647
4c494a4d4c463e3c3d3f493f40434144423e3f3d2c1c3b413f383e3b393f3f3e3c3e3b3d
43433d3f3e3c3b36393839383423173430323433352e302c2011
36393d3e3c38281526444a47494a474446535f4c46474e4a4b4f4e4d4d4d4e4e504d4b34
25474b4a494a4a4b4b4b4b4b4b4c515453505154535151565153524d361b334c54585553
555859595b5d5851565958535753515756544f5050492e224c5553515153545455525153
52515354555254575a55555856545250464b575457565753505251585452545458585657
515557575a5b58544e3e283c5453535352535752545458565656555b5758595655555557
57553f2e54535154585456565151535053555954545251515655544f50504f4b41324c4f
4e4f505454535256575255514d4e4c464a4f504c4a48484d4a48403645454c4b48494440
454c4a4544463e373a4e623945494b4c49444a412d1d3a3f443e3c3c3d40444644433e3d
3e413e4344413c3a3c3d3d3b352718332d2d33302f2d2e282114
393b3940413d29182a43464748494841434a53524a494744464d47484b44474e4e514d34
27494c49484c4b484a4d4e4f4e4e4f4e4f4f525555515556515455513a21345256595658
5956565758555054595652515656585655555151514b2f22465051535355545556575355
5452555454525757545358575757554e464b5852565757554f52555555565b59575a5a54
5551565755565853483b2032535855525456575658575555525656565555565554545656
59553e2e545455545354595655504f5658565752504f5152545154515453504c40374c49
4d4d4e5457525253504d505154514f4e4d50514f4d4d4b504c453a34474a504c484a4748
4b47414143423d393e3f464a434347484545463f2c1d3b3f3f363b3c3d3b3c4040403e3f
43433f4146423b3f3e3b3e3e36241a342e2f32312e2e2f2b1e11
3b37353a3f3b2715263e46454544434647474d484a4c48464948494a4946474c52504833
264a4d4b4b4e4d494a4f4f4f4f4e4f4f5250514d4f5356565554564f3a1e335457585656
585756555253525053555255595654595656524f4e4a3224495352525459535054575451
5153555454505756504e555456565551484956545657565656575253565959585656575b
57535453575a56524e46333a535857565858575a5b5a5555565756555354585757575758
58523b3154565857575a5b595857575658544f54524f5a5757514f5355545152443c5152
4c52555454515354504a4d51535051504e4f524e4b4f4f504a44352f4848494a4a4c4d4a
4a424041413c3a4243444340434443494440423e2c1d3e3e3c3b393d3f3e3d3e43414140
46433f3e3e433e41403c3e403722132d2c303334312f292c2312
353433393f3c2b14284143484e4d484a47464d4d4e4b4b4b494c4d4b4b4d4c4c4e494537
2a464c4d4c4d4c4d4c4d4b4c4e504c5053504f4d515455575553534f3c1e355555585958
58595c5957555051585556565656555558585752564d31264b5353545a5b555456575153
54565757565254565354565454545754464555505459585458575351535557585450555a
5155595954545659534a3d3f535758585857585959595758585758565656585555595958
544f3b2b4e5759585859585858585754585656504f4e4c4a5052585453525552443c4c4f
5050545553505153504f4f4f4f4f4f4e4d4f4f4c4c505151484337304548484c4b4b4c48
4847434443413e434446494b4a46484c494643402f1e3b3e414743414243424043444642
3f4243403f4341414643403d372518312f303534302f2e2e2611
3135373b40402e1b2c4746474b4a45454a4b4d4c4e4e4c4d4a4d4b4c4b504e4f4e4d4938
2d4b4f4d4d504d4d4a4b4d4d4d514e4e5050505254565756544e51503a1f345658575958
5552555359575c5a565856555151555657595753554c2e244d5554575b5959585b5a5456
5b5b585a59555556575755545451565243405153575a5955585a5a55565c575555535859
5b575b5854555658513e2a3a5a5a59595453575855585858595957575657595554585957
56523e3252555752535354555557544e52535251515055525250504f4e4f514e403c484e
53565651515455534e4e4d4e4e4d4a4c4d4c4b4848504f4c4643372d464c4a4b46474a47
464542424244444647494843434c4746494b453e2c1a3a414345433f413f3f3b3e434541
4144454240444241413f3f3f3b281a3134333c3a39352d2b2817
3438373c42423a252c444947494b4d4b47484e52514d4b4b4a4d504f4a4d4c504b4f4935
2b4b4e4e50534d48454a4e4d4d5050505253525254525553545151513c23355553525758
565553525656565b58585b5b514f545757545152544c31254b565554575a585659595856
5957595a5956555a595858585553504e414152535457575656565655565b5c595a5a5753
595e5d5a58544f50503b2332565455585656575655575759595755555557585452545956
58553e33514f5351504f4e4f54535354565151525455524d4f5754525552504d47424d4e
4f525150515255514b4b504d484d4a4b4a4e4d4b4b4b4e4c4a4839304c4d474447454748
43424441464c4a473d3f4942454b4d4d4c4c4a40311d383f4244443f40403e3f42444241
41444541414345413d393e433b2818313633383c3c38302b2616
353a3a3e403d38272c43423d3f434746414142494e4c454a4f4e4e4b494a454a4e4c4a37
2b454b4b51514c49484a4e4c4f4f505352515253545154545255534d381f365757575654
585b595658555454585857555454555456565454554b2d25485356555657565553575859
5654575a5b59575a5955585a5754514d4344555354595855525656535259585858595655
5457525356545458594e444a565657575759545657595a5a595754535456575656555656
55503c355352515453515051505053525352525352504d52555251525254554b3f3d4b50
53535252565654544e4d504d4a4e4d50504d4c4f4d48494b4944312b484a47444447494b
4d4a46494e4d474e504e473e3e444746464346422919394746413d404444434848454543
404243424142413f3f3e43443c291d38393a35373836302a2112
3437393c42453a262a46484b4d4d4f4a484c4e4a4d4f4c4c504d4a4c504d474d4f4b4939
2f4c4d4d50514c4b4c4c4f4e4e4d535354504f51515155565453534d3920335156575454
505155575855515356565456585251505154525453482d1f41565a575755545353575855
555353565b585a57575756575657544a3e43545252565857575653515556575252585755
5455595757565452544b3d405b5756575354545154585857565854515253575859575552
534f3d3755565450515354515251505153535555504f53524e52504f5151534e48444c53
4f4c4c4f4d4f51514d4e4e4d4e4c4e55534e4b4d4d4b4948473e2e2a494d474446464648
484746474b4c4843464c49444749484443424541291c3d41413f42484744434442454646
46464544424040424645423f3c261f3c3b3a383a3a35312e261b
37343439424241332b434548494b4b4b4a49464b4e4c4a4c4f4f4f4c48494c504e4e4a39
2e4a4e4d4f504b4b494a4e4f4e4b4e505151525253545356575a58513c21305151515353
5856545754555452575858565755525453565352524c3322415352565855545356585656
5755545456565857565857555354534c3f40515256545153575757565758545154535557
555758565758595652452c36575558575253545356565454545655535153595a5a585552
524e3f38515455555556514f515453575653555555545353505456555352514b48424c54
51504e504f4f4f4f514e4e4e4e4c4b4e4c4c4e4b4b4d4b4b473f2f2b494b46444546494b
49484b4a4a4b4a44414344434341414345444d452d1b36454943403d4341414244444447
4847444247464441444642413d241f3b3a3a3a3c3839362e271e
37383e4143423e322c404043494d4d4b4b4b4e4d4c494e504f4d4a4d4e4e4c4c4d4b4633
2f494f4e4e4e4e4947464d4e5050505051535354555251545757534c3b22365450545250
535657575557585957565556535054575352565450493021435351565956565455565555
5657575655545759585857565554534f40415553565553575a5a565656575d5a5956575a
595a585350535c5d56452b34555757565557555456535457585754565354585858585558
5652413c525456555854515455545654515254565552535253555758544e4f4b4542464d
5053504f4c4b4f4f4e4e4e4c4d4d4d4c46494f4c484b4d4d48412e2a434546494e504f52
4e494c4f4a433f41434646404143474445474a472e1c364144444044424343434648474b
4a48444244464640404544443c2a22383737363c39373330271e
363b3e3b3e433e2e2c434244474c4a4744414a4d4e4e4d4c4e4d4e4f4d4a4a4d4e4a4636
344d4f4d4d4e4d4a4a484e4f4f53525050515153504d4f545455554f381d33514f505653
5559575453524f555451545859565c5c5451545554492d1f3f515256575555555655524f
5253555351555658585656585b57534c4040555353555759585655535152585858595a5b
5d5b5a5d59585a57564f484e56545557595b5c5856545457555655585756585958575756
5752453f555658595958575554535557585551545655505052545654514e4f4c4341484f
4e51514e504f4d4c4f514e4c4d4c4d4f49494d4d4b4b4c4d4844302c44464c4f4e48484c
4e4d4c4b4c484649454241454c46464b4b47423c281d3941434242423d43484946464546
4a4644434041454042443f3e3a2b253b34343b3e3a393633291e
3636373d3f3d372e3042403f4346454443494d4e4f4f4e4b4a4b4b4a4d4c49494a4c4839
374e4e4e4e504d4a494c504e4f4f5051514e4f4f4e4f5157545254503d22305256575958
5658585856535355565756565656555252555354574f33213e5456555555555458575452
54545452525655585857595b595653493b3b515054595a56535150545756585556585658
5c5b5c5c5b5754504e47373f575556595a5b5a5756575354535557595a5755575a585654
5551424255535657575655525255545758565250514e4e5353504f4f4f51514f4442484e
4d4b48474a4e4f5150504e4b4b4c4b4d4b4b4d494b4c4d4e4a46332f4847494c4d4b4a4a
464548494a49494343474844434341403d42453d261a3743454243433f41414245484341
444343454041444141413c383627253b38363d3d36333330281e
3634383d413c3a2e2b3e43444445464542494d4c4c4b4c4e50524d4d4c4a474648484135
37504d494a4b4b494b4b4d4b4a4e52514f4d515254545556524f4f503b22305356545250
5256545454565454565758565557595854565455574c301e395056545456555657575858
55535456595757575756555357535048393b525358595857555352535252555656595656
595c5a565757575551432a34545457565556535454555051515457575859555354575753
534c3d3d515052545656555352504e4d4f4d5051524e505752515355534e51534941454e
4f4e4a494a4a4c4c49474546444644434749463f403f403d3c392a2a3e3e3d393c3c3b41
3f3d3c3c3f3e3d3f4140413c3f44443f3f3b3a37251c343d3c373735363733353735322d
313333313131312f2e302c2a29242c3f3b3837373636342f281f
373c3b3b413f3b2b253b4242414043494c48484b4a4a4b4b4d4f4d4c4b4b4d4c49453f32
344b4d474744454a4e4f4f4a494d4e4b4c4f515253565656504d51503b24335252505252
4c4c52535758595a585855565959545150525652514b3120394e51514f4f4f4f4f4f4f4f
504f4c4f504e4d4d4d4d49474b4c49413137464a4c4a4b4e50514f4c494a505052504e4c
4c51525355544f49463d2c34504c48484543424140433f393b3b3c3a3a3d3c393a3d403f
3e3b343641424140434545403d414342423c3c3c3c3b3835312e2b282523242223232321
21221f1f222222222323242726252728292b2b2c2c2a28282c2c23232b2b282326231e1c
1d1e1f1c181615141513131316140e0c1116151720251c181c1c1b1c1b21262826252523
2528282726292722242823201f2130403e3d3a3939342f2c261f
363a3b3d3c3b3d2f2f3d3f42433e41424542434744454643444443444342423f403e382e
2e3737373736353637373833333533313438393a3a3d3e3f3e3c3c3b32242c3f4142403a
3a3a3e383633333332302e2925272322252622211f1f232526262827282b2a2a2b2c2d2f
323635323136363437383835343436332c2b2c2e2d2a27242222201b191a191515161617
171a1e201f1f1f1e21293136353435383534353532383630323533332f302f2d2e2f302e
2b2b2f3028272724232322212225242327282b2c2b2e32353b3d3e3b3b3b403f3d3d3a3b
3e403a3938383a3a35363635322f32302f2f3034353530313533272836363a3d3c38383b
3d3f423e3d3e43403d3f3f3d3d3e42443f3f3d3b2b2130373c3e3838373a3f3b393d3939
3b3b393839393936363b393530272b3d3f3f3e3c3933312f2b21
34373b3f3f424f4e35231d1d1d1c1916161a1918181818181818191c1d1b1c1e20222124
242426292c2c2b2c2c2c2c2b2b2d2c2a2a27272625272927262423242627262527282626
2729292b2e32323535393c3b3b3e413e40403c3e3e382c242f3a3c3e3c3c3a3938373738
37393a3536393b393a3c3e3c3d3d3e3d323545484c4e4a48494e4e504d4c505556575551
4b46494b4d4a4643433e2f35484a4a4b4b494b4a4846484748494b4e4b4a47494c4e5053
534f43455152535453505151535454565958535052504d4f535451504e4f504f48434850
5254504f4e4f514e4b4b494a49464748484a48484947454849412c2c4244484949454447
4b4b4b4b494647484442444744464944403e433f2a1f3a47464747454243484744454549
494442454443413f424442403a2b2b3f3d3b3c3b3934322e2a25
33373c3f404451442b2c30393e3d3d40403b3f44413e3f403f3d3d3d403d3b383a3b322d
323e4141413e3e3f43434344474949474a49494a4a4d4f4e4f4f4f4f3f23305057585a56
53585958544f4e4d525556554e4f5252565551504f483123394f50525353525556535153
5354545356565758525356555653524c38395053585959585757575956555b5a5958585a
575758545352535354462d355456595756525256585e645c545357585854505356565254
554f404052515253525356525356535154534e4f514f4f50505355535457524d463e4250
5251505051514f4e4f504d484545454748494947464748494a422b2a42494a4545464648
4746484b4945474a484746484c4a44434343443b271f3b48454047474444484845434345
42403f424243423f444545413b2a283d3a383a3c3937312f2b25
3539393b3c404331273e43414245494641464b4e4d4a4b4b4c4c494644464b494a4c4639
39484e4d4c4a4a474a4a4e4f4f52514f4d4e514f4f4e4f4d4d5154503f25345257565758
56545252514e5354525155545252555454565553544c35283e5250505152525655535151
5455565656575958555557555556554a353b545352535453535252535357575357595b5b
5b59565654505352524a363e5a56565458595655575e605b585858565858585859585656
574f41435155544f505352525657565657555656545254555757565756524f4c463d4252
5655515050514f4d4c4f4f4b494a494645484c4b4a4c4b4b473e29284145494847454747
4342474a49474646474e4e47444446464240403b271c334445413f424245474545484948
4846434444424241414042433b2d2b3c3c3b3e433d36322e2b23
373a38393d4443302c434a4d4b494240424547494743444b504d4949464949484749473e
3c464c4c4d4e4c4c4e4f50504f5153514f515350504e4e4f5050504d3b232d4c53545759
565350504f5051545453555454555252514b4c52565036253b514d4e5152505456545454
5657545756555857535458565756554a363c545653545756555356554e52545555565752
525554535757555257554a4e595855575a5a58565656575a5a59565355595a5956555758
57504648555554545558555354555250535556524f5356534d4b50504f51504e483e404e
4e4f504c4d50524d4d50504c494a4d49464c4d4a484d4f4f49412c2943444b4c4a464646
4346474a4e4d4b4a4741393c44403d424947433b261e3241444547464648494645494b4b
4a48454747403d3d414545433d2e2c393b393e44444037322f23
3739393f40464630283d4549474c4d4744474e4d4a4b494a4a4646494d4d4c4a4b4c493e
3b45494b4d4d4e4f5150514f4d4e4e4d4e5251514f4f50525150504e3b252d4a52535557
5652525453545351545251505252555651494c50544e36273c54504f5252515255565151
56565556575454555352545454555449313854565654535355514f535656545153555550
5156575555545354554d39425855565a595a595856535658585857535357595856555557
55534749535655535458575554545350505153555452504e4f52504e4e5457514737394b
4e4d4e4f4d4b4c4c4c4c4a4946484a4b4b4e4d48474a4f504c412a2b4545474746464647
4747454646464c4f4c4c4843444747464747433d251a3042444142424648474140434343
46484445433c383d424649453f302a383b3b3e403b312c302d25
323235373c4243312d414545494d49474647454a4b4b4b4c4c4a4a4c504e4c4b4d4f473a
3741474a4b4b4e4e504e4d4c4b4d4e4e51524e515150525253514d4b3c26314f56545254
53525356555351555756565756535656524d4e4f524e3b293a5554515254525255514f50
5455535254545356545252534d4f534a32375151515254555552525457575a5958585556
58575959565855525349343e5656595a5956575757535655555555535555575956555757
554e444250545051525551515252525356595753525557535050534f4e515352493a3b4b
4d4b4a4c4d4d4e4d4e504b484c4b47474a4c4b4b4c4b50514d42292940464a4a484a4844
42424243484f514f46403f404345494d4a47443a231d3444444142444545444244444242
4242424343413e414242464742322f3b3b3b3f3f382c29302c24
373838393c42422f2c404242494e4a4a4f4d474a49484c4f50514f4d4d4948484a4d4b40
3e46494a4c4d4f4f4f504f4b4d5252515150505053514e515250514f3e29334d51545352
5653525558575252565757575757545350515355544e3925385453525556545354545553
545453525153555755545555505152493339505152545253595959575456585351585a55
55585b575556534c4e4a3d44585a59575959585856555554545553535657595a57545556
54524b4b535551525556555653555654535556524f4f5155565250504e4d4e4c42333a4a
4b4d4e504f4e4c4c50504d4d4e4c44444d4f4d4c4c4d504f4d41292a4246484646484844
4346494c4d4a484a4b4541434547413e454747422a203445444041424145484948474746
444544444647454646464749423534403c3c41423f38312f2920
393a3b3d39393c2c2a3b43474a4e4c494d504b4846464a4e4e4b4d514e4948484a4b483f
3c464c4b4c4e4f4e4d4e514f505154514f505354514e4e525251524f3e262c4c54515153
5352535557575454545454575553525352525554524d39263c5859575654555757565456
5855555554545656565555555352534730375153545250515253545453545555595a5855
56585453535558545252494c565755565a5a5858575555565756535357585a5855535453
55534b4c535255545355575958595856545351525350505356514f4f51514c473f333e50
4d4f5050514f4e4d4f50504d4b4947484f53504e4b4c4c4c4a3f292e45494a4642474948
4749474b4d4d484444434547494947494a4443422e1e2c40484644434145474645444349
4b48484845454749474749443d32333f403e3f413f37322e2921
3d3e3e3b393f3f2c2b3d44444348464243484846464a4b4b4b4a4d4b4a4b494b49484942
3b444c4d4f4d4c4c4d4e4f4e4e51535351535354535052525152514e3d29334d524f4f51
5252505256555253545152525154595956514f4e4d4d3b283e5858575656575856535255
56565355555253555656565354565649323a54555758585a5a5651515456545457565657
5755545655565754544c3a43585856595a5a5756545254585a5656565657585855565652
53534a4a4f5355535555555657585853505153555557545253524f5153534d4e46363848
4a4d504f53514d4d4b4c4b4b4b4b4a4b4c4e4e4c4c4b4948493e272940484a48494a4b48
46444446494b4a47454240454d4c46464945433e291c2f3e41454444434445484a464649
4948464447494a48444444413b33343e3f413c3a3835312e2d22
383c3c3b3c413f312d3b41414349484745484a49464848494b4d4f4e4947494a47464945
3e424b4c4d4c4d4d4a4d514e4c4f53525253534f4d5052525050555441282e4a504e4f4e
4c505455565552505458575153585a5550505152524d3924385455575655575655545454
555754545452545756525052535455462d39545453565753535655535758585450545956
5456585b5a5755545649343f565b5959595a595756555454585a5a585857565859585550
51534a475156545557585657575757545453535453525357595754524f4c4e5349373d4e
4f4f4f4f52524e4c4a4c4c4b4d4c4e4f4f4c4b4a4c4a4849483e2428434d4e4c4c4f4d4b
49444345494948484542474946454746454548402b1f2f43484a4a4b464344494a4a4644
4649484548484744424242423f38353d3e3e403d3c3937332f26
32343b3d3d3e3b2e3145494744464746464546454a4c47474c505050504f4e4e4c4b4a43
3a424e4e4e4e4e4c4b4f53535153524d4b4e4f4f4f505252525454514124264352524e4f
5252514f5356514d515554565656555353525357574f39273e5855545354575757565556
575655545350535757535150535354462e3c5454555859535257595a5c5b575451515658
5658595757575654544e474a56585657595b58585958575758595959575655565859564f
51534a474c52565555565554565756535053525152575a57565857535251535243333c4f
4d4e4c4b4c4f4e4c484a4c4d4e4e4a4b4d4d4c4c4a494a4a4a3e2629444b48474b4d4d4c
484848494b4b484a47434746474746464847453d2b1f2f46484748454446474746474745
4347474548484747464443423f37373d4142413f3a3738362f25
34393e403e3f38282a3a41454648464241454948484a4a46464c4e4b484646484a4c4b41
38424d4c4d4f4e4d4e50505152514d4a4b4d5051514f51514d4f53503d23294753514d4c
4d4f50505352514f4f535453555757545253555656503a2a3f5653525253555758595657
585656534f4e515554514f50525251442e3e565657555150525557565355565554545252
5958585654555759564f474c55575858595858585a595657585956555554545456565352
53514b494c52545556565655545354514f52555654515050504e4d505452514e44303a4f
504f4d4b4d4f4c4846474b4c4d4c48464a50504d4a484c4b4c40292a434948494a4a4a4c
4a454346494a47474d4c494646474742414547432c1e31454c4a45424548484647494a49
4545464548484543444343443f37393f3f403e3c3b38373a3728
32363b40403c35292c3e484949464242474e4f4644494c4a4f4e49494c4846484849483f
37434c4b4c4d494a4e4f4e4f50504f4e4e5152515152524d4c4c504e3f2227434e50524f
4f4f5051514f51514e50565555595c585656565858533d2a405653535355565657585758
57575654524e505355525151504e4e412e3c53555656565554545657575350555452575a
5656595856545758574e404857595a5958585856555755585a5756565655545657555455
55514a474c515050555652515256565552505054534f505457534f5051535452442f3b4f
4e49494b4d4e4d4a4d4d504e494b4c4a4d50524e4947494b483c262b454d4a4b4a4a4c4d
48474749494749494b4b4947454241464742413d2c1f2f444947424245424043474b4c47
4444464848464443424444424138393d3b3a3d403d363232312a
353333373a3f3a2a2b3a40444747464344494b48474a48444548494a4b4b46444748483e
36414b4c4d4e4b4a4f4f4d4c50504f4e4d4d50535251504f4f4e4e4b3b232744504f4e4d
525456555456514e4d4b505358575251525354555554402b3d5455525354575858565555
565554565552505254535454525558462d3f565254575758565358595758565454555353
5758595656545355564a3e48575859595856575757555455575859565858585958565455
565046424b55545559575652515154535555525050525050524f4a4d5354514f412e384e
4d4b4c4e4e4e4e4d4c4c4e4c4b4b4b4a4a4f514f4b47484b4a3b2326424c49484b4f4e48
484b4b4d4b48474c514c4846454649474242423c2a1e2e42424446424346474343474644
4749474746454746454642403e37353c3f3e41443e3735322c24
323237393a3d392d303b414345434549474949454243454240454b4c4c4946474b4b483f
323d4a4b4d4e4c4a4b4e4e4f504f4c4d4c4a4d4e505151505151524c3a2429454e515553
525554525453525455565656535151515352504f5353402d3f5454535452545859575554
535352525152555656545453535557473345585356585759595857565352535653515155
565757585451505558554e4f565758565658575654535555565659575756575a59585455
55534a434a555656575957565556595452515153575854555352515050525151412e3a4a
4a4a4c4d4d4f504e494b4e4e4b4b4c4b4c4f504d4b4b4b4b473920223b4647494d4e4b49
484848484947454a4c4b4a48454345494a4645422e1d2f474945424343464744464a4747
4b4b464346454445454444424038343b434645423d35302f2b25
3837373a3f413b2c303f4542404041434547464545414344454447494a4949494847483e
333f4b4a494c4c49484d5051515050504f4e4e4d4d50515152505151412628434f515454
5452525756524e4d4d4f515252535353525352515253402d435755545556535457585956
5353504e4b4c515658565454545456463141545153565857575754545859565759555253
585a575655555353534b454b565858585957565655535356555656575656575655545456
57534d41495656555755535454555554525355555453545455545250504d4f54452c3549
4d4c4d4f4f50504d4d4e4f4d4c4d4e4a4a4b4846484c4e4d493a21223c484a4b4a4a4843
4143494949494b4e4d4b4a4b4842454d494449452e1f334745414345454749494849494a
4948454448474646454749464135323d45494746413931323226
373537383b3f3d373e4547474745474749494949484947484d4d4c4b4b4948494643463d
33414e4b4747494a4a4c4c4d4f515353514e4d4f52514f4f4f504e4c4127264253575351
4f505456575653504e51535250535453504f515355534130455856535657535053565757
555251534f4d4f525557555354555544324051535859585553565753545855535657595a
585656524f4f525352494148535657565555545454535454555553535556555252515153
56564c3f485656545352545555555254525151514e5154524f50504f4e4f5152402a3445
484d4f4b4949494a4a4c4d4c4d4e4d48474845444447494543372323343d4344403f3f3e
3e3d3f40414140454542413f3f4142434242423e2d212f3d3d3d3e3e3f42434041424143
42414244423c3c3d3f3e3e3b362f323f4241403e3d3a34343628
303337373a404246555148484a48454545484c4d4a464749464546474b49474743434439
2e3c48494545474c4d4c4b4a4a4b5052504b4c4d4f4f4d4c4a49484c42292a4552524f4d
4a494c4e5253515051515253545756545050505052523f2e415254545154535150505153
514e4e4f4e4e504f4e4d4e4d4e504c3f34434e4e5253504f4e4e4d4f4e4e505559585050
55544f4e4d4d4d4e4e463c404a4e4c49464545423e3e3f3e3d3d3c3c3e3c3a3b3b393839
3d3e3a383f4241434443454443424346474544454342413d3a37323031312c2725262929
292827272625232424262828292a2b2b2b2d2e2e2e2d2d2d2c2c292829292b2e30312f2a
27262423211f1f1c17191a1914141513141312151d241f17151718191b1d1e1c1b1d1f1f
2122232424212021252626282727323d3e3d3d3a383633312e24
3034393d3e3e3f4c5f55433f4245404043444646423d3a37393f4243413b37373635352e
282d302f2d2e3031323435332f303437363435373739393839393b3a32252631383b3e40
4039383c3e3934302e30302f2c2929292725242323252a2c282528292a2a2b2d2f303132
323433323535383836393a393635332f2e31312e2e2d2a27221f201f1b18181714141615
191b1c1e2122222527272a2e30302f2f32363634363837353535363535363532312d2b2c
2c2a2c2d28262625222121202121222625262322242727292b2f3031343d3d3b332c333b
39373a3d3e3c3b39383737353232343532312e2c2c2c2d2b282927282b29292c30343534
3434353333373735373a3e3c3e4343403f42433d2f232e39393b3a39393b3a35312f2e30
312e2b2c2e32312e2c2f3131302d303b4041423c383835323328
3233363c3e3e486f8855251b1918171414171512131516171d1e1d2123212123282a2826
24282b2a2c2c2c2b2b2c2c2e2e2e2e2b272628282828282424222224262b2d231f202426
27292827282d2e303237383a3a3c3f4345433f3d3f413a3235393b3b3637383838373837
37363735343333343538393a3b3b3d38353d424346494d5455514b4b4d4f5253514f4b4a
4b4c4c4c4848494b4d463e3f474947494b4d4a47494c4c48484a4a4a4d515252514f4d50
525145384452525352515153565653555656534e4e51514f4c4b4b4e4e50504d3f2e3c4b
4b4b4a4a4c4d4f50514d4c4c4a4a4f4e4b4b4c47474b4d4b483c221f3948454143464846
4548494646474749494c4e4c474545484948464432212e41464a4b48484a4d4844444241
44464344474947424244494a463a323b413f403d3a3b3934342f
3333383d3f3d4058796e483b3a393d414243413e3c3d3f42403c3c3e3c3c3f403d3b3c33
2d353e4041434443454647494b4e4f4b494c4e505051514f5050514f432a294252514f52
534f4c4f535454545453575856524f4e50505051545441334554524d4e52535355535455
54535554535353504f535656555250443c4a565758585958545252535556524f50535356
5658575453545657564e4547505656555759545051535554535251525355575855535357
56544236445353555655545351524f4f52565452545352555452504e50524f4d3a2b3e51
5353504d4b4b494b4e4f4d4c4b4a4b4b4a4c4e4b4c4e4f4c4a3d231f3a4a484644444647
46494b4a4949494b49474a4c4c4c4e4d4d4b4b49342030474a4a494a4c4f4d4a494a4848
4849484848474644434546484639303b423d3b3d3c383436342b
3434383a3c3f3e39618766494b4a484b4c4745484a45444648444343464a4b494847493d
31404a4848494c4d4e4e5051505053524f4f52555554525051535251452d294251545452
5354514e5055585757565756555556545350515455544134485654525556555658575558
565556565657575654555755535353453b47525658585553535051545250545758585858
5a5a5b5a5952525455514c50575857565859555456555656555453515256575755535557
54534336444f4c50545655555553505050514e4e5153525152514e4e51504d503e28374c
524f4e4e4c4c4e4f4d4d5053504844494d514f4b4c4e4b47464027223947464746454549
484748494b4b4a4a4c4d4f4d4746494846464543332231494d48434448464345484a4a46
47484747494745484743403f40362f373e3e3f3d383534302c28
3235373b3c3d3e385d896c4e4e4b434245423f4144444645454a49444246484647484939
2d3c474a4b4a49494b504f4e4d4f5252504e4e515556545352525352452b2a4250545452
505151525150515557544f50545758595450535352544637465657565857575758565557
5555565654555656575b5a5856535349414d535554525257595b5a535354545356585755
57585a5b5754545354545352535658565654545656575755545554535156575854525454
5455473b4b5653545657575656585955524f4f4d4f5554535152504f4f4f51533c24354b
5054534f4b4b4c50504e5355504a4a4b4d52504c4c4f504a48422a22384646464546484f
4d4646474846474a4847474b4e4a46454447494b39232e464b4746474949494a49464544
4445454547454547494642403e343038393a4040393636312c26
34373a3c3f4141355b8d724d484849474244454242464747484a48484b4a454144494937
2a3945474a4b4a494d4f4c4b4e505151504d4e525756524f4f505152492c26414f545552
535455535253545454535655525255575451505154554436475554555554555858565253
5254565553525455585b5a565557564b444f57585855515353535657565856545658544f
525657555455555355574e4b535959595655535354555656565554535153575958535252
51534536455354535657585755565757575757534f4e5255525050505050504e3b273750
535455534f4c4c4f5351504e4b484b4d50504e4b4c4f524e4b452d243846474747494d4f
483f4249494445494a4d4a4747484d4d4a464746321f2d414847494b4c4c4a4948484a49
4746454547474747454646423f332e393b3a3e3f3b3532302d29
3737394144434232558f784e4645424346464345484542414345454649464445474a4937
2c3c47494a4b4a4a4d4c4b4d4d4f505052525155575653514f4e5052472b2b42494c5354
51535555514f5154565754514f4d4f52515455555655423b4b5556585754555755555455
5456575553555555575a5a5857585649434d55575a5a5852515354565857535051555959
565756545659575455514a48515757555453525353555656575555545354555758545150
51513e31414f54575859595955555855505254555858565554525454525452503a22324a
5253524f4f50515151504e4d4b4b4c4d4f504d4c4f5050504b422a23374545494c4e4c4a
4744464c4e4e4c4c4d4d4c4a4a49494b4c4848452e1b2a404c4f4d4847494947464c4b47
44464646474848444044464342352934404143403b393534342f
373a3e3f3f4140313e6a6d534a48434144464a4945434448474543444345494849474634
2c3f4a47474748494b4a494c4f4e4b4a4f51525254545353524d4f52492c284252535150
52525152504f5456575351535656585755535555565547404f5754545554565453575657
5857595955555657575758575858584d43474f55595c5c5551585b595554565658575658
5a59555252525151514e4a4a525755525353565556565655575654535455535354545356
57533c2f435456565557595553565554524f4f525352525254525355535353513c243048
4e5152504f5254534f4f4e4c4b4e4f4e4f4f4e4e4e4d4d4d4c422c253a494b4b4c4d4a46
444547494a4e4f504e4c4c4f4d4a494d504f4c4c371f293f484c4b4747484747484a4c4b
47464748484948454243444341352935424243423e383638342b
373d403e3e3f3d2d336171594d4e4f4c4c4b4c4b49434344474a4943424243484a4b4835
2b3f4a494948484b4d4b4b4b4e514e4c4d4e505051545550505357554a2d294553514e4e
4e515354545354535454515151525456545456545352453d4d5554545654535353535254
5656575957545456565555575756564e444c555859585755565859575858585655555453
565857575853555757514c4c515354535455555352535455575655555554515154555657
56523e30445251505355575657595754565956545451535555525153545456583d222e45
4e5051525252514e4c50514d4b4b4b48494b4c4b4b494a4b48422c263d4b4a4c4d4f4f4c
4a4846494d4f4e4e4f4b4a4b4b49464b4d474445341d2638444a4947484748494a4a4b4b
4a46434646464542454643414033293642403e3e3b373437352c
34393c3d3e3f3b2a3165785a4947474749484747444443434446464442464a494b494432
2a3f4a484a4a4b4e4e4f4e4b4c504d4b49484d5251525451515452504c322b4653515050
52545455555352514f51535557545253515358565350423c4b5454565556575554555456
56575758555455545355595a595a5a524a4e54595857555656555452515758545254514e
5151515254555658575346414d5153555758555557565455555352545554525556555553
52533d2f44545654505153565956535253525153565654514f515353545351503b222d47
51535353524e4d51525150504c4a4a4a4b4e4c4c4d4c4c4c4a4730273d4949474a4e4c49
484543464e4f4c48474e504c4b4e4b494a444445321d263b4648474a4b49444446484948
474844424548484546464343423125323c3c3c3a34313232302a
37393b3d3c3b38292e769d6f504d49444142464442444647494b49444546484647494a35
293d494b4b4b4c4c4a4a4c4d504e4a4a4c4a4b5155565452504c4d4f49312d4250515150
50505556565652525657545456565655545454555655453d485456575456585555565456
595959575555565353585c595758574d484c525557585854514e51565352525258565152
5250535452545857565446404e5454545554535457575556555251545453545657545350
52563e314653575957545656535254575757555454565658585350515656555139202c49
50515654504b4a4d504e50504c4a494f504c4a4d4e4c4f5050472e2337474d4e4e4d4c48
4b4f4c4c4c4d504e4a4c4e4a474b4e4f4e4c4b4b3b20243f4c4a4849484a494544444646
4545444546484a4a494544444332232d383d3e3b383534302c28
373939393b3c3a2c2f79bea36a524b494541444849464343434649464141464949464632
2a3c464a4b4a4c4b4a494b4e524f4a4f54514e5053545554534f4e554f332c4453545353
53585a585553515355565555565859585551525456584b40495457565453545254555455
5757585755575a56535456565758554b464e535659585756555354565758575555575853
505255555152525354514e4d4f5050525353535353545355545153565753535556565550
52543d304351555455595b5a58555352555754505354545356544f51504f4b4c391e2945
4e4f514f52514d4e4f4e4a4a4d4e4b4d4d4a484c4c4d5152504a32263a4b4a4b4a4a4d4d
494a4c4e504f4b4c4c4c4842424242474a4947463a2427414d4947484b4c4a4747474646
444342424448484845444343423025303b3f3f3e3e3b38342e29
3132373a3c3c382b306cb2ac8466504646494946423f4445444647474545464747454331
2b3f48484a4b4a4b4c4a4b4d4e4e4f4f51504e4d50525050514f4f514c312d4653524f4f
5152535452515052545453525355555351525354525248424c5253555654515053565553
535357565456595754565654555756504a4f54575755545557575957595655525054534f
51545352525254535253463e464e53545554555150505255575655565552535857555453
50513b2e414f52525458575555585757545455524f5152525354565756514f513e222a45
5150504f4e4f4e4f4f4d4b4c50514e4c48484b48474a4f4f4d472e24394b4e4e4c4d514f
494748494a4c4f4b47474a4948474646454647433620253b42444546464645484a484545
434143414246484743444342433027353d3d3b3d3c322d30302d
35363a3b3c3e3d2c2d49809ea58f67534b45474944464846424444424241424546474530
2c4048474a4b494a4a4d4d4e4d4f4f525050525150505252525052514a312c464f515352
5050525657525354525455535457575552505253504e4742495051525456555456575655
5354565654545858565757575a5a574f494e5459575555545457595a5a5a585455555554
53525353535150504e4f3e37484f5256565453525152525456565554505152545554514f
51533a2b415151525555545454545251525354505152505255565556545050523e252d45
4e4e504d4d525454514c4b4c4e514f4b49484a4c4c4b4b4e4e492e2235474a4e4e4b4947
484a48474b4c4b4c4b4546494d4b4846434448453621273a43464747433f404648484748
484747474744454544423f41402e24313f3f3e3c3e393232322e
3b3937393c3d3823263d76a7b79967514b484242424240404546484744413f3f43444631
2a3b44474d4c4b4b4c4d4e4e4d4e5052515052504e4d52534f4d4f524e312d495453514e
494c5157575653515357595756575b5754565451514f4841495356545554535758585858
56565554535355555554555859585550494e52565955565855545758534e4f5453505558
56524f515454535252513c37485153545250535353545454504f50505050525254545250
5251382b405055565855545757555656565754525555545454535655525153543d232d46
4f52504e4d4a4b4f4e4e4d4d4d4f4d4c4e4e4d5053514b4d4f4a302235474c51524f4b4a
484949484b4c46474a4b4c4a47494a4c4b4c4b493d25293f474749484848454645434447
4a4948484645464545434242422d2330373b3a3b3c3b3533312c
3538353a3a3834272c3e76c3e3b772514947474345494746484440444543403f45484833
2d3f4648494a4b49494a4d4d4e4d4d4f514f4e4f4e4e504e4b4e504e4b312e4955585858
5553565758585858575656555455565555545050504e4943495155545552505453555858
575554555454535355545457555353504d4c515858555558585659595756555354524e4d
5153535554505153515147464e525355524f51525352515452505052514e525554535150
515136273b4d514f54565555575856525251504e4d5050515050535552515153401f2542
515352524d4a4b4c4d4f4f4e4c4f4e5053505052504e4e4c4b462e2135474c4c52524b48
484545484b49454747494c4a464d504f494546493d252b40484647494b4c464245494845
424347484849454544444543432f253138363534383935342d28
33383d3e3f403b252c4378c2e9dba671574e44424648453f42444443444143494b484930
2b3f484a484b4c4b4c4d4b4a4a4a4c4e51524f4f4e4f4f4f525453514d312e4651545356
5955555553545353535150515153545452524f4f53554f474a4c4d4e5252525354535356
57565254545252515452535755565751484c5051565959565452555354534f5054575858
55575859544f50515150403d4b515255555251535251545354525453514f52545150504e
4d4e35283c4d4f4e50545655565555545355555251525452514f50555351515241232b48
525151504e4b4c4c50504d4c4f515152524f4d4f4d4c4c4747442d2035494947494c4b49
47444345444748464949474a4b4c4f4f4c44464a3b1f243d46494c4a4543454547494947
454544464645434543424041412c212e383836363834312f2f2d
35383c3d38373a2a2a425f829cbcb7825d514945464141424342423f3e42454546464329
283e4445484a4a4a504e4e4c4b4d4f4f5354524f4e4f504f515353534d33334851535553
515156595858555253505454545553555451505154544f474a4f4f4f5355545253525356
545253545353514f535253565551504e44444e555757575453565451555958565857524c
4b4d52545654515352503c394a515253565250525151545453514f4d4f53535250525353
514f342a3f4d504d4f4f515050505352505351505152565752505051504e4e4e3f232c44
4e4e4e4f4e4e4c4f4f4d4a4a4d4e4f4b4a47484a4a4a4a4646442d233643434446434342
42424548464144454241413f43494b45424044483c1f223a43444546444246464240413f
3e403e3a3a3a3b3a393b3836362623333a3b3d3f3e3937322c2a
36363b3e3e3e3c2b2a3f4c5164a6bd8f5f4f4a454243424243424443403f434546474329
2a3d43444546494a4d4b4a4c4e4f4c484b4e50504e4e4d4d4e504f4e482d33474f505150
535653525456555350525352505050555452504d4e524b41465050505051504d4b4b4e50
4e4e4d4f4e4c4b494a4a4a4d4b474647403e464b4a4b484b4d4e50514f524e4d4f4e4e4e
4e4e4c4f55534e4e4a4b373340464847464441403e4143403f3e3a383b3e3f3e3b3e3f41
3f3b2e2b363d3e3f40424241424445494a4b4c4b4945464340434343413c3c393229282b
2e322f2f302f2f2e2e2b2a2c2b2a2b2c2b2b2c2e2e2f3234363026292e30313232312f2e
302c2a2c2b2a28262623201f1e16171a17161a1b1d211d191a1816171a1d1f1f201f1d1f
1f202223211f21201f212524241f2a383c3d3f3f3b352f2d2c2b
353837383c3d3b2b2d3a40465185b69763463d3d3e403a36333233332f2e33332f2e2d25
2528292b292b2e2e2e302d2e343834302d353a38393b3b393c3d3e3c392b2f3b3c3e3933
353633312e2c282425292d2c26222323201f212223262426282824262a2a292b2c2c2e2e
3034363536373432343336363435313136342d2c2c28292b2825231e1b19171715121415
171a191a1d1e201e1e1d232826242628292b29282a2f33322f31302f2f2f2e2e2a2b2b2a
29292a2e2926252422201f1d1c1c1b1d1c191a1b1b1d1d1e2324242423282a2d312f3030
31313233313233313234342f2d2f2e2d2e2e2d2a2929292b2a2a282b292626262527282c
2e2b2d3131312f2f353a3837343739393b3b383b3928242f3837383a39353332302e2f30
2f2f2f312e2a28282a2c2b2a281f25373c3f403d393433333230
32393b393d3d393e301d1a1a1d36667a53281b1b1d1e1c1c1d1f211f1f1f232927272923
242729282a2c2e2d2c2d2b2b2d2c2a29272b2b27232527272624272827282a2525272728
2d2f2d2e2d3132383d3e3e4247434042414042413f3a3836393b3b3a3b3b3d3c39383531
343939363537363635393b3837393a3c3c414440403f3f46484b4a484b4f4e48494c4d4c
4b4846494a49474742402e2d3b40403f403f3d3e3e4141414243403f4344454546454846
4748332c404e4e4d4e4b4d4d4d4e4f4f514d4b50514e4d50534f4c4c4b4c4d4e40262b40
4949484a4843414142464a45454a4a494c4d4b48484947484c4e332435484d4c4846494c
4a494b4d4e4d47464c4d47454a4743494a4949473d23293e4646484645454445403e4446
42424443434041404547413c3b2724353a383a38383a3734302d
313437393b3e3a272a383e444d5f9bd0a2634d49423d3b3c3f40413d3a3f41413d3a3b2a
2e3b3f404243454649474648494949494b50524c47485052504d4f4d4930344751535150
4f51515352504e4d4f51575753504f5051515152504c4b45464f5452505356535453514f
5155534f4e5354544f5353524e4b4e4d40434e525050534f4f514d4f5657544f5153504b
4f545553514e524f4d4b3130434c50514c484a4d4d4f504d4f504d4e4e4d505050505152
514d2f263e4e5252514f4f5052555455585755555656514e5053515251544f4d46272a47
4f4b494c4e4d4a4a4b4f504c4a4d4d4e51504b47484c49494a49301f32454c4b474a4e50
50514d474c524d4a4f4b4340464c4a4f4e49494a41262d454c4a49454848464541444748
444346434243424044494642422a22313839383a38363532312d
3435353436393626314348494c5e97cebb7b584b47474440414246474443454a4644452c
2d4048484b4e4f51534f4c4b484b4c494a5254504f4e5554504d524f483133474e505154
555756565856534f53575553515454505050545758544d41454f53515253525354555553
535557535256555552505152565552513e404a4e5459595958525051524f515555524f4e
4e515556524e524e4e4e33354a5154514c4e4b4c4e50535250505151525252514e4e5153
534b2d263e4f515757555552535253545553524c4c52575752505254524e4c5148272b47
4d50504f4f504d4f4d4b4e4c4b4b4b4c4e4d4a4a4a49484a4b48301e2e434a4b494e5150
4e4f4e4e504f4c4b4d4c474644474b4b4c47474b43272b444d4645464644424240454846
43474a474543424142424445422722333c3c3d403b353333322c
303338393b3836242b3f494746527fb4d4a467504b4a4a484a45444342434747494d4829
2b434a4a4d4d4f5153504e4c4d4d504c4a4f5253505256534f4f51514d353a4c55565454
575354575554535a5a585451535655545253575757575043485152505255565554545654
5456595855545354535152525558565440404d5556606157555550525350504d51585552
5052535351515556554e3f445051524d4e504c4d4d4e5052514e5251535354534f4a4d50
524e30253d4c505153545454535556555356595450525455565150505150505149292d43
4a4f4f4e52535252514c4d4d4d4c4a4c4f4b4a4d4b494a4d4d4b331e2c3f46494c4d4e4c
49484a4d4e49474b4946474745464a4a48474d5348252b44494747464645434447474848
47494b4847444545423d3f434026263740403f413e3a3532312d
3032353637383928313e4446464a5680c6ae6f59534e4a494a4a4743404145474746472a
2e464a4d4d4b4d4d4f4d4d4d4f4e514e504f4e5152555554515051504b32374b54575450
5352515455534e5154544d4e545454555856555654555243464f51505257545355545554
545555565655535352545556565553533c42535754514f4e4f51515355524f5355525355
5352545152515153555136394b4e505153514d4d4f4f50504f4e515252525453504a4b4d
5150302237494f4f5153555555555451504f51544f525153524e4f514f50524e48272943
4e4f4e4f4f53514f51504f4f4e4a4b4e4f4e4c4b4a4a4e4c494b341e2a424b4c4d4b4c4c
4d4b4846494c4b48484946464b4d504e4b4b4d4b45272b424b4844474847484748494746
484849494646464543424246472c2b3a3f403f3f3f3b3233312e
34323232333b39223041434243495273a5ae815e57575450494447444645474547454830
33424951524f4e4e50504d4e4e494b4e505151525054515155534f4a48353c4a4e505051
515252514f50515053565251555657575352545454545445425051505152525152545655
54535354575756555354575757555351393f51555554554e4b504f4c505453545657514e
4d4c4d4b4d4e5154514f2e324b514e52555653504f4e4d4d4e4c505354545151514d4e4e
504f302032444c505558535154575551515354505553555652515251515655544d2b2b43
51514c4f504f4c4e50524f4d4c4c4e5051514f4e4a4b4f4e4e4d341b2b3f4645474e504c
49484a4b4b4a4a464545464d4843464a4945474a472a2f484d4845474744444746474949
484a49464345454345464545472c2c3d3e3d3e3a3a3a3231302c
2f303535302f322432454544464a4c566aae9e6a5a5353534e4b4b48464a4948474b4d30
34464b4d5250504f50534f4e4e4c4c4d4e50534f4e52555756534f4d4a363f4a4c515554
515357535457575453525154575752545653565656565242455452505050535355555452
545456565658585551525253575756533a3b4e5755555654515452504b4e555654544f52
53504f4e4a4c505051503333474f4c4e525153504f4d4f4e4d4c4f505353504f4e52514f
5050342337474f4f505351545654505053515353535451505150534e4e4f50504a252844
4f4e4f524e4e4f4d4f4f4e4a4a4b4d4f50504d4e4b4b4d4c4b49331b2b4347464c4d4b46
474b4a494a4849474b4b494b4c4b4f504a474544462a2d454d4b49424445434648484a49
494b4a45444643434445423e41282a3b3c3d3c363737332e2b2a
2e313335353639263442424144494b5069b5a671605854534e4d4f4b4a4b4644474a4a30
334849454b4e4c4e4f50515050504f4f5253534f4e4e51545752535552403f4e51505457
544e50555657544f4a4d5458555355565553565853524f3c424f52505253525453555454
555754535455544f5152525252505050363c484f5654545451515152504e534c4b4c5353
4f514d4f4d5052494d4f3e3c41494e4e514b4d51504e4f504f4f4f4e4f4f4b4d4b4c4d4e
4e4f3323374a4f4c4e53504f54534f524f4e4d4e524e4c4d4d4e504e4c4e545048262943
515352535154565652524e4c4d4c4b4e514f4a4c4e4e4c4a474633192a4349484b4b4b4d
51524e4a4c4e4f4f4e4f4a4a4b4d4f4f4f4a4c4c452426414b4c4943474a484747464542
484a48484848474544423f3b3f2a2b3c3e3c38383b3c3934322f
3234353333383c2735444646494c4d4d578fbab88b665a52504f4d4f4c4644464a4d482c
32454746494a4c4e4f50505050504c4d50565657524f4d53575754524f3d435153545652
515054525455525455545356575653525453535453564f3c434d50515456535552545757
5653545555565450515354545352515133394852575859585453505353514e4d52515351
5150504c4e4e4d4545452c33444c50504c484c4e52504e4f4e4c4e4d4e4f4c4e4c4b494c
4d482f1e35494e4d5254555957575251514f4c4f505050514e4e504d494d53544a262741
4f5553515153525153514f4d4e4f4b4c534f494c4f4f49474948371e2f464b4f4a4a514d
4d514f504c4b4c4b4f4941464d4c4b4c4b4e4d4f4c292c464f504c464646464747474544
454644474947484a453e3d3d3f292b3d413e393b3a3a3737342c
31323335343736213442454546484e4b516ebfe7ba7d5c5554524d4d4e4d4a4b4d4f4d2e
3446494a494b4f4e4d4f4f4d4f534d4c4f565759595553505356544f4c3b3e4f55544d4e
52535050535453565353555958565657545352545453533b42525657575656565654585a
55515558575b57555657555356575456363a4c515255585a5553545755504f4a4d514e4f
5454504e4f5252494444283245474d504e494b5153514f4e4d48494d5151504e4e4d4a4a
4b49311e3546494c4d4e4d51515155504d4e504f4f4f4f4f4f4d4e52514d4c494626243f
4e52534e4c4f4f4d4e4e4e4d4d524e4e4f4c48494c4e48424649392134494c4a4648504f
4d4e4d4d4a474b4d4c47464447474b4d49494d53502a2d3e4648474242454b47484c4c47
484a4a474748464a46444242422d2f3b413a393f3d3d39373932
3131333537363824384342474747494b536290cadca169555455555252524f514f4f4c2f
37484b4c4b4d4f504f50514f4d4f4f4e4f51525051525250504f50504f3f3f4c50515054
534f54505151515253514f5456525150505456585658533a404e52555555545453545556
5354575656585758595653535552525231395057585555524f4b484c515253504e51544d
4f50504c484d51504c4a3b3e4b5151525049494f5151504d514f494c53525253524f4949
4d4d301a344c4c4d4c4e4c4e50525451505452514e4e4e5252515653514f4d4e49241e3b
4e515252504f4c4d4e50514c4e4e4f4f4f4b46494d4e4a434344361d334b514d4b4d504f
514c4a4d52504e4a4c4b4d46484849464c514f4f48212b434747474746494848494c4b48
484a4c49464446484744414141292d3e403a3b40423f3a363030
2d2f3334363537243d464643404242434b5767a7e0be7c5d59585354544e4d504b4c4d2f
37464e504e4b4c4e5051524e4d4f5154515150515251535254514c4e53423e484e4d5051
515150535454555554525157545454525455555557544e333e4e53535254555353545557
5556575654575657555356555556514f2e3947515655545354514e504f4e54554c4d504f
4d524c4a4f4e4e504f4d383c4a504f52514d4a4d52524e4e4f514f4e504f52545551504f
4d4a311b30454d504e5052504e4d4b4b4d5353504b474b50514c4c4f4c4e50504c282541
4d5251545555515051514e4c504b4d52524e484c4b4b4a4647483e1f33494b4c4a484b4c
51524d4b4e50504e4d4f50494a4b4a4d52514a49492831474a454a4d4b464444474a4d4d
494847474341444645424041412d304040403f44433d3a393535
2e3335332d3237253c413f4444414a4e4f545c6b97cfa86f5c5b5853514f4f4c4f4c4d32
35454d4d4c4c4b4e515251504f4e5253514f525351505453525150505140414f4a4f5054
545155515556524f50575656515557545153515051555130405254525051555452525653
545657555656535654545553575650502e36484d5453545052514c505657544f4e4d5251
515051514f4f4a5051502e3a4c494b51514f4b4e525451504b4e524f4f4e4f5156545451
4d4e3c1f32464c4f50555554524c4d51504f54514c4d4e5153504f504f51514d48252541
494f4e535653504d54514d4c4e4d4d4f50504a4846474a48484f44212e414a4e4f4d5150
4c514e4b484a51535050504c504c4b4e4b4e524d4a2a32484a48484a4b4a494b4b4c4f4c
484b45444241434644444444422d354242403d40413a34343431
3032323233393925404441403e404647525459627bc3d28b645e585657504d4f4f4a4933
3b494a4c4b4a4e5254504f54524e4f514e4f525251545557535352515143434f50545351
51535556565656565357535054585652515657555658532f3c4e5350525554535151514e
50545556555351515452525454515150283951565453585352505351555352494a504d50
5452554e4d4d4d5152522c374b4b4e52514e4c4d4b5053524f4f504f4e4e505051545450
504b3c2031484a4d505452515352514f4e53514c4c4d5057525050515155504f4e251f3d
4c53514f51504f4f53514f4d4c524f4d4c4b4a4b46484c48474d431f3042494c4d4e5251
51544f4b4b5256534f534e4d4d4d4f4f484a4d504b2a3044494c4a4a44454b4a4f4f4e4d
494844424142444546424544412b3440424445433b363438362f
3130323134373921494b3e424444484c4d5057626ba7d5a772615d5d5a4f4d53524d4c34
3f4a4c4f514e4c514e4d4d4e51515252555054504f545753535553565346404c5156544a
5052525558544e535553555354575455535252535558522e3a5055515153515454515151
525555565657514f53555456524f504d28384c535553515053524e5256514f4e4f4e4f4e
5455534f504d4e4d4a4f41474d514f514c4d4d4d4c4f5454504d4b50505052504e4d4e4d
4c49391d30484f4f4f504b5054514e4d4e514f52515152544e474b4d4d54514f4c251e39
4b4e4c4d4e5254545455504e5155504b4a4c4d4d4b484b4a4b4d47223343474a484c4f4f
4e4c4c4d514e4d514f4f49494d4e4e4f515452514b2933484d4f4e4e4947494647474c4a
494843444545464444444546442d343b3f42423e3c3936373534
2b2b3132343a3b22504e4143424646444147555c5f89d0d0979278645b53534f4f525036
3d464c51534f4c4f4e4f4d4e505253535350525350525355585352525149434750555858
54525555535758545551535052515157545153545453522f3c4d54555455545355525553
525553535758585351534f4f4f52534e29394f514e4e4e4c5056544d4c514a494e4c4e4f
524f4f504b4a4d4f4f4f35434e50504f4d4b4d4e4d4f524f4d4c484e504f4d4b4c4a4b4d
4c4a3c1e33494c4f4f4d4c4d51504e4f52534d4c4c4e4e524b4b4c52585454554e261d3b
484e505453535855535152504f53504e4e4f4d4c4b4b4c4c504d46203548494c4b4a4e4d
484b4b4c4b4e4c4e4950534e4d5150515153504f4b2a3448494b4f4c4c4944474b4c4e4c
484643454546464646444344432f35414945423c38403e3d3d3c
2a2e31333635382654493e3f41424243444c545b5b64a2dadfde95675e5456545051503a
3a454d504e4a49505353514f524e4e4d4e4d4e525254525255535152514a434f52525152
504f5251555756555956505150515556555657565254512c3b4c52545555535253535751
51515052525857525051514f5052565123344f524f4a4d4a505156565355524b4f514f51
54504e4f4f4e5151504c2a3b4f51524a49494c504d4b4e4e4b4a494b4d4f4e4a4e4b4e4b
4d4a3b1d3048484c4f4b4748494c4747504c4f4d4c484d4d4b485051514e4a504c28213f
494d4f505051534c514f524e4d4c4b4c4e4e4b4a494c4a4c4a48421f2f45494a47464a4a
454544484c4f504e4d4c4b49434b4f4d4e53504c4d2c3746434548464742414747484947
4342423f40424242413e38393b2f33404541433c3c3d37383839
302f313233353821504d3d38363c4445464e4f575a5d88d0f3f3a370615a5b5353514f39
3c4d4f4d4e4d4c4d4c4f4e4d524e4d4a4a4c4c4e4e54534f4d4b4e4c49413e4a4c49494a
4d4d52504e484d4f535150555250535552494b484a4f4d2a394649484949464a48494b46
454443434445443f4044433f3e4343462934414648453f41414247454a4f4c4d504a4844
43474847413f3b4143442b3039393a3332363633312e2f332e2d2d2d2f33343232353936
36322e1f2d3634393c424138373c3b3b3a3c413c3f3d3a333532322f2e2b302d28242a2b
26262727282829262a2a2c282a292b2c2e31312e313437373332301f2832353235333336
333332332f322f2a29242421211d201c232022242327221d1a1b1a191c1a1e221e1d2120
2425252425262427282a24242e2c3443414443424139393a3330
32302f3337393c28514134353936373c3d44494a484b5d718195a59464493f383433322b
2c2e2c2d302c2f2c2b30303133333434343638383743433b3b3c3838332e3833302f2b2a
2724242524201f1b1b1d1c1d1a1c1d1d1d232522212522272626282a292d323233303334
34343634342f30322d2e2e2b2a2d2a2a2e2c27212022201d1c1916151518141212141a19
1a1d1c1f2324282d2a2c2730322f2d322f2b2d2f313134342d2b2d2b2e2c272729282c2a
252224292a2722212225212021202326251d21242b2b2a293336323139383a3b3b272330
3d403d3c3d3d3c3b3734373836343433302f302f2b2d2e2c2d2a2923252b2d2a2e2e272b
3236312c32363b3b40433b3d3c3c3e3b3b3a3b403e2c323a40403837393b37383531332f
2f322f343332312a2d2e2d2a2b2a313f41424345423c35393731
2f2e2f2d30373b3737251b1919191417202326282f323c424f66b4b87d5253473c3e3b38
393739363832312e313233322d2d2c2d3031302d2f2f31312c2c2a2f2f2f303130383c3e
3a41434243424b494d48424a4647444745444441433f3a23333d40403e413e3e3f3f3f3f
3e4247433b3a3e4345474a4946484b4b263247494c4f4e474a4d4d48484d4e4f4e4c4a45
4748494b46484c4c46472b3d414544454442434448484841444645444c49464a4f4d504e
484540202b404b4d4d4b4a4f4d4b5253584e4d494d494442494c4e4e4c4d4e4e4a281934
434c515252524f5256504e50504e4b4c4e4d4b4a4c4e4f51504b471f334e524c4c4a4048
4952524e4f4a4c4d4f514e4c4c4b4c4e4a4d4c4949323d4a4e4d4745474b4b4a47484847
454644484b4a4b464b4848464535343e43434445423b343a3c35
2e2d2f33333533265f55443a353d4143414443494d5056565b74c9d6b37c8f6957555442
454a4d5055504c4b4f505251514f4e53545355535352515551514d4e4c48334552555357
53514b4b4d4e50575250535450525251534d4f5156514d20384d54514d4f52514c535153
4e5357504c4c4d50504f5554524d4b4b1f2f474f5155534e4c4e504a484c5050544f4f52
525456514d4f4b50514f31444f50494b5151524b494f4b444949474249474a4c4f4b4b4b
4b4c431d253f494b4f4f4c474f4e4f50504c4e4d4d4d5551544f504e504f4c4947281833
48525853524e5258534d4c4d4f4e4e4d524d49494d5150524e504a23364b4f504c4e4446
4b4d4f4e5051504c4e4e4d4b4c474a484c524d4c502e38484d4f4b46464b4d4c4d4b4947
4b494a4a4746464b4b47494746373740464547423f4138393637
2a2d312e363b372676674c3a404341434a49494d505154585b669ccedeadb17b625d5b47
48515153585952535453545359555357504f52535354545255574d4e544c384954575754
515054505454515355585050515554545553535750524f1f3e4e4d4e5053534f4e52504f
535255524e5050504f4f4e51524f4e512133444d515155524f4f514f514e4f4f484d4b45
4f50554e4d4e4e4c4a4c3444494f4e5051504e4b4b4e4b494e4c4740434349494c4a4849
4e4a411b24434b4d514f4f4a4d4a4d504b4d4e505351505350544f4f4b4b4d4e4e2f1b3c
494d52524f4d50504f4f514f5051524f524c494850504f514d4c4e20394c4e5053524c4b
4e4e504d5152514f4c444b504e4d4b4e4c494b4d4b303a4a4c4c48484548494b4a494947
4b48494d4644484d484749484738353f3f433f3b3a3c36353134
293334353a3b3a2b70654b454041433c3f474b50514d565c5c5b77c2ebe5ca8e6e62685a
52575455535552515553545458545658534e51575254525152504f54544e324655565756
504e535555525251545050565557535451525256525450253e5152525958505051525050
525250515152504f51514e4f4f50525321304350514f4e514d5051514f4c464d494c4b49
504f524f514a4c4f4e483d4549504f504e4b4948494848504e4d484346474b4c4e4e4f4c
4e48421a27434d515051504d4c514f4b4e4e4e4e4e5352525453504e514d4e514f2e1c3c
4b4f4f4d4e51514e514f51524d4f504d524d4e4c504e4f50524e4a1c3c4d4a525251524e
50494d4a4e4e524e504c4e484a4c484b49464b4d4f3841494a48484c494b474b4746484a
4d46454b4743484c494948444738303b424440413a3c3833312f
2a2e373534353a2c5c654b3c433f3e3f434846485254555857586db9e3eeddcca276937c
5e575856535756555354555555535558554f52555153555655535454584c2e4954555355
595952535a58565052535755545552524e545656515052203b4a4f4f5756525052525353
5051504f52504f5152504f4f504e51511e2d48504f4f4c5551504c53574e4f54504b4a47
4b4f544f484850504c4d35434d4c4d494e474e4a4c494a504f49484c4c474b4f4b4e4d4a
4b4a431d23434e4c4c4a4e514e4e4d4a424d50524d4c4f524f50504f4f4c4e524d2e163c
4a4c5050505153545051514f4f504e4c515050505255545155504a1d3c4a4d4d4f504a4d
4f4b4e4d545350474b51544b4c4e504f4f50514845373f484146494a484948454549474c
4c49494b4a494c4c4a494847463b353c3e4445403c3d3f393131
292e33333a3d3d2d548e5f48464747473d4846464a4b54555858637ea2e3e7f0d8a0b88c
655a5a59575b5a56555357545757545759515654505756505355544f53512e4451545452
4e4f585857515356585c5a57565255575957575558575421444b525155534e5051535151
50555252514e4e514e4e4e52514c4c4d1b2d48504e504c514a4d504e4d494c55514f444d
524a4f4a4947444d4c4d353f474b4d4747464c4a4f4e4e4d4e49464c4e4a4c484b4c4d48
474e471a22474d4b4c514d5351534e4e42494d4e4d4f4f4f514c4a4d4d5254545032163a
4e515351524c4f5150504e4d4f525050525153504c4e534e4c4c4d20404d4e565454504e
4f4e4b474e4e494b534c4f4c4c4e51514f49514c4d3b3c474a4847494d4a4a4745464547
4a4a4a464a4b4c4d4c4d4b48443e323c4147463e3a3f3c3a3335
302f2c35393f3f2c51ad6645433e42464343484a474a4c51535a5d6679a3ddeaedccdf99
6a636b655e5b5a5857525353575758575a54584f515556525355524c51532d4453565756
53524f4b555052545555585852525858595c57575452511d445252515456525152555352
4f555253545350534e545256535150511c2b46544e534f565051535251564a474e514745
4e4f4744494a4c4b474d41454c4b4e4d4c4c4d4e4c4e4d4d4e4d4b4e4c4e47494d4c4b4a
4a4d47181f3d49464a4f514f4c4e494d4d4c494b4d52524a4f514f5151575353533a193f
4f475057504e504e53514f524e515252545454514d4f514d4f525223424e4e5455544f51
55514b4b535050514e52524b4e4f54515455494e53413c424a4f46494e4d4e4b47454649
4a4545464a454349494b4b484242333b3e4343403d3e37383733
2f3031303437352d4ea66e4c493d3f43423d434d464d515055565d5c6372a2bfe1e7eca1
7e99b88165625d5a58565556575756565b5759565055585553534f51524c2d4455565257
5955525355504e585958545056535151575555545555542044524f515554535454535552
4d4f555650515254514f4e4f575656591e284653524f4b4f4f4d4a4e534f4e4b4f4c484c
484c4d4c4d474d534f50413f4a4a474c49474c4f4f48494f4f4c4e47484a474c4f4a3f44
514f461b1f3c44484f4f4b494847565551514f4b4d4e4e4e4f55535455524d4954421840
535153534f4f535352505055504f53515653545453555451545251233e4b4e4d51555650
524f4e3f4d524a4d504c4f4e50514f4f514f524d4d3d3b46464a494c4f4d4f4d4b4c4c4a
4949474a4b48464847474b494645333d434042443e363b3b3c37
2a312e343b383932419473564f47494148434c4d4d4d4b4f5656545860616f7fb8e9c6a8
b7dbea99839e715c5d5a595a5a545257585758585356595a5a4f4f5457512e4650535452
5758565656515351574b5355565755565a54565856545420455851535557555753535353
4a4e4e5652534d514f4d4d50555451531e25465054574f4e4e4d50544f4f544f53474c4a
4b464c514c4949514d4c3a3f4b473f43454b4d4d4e484b504d474840494c484e4f483f44
4d4e471c203f40494c4c4e50474c4d494c4f4e4d504f4f5156534d52504a4a4c503b163f
5358555454535152535455565552535152504f53535452504f5350223f544b4d4f58524f
4f504f53504f4c4f504f4f49534e4e5050544e5050433d434a4c4c4a4c4d4d4f4f4f534e
4b494b4c4d4b4c4c48474c494647323c45424441453d3636332d
282f33363133373240a0a165504a434742434849454447494f5151545e5f616a9edba8bb
deedf2c2b6d583635f5c5c595d57575b585657565657595e5651555655542b4b55555751
5558585656525455564e505755574d53525753565250531c435753595753575753525753
4f504d5054514b4e4f4f4d4f50514f4f202546544d4e4b4847494a4c544f5251504e5646
4b4e494a49464a4a48433b42454543424b4a484b4b4c4e4f4a484443474b464b4a434246
4649431b1b39454948444b504b4c504e4b4c4f544f4b4c50534f505056504e4c543a113c
515352515055504f52535154575151514b4f504e4e4b504c4a4d4e243d514f5051504a4d
484a4a4e4a504e5355514f4f4f474e4f4f5050504c3e3c484d4a4d4e504b50525051514b
4d494b4a4947494d49474b4742432f384649453e393d393a3a32
2c2e3435363b3634458a9f735d50474c474542424c4e47504c4d5354595d5d627db698d4
e6e8f1e5e5e688676264675f5c5d5d5d58555658585a5a5b555556575353224356545153
5457514e5a595656555757555756524d50545858515151194452505753505455534f5353
5552524e545450534f4e54505355534e1f1f4a5551464b46464b4748514e4c4d47444c4d
544b4e4d4a4b48474a4641494c49454044434848484a4c4648464345454b4442423f4145
4846401e1b3a4c51514b46464d484d4e4a4b4d4b4e4f50574f4e4f5051555552553f1142
4a4d50514f4f4e4e4e4d4c5453504c4f4c4e514a504f534e4f4e4e21474f4e5555504c4d
4850514d5352474e4c515450514f4c51504c4f534e3f3a4a504e4e4d504d4d504d4f4f4d
4c4c4a4949494c4b494b4c484242263c4545453f38383c3d3a38
2d2a3336393b352d4257c4a86c554c4b47444a4b484a45464b515254565a6063697d75b8
dbcbbfe9f5e5ae7c6c7396705c5e5f5d5a595a5b5a5a5c5b5a545253535224465557585b
595450575456565251515759585a5a5752525e5a56545218495754555456545153534f53
5452514f545650514f494e5250544e4f1e1d4853504f514b524e50494547494e51494d4a
4b4951504b4942414b473a3c4143424341424849464a50445144474b484d493f40424344
414743211b414e4f494f524a4c514e4f4b525255484b514f4b4e534f525147535042153e
514e4f505353514f4e5252554f4f4a4f5256514b5153514d4e4f4e22474c4e535350514f
4d534f5053534c4e505752494e4b4f53525150524f4237484b525050524f4d494b4b4b4b
4b4b494d4c4b4c4c4748494a4443203d444042424037333d3632
2a2b323b3a3b3a384151bccb976151504a4f4b484745484f4f4f53585754575a5f63619a
af8f83d8d2c3dbc5a295c780625f605e5b5c5b5d595959595959595c5b54224c58555559
5d53515151565154555b515155585158595a5655585150184a5751585056555455525353
5350515352515551504a4c4a4f4d4b4c1b1e434f4851514d4f4845494f46414146514f51
51454c4549454640474c37373c4744464342444c454b514d4d4446494847494143494047
42424126183d4d4e4e4f4e4b494f4e4e484c4d4a4849504b4f50484b51544d515443113c
52525356505350484d5354514f4f505257534f4a4e5250514d4a4928474b4f5051504b4b
4f4f47535554544e525455504e4d505150564f504e4939484f514f4f50504f4c494c4a4c
4a4a4b4e4e4c434e4849494947451d40463f404540392f383231
2e30323a3a393f32354c9ce0d572535555504f45474d4b524f465553515057575d5b5c78
6f6c6a978da5e8f7e2bad3856363636365625f595a5a5a5a585a58565d59234c55595a58
585b514f5659585b59584f565856585155594f5156514d13495856555356555252505352
5451545352515556514f4f4d50504d4a1d1c46504a464e554f4c4d4d4f4e4d55554f554d
484b515046444b42414a3a3b3c43434a4448434b4345484b4c3f3f444c43464344433a43
4b434324173f484b464d4d454b4a4c454b494c4b4d515756504c4d554e50514a50431440
4b5052574f52514c5354504f4d525553554f4d4b4c4f515353504c2f444c505454514c4d
49474e5354564d5655504f4f554e514d5355584f4f4d384c51504f4e4c4f514a4b4c4c4c
4c484d4d4c4f464d4c4c4d4b49471d3646414045423c35343036
3232323931343a383c4f77b5d9735e5c544e4f4f4a4551524d4c4c53514f4f555c5c595f
4a6161696fabecf5f2d9dc8b686666737465635d5c5d5d5d5d5b5a5a595c1e4f55585955
54585256565b58525559545652585956545653555c585113475258555458505151545254
57545552515051515051515153564f50211c4651504c4d4c4d4b4e494a484c4848444c49
4f4d4f475042454a484a41453f404443444849463e4345424b3e40434944494849434044
4b4a4523163d4d4c4f514e4b484b4c52504c4f4d534c4a484b4b4a514d514e4e4d3e1242
504d4d5551564f51505054564e4e5352554f51504d4f515355544b2d45534f4f5352524d
504c4d54555250575253524f5756505552515350524c39474e4d4f4e52525252514e4e4e
4a48484f4c4f4c4d4b49494c47471e343f433f4840393e3c3247
2c2e313233393631384c576aa194916a5a554f4e524f4d494d4d52564f4c5250575a5753
42595a6168a5d2cdeef1ecb275676c98896c66605c5f605f615d5d5d5c5c1d505a595a5c
525959595651585155565556585658575950544f585357144c53555855544d5150565254
575453554e574f5250524f5153534b4e241746494e444c454c4e52444f464a474447414c
474d4e4c4b484743404c39373a3e454142414645453f463e4a47444349444a4a4a49484b
474d4325153e4b494d514a4a4b4d4d4c4d4b4d4a4d4a4d4a4e4e4f4a4d4e4b524c3e0f42
504d4d514e584f4f4f5350574d4d4d54534e50524f4e4d4d524e4b2d474d4d5154545251
494d4c534f5155584f4f51514e53514f56575158524c374a524f5051564e5255554f5251
4f4a49524e4a4d4d4a4946484349203b3b4243433d3d3e383637
33322c31363f3a3b39415861a9efeea9765b594f5151494c505352525150515455595750
3a52595e62778a8ed9f5f6e8a9756ead9b8b7c66606061615f5f5e5c5e5b1f515b5d5a58
595f56585c595a5b5d5b5756565659565153585156565b14505254594d514d4f52515256
575250524f594d504d4f4e4f56564c4c241444534e4d494d4a4d4948424a4e514949484c
4c4b46484c424743464c3a323e40463f403f4547433c4540424845424c45474744464249
464345251333454248434347444a4e4e4d4d494c49494c4d4d534f4e4d4654514b400e43
524e4e4e4c504f4e4d504e4e4e4d4d50544d4c4c4d4d484553454b30434a4b4c4d4d504d
4e464b4c4c4b4c4c4c5053515155554c4a4b53574e4f303f4b4b4c4f4d4d4d4c4d50544d
4c49494947464c444245433f3f41213d453e3f473f3f3f3a352e
31313330323638363a444f5772acd3c9be665657594c524f4f524d4e4c5155555156564d
304d595a5d5c60679fcccbe9e6a27cb5c0d0ad836c64605c5d685d5b6058274c58535752
57544f5250555d595856535450565654505457515151511b4546474f41554a4445464853
4a4a43403f474c474041444b4d434339251b334647433f473d3e4544414c534244404843
41413b38363b363031352b282e2e302827352d2a25272c33292929293e392f2c2d313a39
302c31261b293033383838333834403f4f44332e393f41382b272c28442620291c1d2925
2421252645272426264a412c2e2b2c434d35302c344d35343a2e332e37343538394b4339
35312b4441352d272a4f2c231c1a213324211d1d1b1d2c1b1c1b1c30462f23212745492b
2623273d302b2e28284132292c29273a434342433c3f40353a34
2a343430323e393531313f41446597c8c8644c564f302c2a32523124272a2f39292a2c2e
352a303535344a3f4e6c6b9ceac395bcd6ddc2bc8c6358515e94676660473f3530302e3a
5631211d21254d251b1b1c3528202021204d2c2927262b332e2c2c2f2f52343131363a4c
333a37312e3441383030314e4b2b2525242b201a201a1d3f1f1613131321231513181938
201b1d1d1f33282626282d282d2c292d2c392d292f2a2a362c2c272b3e362b27272a3a31
23222025241d1e2121212723202020204830242020203632302a2f3c4d3e383e413a1c3d
3e3f3c3a4b3d373a354b4737372e30484f32303030472e2e2f282c2e31322c3236484037
3b38344446363b393f53423a48403c4042423d49423d2e393d413b434d4037363947483b
3332323f353031312f4236302f2d20353f3f3d3f353f3e313233
2a2b2f2e323437362b2d363c405a6cb6df9992635950474d50794c3e3c423e443e3e3d3b
313a3f403c3f4d4341494d5eb0cdccced0c2cee2cc9b857792dfbcd3b2663949544d5553
5a4f555554515759534b5056524e504c4b584a42473d48254046484645543f3e4444494d
3943473d3d444b47434746534d4649462b1a47474c4d4f504d54434c4a4b484c4d444544
41433d423f4949413e3f3c27363d363e47463a3c483e3a3e42463c42454443404948494a
4741412d0d4446494a49494d47474c49484d4e4f4b4e4d50504c4b4c4f4e4c4f46491346
4b52525255544d4d4e50504d4b48495053464d52494e4a4c554a463a474f4e4c59545958
5a514f4f55545452545758504f4f5153544f52514a4d2a4f4f53474c4b4c4b4a4a504c4c
504d4e4947484d4947484c444649103641413f413942413c3336
2e2c2f38353433312f40474d5158607aa2ceac705d5d56565f935c535050515452545252
29525155565b5e5e5a61626173e7f3ebebd4f1f7f3f2e6dfeeecf9f5da89346267665f61
5d5f655f59585b5e605f5a5d58565a5c56585c585657591c4d5a5a5555595454595a5952
4e51544f5354534f5056534d4f56514d2b144c4e504a4f4b4f4e50544d4c4d4a444a4a44
4c44434c474d4941464a3e274546404242463b3f4c424446464a41404940454148484e4d
464540310d44444b4c50454a4d4b4f4a514c51475451554e4a4d4f4f514d4e48474d0b47
504f4a4f4e55524f4a51484f4a4a514d504b4d5547554b4b52534d3e464f565257525556
5651554f51524c564e54554e4f515554544f51554e4b224c494f4e4d4e4c494351524e4b
504d4b4c4b4e50494949493d4450103947483d43423f3d363232
2e302f32323939312e3f445350555d5e71e3c8bea0615a5e649762595157575555585755
224f5759585a615f5d5f5d6068b0d7e5c3c6efccebf8fafbfae4edf4eeb2677e85997467
61615d5e5e58635b615e6061595d5d5e5d5d5c595b5d531a4b5b5a56565357545b585855
52565852555c5456575054564e5a535028104a554d4d4e534d48535154494a4c514d424c
4c4d434e4a454c4b4d48403d464445463c3d454a4848474d43444440493b4847444c4c4b
45493f340a4a454e4b49494c4d4c46474a4b50514d484e584e544550544947474a4f0d4a
5450514d4f5355514d4e4d5348505651505450544f55525350484c3f4550544e56555055
514e505451564f545554544f5651555b51545150554f164e544d4f504c4c4c4852504f49
4d4d4d4e4e4f4d4b4c4b4545454d0d354a4641414337343a3a33
29292f31353339352539404c4b55545f69def0efcc68646066916b60575b585256595252
204d5a5858595d5e5f605f5f606dadcd7b9cbd86ccece1e6dadedcf2f2df9bdbeed9cb74
646368636560615f5f5f5f60595f5f585e5b5c5a5a5b5719525658565759595555525558
54585d55545a5859575256584c564e52311049545a49534d444f534e4e4f4d4a47514454
5142464b4d47464d484c433f4c4c4c453e3b4850454b444842424a414342484b43504543
474241370749474d4a4748444e464e4d4a4c544f514d4f514a474f4a4e534e474e501548
5053504d505357554e494f504c54535453584f55535051534e474d3f42504a4a4a54544b
56534c5555544f5158564e505151554e54564e545450124e504f504f434b534d514f534c
4f4d4f50504a4b4e514e494a464a073a44434040403d373d3332
2a2b333035353931263a40474c5551545f7ad3e9d48d6e646f966c615c5c5d54555c5050
224f555756575a605b5f5e615d628093656d706eb1dc939c86d5a6cae9facdeaf5f1f478
6966656c6860666063656b606061605d5c605d5a545b591e54555757565c5c575851575b
56565c585756575a5758565351544e542f0f4f5153514e504b524d48454d4d4f51445048
4f4d50474a42424f4c4844214347444447453e4b494c44434a444a4240484a4745504942
4343433b0a46474c49474a43484c4b454d48554c4a4a5556554f4d57505555544f4d114d
5451555050545457534756524e564e5354514e58534d4e51504e4f404550524f4c54544d
55575956505752575b5658585555505454524f545454144c554f514f4c4e504e4f4d5250
4f50514f504a4e4f4c4d4847474c073b434143434341423f2f3a
2b3134303034382a223c363f464454555d679bcae0e5b1686f997967648e6158585d5653
1d53595b53575a5e575b5d5e5e5f5f625d615e68a3d3656b688e6c7dc8eb8195c6e9f084
7d716d6a7772b66e80ac696370635f5958605a5d5b6058255457585955545d575b52595d
57545a595756535953545554545452502b0a4e56515053565057514f4a4d4a4754544d49
514e4d474a4e4b4644473f1c40404044454644454546454247444440434b4847474e4649
4043444006474a4b45444a4d4d4b4f404c545455474a565456554d56454b5152564d1050
5546514d4e554f49514b5a554e58535253484f56524f4e54564a4f433f50575552535651
545556574f57544f57585858515854564f514f4f524e114f4e4f554f4950544d52535350
4b4d524e484b484e4a4b4a4b47470d393f464941463f3e3f3e30
292b2f2b2b2f322e1a403f3a4444474a53626476adf6e4a580a383a199be615d605d5a55
1e545758565d575b5b5a5c5f5b5e595d5d605e6383a25f60606663687fa12c6ba7f0dceb
d6bfc37dcea8e27aa7d6bc88ce80645f5d5c63605d5c5a24585a5c5b59555a575555585b
595157545a5853575155545858575551370b4b514d564e514c4f4d544f4f4d4456514b4a
55504547484b504f43454129453c4a46453e44424041474640423f424a4b4345494b4443
41454939074744514b484d4b4f4f4e514e4c504f4a4d474f515553504c4d4e4d4f4d124f
4c4d56544f515449534d545554535357564e4f544b545154514d504c39535559534f5456
53514e514f4e4f564d50514a5454515451574f54514f0f4e514d56514b50535251505452
4c4b514c444d4a4b4b49494b44460b3b4646404346343e3a3d2f
282b2e322f34302f223e4441444a404d5458626c7bc3c8d6a8c4b7d2bacd696464615f5c
20575759575a56585e5e5b5d5b58585d5f62605e6361605e5d616063645d215c93ead0eb
f8fcf5c1eaf2fad1c2e0ee98d4886c65606062605e5e582a565a5c5d58575c5a59555e58
58565552555a5554555b545d505a5654370c4d5a50545056564d504d5154514f544f4a48
50514e4e4443494849494c2b47473f43414647414546414542433f45494a3f474b444541
4c404134094441524f4b4a504f4f4d5345474d4d4f4a545454554e4f454f474d4b4a174f
4550584f4d51504e534d514c56525054545050564d56545252514e503a554d4f4f4f5655
50515051505555514f45544f584f515854494f51485313504f4d5653564b515455524b4e
544f494e464d4f4a504f484b454205354943484646373938363c
262a2c33303034311b393f3d403d474a4d555e61617ebef2eae2e0e9d8d07b696967725e
20585e5c595a5d595d5e595d5e58595b6165615a5d5b5f5f595a5d5e645c19577cc47d7d
c5f5feeef0ece7fbfaf6fbe1d48f736a6965656565636133565c5c62555659595d565d56
575a575553585953575c5a59535853533c1052575557565751545654594f5458514a4a49
4d4b544343404245454e431a424c454340494647434a3f4644454443474940474a434745
46454d3d084a4a4f4e4f4e4f4f464a4c4d4a4a4f5451514a4f5553514e4f4f544e491a4e
4e5050504f4f50485452505056555253524f54524f51524f544e4e52384f4e4f4d4f5551
5156544f564e57545152514d584f515448505155544f085753504d4f50514a50524f4e4e
524f4c56494f4f4e50534c4e494307344c3f4a443f4343403e38
29292e2a2f3632321c3a423c3f3d44424f545a5d5d6da0d2e8dfe8eddfe1c8867171a167
2d5a61645f5f5d5c615d5a5d5e5c5c595f5f5e5f5e5b595b5a5a5d605e57185261716167
819fe8f8faf2e1fafbf9fafadeb894b770686a746b6461475d5d5f5e585a5b585e565a57
5158575c595a5a5756545b595656535239104b51554e59524c54534f544c4f4d4e44454f
4f4d4c474f46464d4c494619464c454445494444434941444846433f4445423f4f454449
4347483e0c45424f4a494e4e4c4b4e42494a4f4f514f514f4d4d4b514f4a5454554b1b50
574d4d505053514a5756505153545352545253505050535356494e4d3354565055535051
56534f5153544c54555c514f54545555534f4e55524d0b5052554f504d514e4e50504f51
5150515354504b4e4d504d4a4a480b324c42454346403c3d3e2f
29282d322f2d33351c2f2c3b3a433f404a4d51595e626c7a8599e9dce0e1eec8917bba88
456064646160605c635e5d5e585a5c595c595b5e5b5c595a5c5d5d5d5e5919415c606166
666b81a0cdddc0f2f2ecd5cbf7f5e9e6958686b8857a807f615d625c5e5d5b5e5e59595a
4f5a595957595d5859565c5552534f543f1246554b515555544f5049594a4f544448544e
554d4d4a534948484d434c324e4b463d4b444245424746414649423f4248423b4d444047
4945403c0947464e4c514d494a48514d474b4b4f4d5154504c565350575356554e4a234f
524f475050554f53555150504f51525156524e5353535353554b4e4c2a50564f56565455
565855544d56575453585153554f50554f4f5055564a0d55505256514d524a4d51515355
5251525050504c504f4e4a494e470c304a47473f433f363f433b
2a2a2e312f2f342c1a2e32333433404747495451535863656571babde6d8e8f2d8adc59d
55616562606163606260605f5d5a5c5d5b5c5b5b595d5a5d5c5a5d5a5d5217386061605f
6265686ba3d8a4a0958482b2d1f6fdf5ebe0cfe4d9d8d9a4645a5f5d5f5d565e5b5b5b5c
545f5e58575c5c5e5a5959565a59535438114b554e544e4b5454554f5449414a544f4b51
4d4d4c45514441484b483f20433e444147454448414749454344414445493f38453e4145
4945453a11484a4f4c4f4e5546535042484d4d51444d4750554e5054545452524d4c2a4e
5145504c52534a4e525355585053545154534e565757565355514c4a2a4c554c5955514d
5155554f575456585e5454554f56545158515654544a0a594d50564e56514c4f50515652
4d4e564e4b4f5151474c4c4c50420c2f49453b3e403c4141433a
2e292b2f2b2f322f1b2c2d3834353c404042524a4f565a5b62667a819390aad0e1dcd6a0
61686c67666767626263615f605f5a5f5c5b5e5c5b605e5e625d5d5d5a541b3b5c636263
6864636a9ad3a0676869678084b4d1ebf9faf8fbfbfaf6bc80595d5e6261535e5c5b605f
5b605f5c59595c5d595d595b5b5c55593c154d585558555458505055565950505151505b
54504f4b4f4d4d4e4c4e46164a41464444484b4c434b464a42433e4a4449443d3c404147
464a4837154b4a4c4a4d48504d494b4b4d514e544d4f494f5a4b53555656545150482a4d
5449544b52514e52544d59555455545453524d5753565356544e4e4c284c535457585151
544b4a52555458595955545152565556565a5552554d0c57514d5353525254595053544f
4f4d514d4f4f535046474d4b4c42082b49474143433447404339
28262b2f2d2d2c3019343337353535374248514d45575a525a5b5d696c6c89a3d3f1e0ae
88a1a89f94a79e6966666160606260615d5a605c5c645f60605b625c5b4e1b3f5e5e615d
635e616486ae82636361646b6d7485bcecebf8f9f9f7f1d3a56163655f6159625f5d6b6c
5e60615a5a595f5a595e5859595a5e57411546524f5657544e515156564f5356564f4f4a
514b4f534f4f494d4a4c4a20544a45474a4c4a46454e46454647474747464b3f3d463c49
4545413d16474d4a4c4f4d4e51504e4d4b515050504f4f5157545152545154504b4c334f
514e4e5056505052544f55505254535455504e514f525452554d544a274e555154555356
565351535550555a595b5553555455505c6f5851544b155253535155505150535154554c
51504f54555155544b484d464d3e05284a4a4542413a43384139
27292b2d252c2e27142d342c33353e3a3e3d45464d4a54535a5b5b636465899ccfebe6d6
b4dce8dccadecf79716a6864656064625d625f6061605f5d5f5e5e605f541a345a5e605d
5c5d635d6c646364636263626d677182939bc1e7e7f2e9dcb269727f60625f61636d8f91
5f635e5d5c5f605a5c605a5b585b5a593f15495a515956575451545157565254564d544f
554e51504f51504e4b4a412f4b494645464a4947454a49444948494349474b4346453b44
4749433914484948484c494f51544e505155544d4a4a51514f514b4a4b544e4b524c2c4f
4f4d4e5054535053515152524d5454524c4f5150524f575553525147294a525157585358
53564f5550565558564f4e5854504e56585a4e4e5347165354555052574e525056545654
514b4c515451544d4a4d596649410c2649494845403e3e3b3a38
282a27292b2d27261c302a2f2f3132333939404145484e51535856585d61808d90a4d2e9
bff0f3f4eaeee7b0a78f6e6767626664646561656662625e5e605d5f5f521e375a5e5660
5a595c61606163625c5d5f5e6365686b71789dcc95aac0ceb280aec0696a60616478afaa
6162605b5e605e5a5d5e5b5d61605a584014475b5a565659545154555b505758504d4f56
554d5249504f50504e4f3e1f444345474b4548484947494b4a4548424b424a454d464045
454c4238144443474949444a4c4c51514b4d4f47474a4b4f504b4d4f4d4e4d4c4c483250
535051524c4d49514f4d51554d505451504e50535050545653535244224a545352555152
504e48515256564e5051524f5154505255545050544b1257505651555952514e51525254
4f4d4d4c4b4d504a4d4b566c4c441324494441443d3c3e40383a
2228252a2a2b2c26182f272f2e2c323337403d3f424250514d5856525561797e6c749fc5
a8f0edeff0e8f1e9e3b77776886a66696864636263655f5f625d5d5c60531e335d5d5d5e
605b5d59595f616560595e60606361646766798971779298d0d2e9dc7f8865636a76b3aa
6062615c5d5d5c5a5c5e5b5e5f615c58431949575553565c5753515259524d525455514d
514d4c484d4e484849473f14433c4245434447454d454847463f413b433b473b46443c41
413c3e33183a3f40443d3d40404341474a4b4f4b4b4b484a4d484e4a4b5050504f43394d
484b49494a484b494e4a4c4e48484a4b4b444746444945414a44423b2440464841454843
473c3c484f4d4f4e504e49484f4d4f51534b51524643134f4e4d4c4b554b454749484847
464748473d3c3e3c4238393c3a381a2840463f43433f42424038
2023272824272b25152d282a313031353533333c3c3e4844424d4e51515b67685f646a7b
72b6bccde4d9bef0e3c79daeb2625956565654515253504e4f4c4d505048263151505154
595854565858565a5656585451514d51524d555353545f78e7f0e4c07082565e67558983
44474441454342414244444e5d5f47463c213f46403c40403f403f3b3a332f2d332f2c27
332d26272724212223211f251d1c24211f232023282728252625232327272c29302d2728
2a272a252027262729262321211f2221221d1a1c1b18181b1a1616141917191b1a1a241f
1a1d1e1e272829272a2a2d2b2b2f3039332c353533342f2f3333322e2a2e312b2c2d2923
2320252522251a1b1419151013101819131719161a1e2e1c1f261f21242421272f2b2b2a
2b2e30302d2e312e302a2c2d2728233141404142454544413b34
1b1d2425262827261a18181917151a1d191a151a1a17191d1e211e23262e2f3134393842
4e576272868876b9c1d3d5decd825e5d6d63584d50443d34342f2d2e2d2f42302726211f
1d211b1e21202326262d2e2e3335353c3e4049454d484f639bc9e1c88ca4a49992628d82
45454a6069493e443532384b797231343034302d2d3230302a352d2d30393637313d3c36
3e3d3c424342393a3d3c2e212f3735362f2f302e2d302e2a2c2e302f2f2f2d302f2f2925
272a2e28282e2f30373a3035363b3a384348434c4744474a49404044434843413a3b363f
413f3b3e464241383e38393d3737373f3f3543433f3e3a3e3e40423b2847424243464249
4948494a49524c4d4d4a49434c44514c4f444948443f1b464147453b41413e414241423f
3f3c3e3b423f41413d3b383838351b2543444143423f3f3d3c3b
1a1e202624292e2519191b181d252428262a333236343035353d40423d44464a4b4a4745
354a5055595c6391a5daeeece4c795b0cebea694997a82666266605e5b502a3f5f5c5b5c
5b5c595a5d5e605e58595959595c5c5c595c5c5961595c5470abeae7d6d3e7d0c194b4a5
666475b2c58a7a9e756879a8cebb787a4c1d495c5b5a5b5954595b555552515352585958
555156514951504352503e1b434e4b4c4744494246454a4a494a48484f49494c474c4742
4245443b23424647484b454944484d4c4745554d4b4852564d4d4a5052555051494f3d4e
545351545857514e51514a52524e4d505550535553525051515452471d525053514e5158
524f52555557534c504b50484d4e55554b5151554e45104e5353514d535154505252544f
50504f51524f514e4b48484b493f171a3f4345494741383a3b31
1a1d24261d25241d0c262629292c323534323739363840463d40474a4c4c555a5b5d584a
26545b5e605f697e96d6ece2d5e6d8ebf6f5e0c1bbabc59186956c616354283d6564605f
5f5e5961635e5d626773915e5f5f5f5a5f65646165635d51638bbacff7efefe2d9cccbac
756f7fbddbb4a7d0b28aa9e9e7c8a1a4502856706b5b5e5e5a5b61635e5c565858595656
57535b4f4c4f50474d4e401b464b494948484b454c4b4a4c4c494b4a4b48484947494b4c
494a473f29494548474d4d4b454a484a5049444e534e5351514e5555595956534d4e3e4a
5754505655514f4d54514d52554b5051555252535051515353555443194f515755525250
525150585551535055555650515151544b58564c4f43144e50504d4f4f56575151535553
51564e50514f534e4c4c4d514c3e18194143484e47473c3c3c37
1b1c23222223242314252d29242a29292a2d323031363d4241434a44474f515959595849
224f595d605f666a85c1c6a6acf0f7f7f6f5efd6c5c0eee2c6cd7c69685a364b6a666262
65626265685d5d63647bb666626062616163626262635f515d6d7c95d2f9f5f1eff5e2bf
a692a2c8efe7e2e9e0b5ccf7efd1b0c36f3d7caf9e6562615b616f8c645e595a5858565a
58585554554c5655524f4d3c44474c494f4d4b4a4e49494e4f4b514c4c504e4947464648
454549422f4a4d4c50524e4a4a4b4f5353444d4a4d5655515350515551575651504e434e
5551545758554e5051535651524850505355555553535458555250421c4e505755585450
58565058564d5454565051535455545851564f5558471850515056555455565154535451
5259515654544f4f4f5250514e42201b47494a474745393f3632
192022202027262014252c282525272a3032322f39393a4241434646484a4c5457555742
214e5b5c5b5d6162718e896e8ae1e7dfe1e0eaebd8d5f9f8eedda889776255939c67676a
65656c71636969626680b765616061626364636361615c555d6367719ff2e9eae6e8e8d2
dfcbdae2f1f8f9f9f1dee6f9f4ded5edb870abd4c28b72676b6d84b072615b5b605b5954
595b5e59595350514d4d442c4d524d494f4d4e4e4d474b4d524c4c484b514f4e4a4a4446
45474642324e544c5352524d494c4d49534f5051524f515352545355574f53544b51444e
5258565a58575353585356515251524d5455555654545358555551441c53535354545052
535a535654525355555358555655545454535a5b58441a53524d58555655524d52545656
5453525552514c5052504f4f4d441f1a474b4a4745423c404136
1a1f1f1d1f26211811252a2927212a2a2c30353233363f403f3f434848484e4c4d525744
1f4a5a5c5a5c5c5d6167656475a3a79ea3a5c3eaf4f1e5e8f2edd4d29a7378b6b27b8494
7f848fa268666a666986b668646565676665646264635b565d64686c81b4a0b1cfd4e6e0
f2e8f0f2e5f2f9f9f8f8f7ebeaecf7ece6b9e7ded8c486777b83a5ba88725d5e5e5d565b
565d5d50545858544e4e3f1c4c554d4e514d4d4e4f4d4c4c4f4e4e4e4e4c4d4b4b4b4c48
4b4f4d423146525856564d4e484e534d4e4e514f52554f52534d554f525555555655494e
525553565551545759525551535553525451565653555556535652461f5556554f535453
575756555456565555545153585756565756525654452150505552565a55555555565757
59535054504d50515352504e4d442117414a454540443f3e3d2f
19211f1a1c1d1d1c122628262b28282e2c303436343a383c3e413e4243484d484950513e
1d4752595858595b60626361666967686c6e8fdce9d8a6aad1ebeee4c2b2c1cfddb4dbda
afc2abb06f6a6b6d6f8bb66a616666656165605f6066655861676c6c6f7b7596cfc8dce4
f8ebe6f1ebf3f6e6c6c6c5aebee4e5c5f1e6eaebebcfa1bfe4eff4f0e3ac7c636162655c
595d585757585955515544214f545353575250504e53534e484d5454534f514a4b4d5551
50504e41374b504d545851565050545350505555555454545051555453515653504e454a
55525154565651565a545754555557575653585755515554555857461f4f535355575858
575652555355525658595752555858585955535250432254515652585954585956565655
5757525451515451505050504d3e2417424945454342413f3f2d
1a1b1a1a1a1b1d140f2628232223272d302c3739383a39393e3e3f414345494a4a4d4d3a
1d414f575552585b5c5d5f6063636162646782c7b79d737a99cff5f7f5ead1dbf7f0ecf6
f1dfc1b06d768b83728db76f6c798d847f6765646567615b668089746970759ecba0bde6
f1e9dcd6d2e0dcb37b77817694d4c8a2c0a9b9faf8e9ddf8fdf9f4f7efd1a5756f636662
605b5d5a5b5b63585453514757555356534e555352535953494e54535051524d5152544e
505251483c4c4e4d544e535452515350525352534d4d51514f54555855514f5452534c49
53505255555953515759575354575c5a58565558554f5254555857471f4e535553545859
555251535a575350595751535959565855555a59534627565756535354565759595b5956
5958575854555554534e4f4f4d3d2718404a4a4544413e3d3e39
1c1b1b191d1a1e171325252523282d2a2b2e322c2e33393b3a3940414042494b4a4d4c3a
1f41525451545659595a5c5e6262646261627fb38b6d686b728dcedddecfbaddeef0f7f7
f9f9efc9a6d6dfb086a4bc8097bdbc9fa4706b7b9273615f7dc5c38c6a6d7187977a98ca
dee4c8948f9e9b8069676c7390b98c765f4174d3e8fafaf8f9f4ecebf2e3c5cfd3887eb0
9c6c625d5e5c5c5b5654473358575655524e5356555457554f4f4e4e4f53545253535552
4f50514c414952575352535351535556595858565851514f5156525656555556554b4a48
504f4f54565653555055565150575a59595553555755505354595745204f5556595a575a
5a585a585753575856535155545a5c5c5b59625a53402a5852545754515556585a5d5a52
54575657545455545355524e4e48271b444d4c4140413c3f3f3f
1a1819191f1b1d1d132425262822272a262a2c2d2b31313938373d3f3f44454749504c3a
1e42514f515653585d5c59595b60625f616272927a6663636869757f7b7476929fb0e6e3
f0f2e9efe3fbf7ebe4ebddd8d8e9d2a6b18dabbfc0826a6fa0cbcb906f706c7071707991
bad3b96a6b6f6a6666686b6d819a89995b354b72a7ece0c4edeae9e8f2edcdd8f0d2bbe0
d0916c6a5e5a5d585a5843265858565857575454545455534f4b484a524f555450505152
52505049404b545451515254515458585a5555575b57524d5155565d5856585a59524645
53535754505556565153515257565656595253555958555552595542214e575b59575a58
585b595857545555585957565755595d5c5a5a5754442953555652545a57575756595755
535452525254525051514f514e4626194449494141413e414042
191d1e1f221f1d181427292724292a2b29282e2a2d2c3036363b3c3d414140484a49483a
1a3c4e52535254555a595657585f5d5e6060626662605e5f5f606366655b3a3c68778891
c7d2c5eefaf6f5fffbf9f4f6f5f5dcb6b9a5d5ddc6918388c2bcccae8b94836f6e6e6d76
91b7ae6a67686a65686a6b676d7695c06033476b8ecdb597c5cee6e2ecf9f6fafaf6eff1
f6dfcca86e5d5a5d5958492c5358585b57595857545754524e4c4a4e544f515351555553
5354504c454650545451545a595557595b575858514f4f555a5b58575654535858574f43
565654545259595450524f5359555454575459585859545857585640204d595a59575957
5b5c5d5a595a5658565553555a575c585356575451412b57535855565855535455545355
5253555053525350534e4c534d472b194048494441413d41443d
1c1e1d1d1d22201a152525242727272a28282a2a2b2a2e34373c3e3e3f3e42494a494433
1c394f534f4d5451545254585a5a5c5c5c5e605f5f5e5d5e636163636455313460626668
707694d6d4a9acedf3e1c0ddf6faf5dcbbb3dcddcbb7b598ccbcd7d0b4cda77572716e72
7b908d6c69666566676768696a6e87a45a354067696d6c6e78a2d4c8b9d2f1f5f1f5f8f7
eeebe8c7855f5b5c5b5752465a595a5a5856565754505356544f50525651515456565655
5055504e49485355555151595b565253575556555a5657585653555355525a57565a4c43
595b555557595b56555355575455525356585c565659535b5a5a55411f49585a5b585658
5a5b5a585b5b5553555459575858585954595958554630525a5858585a55525856555457
51525753545055525152514e4d4631193c4543434142413e3e3d
1b1b1c1c1f241d18132426252929262324252c2c2d2c31363b3d403d3d42444742444432
1834484f4c4e5151525253595858595b5b5b5f605e5f5f5c5e605f616052313464666368
686983ad8a72717d87828fcde8d0d4e1dce6ede8dfdbcea7d1c8dddfd3e2bd837d8e9690
8f7b746e6f6d686765696b6c6c6f86a15c393f67626467676974847d7886a8dee3f7faf4
ebf5f5efbf6e6465625a47365b595a57575758545151535a575452515551515357525358
52514d4c464d535957545658565857575859545954525556525756555550515052584c45
5954555858585a58584f4f5452575451535559585859565a5a5b58421e49595b595b585b
5b595c5c595a58555757575256595757585b585653402d56595857595d59525758575658
52505454515154514d52544f4d48341c3d4444454642403d413c
181b1f21201e1f1a13201e202529292a29272a2e2b30323937373b3e4044444540434533
1633434b4f4e4f54535354595857595b5a5b5b5b5d5e5f5f5f60605f5f50313560646466
6863666f6d6b6665676882bdb489aaf4f6f8faf7f4f4ecdee7e1dfebedeedcbfb9d1d3c6
caad9a818892776e6e727b7c7b75899f5d383e6763625f6164696a6d69667389a7ebdcca
cff2ebeee3ae9eaf977954355e5d5e5c5c5e5d595454595a58575757585553545654555a
5958524b464c535959535256565557565958555655555c5b5c5d59595456545352554945
5a595a5954585a5959514e51535a57545553555a5c5b5a5a5a5d56401e485a5b5a5d5a5a
5c5858565d59555a5e59555559585756595a58565448335558585454575659585d595556
5352515250515554515150514e4a321e3d45494b46404040443f
1a1a1a1d1e1e1c16111b1f23282620262827322d2d2f2e3134393d3c3d4043453f414132
1a3243484b4b4e52525454585556585a585b5a595e605e5c5c5d5d5c5e4b2a305f606060
656464646567656463606873706e94dddcbebcd8dbeef6f6f2f0ecf6faf7f5f2eef5efe9
f1e5d6b4b7cc9e88939db5b9b29397a265405084746964636a6f69656461636771807a81
a7d8e7ecf8f0f1f1e1c49a4b5e5d5e5a5b5c5d5d58575c5a5856595b5a57585659595a5b
5a58544f4649535956565454565856595c57555559595858565757565858595755564842
5a5b5958565758535453535756585a575755535a5f5c5e5c5a5a523d1f455857595f5e5a
5859555359595a595c55565a56595b5858585b5f5c49324e51555656585658545a5a5a57
515251535451515554504d534f462c1b3a4b48444440403d3e3d
1c19181a1d211b161221272922232926232729292c2d313333363e3b4042414143444432
1b35474b494a50535152515556575855555b5a58595b5a575b5a5c5c594629325f5b6165
66686163666261656963626666697084877b89a6b6dcdac5c1e5e7f2efe6f6f9f8f4eef6
f8f3f2e7e2eed6c9d5dff3f1e4c5abad816a8addab716c7690a084646565626565656468
77a8ece5effbf7f8f2e5c4808265605f5e5e63655d5f605b5b59595957555656585b5a57
5a5a59554a4a55595855565b575958575b5a58535656555257595957595b5a555458463b
595a5a57545958555352575856565a585453545b5e5c5e5a585b563e1c4159595a5d5c5c
5d5b5b5b5c5b5a5858585a5b5757595958595957564a3a545355585a5b56555157575958
56575656585455535352525250463117394f49454441403c3d3a
1e1c1a191a1a1c180e1d24292c282524252a2928252a2d32343536373e413c3e42423f30
19314649474c4c515352505052535452545757575858575357575a5c57462631595e6264
66665e61615e605f615e5f63636062666768717c9fd1ba7b79999fbdc6acd3e6e7d8e8e3
c7cfecf8f8f7f9fdfdfafafbf8e2c2c9bcafadf4d0918aa6d9dead6a6771776c69696264
687a9792a5ccb6c0dde9dcbdb28d8a81737f87867271635f5e5d5c5b58595b5958575655
5b5b57554c4b595b5b59555b5858565559595a5c5a59595a595958565b59595658574839
595b5b5d5a5b595856565a58585857585858555a5a5a5d58595a583f1f3e595a5a5d5c5b
5959555a5e5d5c595b5b5a585858555559595a5b574b3f53565353575657555554555755
58595858545656505254524e4f482f1737484649433f413e3e35
1d1d1f1e1d1f1f18111e23262a2a2a2a28242425262b3234343636363c44413e3e3e3a2b
152e46474a4c454d524e4e504d4a504e5255555555555655555759595645262e56595a5c
595e5d5d5f5d5f5e5e5e5f63655f5f606162636d8eb4995e5b6f7681877eacdbcea6c3af
87a5dcf1e5e2fcfcfbfaf6f2f4efe7dccfcec6eee3cee0f2f0edc9867d9ccb946e6e6764
67676c71787d7d97c7e6e0d3ebdac5a9adbda4afafa170605e5e5d5c5e5e5a5856555555
565653504f4f55555551545355545254555a59585a5a595a5c5d5d595757595858564539
57565a5b57535659585658515353515353504e4c4e4e504e4b4b4b3c2941514d4e515252
505050525053545251515153515353575855565551483d4f514e5350504c4b4c49464547
454640403d403f3d3c3b383838372c223e4e46474140403e4139
1b1d1f1e1d1d1c18131b202528252728251f2221252d2c2d30323435373b3f403d403e2a
15294046484842474c49484a49434949484b4d4b49494d4d4949494e4d3d232c4f535757
575c5d5c605f5d5c5d5e5d5d5e5d5b5e5e605f5e67706854526060605f6384ae966b776c
6282aeae95a4d7cbc6ccb9a7adbfcfc0d9e1d8daebf2edece9e3e9dabac1e3c3b8b0785a
586180b6a66b8bb7c3d0c9e6f4e8c89facba99a4ac9d6d6759414347464441405065624c
495241404043464845423e393b3c3b36322c2e312c28292626272422211f21222225303a
2728282c2c2d2d3035404034353536393c3939393b3d3d3b373939373b494c3635303130
302a2527251f1d1c1a1a1917171517171b1a1b1d1d21272620232926272c2c2c2f2f2d31
353431312f323433322e2c302d2a272a404d49463e424543423d
1c1f1f21211a1a16111415191615191514161918181714111317161918191a1b1b20211f
1e1e21242829272b312e2a2f313133352f303533323232322f302e2b2c29292928242325
25221e1c1b1a1918191c1f2626282929282a2c2f34383a373b3d4046484a57695f4f5350
52606f60556c8c7771735c4b51759ba2ded5b699b6b898a7baa4bce0e2decfc6c8bd8a73
9ca8afd1c7b6d1dcdfe1d8f6f9f5ebdad9dbcecac4c4b4b38e546a7958495053659e905d
67763c3b3b38394248484540424e504c4f505e6f5b54556a8370524d4d4c4e4c4746423e
4b4b47464a484744454c49434342404444424344484847484749473b3a5d755151535455
53505157585655535053565959595957534f52545048414a4b494e49494a46484a484947
464446464245474747464446423b2b1d394f4c48494240413f40
1a1b1f1f191c1f1710101518181612151518191d20242324252a26292c2d2f2d2f312f26
1c242d2e313030313333323132343434353938383c3a3b3b383d4549473e2f2a444e5054
5551555a58545356565553525253525354504d5051514f444654545655545458595b5d5d
5b5d5e5d5d6268636465656b7287a4a9ba826b9aaa7b76a4dedae1f8faeadef4fcf6decd
ebf2eee7e2e8eceaecf5e9e1eafcfffbf7f8fbf7f3f6f2e8bf88a8bf9588969ba1e2c18d
a1b46b6156515c6266717568646a74695d668cb197866992c19c685d5d5e5d5c5b59453e
5b5a5c5b5d5c5b5d5d5d5c5a5c5d5c5d5a59595b5e5d5e5e5e5d5a45356283605a5b5857
5c5c5a5d5c5d5b5a5a5a5a5958575d5b5856565858514c555c5d5a55585b555359585958
56555556555557565356514e4c462f1a334b4c4847443f41413d
1c1e1f1b181b1b16131d222223252929292727282b2c2e2f323a37353e3f3c3f41403b27
132944484846474a4d4f504d4f514c4e5155525155545657545258595644272c51575a5a
5a5b5e5d5c5c5d5d58555c5e5b5d5f5f5f5d5d5e615e5b4c485f5f605f5f616162646463
62626263616566656565656667676d746d42468b98676b99d7d2cee4e4d3d4f5ede3effa
fafdf6e9e6f2e5dee4e9c29dd8fafdfffcfdfffffefefaf1dec4cfd5c2bab7adabe1b991
a1bb8f886e60636976a1ba7f6c95b783828397b6a69985b3c7a16c5f5e5f605d5c58473e
5f5e5e60605e5c5e5e62635f5e61615f5e5d5d5e5d5d5f61625e5a473562836058575d5c
5d5b5b5e5e5e5d5d5d5d5e5a5a5c5e5b5c5b5e625b5049545c5e5d5a5b5c5a5b5d5c5b59
595a5c5b5a5856575254504d4e4630162f454543444541403f3c
1c1e1c1718191b1717222325242b2d292929292a2a2f303032383b3c424342434444412c
162b454a4948494c4e504f4e4e4f4e4e5151505256565556565553575543262d54595b5a
59595d5a5958585b5d5e5d5d5b5a5b5e5d5b5b5c5d605e4d485e60605f62646264646463
62626362626461616564626364636562573b40767e62636973767d808598c0bf9295d0ed
e3e1f3ebe5f2ededf5ecba91ceeef2f8fcfefffefffffffdfbfaf8f5f2eadab8a6ccb198
a9cfcdcba2827a8790b3d0a283a3bcb8e9d1b7bbada19ddad3a87065615f5f5f5e5c5054
6a647b988b605f6060686e6e747d645f626161615f5e5f6261625c46345f83665c5c5f5e
5b5e5f605e595a5e5e5d5c5e5f5f5e5f5e5e6060595653565f5e5c5b5b5a5a5d5f5d5b5b
595b5e5b5c5956565452514b4b442d142c4445434345433e3d38
1d1d1f1a1b1d1b18151a20292826262828282a2c2b2d3437353b3b3c4143474542474732
192b46484b4e4f4d4d4e4f4f4e504e4e5352535258585655545354555547272b51585555
57585c5d5d59595b5a595b5a5c5e5e5c5f5e5b5959605d4b476062615f61636362606363
6061636262625f606462606367666361573b3a616262616562636463636364696770a4df
d7afa5adaacad6c9cdbd987aabb7a1a9cbeff3f0fcf9fbfffffefffefefef4d3b7cbcac2
c8dde6e5caadb3d4cecadfccc0ccc2c3f0f1d9baaba6aeece7b27969676e797663677c95
866b91bda3656a71839b948190a06c62656162646261606262615d46335b8169605f605f
5e60616262625f5e5f5e61605d5d615f5d5d60615e5551575e5f5f5e5d5d5c5e5f5f5c5d
5b5e5d5b5b5955575654514f4c462c172d474b484646413c3f37
1e1d1e191b1d1d1816191c212829272a2b2c29292b33434a3e383a3e424448464145442e
162b474a4c4e4f4e4c4e4f504f514d4c515252505356575755535759574a2a2b51585859
5959585b5c5d5f615d595a5c5c5c5a5c605c5a595c5d5947465e6060605e5e61605e615f
5d60646260616160606161616363636052363760605c5e605e5e5e5d615f5a5e61677c94
856b666a6d787c7377755f5071746b708badb2c3eae3e7f1f9fffefefffffaede2e5f4f7
eeebf7f7efe0e3f2f5f2f6f7f4e8d6d9e9e3d7c2b5b9caf0ddcabeac9ccbd2c79f8594b5
9c7d94ba9e7699c2d2ddcdaeafa87967666770766e6b64656663604c39597e6a63605e62
66616162616060605d626362605f60605e6162635f5a52555d61606060605f5d60605d5c
5d5d5f5f5d5a5757555553504f472f1b324c4a4a48403e3d3c37
1e1d1d1d20201c14141a1e2424232729292a2b2a2d31353b3e3f3d3b3d4046484546422f
182b474b4747494c4c4c4d4d4d4f4e4c4e4f4e4e4f535555525051535243272d50575759
5655565857585a5b5c5c5e5b61605c5b5b5957595b5a5442415b5c5c5c5b5e616060615e
5d5d60606160606061605e5e5f5f5e5e5135365d605d5e5f60605d5e5e5b5a5c5e5f6061
626060625d5e605e605b49455e5e6063666e7689a9b0bcbdd7f1f4f7fcfdfbfbfbf9fdf8
eae6f5ebe0e4f2ecdddde4f4faf4f1ead3cee3d6c5ddf4e5dbefedc9bef7f8f5ddb4aacf
d3cad4d6ac90b7edf7f4eadacead918c888098a6948a706f7c8b82604059806b6461626a
7066656a695d61636866625f606060605f6162635f595058615f606264656360605e5e5e
5e5e5f5e5b595a5856565552514d341d334c45444541403a3b39
1b1b1c1e1d1a1814171e1f222a2c2a292a2d2e2829343d403a393a3d414243474848422d
1b2d474846484d4d4c4b4b4d4e4f4e4d4f504e505152555454525358523d252c5057595a
565354555658595b5b595a5a5b5d5b5b5c5c5a5a5d5f59413e5b5b5b595b5e615f5d5e5e
5b5d5e5f5e5e5d5e615e5d5e5d60615f4e33365d5f5e5d5e5f605d5a5b5b5f5f5e5e5e5d
5b5a5a5b5e5b5b5c5b5d58545b5b5a5c5c5d5d6678909b8591acb7c3d1e0f4fefefaf4e9
d2c7ceae919dccb97f7da2daebe1e5edd7d3e7ecf1ede9d4d2f2f1e3e3f9fcfcf8e3ccd7
f1f6f8ead1cbe2f1f0eceaece6c7bcc9c7b5c9d1bcae8a8faed2c485485e89817b696567
6b6d738d956b6c7e9a8f69697a816d686d6964646561585a6461636c808468656565615e
5d5f5e5d5b59595657555451514c3622344a474745433f393a3a
1b1e1d1b1a191817181e1e22252727272728292a2e2e32383b36353c3f3f42454648412c
1a2e4547474a4c4d4e4c4d4d4d4e4d4d4f4e4e4f5253534e4e545758513f252e52585759
5a5a595757585c5f5f5a595a5a5b5a5a5c5c5a595c5c543d3d5a5a5a5b5a5a5e5c5c5d5b
5a5d5f5c5f5f5d5f615f5d5f5d5e5e5e4f34395e5c5e5d5f5e5c5b595c5c5b60605f5d5a
565a5a56565c5d5a58554a485859595c5c5d5d606a7d836b666c767f90b7eafffbf6efe4
cca98d6d6170a29a7070809e9e8ba0c0b1c3e0e2f2e8c19093a1b0cfeff5ebd4d2e2c9ca
f9f2e2d8e7eff8eadcd8e1f2ede7e3e7e8dee1e6ddd3c8d4dcebe8ab6d87b1bda8716c6f
818f91aab47c79afdebb887ba6b78d93b1a5776a6b6766788b7471849c9a6f6b68656562
636464625f605b5957575452514a3522354c4a48474444454238
1d2023201e1a1a15111a1f21222727282926272b2d3134353739383b3f4245494a4a4329
172b464b4b4b4d504e4d4e4d4e4d4d4e504f50515254545251525657503f262d4f5a5c58
5553545859595a5958585b5c5b5d5d5c5c5a5d5c5a5a533e3d5959585a59595a5c5b5f5c
5c5e5d5c5e5c5c5f605e5d605e5d5d5a4e363a5c5a58575c59595a5c5e5d5b5959595c5f
5f5a5857595c5c5b59544742515354585b5c5a5e656a6a615f61656b78a3d7ece9e3e9ee
ecc2886756596d6f6b696567666264676b7683a5dbdda06466687cb7ddb2938aacd2a897
e3e3b49ccaf1dfc6c0c0bfe0edf3f3eeefedf3f7f6f4f7f4e6e5eed6c0d1e9e9c38d869d
c4cdb0b4c89185b5e9d5a583b0e0ccc0ccb78a9ab8a07ca2caa3a2c3c2ad96a288747386
896f7073787c6b6b6d625b585c533521334d4c4c4e4a46423f34
21211f1d19171919171a1b1e22242628272421222b3132353939393d414347474748432e
1c2c42474b4d4c4e4f4e504e4f4f5051514f5251505253545253535653412a2f4e575858
595a575759595b5b5d5d5c5a595b5c5c5d5b5c5e5d5a513c3b575959595b5d5c5b5b5d5c
5c5d5b5b5d5b5c5e5e5b5c5d5d5c5d5c5036395c5a5a5a5b5b5d5b5b5d5e5b5958585b5a
585a595b5a56575959584e4b565455565a5a595b5e605c5b5c6062656d7f9aaba9a7bdd0
d9c59a795c556a6b6e726c636362626461616881a8ab765f6060657682736d7398bd8d62
a4aa807babc19593a9aa95c0e6eceff6f2e7d3c4c0cee3ebe7dde2e9e2e3f0f1ecd7d1e9
f9e7c3c4ddb5a6c6ebe7d7d0dbe6dbd1d8d0b4bee0d4b3c4e6c1c1ede9cbc4e1cfaf919f
aa8da3a8a5aa88909e817a7a85733c243249474a4a4544423f31
1c1e1f1c1d1d1d1a1a1f2327292827282623242528313232373a3b3d414445454747422f
1c2c43454949484b4e4f4e4d4d4e5150504e4d50514d4d50505354544f43292647565855
56585c5c56545a5c5e5d5a595b5d5c5c5b57565b5a59513a3a595a5959595a5c5b5b5c5b
5a5b5c5c5c5c5c5c5c5a5b5c5c5d5e5c4d31395a5959595b5a5b5a595a5a5a57585b585a
5b5a59595a5c58595a5a555056565655575a585a585859595d5e5e5e6062686c6d77909f
a0c2d1b88a7176727f998f72796f63605f6463626b6c615f5e5b5c5f616060646f725547
6d6d65719a9d6e7da09d778dabb6cce7e2c18d797588a4c2e2ddcac4b4c9ece9eefefcf6
f5f5eae5f1f3ebe9ecf8fdfefcf3e9e8eceaebf1f6f5e3e4f7eceefcfcf0f0fbf8e6cac5
c6b1d0e2d8c6a3b2c6adb7c0cca54f2b334b4a4d4b4644433f38
1e1d1c1c1f232019161b1e1e232b2b29262426292d353836393b3a3d3c3d3f444a4a4330
1d2d464a4a4a4b4c4f5051514d4c4e4e4f4d4d50514c4b50505355524b3f282947555456
58545454585a59565756565557585d5c59585a5a58574e363754585a5b57595b5c5a595a
5b5a5c5e5c5957595b5b5d5c5d5e605d4c323b5b5a5956585e60615f5c5a595c58555758
595759585659585554544c49545655575a585756565657595b5e5e5d5d5d60605f66797d
86c3f8efd6c3b1939fc4af9cb69168665f5f616362615d5b5d5d5d5f62616262625b3e3d
5e5d5f657476646f8886686971788ba4af996e6a696a728bb2bb9f836c99d4c9d1f3ecdb
d9eeefdfd9f2f7ece2d7cbe4f4f8fefcf9f9fefefefdf6f6fffdfcfefefefefdfcfbf5f0
ece4eef8f4dfcfd9d4c8e0eef2c57338364f4d4b48464642423e
1b1d1a1c20201d18171c1f23272929272422262629323b403d3e40403d3e42434545402c
1d2f454746494d4e4f4f51514f4d4d4d4e4d4c4f514f4e52504f52534f3f262c4b555454
58565252565a575355585a585756575756595653555850373a5757595a5a595b5e5a5b5c
5c5c5e5d5d5b5858595b5e5d5d5b5a594a323c5c5b5b5b5b5c60605c5b5c595657575758
5a595859575657595a534648565756585757565454565a59585a5b5b5a595b5c5c5f6263
7abcf3f6f0f1ebcabdd3b4a3b98e6161615e5b5b5b5c5e5b5d5b5b5b5c5a5a5d5e543b3d
5b5b5f62646160646d6c615f6164676f7a76666565676970797a715f4b6698a1bbd0c5bf
bec8cbcfccecf9eccc9b87b0e0f4fbfdfdfdfffffefcfaf9fafffffefcfcfffcfafafaf2
f3fdf9f4f3f3f4f5dfd6e8e0dad8a657404f4a4644413d3d403a
1a1b1b1b1c1e1b1817191e2123272727272828282b2f3030333c423f4043454443423d2b
1d2e4648474a4a4a4a4a4d4d4c4b4a4d4e49494e52514f4e504f4f4c4c40282d4c555454
575758595959595958585454585658585b5c5a57575951383c5656565558585a5d5c5d5d
5d5c5d5b5c5c5a5a5a5c5c5b5b5a56584b313956575a5a59595b5b5b5c5d5d5c5a565656
595a5a5657575a59595750515858545151555454545759595354595a565657595a5c5e5e
6f9fd1dad2d8ece2e4e5bcacba8f615c5b5a5c5d5c5d5d5b5a5c5b5c5b5a5b5d5e53373b
5b5d5f605f5f606163636060605f636771796f63656d7776717c826540487190b2afa0be
d8cac3b79db6dbe9ddbdb5daf3fefefefffbe9d5dae9ebe5e3ecede1c7d6f4fbf7f6f3e6
e8fcf9e8dae6faf9f1efe6b79fcfd78e534f4e4845413b3a3d36
181e1e1d1c1e1d1a151c242525232525252528282c2f2e33393c3c3c40474a464244422f
1e304648464848474847484b4b4a4b4c4c4b484c51535150505353525141262646555151
53585859585657575758585d5e5a5757585a585758574c343a5857585757585b5c5c5c5d
5b5a5c5c5c5a595b5a5857575657585747323d5a585b5a59575b5b5b5c5c5957595b5b5f
5e5d5c5b5a56585e5c5754565855545455565556555658565556565758585856565b5b5c
6171868d838fbfddede1d4d2c28f625f6162605c58555859595a5c5a5a5b5d5d5d54393d
5c5c5e5e605e6061636768645f5f636f90a285686d84a1a092a6b081596281a1ceddd4dd
f5f5e2bcbbdae8f7f7eef0faf7f5f6f2e3cba07d84999e8d8999c0c297a8daf4f7f7f3e0
d4e3f1e4cddcf8fafbf4cf8f74a1ba8c5c51504d4744403f3e39
1a1c1b1a18181b18181d20202127292523282a26252b2f343938383c4245454542434531
1d2a42464446484a4a47484c4d4f4d4d4d4c4a4d5251505351535654503d232848555454
5554545556565456585a5b58555358585656545658574c353c585858585858595b595958
5a5a5a5c5c585759565559595857575546343f59595c5e5c5a5a59585857585858595b5e
605e5c5b5a58595c5a5752505354545553555554535557555959565559595654575b5a5a
5b5f625c4a548ac7e4d5deedd39a6b615d5f5c5a5c5c5a5c5a595957575d5e5d5f553b40
5d5f62605e5e61657491937461616679a4baa09398aecfd1b9babea49baebad0f0fbfbfb
faf9f7f6f6f3eadacbdef1d3a68c9cbeb5816d6966635c5c66718e927b8dafc1c8c9cecb
bbb8deefeaedf1eaeee2ab7e6f6b62403c51514d484442414037
1a1a1a1a1a1b1b19181c2022232426272627272729292d35383636393c3f424341424130
1f2c43454346494a4b494b4d4f52504e4e4b4b4c4e4f4c4c4e515152503f2326414d5050
5052545456585552525255575a5a5858575554595c594d353d5958565656565557575656
5857575a5958575a585656575555525048353f575555555558595755565756575b595a5e
5e5a58575a5a5a5a58554f4f56565351505052504e515250515352545657545150505152
5153554c3f4a7bb5c9bfd9eadfbc8b6559595756585958575b595756595b5d5c5d4f353c
56575a5a575c5f6078a5a87c61606d88a7b9c8d8d4ced6dad0c8c6c3cae2f2f0e6d4ccce
cdc8d9ebe2dac48e82bbd1996c656a7978655e60635e54535c606465636f7975737485ac
a68db6d4ddd6ae9ebdcfb09d83523b303c504f4a44434440372d
1b1a18181818181616181c1d20202123231f20232a2c2a272b302f3134393f3e3a35352a
1e2a37393a3a39383c3b383a3b3d3d393b3e3b3b3e3c3a3b3d4243413e3625263d46454b
4d4b48494b4e5050504d4a4947474643413d3b3a3d3c352d303838373433343435353637
3a3a39393b3b3c3e3d3e3d3f4140403f3b3237423d3f42413d3c3b3e3d3a3a38322e2c30
2f2e2b2b2d2e2a29282a2d2d2827282829282928282e2f2f2f3135383a3b39393839383c
3e41423c3944618281778e9eb4d2ba6b3028272322231f1d1e1c1d1f1f1e212321262f31
2b2d31323f5e62516896a49787717dacc1c8dff3ede2dddcdfdad7dfe0dee1cf9d695958
52557f9f8d918546376071431f191c1d2021272a2a2e32312e333636383d3f40413f4e78
7a61768a9c96685d8fc7d4cdac73513e43504d484646443e3a35
171715181717171714100e0d0c0b0d0b080a0d0c0e10101212151413171b1c1b1b1d1e1f
1d1f2327282626292c2a282b2a28282627292a272825222426221f1e1d1f21201b191918
1918191a1818181a1d232524262b2c292a2d303233322f2b30393a3c3a3a393636363634
383a363333322f2d2b2a292a2c2b2a292d312d28292a292c30323436373a3d3e3d3b3c44
45454848494a4b4848454242434142413e3c3d393536373837363a3a393532333838383a
3b3e423f3b425153545253679cd9d48c57505155535252515355555351504b4c4e44363b
4f5050536993947ea2ccd0d1c9a2a3d3e3ded7d6e0e7eaedf0f0f0e2bca6b7ab7e64615d
5e61697386afad7a626e6e635e5b5757595a5655554d454b575654525052555454525662
61585b616c6a5c5c7ab5e0ddd4cca45d414e4d474544403e3b34
1b191718191c1a151214181a1b1f1e1a181a1c1f2124252627292a2e2e2f303031333126
1c25313434323437393a3a3a3b3d3d3e3f414546464542454a484747473e25243e505453
4d4d50545651515555514c4a4d4f4d4b4c4e4d4b4b4b3e2d364c4d4f535355514f535553
5758575657565756565253555556565247323f5856545556585b5a575859555758595b5d
5b585859595b595556574d4a515354565554555453545555565658585652505056555456
5856534938405b5a5a5b5a617eb3c8996a615b58585958595b595a5a585859585b4f3941
5e657799b9cbcdcddfedecedecdfdeefefe2bca5b7bdbdc7cdcecfb883656c6862636261
60605e60666c6a615d5f5e5e5f5e5d5e60615f5f5d5447505f5c5b5a5b5d5f5d5c5d5e5e
5c5a5b5c5b5a5a5b6891b7b6c3e5cd8a534b4a4944423e3a3833
1516181a1b1816131217191c1e1f212121232526272a292b31343638383b3a3b3d403d29
1b2b3f424543434648494846484a494a4c4c4b4e4c4b4d4d4e535453524124223d505455
51525759595856575858595a5b5e5a52505252525252442d3952535456595a5652555858
5858565455565658595a595756595754432d3b575755515558595b58565658595b5c5c5c
5c5d5b5a5a5a5c5b5a564f4d5458585756585757595b5754565959585756535357575354
54535347323d58595758595c5e78b4d0b389655c5e5d5c5857575757585a5a5c5c4d3644
6272a0d3e5e4ebefe3d6dfedeff5f8f2e7cda08ba093797e83837f6945485f61605f6061
5e5c5b5d60605e5e5a5c5c5c5c5d5b5a5b5d605e5b4f424c5b595b5b5859595a59595b5b
595859595a5657575d6d7b83aed9cea2694e4e4c443e39363835
141414151616131416181b1e21232422222223242628292b2e30323739393a3a3c3e3d29
1a273d4345484846484a4948494c4b4e4d4b494b4b4b4a4a4c50515152432528444f4f52
52535757585654545354585a585a5955555455555553422c3c5453555659565355575857
5656545457555456595b5a5a58555553432e3e5759565758595b5c5a57595c5c5a59585a
5b5b5b5a5959595a5a57545255585959575759595b5b5857585858585656575757575858
56545549343f555456595757596aa1dfe7b479605f5a58575959585b5b5754575a4b3444
657ab0e1eeeff3f0e1ced5e1d0c5bfb4ac987b7f988a686363626250343e5b5f5e5e5c5d
5d5e5d5b5b5c5c5d5d5e5c5e5b5a5a575a595758594e3f485a5b5b5a595856545657595b
5856575b595959555454546496c2ba89584d4a4745403b383732
171818161617181513171a1d23241f202323232426272a2f313133393a393a3b3f423c28
18273e4342444649494c4c4a4a4d4f4e4c4b4b4a4c4e4d4b4a4a4c504f3f232542525055
5655575753505051545555565556575657585857565546303f55524f5557525457575853
5356585859585453575b5e595354595341304159595b5b5857585b5b5b5c5c5b5854545b
5d5d5c5a585a5a5b5b59565657595a59595956565a5a5959585658595656585958585a58
53515347313b54565657595c5c6084caf4e0a572605b5a59575b5c5b5c5a585a5a4b3647
6682b9e9f7f1dfd1c6bac5c8a3857a74726b656e7c74615e5e5e5f4d323c575e5e5e5b5d
5d5b5c5d5e5e5e60605c5b5b5c5d5b5858595959584e414554575857575759595958595a
54505357575754514f4f515b81a9a4734d4b4643433f3e3e3930
17181715181c1a1615191a1a1a1b1c1d2123222324262a2e302e3135383c40413f3d3a26
16263d41404143484c484848484a4a4b4a4947474a4c4e4e4e4d4b4d4c3b201e3b4d5456
5756555355595c5854555757545557595959595655564831405656555758565555565655
54555658595754535357595651515653412f41595658595a58575a5c58595a5b5656595b
5c5b5958585b5c5a5958514f555b595a5a565557585a5957565659595959585757595957
54525047344058575758595a5a5e6d99d1ebce8f645a5a5a595b5c5a5a5c59595b4c3753
88b2d4e4e6d1aea7a6a0a89b776664646160616364625e5d5c5d5d4a313b575c5e5f5e5d
5c5c5a5d5d5d5e61605b595959595a5955575b5d594e3f45555859595858595a5a585756
545152545453514e4e4f4f5878947f4d3e484745403b3a38342f
17171818181b1914141719191f231f1c1e2020222728282a2e2e2f3134373c403d3a3727
19273b41434545444445454645474a4b4c4c494a4a4b4d4f4f4d4c4e4b3b22243c4b5151
50504e4f5152545654514f50525355575858565653544631405756565856555351555656
545455585958575655575a5956535250422f4058575a5c5d5855575b5a57565553555a5c
58565657595b595a5c5c544d51585a5b5a59595857575856545759595a5b5a5857575757
58534f46343e535352545659595c616b8fbfc5996f5f5a5a5a5958585b5e5c5a5c4f4172
c2e2d5c2b5977e898b8383756260606060605f5f5e5f5e5c5a5b5d4d313a575b5a5a5957
585a5a5c5e5e5a5958595a5b5b5a5a5858585755584d3f47585a5b595757595a58535355
56525150505152504f505056717f582e36464546413b383a3b31
1416161518181816161d1f1e1b1a1a1e1f1f2120212628292d313031323538393a3b3926
19273b404245474342444849454648494c4b4a494849494b505051504c3b1f213d494e55
53515152525458585453545351515151515355555653412e41575553504f4f4f51555455
5556595757575755535558585551504e4132425755565b5a5656595a5957595b5957595a
59595857575a5a5b5c5c595856595b5b595858585858585857595b5a575a5b5a5b585455
58565547323f56595a5959585a5c5e6381bdead99d6a5e5c5a575a5b5a5b5c5c5e606a98
d9eecd997d6e666c6d6968655f5f5f5e5f5e5f5e5c5b5a5c5b5b5c482e38575d5b59595b
5c5a585857565657585b5c5d5c595a5b59575b5b564b3f49565555565857575957555454
55524e4d4e4f514e4b4d4d4e5b63462835454543403d3836352d
1315171414161612131819191a1b1c1c1d2022222323242a2e2e303234373b3b3c3d3a27
19273a413f3e4043424345474647474a4a484644464b4c4b4d4e50514c3a1f213e4c5056
545051505153555653535455565653504f5153525454402b3d53524f4f4f505354535355
58575757575656555454575b595656543f2f435451535957535252545656585d5e5d5c5a
575a5b5a5a5a5a5b5a595552575b5856595a59585656595b5c5c5a58595b5c5a56565759
5a5b5b48324057595a5959595a59575e7bb3dad2a3715e5a5c5f5c5b5b5c5b5d6474a1d1
ebf3d18c64626364615e5d5f5e5e5f5e5c5e5c5d5c595a5b5c5c59462c395358575a5d5e
5d5c59585757585959595b585554575757585858564a3b47575a58565757585757565453
5351515050504d4c4b4d4d4b4a493a28334346443e3e3f3b342b
0f1215161716141213191d1e171719181a1b1f22252826262b30303133373d3f3e3e3926
19283c423f3e40414241454643414348494745464a4d4b4847484d4c49381e24424d4d4e
4d4c51545456525050505152535653514f5253535353402c3c5051545352525454545352
555655555757555354555456575759574431415555575956515157585754595b5c5d5d5a
585a5b59585a5c5c5b5b534c535a5856575b5a5a5757595a585858595d5e5b565454565b
5d5e5a48303f54575a5a595a5b57545a65769ed4cd855d5c5b5c5d5c5b5a60636479b0d7
c9b098725f6061615e5d5e5f5f5d5e5d5f5e5c5c5c5b5b5b5c5f5c492d37525658595b5c
5c5957575a5c5d5b58565353575757575756565554493843525458565353535355535251
50525252514f4d4c4c4e504e4b483729364442403d3e3e3b3229
11121313141414120f13191c1d1f1e1d1f1f1e202327282b2e3233312f313438393b3522
16263b42414042414141434443424445484b4b484c4c47454647494d4a381b1f3d4b484a
4e514f4a4b4c4d4e535554535354514f4f4e4f51504f4030415150515150505054575554
5757545556575653535455555556565342324356585856575554585a57565a595657595b
5a5a5b5b5a595a595b5951474d57585759595a5a5a59595657585a5a5a59555354555659
5b5d5947303e53585a5a58585859595b5b668fcdcd89605d5b5c5d5b5f5f5e5e6176a9c5
9a736b65625e5d5a595a5b5e5e5b5e5e5d5d5d5d5c595a5a5a5c5b472c3652585858585a
57555556575a5a595655595d5b58585a5a5756535549353f515255555455555352535250
4f51514f504e4b4a4a4d4e4b46423325364441413f3f3d383025
1012131312131412101519191c1b1b1d1d1b1b1e22262a2c2b2e3130303234393b3c3725
19273c44434041424345444445464646474847464646484a47474b4e4f3e1e21404e504e
4c48494b4f514f4d5252515352514f4c4b4c4f504f4e402f3f514f4f52524f4e53555657
57555253555555565556585653545653402f435554545557565454565957565655535356
5a5b5959595858595b5a555051565658595857585958575a5b5b5a585554565656565656
595b5b47324054575b5b59585859595a5b6489c4cf9a6e5f59595d5d5b5b5a5f687d9da3
7d605e5f605e5c5b5a5b5c5d5e5e5f5c5a59595a5959595a5a5b59472d38535d5d5b5c5b
5a58575858595c5a59595857595a5958575556565545323e50525557565353535353504e
4e4f4d4d4b4d4a4b4d4c4b47434035283443414040403e383429
121313121211120f0e12161819191b1b1e202022252928282b2f323130333a3c3b3b3726
19283b41413f4043464441434548474645424248484445484a4b4b4d4c3e20213e4b4c4e
4b484d4e4a484c4f4e4e50515050504f4e4d4d52504d3c2a3e5051535353525253545454
565553535554535553545454535354513d3145575553595a56514e535856555557565459
5b59595b595856555556524d505456575756545458575658565556585857595a58575958
5657584534445455595b5b5a5958585b5e63749fcbbb7c5d5d5e5e5d5e5b5c698ca28e75
685e5d5f625f5d5e5d5c5d5e5e5e5e5c59595a595b5c5c5a5a5a58452b37535e5d5b5c5a
5a5856585858585756595a5a585753535352535556463344555251555650515454535152
5352504c4c4c4c4a4848484543433426323f3e3f403e38343128
111315151616131010151a1a1b1d1c1c1d1b1d222423272d2f2f2f313334373a37373727
17263a3f42414042434242484b48494b49434344454646474a4a4849493b21223e4c4d4e
4f4c4b4c4e4c4c4c4e4f505354534f4d4f4f4f5050513e2d435653505151515354525352
5252535757555252555653504f5155544031455553545351535254565657565355595b5a
555353555755575b59574f484d54585756545353575a59565353565856585a5855575a58
565758433042575a5a595a58595a5b5c5a5c6278afbe875d5957585a5a5b678fc3c28863
5e5e5f5f605e5b5b5d5c5d5e5b5c5d5b575759595b5c5c5a5b5a59442d39535b5a5b5a5a
59595858595a5a5854545658595657565553555654433444535454525454535355535353
545453504e4e4c49474949474742302231403f3e3d3d3a363429
12131311101114120f141717191b191d20201f232624252a2e2e303336363636373a3826
16243a40414140404245494c4a4846494846434447484646474a4c4d4b381d243e494d4e
4a4a4b4c4a4a4a4a484a4f514f4e4c4c4f5152504e503e2e4352514f4e4f4f5254545353
525151545655525457565453535456564230455453514e4e505556575856525152555959
55535559595756565754504e51575858555757565959575756555859585857575757595a
5c5b57422e40585d5c595858595c5c58575b5c5f84a4815e5a5b5d5d5e6074a5d8c67a58
5a5b5c5c5b5a5c5c5c5a5958595858585758595958595857575657462c3a535b5c5b5956
535357595a5b5a59595655575a5856565756565451413241515254555553515352535454
545253514f4f4c4a48464243444231223243443d38393937322a
1011110f10121210131a18141818161a1c1a191d22272a2d303234383a37343436383423
15253a42424241424546474948464343454546464548484646494d4d48371e2239494d4d
4a4746484a4d4f4e4e4b4a4c4d50514f51514e4d4c4e3c2d3f504e4d4f50515051535454
555452535553535555545553525355533e31485652535352515154525355535051565553
555554565859585657544e4e55585858595a595a595857575757595a595856575958595a
5a5a5a45314557595857585b595b5b59585a5e5d7b9f886661625e5c595b7abae2b86854
5c5c5e5d5c5b5c5c5c595857565757575657585858565556585757442a3952595a5b5a58
5352585c5b5a5a5b5a5758575757585755525152524030404d4c50555854515252525152
51504e4e4f4e4c4a47423d404341312734413f3b3a3b3a39352a
131112111112110e0d1113151715171a19191b1e2427292c2e3030313334373b3a383523
15263a4040404144434142474848474747464646474544454546494946351c243e45454b
4b4b4e4f4946464a4d4a46474c4d4f514f4e4e4c4b4a392b4d7c7e5e4f5254514e4f5152
5355545456535354514f4f4f505050514030435253505050505152545351535353555452
525352555a5955555a594a424c5456585857555554565757565759595653545758565555
585959432f4456585755585c5b57565a5b58595b79a8996b585a5957565783cff1b55f4d
5a5958575a5c5c5b5a575756585858565455595856555558595958462e3a5258595a5857
5a5a5b5b595a5a5958585a575451535554505154523e2f3e4b4e4e505556535152515050
52514c4d4d4c4b49474443464741312838423f3933363a393027
15110e0d0e0e0d0c0d131513141719191d201e2024282a2a2b2d2f2f3235373736393927
1928393c3b3d3f3e3e3e3f444848464444444447464545454649494641301b213d4a4947
484c4c4b4a47454246474442454a4d4c4a4e4f4f4e4c3527416368574f50514f4e4e4d4f
515251504f4f5052524f4e4f51514f503e2f404e505252524f5051505155575552515456
53515454525155555453453e4b5354555453525251515454524f4f52504e4f5152504c4d
50504e3d2f3d4d4d4c4c4c4e51504f4e515555535f787c665856565755577cafb07c4949
55555453545555535251504c4b4c4f4b46484a47454343464746473e333b45494a4a4747
47494a4c4e4f51504b474b4f4f4f4c4d524f494745392d38403f3f40403f3d3c3b3b3c3b
3a36343434343130302f2e313131282a3b3e383838393b3c3528
100f0f100f100f0d0b0e1012171815151a1c191920252525292b2d303030333332333222
18253333323433323333343233353534343334383a3b3c3d3d3a3b3d382a1b2439403e3d
4042413f3e3f3e39393c3c38333232303133302b2b29262225292b2c2e2f2f2d2d2f2f33
353333343635373736373a3b3937383d352d37413f3c3b393b3d3934312f302e2e2c2826
252526262424242222242b2f282627282727292b2b2d2d2f302f2f333537373b3e3d3a3a
3c39373231353533302c29292c2c272523211f1f202929201c1e1c1b1a1b39584738352a
272a292a2b2c2c30323031333334363635383937373632323030313234352d292b282421
1f20201f1b17171819191717161415171b1f211e1e282e29282b2b2c2d2e2c2d2f32322f
2d2c2d2f2e2a29292826232123241e26393e3c3f423f38332f20
11100e0f1212120e09090c0a070507090a0b0a0b0d0f1010121312141314171a1a1b1b1b
17191e1f2022222322212224242425252423222425211f1f1e1f1e1e1c1d201f1b141216
1511111010101114191b1f1e1e212325272a2b2b2e302a23282f30313232303032343534
332e2e2d2d2a29292826252726242522232625262726272c2e2c2a2b2d2d313435383b3b
3b3f44433e3e43423c3c3f3c3b3b39383b383738393939373436373636373a3c3f3d3b3b
3d3d3c333039414649474a4c49494b4d4e53575859717f68575153535150718a6f473a42
4a474446464644424141403f41434344454748474a4746464543463c2f38484d51535251
4f4d505354525054555151514f5050514e4c4d4b4838303d444749444243424042484844
414042454441403f3e3d3c3a3d3c2e2839403d3d3f3f3b353023
111110110f0e10100a0a0d0d0f111115181717191d2123272624232627282c312d2a261c
141c292e2e2f2f32302f2f3335313336393b3c3d3d3b3a383c3e3f40412f1b283f464542
4243454644464442444445434041413f434647464849382b3d494a45474a49484c4e5050
4f504e504c4a4c4e4d48484c5151504b362e415051505052534e4b4d4e4d4e504f4d4d4e
4e52524f4f4f4f4f4e4e46404b504f4d4f4f505254555250505252535758565757575859
5a58563e273b51555658575b5e5d5b595b5c5b5d628695715c5d5c5c5b618296784a3b4b
575a5b59595653545658585552575b595657575657585757595858432a38515756585958
565554565957565958534f535857524f5253534f4d392d44545553504f5051514d4d4f4e
4b4b4e504e4a4645424143444442322b383f3f3e3b3d39353128
1111120e0c0c0f100f10121110111517181d1f1e2023272b2e312f303334383e3d3b3521
16273a404240424343444646454342464a484a4a48484746474a464344331b2540474847
45464342474a474546484a4a464a4e4a494a4c4f514e362a3c4a4f4f4f50504c4e50504f
4f505051514e50514d4b4d4d4c4c4f4f3c3346504c4a4d50515151525053544f4d505554
525253514d4d4e4f4f50443f494c4a4d4f50525555555350515253555757565657585a5c
5d5a563a283f5356575655575958595c5d5c58596194b08364615d595d79a6a2764b3e4f
595b5c5959565456555356555356585654575855535757575858574228374f5857585957
5655535556545456585755535558544f50525554533b2b3d4e4f4d4d4d4e4e4e4e4f4e4c
4b4b4d4e4c464343403e3e444643332e3c3d3c3d3c3937312b22
101113110f10100e0e11121112161614181e20201e22272c303234353635373a3c3e3825
19293c3f4042444446464546484948484b464648454545464846424242341b223a454749
4948454a4b49474544474c4b48484c48474a4a4847472f293e4b4b4a4d4e4e4d4f504e4d
4c4c4d4f4f4f52524e4d4c4e5150504c3a3648504d4a48494a4a4b4f4f4e50524f4d4d4f
4f4f4e4d4a4b4c4c4a4847474c4d4c4d4f505152535456524f535658585757565554585a
5956533a29405257575958585a585958585b5c595a7b91785e5a5e62688dc1b47c4d3d4d
59595b5959585756575454565656545556575653515254565655563d25344f5655565656
5551535453565957585854555652525351514f4f503a2c4051514f4d4c4f4f4f5051504f
4a48494c4b454143423f3f414341342f3b3f3b3d3a363733281a
0f0e0d0d0e0d0d0c0c0d1010121412141a1c1b1c1e2225262930343437373433383d3b25
1927393e404246484844424447494746484544484847454649444240402f1a283e413f43
4948474848474341444747494a4745474b4d4d494848322b3e4846494d4f4c4a4a4b4b4e
4d4d4d4d4c4a4d4f4e4d4b4d5052504935334752504f5051514f4f5352505253504d4e52
5253504e4a4848494a4c423d49524c4a4e4f4e4d4e505253525458585757585756555755
555451392a405356595856545455575a5e5c595a5c768c7d675e5c5d6385a28e6a4c4352
5b5a5a595a5a5754565654525356555555555352525053545556564026334c5255585857
565453525051535358555052545453555756565451372c4351505050504d4c4e5050504f
4c4a4b4c4a484644444545423f3b302b38413d3a3835322f2c20
101212120f0e0e0b0c0e0f1318151517191b1c2023242526292d323636333231393d3c26
16263b4041424648474443474747484848454646464445474744454340311a223a414141
44454242454447464646484848484643454b49474749342b414b484b4d4e4c494948494c
4c4d4e4a4949494c4c4d4f504e4c4d4e3b333f4a4c4c4e4f4c4e4f4e4c4c4b4945464b4e
4f4b4849494c4d4f4e4a3b3a494f4c4b4e4f4c4e514f4c4d4f5253535354575a57555450
515150362a40545958585859585654575a5a5d5c596da7bc916c615f648891705d4a4252
5959595859595854555653515354545353524f51545355595653553e24304b555858524d
4d5053555353545455545352545452545453525351382d454f4c4e50504e4d4f514e4d4d
4b4c4d4b4a484644444340424340352e363e3f3d393834322f20
13110f11110e0b0a0e100f0f0f0f1416161a1d1e1e21272b2f303234373a38373b3d3722
1122393f4042444545464847454445494c474647474847474745434341321b233b454748
48474b4d4c48444348464648484a4546494a48484b4a332b424c494c4c4a4c4b4a494a4b
4b4c4d4c4a4b49474a4f51504b4646473633444a4b4c4c50504f4e4a4b48484b48494a48
4a4c4747484c4d4d4b453a3c474c4f4f4e4f4f4f50504c4a4b4e4d4e525356575453524f
50525336273e52575a5b5c5a5c5c595657575b5f5e73adc293695f616c9a9d715b463e4e
58595b5b5c5c5b5a5958555252525252504e4e50545454595856543d202f4a555456544e
4d515455565756555250525454525151504f525553372c455151515251515151514f4d4d
4b4d4d4b4c4c4846454343454240352d363b3d3b3737322d291c
10101110100e0d0b0b0f0f0d0e121311141b20201e1e22282a2e33373b3e3d3d3e3e3621
15253c4441404447454647484644464747434247494847444345444546341b263e464445
42414042494b4844454644454a4a48494b494747494b32283d4847494944474b4d484a4b
4a484b4d4d4a48494a4c50504b494a49352f434c48464b504e4947484c4c4b4b4a494a4c
4e4d4b4a4b4a48484b4842414a4d4d4b4a4e4f4c4c4e4c4d4c4a4c4d535554524d4e5353
5352543a2639505355585b5b5b5b5a5c5c5a5756575b809e87675d6389c3b4765b474350
585a5a5c5a5653585a5a57535353545453535454565653535453523d24314e5351514f4e
5152545658575556545253515152525657545352533629414f51504d4c51504d4e504f4c
4a4e4d48484c4b47464445474340332a34383b3b373735342f1f
1112110c0b0c0d0c0e120f0f121311131617181c2023272b2d333535383936363b3c3823
18283c43403f43484844454445454748474342454b4947474440414245341b243f474541
4343454343464a4542464b4a47484a47474745454748302b3f47464747474a4d4e4c4b50
504d4c4b4a4a494a4d4e4d4c4b4c4b483231444c4d4b49484e4f4d4c48484142494b4c4c
46464a4d47464b49484b3f3b4c504c4c4e4e4947494b4b4e4c4b4a4d4f4e4f504e4f5052
52515138273b4d5151525256575b595859595253595c7c9a8667616b9ed0ab715c49444f
58595b5e585356585a5857565552525558595856575451515151513f26324e5250535458
58555557534d525454555657595552545757565554382f46504e4c4c4f4f4f4d4f514e4b
4a4e4c4948484747474445494642352c32383b3c3c3e38363322
110e0b0d0d0f0b090c1010131513151513161a1b1f252d31373b38363b3b3736383b3520
16263b413f3d4549464546444748464445464648494a47484543464a49361c283f434448
4d4d48464847464445474949464647484848474542412d2b3f49474747494d4c49494d51
52504e4c4a4849484d4e4d4c4b48464634364b52514b494a4a4d4c4b4d504a494844474a
45474a46464b4e4b474a3a39494d47464a4c4a4a49484a48464647474a484c4e5050514f
4f4c4c3625384f55545353525255565255575b5c5c5c7b998b695a6599b993665b4a4551
5859585756575a5a58565353545150525655504f54514f515353513e222d485152545552
515256554e50534e4e4e5155575455555350505354362f444d4e4e4e4f4e4f504f4e4e4a
4a4d4c48494846484543464947443630363c3c3d3e3733302e25
100e0d0d0d110f0c0c0e0f0f11121315171817161d222a33323434353537393736373521
15283e444142484847474745484744414245474a464345433e404542403117243f464346
47474a474948464744404447484844444948464747472e2a3c484c49464548494646474d
4f504e4d48484b4947494d4e4a4848493737484e4e4c484546474a484647474342454747
47484a484b4e4d4b4747393649504b47474c4c4e4c4848474444454649474a4d4c4e4f4d
4d4f4e34243c52545350515355545353555a5c575357769d9673616c9dae88655b4c4754
5b5956575858585553525254544f505050514d4e545354535051513b1e29475454515151
52505354504f525255534f4d505554545455565352332e444f505153504f4c4d4b4b4d4a
494a4b49494a47464643424243443b353c423d3c3b3734353527
1010101011110f0b0c100d0b0a0a1013151715171c21262a2b2f3236393734323539341f
12293f44474c4847494844424544424142444446464342444142454746331c263d474742
4444424243464b4a46464a49474a4a4a4647494c4a47322d3c4546464646454847464347
4a4d4d4947494d4c4a4b4b4c484849483638454a4c4d4f504c4b4a4b4c4d4844403f4146
4b4c4c4a4645464847463c3a474f5049494c4b4d4d494847454548494a47484c4d494b4c
4b4b4b2f223a4e5153565453545456585753575d5b5974adc4986a76aaae80615e4d4952
595e5d5b5853545150515154514b4a4e4f514f53535452535959553f212b485555515155
5452515659565454524e4e4f5054565353514f4d4e322d414c51504e4f4e4c4c4a4a4b4a
4b4c49454545464746434342443f38383d41413d3e3c38383625
12121010110d0a060a0f1112100e0f12161513181d2429292c2f333538393a3c3b393823
11263a40454945434546423f4344454140404045474646444544454846351e283e464845
4144413f44484944434546484a4c4b49494947464849322e414644444544434548474748
464b4d4a484a4d4d494a4848494b4846373440484b49464746474648464242474b474347
484a4c4d4c494a4849473435414847454749494c4d4b4647474645464742424a4c48494b
4d4e4d2f213a4b50545453525256585650535253575771aecd9a6578aea677615d4e4751
5858595959575654534f50504d494b4f4e4e4e4f504f4d505c5a503c202b4a5251525355
545356575958544e4e534f504e4e4c4b4e5353514f322f465253505050514d494c4c4b49
4a4b464347484847444244464542302d383e3f3d3c3b37373222
1414100e0d0f0d08080d121312130e0e101517191b21283134343130303535383b3b3a23
132536383e4040414344454443444544424142454341444546444245453c1e263f454847
454541424142464743444745414045454243434448493131404846444542414144444647
464a4c4d4a494947474746484c4c4a4535333f454749494643474942454a4a4748454447
45434444464647484647353342464342464b4b4b4a494745464344474845404548494d4d
4b4c4b31233d4f4e4f5253525456585756545154595970acca9c6c91c9af745c594a4753
58565556585b5856514e52514b4a4c4f4e4f4d51514d4d4d4b4a48371c2a464f4e525553
5255535558595752505052535151525252555857553530494f4b4a4d4d4d4f4d4b4c4a48
4a4c49474a4c4b4745434344444034303c413f40403c38363220
12111212100d0a080a080a10110f0f15151414161b232b3231313232323234393e38321f
11283b3e3f42454545454647444445454746464443424142474a4c4a454c322a3d454748
464641414040444a4844404044444143474b484846462f2b3c4443444440404140414443
424343454446444545444344474646433532404b4e4d4b47444849484947464546434449
4e4949474442464a49453539474a46434649474846454849484547494a4e474346494d4e
4d4b4b302034484a4b4c4e4f5354505155575552565c72a5bd946894b9936a5b574b4b53
58585555585959514c5055534f4d4e5053504d50504d52524e4a4b3d202b45504d505352
4f51545655565753535253555352535554535255532f314c544f4d4e4a4a4f514f4d4c4b
4c4c49484645484744454344443f33323b403b3a3d3a35323020
0f10111013110d0a0b0c0e1111110f11161713131b262d302e2d33343436393735333422
14273d4242434544444748484444424243444444434241434547474745381c253c464745
46474345464341464a4a494a4a464343484c4a4845452e2d3e444545413d4042403f4041
41403d4040424244454442444543424539324046484444464344494e4c48434140414043
47494a4e4b48494c49453d3f484c4d4b4c47444547494949494a4a48494b4645484b4a47
474c50301c2f42484a5050515356524f5254535455575c719182688ea482635c594c484f
55565453565556504d535450525153544f4e4f504c4c524e4b4e4c3f222b444c4f515351
4d4f515252514f54565654514e4e5253555351504f2c2d48545253524e4b4b4c4e4e4f4e
4b4b46474844464744444142444134323b3e3a37383b37352d1c
0c0e0f11100e0b080a0c0c0f111010131415171a202a2c2e30312e313232353738373723
142943444446444247494a4745444040404343434241414345484744463a21293f464746
4a4844423e3f494d4b494744454143464643434847462f2f3e454445423f3f4143404043
42403e3f3e41434446434344413f3f4234313f434347474948474c4d4c48434749464647
48494a474444474644453336464b474749484443484e4b4945474a48474948494b4b4441
434446291a314348454a4d4d4b4c4d4e514e4f535454596a8c8c7ea0a4795c56594d484f
5352545453545455524f504f504e52544f4f4f4e4c4c4d4948494944262d464e4c4b4e4f
4d4e50514d4d4f5453515152514d4e4d4c4c4c515030324b5552514945454849494a4b48
454643474949444243423c3b3e3b3230373d393432363636331d
0e0f0f0f0f11100c0d0e0d0f0f1110141615151b22282d30313433313435373433363a26
152a404343454542454545424345434242424343444340454645454342371e283e454948
454341404246484541424141434746454342404142412c2e3d4343434645403e43474443
42413f3f3f3e4343423e3e403e3e3b3d33363e414546484a454447443f444a4742404047
4a46474743424040413d2a2d3f433f3d4246454344434446423f413d3d3f3f3f3f3c3a39
3b3c3f291d303b404042454141463f444a4c4d504f52586faedfeae9bd7c58515449454c
4e4c4a49484744434342403d3d3a3c403e3b36363736363535343433272a353b3b393a3c
3e3e3e42434142484643403e3f3e3c3b3b3e3e403d2825323633322f2d2d2d2e2d2a2828
2a292629292a2927282825252628242e3a39323335343435321c
0c0d0c0f10100d0a0b0e0d0c0f111315161719191f24282d2f33362f2d2e2e2d2a2b3224
1927343b393737393937353434383536373637333331333736313336362e1b253b3d3a3b
3a3c3a353a42433f3b38322f313334312e30302d2c2a1f1f242425282b2a2724282a2c2e
2c2c2a2b2a292c302f2b2a2b2c302a26282c3033313133342e2c2b2c2f2b282520202121
221f2021201c1b1a1b1b22221f1d1f1f21232525212026292a2827242424262628282b2d
2a282b2c2e2b292726252423201f1f1d1b1a1a1716151826527a857354382823252e302c
2b2a2c30322f302e2a2e2e2f2f323034312d2a2b2b2a2a272829272b3531231e1f1e1e1f
1d1b1c1c1d1b1a171a1915151514151819202629293431292729292c2f3032302c29292d
2e2d2b27262825242321201f1d1c21313d373534393837322f1b
0b0d0c0d0b0d0f090b0b0808090a0d0c0f110e0c0c0d0d1215121415151616191614181c
211f1e20212223252420202627282423232627242224221f1c1a191c1d1e2c251c161212
121213100f12151515141517171b1f20201f24252728313028252625292b26252423272a
2b2725231f1d1f20201d1c1b1b1b1c1c252722202022202321202025272926292d2f2e32
333435373334393735393c3c3733303132323330302c2c303030312e2f2a2a2c2c2f3336
3532333e443c343535393c3c424947434945444c4c4d5452555e64635e57504e4a4c504f
4f4b45484a464645444342414546464542434446484946444a4c4a4a4b4b4744484a494c
4a4d53575450515052524e4e4f504f4e4c5353514d4b4a44434447484949434745444445
4445444042424040413f3c3b36363637393739383938332f2d1d
0c0f0c0b0a0a0a06080a0b0c0f0f0f0f131412141b1d2025242325242526272928272a2f
34312c2a2a2e312e2a292c333534312e303131343b3d3d3a393836393e444a48423b3940
433e3e3e3f41444441423f3e3d3c3e3d3a363a3a3a3d4340383b3f3d3d3c36383c3c3c3f
3f3c3f3e3b3c3a3d3d3c3d3c3c3d3f4345474546454445444443424446433b4047474946
464948474649474245474647474549474440454744424145484b4b484945484a4848484c
4c48464f4b4c4b4b4c4d4b4b4d4f5451515050535552565856595f666b6a625e656b706b
635863746b5d576976776c5c555253524f5150555f5b5352565d6b71695a4e4e504d474d
515f696358525a64635753555c676b655750535754514e4f5768746d564d4a4c4c4b5055
4e4a5a5b4d48464243443f3c3b3d3a3639353435363835332d1b
0d0d0e0d0b0b0f0c10100f0c0d0f131a1b191a1e29323330323a403b32373f464841414b
4f50524e43424442414042535d5b4d4545525b5c534947464748474847545f5f4f423f42
4245454a54504e54544c484a4744454546434548464341424042454440403d3d44444242
3f4042403e3e403f3d40414140424141424245454745424246484b444143444444444343
4447474a4e4e4e4748494749484a4b4748494748464748484847464746484a4d4b4c4b4e
4f4e4c4c4a494748464b4a4b4d4e4a494e514e4a5153535558556f9aa7957569819c9f84
635d7b90886e60809091876858555451525156707b665555647b8b928a6b514c4b4a4b4e
56819c84655977958c71606c88948f80695a5555524e4e5b79878a80604c4e504d4c5862
554c6d70534745424342423c3e3f3e3937343734333632302b1a
0b0b0a0d0e0b0f0b0c0e0f0c1016374631202c49656b4f3c5a7a8367455e7a837c5b5b75
828684715443464542425473807d654e506f84876d5549454a4e4b4a597f969971514747
484b537e8b6a5d816d4c40474f494645444041434243474244444440403e3d3e42444240
3c3f42403c3b3f403d3f464443403e4244464645494e4a45474545464748484747444447
444646484a4c4942474a4645494d4d4c484c4b4a4b4e4e4d464343494d4b4a4a4b4c4d4e
4d494c4b4345454a484a4c4d4c50514f4f4e4f514f505657575b817d7084746365878366
5d6c7a76897e657e8173806f5755514e4e59728c8a6a55546d7d6f688871534e4e4b4e4f
6972687d7561766e858a708486696d8b81645455565454718a786a7e70564e4c4b4b5462
5c547776575868696656433c3e40433a3836373837312e2d2514
0a07090d0b0b0d0b0d0e111012253037302424364b4943455e635c6f5b6f7769715e5260
727b725e4c40404443436272757a6b5560716e6b75644e474748484979866e746e524443
44424f7f946d5f846f636c6f7165544b44464545424647434345434340413f3e40444340
3f403f40403e3f42403e45433e3f403e414a4746494c4c464342464b4748434548464d4b
474b4a464b48404347484b4d4b484647474c4b4c4c4a4e4a4544484d524c4b4c494e4d4b
4d4b4e4c48484a4c4a47494e4f4f524d4a4f514f52515455565a83857775665c5a7b785f
5b707569867e67818b82886f564f4d4d4e607a7f7d6a575256575a6d8a74585049484b50
6b71667d7560776f848d71868868688a83645350555455738e735f7b735851504b4c5471
7e7c8c7c5b6475878262433b403e3b37373434343032342e2a13
09070a0e0c0d0c0e0c0e111016352e251d171823353534425d574d6f5e74725e6a5e4845
57635346434043454846545d637669586968565172694f4a484446447c8663666b534349
47414e7993837c94727b939ba47a534843444a4a48444541424743433f41414140434340
41434041423f4145484343413d404040454440434a48424044494c48484d4f48474a4d47
4b4c454242474b4946494c4d4d464245484d4c4b49484a4845454b4c504d4d4d4a4e4a47
4a4c4d4a4b4c494b48474a494c4f52524f535252514f515353587294a494705f5b767661
5b6c7166847c698999907e5f4e4e4e4f4d585c6378695852505a6e888164574f4c4d4e52
6a6e607f77637c6f848e72898b6d6989836757556a655c758e735b786d55504f4d4f577a
8585927f5d53647467513f3c3e3a363334332f2b2a2a2e2e2611
07090a07070a0e10110d0e09101f424d301b19273737303a6c888a9164778a8a7c584642
525f51443f3c41434342435f77806b59696454517368504b55524a467e8767686b524441
4046507ca4ababad755963828b674e4745434747464543413f413f434141413f4341413f
4244454242403e4042403e3e3f3d3e3b3f434746454448463d404743484a4d4a4a474a4e
4e44444641474d4c474044474c4748494a4d4b4946454a4a49464b4a4a4f4d4b4a4a4948
494a494c494c4b4b494a4b4c504c4d4e534d4d5252515150535767696b88765f5775725b
59697365847c6785847365594d4d4e4f5053525b766959555e78887b6051514f4e4d4b4f
676d6380745c786d848d6f858c6e688c8262585982765e6d8b6e59756b56494a4a495571
6b5d7c7c5e4f64634f423e3e3a3736343635312e2b2a2d2b2810
090c0a0808080a080b080e100c121f33312019243539383f62685d795e767e8772493e41
536151413e393b3e3e414f5e6870695967645451726850497d805e4c7c8668696c534444
4242507d936f678b6c5176816755494a4c474543464645454340414342453d3c413f403f
414141403f3d3d3e3f3f42423e3d40413f4345444243484b47494642494b494546454344
454242494f4a4c4a4542414348484a4c4a4b4a4748494d4b45454a4a494c4b4a4c4b4a4a
45484d4d4b494c4d4b4b494c4a4c4d4c4f4e54555455535251547f81778e78615878715b
5865797d8873618278605854505152514e5a6d7e8d85766374948f7d735e504e484a4f51
62737885715d767b8d86697f8a7f7f8c78605958786c59657c7e7b8466524d4e4b4a526b
5f4c727a5f627d796d553e3c39383536383832312a2d2b2c2710
09070b0b0a0a09090a0a0f11152c28352d20191f343132415f4f406c59726e636a514040
5461503e3c3d4243413f5e696a786854616d6a6a75624c48797853447282717669514747
3f3e4f7b8f6c6287686485897c674b4444444443464543464341434041433e3d3f3c3d3e
3e4041403e3d413f3f3f403e4041403f41423e404342404245443f4442413e4245433e3f
404242434647474342474243484747484748484a484b4d4944474c4a484b48484e4d4f4f
48484e4e49474c4d504a48494c4c4e4c4e4c514e4c4d4d4f4f516a95a2916e5b576d6a58
5157768b785c5b726c5852534f5055524d58778b8d8c86676d87929291694d4d4c4e4f4b
4b7796785c566a8e83665759778f94765d5355585b5a5353607a82795b4e4a4a48474b5e
544a666650647a7d7a61443b38343436363731322d2d2b2a260f
090a0a0a0a0a08080a0a0a0d111a3d4d2f1a17242d302c3a56483b63526c674f6557453e
4b5b4c3f3b3c4141413e55717d7e5c454c6e82856a4e423f4a48433e4e77939869473c3f
41404a738260567a65748b8d8b6a4c424347454243454546454446433f42433e3f3d3d3d
3b3e403f41434342403f403d4343413b3f41403e45434141454644444844404643444544
413e3d4045454846454544464a4744434346494e4a4a4a4946484d4a484c4a4d504f514c
47484d4b464646494a4c51504d4b4d4d4e4f485051505151504e5860605d5853575c5b53
53515c665e5753575a5355544e4d54544f52565c595a575351575b5b5b53484b4e4c4e48
49525858545152585758564e515a595758534f514f4b4e4f4f565b5c504c4b4546444548
46454e48404a515051473c3f3a3637333237302c2a2e2f2b240e
0b0b0a0a0a0d0c07090708101216201c131514191b25282f3635343e3b41403844433d39
3d42423e3e3f3f3f3f3b43535c57483f3f4f57564f453d403d3e404342494c514b403e43
4544474746444449484f51515551493e3e46464440434443434447454443403d3b3b3e40
3f3e423d3d3e3f45423f403f4143433f3f434a4b4744413f4045474443484c4845414747
49484e4946413d4147484a4b4c4d47454548484c484b4c46444a4c474b4b484b4e4e4f4b
494c4a4c484c4a47474a4a4c4d464c4e4e4f4e4a4c504c4e4e4e505757525150504f504f
5051535351555150575d5d57565a65665e534e4c4d4f50504e53616767574b4d4b4c4b47
4b5e64655e574f54595855555a5a5a5b5d575659575452544f4c484c4f4c4c4643454649
47444241413d3d3b3f3c3a3f3a393630322f2b2a2b292c292310
0f0c0b0b0a0a0a080b0b0d0f0f121213181a151a192630323334323033343735373a3b3b
3c383c41414146484541423e414543424444413d403c3b414748443f43484b4f47404240
3d40423e4946414443494746454c453d3e3d3f41414245403f43464243433e3b363b3e41
43423d3d3a3e40443a3d3d3c424d4b43434a5258615f4d4345524d4b51524843403c403f
4b4550514540404443454c5e6a595163574c474d4b4a4b484a4f4f4a4945484b4d4e4c48
434a4b4e49474d4c46454a4e494c4a4a4d4f51514d4f504f4f4f4d515452535651524c4e
4b4e52504b515473a0b3a77388a6b1b298664d49484c5051546f96aa9f6e4d4d4b4b4d4a
508fb6bd9564515452505284b2866692ac86a0c2c8a368524b4b4b4c4e4742423d3f3b3d
41454343423939383d393b3b38352e2e312d29292a2a27261d10
0c0e0e0f0909090a060909101310121313131013161f282b2f312e30343132332f344560
6c6c645346606e7565495a4a424c524b403e3f403c3b3c4e656251444b5d747a5a43433e
3843465b795f4f6a584a4246464545474442434143373a404344443e3c3f3e3a353b3c3f
3f413f3a383c3f433b3e3e3c3f6f5e49576b7191a2a574545272614c847c524840434046
46507b6c4d3f3c4544434f7c855c5d8768504b4e4e4d4e4e4a4a494a4644494d4a4c4745
4548494945464b49474a4d524f5252514c4d4e4e51524e4b514d4d4d4a4e4f4e4d4f4c4d
4e514844484d529fb6a9ba8a8b9fbfc59b634c48474749516da4b2b2bf885a504e524d50
5b8eaecfac6a515355515598ca996da3c694b5d5b3bb79544a49454c49453f45403f3a39
3f42413f3d3839363631353337322d2f322d2c2927272326160b
0a0a0c0f09080d08090d0f0f0f111310151410151421262c2e2f2f2e343633353237547e
8076747250787c7a7b52765d465967513e3a40413b3a3c677b7b715967838c826f4e3e3b
4142426e8e62537d6549434b514e44443f3e403c3c393a3d3d3d3e3e3e3e3e3b393c403e
3e3d3d3a3c3c3f41413f4142427b60475a6b74746562826457756152887e544943434240
58829f73484143403f455181906262906b71808280624c474543444947474b4e4c4b4848
464a494947444a4c46474c4b4e504e4c4c4a4f494a4a4d4c504d54504d5051494a4b484c
4f4e48454a4d58b3ac7f8a736265969d70514a474746454f7395756ea78b5a4b454a4b49
4b5075a283544b50504d5194cd9b74adcf94b8d293b881574d4b474a48433e414041403e
3f3b3b3c403d3633302d32302f2e2d3337302d29252823210e06
0b0b0a0c0e080907060a0a0a0d0f0f0f12151711151f2a312b302c2b2e30303233345780
725c6c7f5c77655e7e5a7b624c5b644d3c3a3a3f3f3e405d5478825e7a83635c6951453b
3e3f496b8d5f547b6371909d9e79493e383c3e4040403f3d3b3a3d3a39393b3b3d3a3e3f
3b3a393b3c38403f45403f4245746d5a6a6c72776b697f61547a6a5c918455403e3d3e3f
7680866c4a40422738425185968a8ba06d768598a06b49474543484a4a49494b4f4b494c
48494b4c46484d494642474a4948474647494949494c4744464d4d4a4d4e5253504b4d4e
4a4749454c4a5495bdbbb07655588c9a694d4545484b494b4e56698cb67e52505a625248
4555a1845a4a494e504f538ed1ded8e0e090add9d9c579534e49484943403c403d3b3d3c
3f413f3b3d3b38343330322f2d2b2e32332b2a272629211c0d05
06090a06080709090c0e0f0b0b0a0d14151313151720292b2a272c2c2b2e2f3133335a86
857c7a6e5381837d7f527c736a6766483d3b3b3f3c3c4040627d70587f835a586c4f3c3d
3f3f456f98a0a1a96b5a61789667483e3a3e413c3b3b3b403e3d3d3c3c383b3e413b3b3b
393d383a3f39393b433e3c3b3e57827e925d6393a3a379574d7d86949e7f52454a3e4246
4a4e7366484241413f4150879c908c9e69607b928259444a4742464a4b4746474a484445
4446484a44494745423d454a4845464747484a4c4b4c49504b4c474d4c4e4c4948484647
4847494b4d474f6f9298b5895e57839c694f4644474d4c4a50679ebba4644d66a0bb7b50
4b7c9f6f4d4d4d494d4f5185cac3a4bcd78faad5e39e5d4e47454346443d3d3c393e3c3f
4142413d3939383634363230302a28292925252626241d1a0c02
080a0a09080a09060605080d0f0c0d0f121310121620262927292a2b2d302f3333345e89
80846f5046807d7780537e87887b694a3b39373c3a393d486a78725a7f855f5b6e4e373c
3b393e668d6f6887614a6489765142403e3e3d3c393d3e3e3f443d3d3c35373d413d393d
3a3d38383d3d33353b3c3d3b3f4a7a89915b6571635c85684f828e97a2845c4247444541
49466c6448393f4441425281926f6c9467597d7a60504344444144484843444645454649
404346453f45474647424449423d4349464041434149474f4b4b4e4946494c4a4b4c4646
45494a4a4b444993997ca89062547f9d694e494241454a4a5f9fbeae82614e71bdd98250
469385584f4e4b494d4d5485caaf7399d3889dd0aca96a4c46454446403f3937383e3d3a
38393e3a3735363231342e2c2c26272828292827201f1e190b02
080a06060b0e0702080a0606080e0b0e1113131313181c262927292d2f333132332f5a82
69766e4e49775f59815882848085704b3836373e3935395954767d5e777d635e684d3839
3f373e658d5953805d477f715e463d393a3d3f3c3c3d3d413d413b3b3e3a3a3a3e3e373a
3c383b363e37373a393c3c3d41426791734d60766e668667518f9b829f8852494040413b
52678884654a4247464652808e5d5d8e647b968c87644942434447494842454542424844
3e4448443f474a4647404144473d40414c454140424d4a4c524c3a4347484c4b494a4243
474746474a474c8ababec88459527c9961494547434444476dbabdb4b281545c8a9e634c
4b8a7e504449463a474b4a76c3af718bca8098cd88a476534744464242433d393a3d4134
3237393130323230312c2b2c2c292c2b2a2a29241f231e160a03
080708040809070205080a0e080811080d1012121318252a292828272e31342f2d31597c
5a586a664e7d7b7c7d4f7e6c5f7869463b3b3c3b39353861737e6c4e5d6e7a835f453f3d
3e3c4269905649745b77a3a4a17c47323a3e3e3d413d3c3e3f3c393a41423c393d403736
3a353a383c393b3e3e39383e44415e7d624a5b8fa3a0694e4a7a5b4b7e754f3e5149413d
67859594714b42433e3e45656e4e557159728484805c42424342444c4940484640434843
40414444424442444443453f3d3d4348454547464743484a43484843484a424446444244
4540444e46494a587d9190604a5062714f44424b4a4745445b8c9b9e9f704f4646484543
4369624c44494c4643434a5e7a67535b725c63705766594c41403e4044433a3c34383930
3436342d30322f2c2c2d2b2c2e2c2b282d2724252120160a0505
07080a0a0a070803080a03080e0f080c0b070c0c0f1825282a2b272c2d2a2c2f2e334455
42394b513f61686c593d5a473f4a4d3e3e3535363534384b6b5f4c424154686949403c35
3e41434f57424153454e5a5a5b503b3b363b353a3c3c383a3e333a383a403b35383b3436
363a393b393b34393a353b3f3f3840453c3b3b474f5047444141434245423e3e43444241
43484c49483f3c36383e434e4f474a4b434c4e4f51474040404143464441464743424542
413e3c403f444446434245464242464c46413c4042424849444147403e41424448484444
414344434546494649504f4743484848403d42484544454647484b464947474247424248
464849454041474244464b44484b47464a47434c4943423f40373d3e393d383a35333430
3336342c2e31272a2b2c2a2b2825272224252120171210080105
090a06080a070907050c08050807050c0b0a0b0d0f1315232328292c2829262b2f303436
302c34342e36383c3836393431323a383d313233323733343e3e3c383c3e3e3e3e3e3f37
353b36383e373340363e403f423f3b323536393c3b3a363a3e3739363538353434373138
363835373437323a37323a3837323738353436373c3a3c4145414244393d34403c3b4041
3b3b3e39323d413a3d453f3e42423f3f3f3d3e3f4645443f3e43454345424145443f403f
41403d3f48444542414141403f414543484339434646484a4d444141433f41454946443f
3c414242454345494943423e434245423e3b433f3e3b3e3e3e41413e3e3e3e3e3e3f4447
443e3c3e403a3f434043484a48434346493f41413d3a3c3c323439383436302f3134342b
31332b2b2a2c242829242623202225211d1f1a16140804020205
070806080a0d0a03050505090a06090a0e0e0f0c0a111723262b2725242b2a2a2a2b2c2c
2b2b2b2c2b2b3237313335332c2f32343832313637383133363837353d403c3b3a393e35
323c3f3c373d3f3b393a393935363a34343b3c3f3d3a3635383a3a3934332e353a353638
343434313335343634333a3533313736353439343339343a353038413835393d3d3c3a39
39343a3537373b3f3f3d3d3f413e413f3f383d41473d41423e404042423c3b3a3c413c3f
433f4041444342404040413d413d44424141414044424644474241413f3d3f483f403c35
3a3f414242454745474141413f41443e3d40403d3b3b3b36383b3c3b3b3b3b413b3b3f44
3e3e414038353a3c3d413d403f4340454340423c363b3b38332f2f32312e302b3530302a
2d2d272927262827292223241e2024241e1a150b0a0501040408
08070601080705090605050505090e07090a07090a11181f1f2123202226272625282a2b
2b2b29292a292e342c2c30302b2d2d31302e31303531353731332f373d3a373537393533
343b363538363b39363836383635362e3232343d3d393532393735362e32323234353939
333334333336332f32323b383334353b3a383d353139393e383d3e39393e3d3c37333739
413d3a3637383c383c3639403c3d403a3736363e43393b3e3d383c403d383b383540453f
3e3e4040403f3d3d3e3d3d38363c3a3c333e3e393e454038413f413f3f403f443f3e3e3c
3e3c3b3f39424545403e3c413d3e3f383c3e3c3c3d3e3939373536373d383b3c3c3d3c3d
383b3b3b3631383a3438393f352d383a393b3f363336363932362f2e2f2d2c2d2f2f2c27
272729292927272627212520201a1c1a1a161007020402030104
0508090605090608060509020509060906090a0a0a0f1721231d1f1e2325251e21282229
2929272625292c2e29272c312c2b2b302d2d2e3036312f3031322e2d332e2f3031353537
35323538313130312c38333232373632332d31352f342f3139363231323332312f323439
313131353038333231333339362e313a363435382d33383b3a313439343d3a3a39383636
373933393a3a36373931373d3c3c473533373941403b3a3a37383b3d3a373b3c3343453e
3b38413a3a393c3e403a3e453b3f403d423f3d3a3f423e373e403f3f3d3f3c3b3f403f3f
3b3b3b3c383b403f38393b3b3a393e3037373338393b3839333738353c363a3533373633
3232363a363c363a3d3a333c373539393d3d3739312e2c302f333232322c2a282b282928
2425272422222121201d1f1516100d0d100a0604050205070201
06010606050a060505050505090605090a0605050609151d1d1c1b1a1e2320201b242023
24222323231f24282428262e2c29282c2e2d29292e292f2f2c332f2b2f31303133383834
2f3134332c292b2b3032332d2d2c3934312d302d2a30302f2f323232342e313030323034
2e2d2c313133322d2d2d28322f2e3030333434322c2d2e2d2f2f3f3d343c35322f303234
3d35323839353a353a35383c34383e35303537393c393a3b383d38383b393c3c323d3d3d
39353537383b383b3e3c3d443f3f3d3e403e413b39393f403f3e36383d40433e3e383631
3437363b3d373b37363c3c393434362f2d322e3234353533343a35343a32343435342d2b
3335313636352e342e2e3337343030302d2c2d2f2b2726292a2b2b292827232624242222
201b1a1611161212121211080805050107050101060405010501
0a060909050c070205050501010906050501010501090c0d11120a0c1213131414191415
1b1c1c1a19171a1d1d1d1e22211a1f2222242023252229231d2d26242628282b2a372d29
292a2f2f2a30272e2b2a27322f2b2e2b2e2a312b2f2f31302b2b2c30312b2f2c2f303130
302e2d312f2c2f2e2a2e2a332a292d302f2e332c33312c2e2b362d2f2b2e312c3333323c
32303033332d32302f3031343135352e3038333336313435393b32363d3a393a35353b39
363b33383337343739413934343032383e3936323a373a323232323e383430333a353030
35352d2f38333730363536332e2d2f2f2f2d2d2c2e282c2b33302f2b2a2c262b2e2e2728
2d2f252a2f2f27282324292626252822251a241d1f211919151a191515130c1510120e0c
120b0b0907090405030305050803040104040102070204040401
0d0705010505090a0505050a010a0a0e06010501050a0a06070a0606070a080b0a090b0a
08120e0b100d1012110e1212110812151512121816151412141514151a1e1f16201d251f
1e1f22221f21221a1b242821232423211f1b282526272825282b262d272727242a312d2a
302a292c2928272e272e2a2623262b2b29292f282d26282828282c322b2a29292e2f2f33
2f2a2a28302a2f2f2e2c2f32362f2c312e3532332b312f2c3634312e3133323230313634
333634322a3133322b3433383136333534232f372d2933342f2c323331362b2c2a312a29
2b2c2e2b31282f282829262a2620272825222221211c1e1d211b2117161e1b1a1f191515
1c1a17171b131416110f13130f0b0b0b0c0c0908050a0409080805040404050502040204
04030501030301030100030a0305010102010104010101010105
09090505050506090a0a0505050a05010505010101020605010605090903090609050705
01060205100c070a0703080a0a010a0a0a05080b0b050505050505050909090909050a0d
0b0a0e0f060a0b0b060b0e111211120b0c0c140c141717141616161e191c1a181c222321
201e181e1c1c1a1e191e1f181a211b1b1d211c181e1d1f1e1f202127242222201f212423
2c2b2b29272a24222223232b2c26272825292726202624242b2927232223242725262928
27262829282720242422242c2b2b2723271e232422291f21232226211d231f211b191d1d
181c1a151a181915131612130e0d13130e0f0d0d0f100c0b0a0b0c09040b0b0504010105
090505010501050a05010501050105050101010100010101010504030001050401000105
0105050101030301010005060304040105010101010102050206

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%EndDocument

 endTexFig
 917 5129 a FH(\(a\))f(Computed.)1332 b(\(b\))30 b(Measured.)461
5356 y(Figure)g(5.14:)42 b(Output)29 b(noise)h(PSD)g(of)h(the)f
(circuit)f(in)h(Fig.)40 b(5.12)32 b(due)e(to)h(1)p FG(=f)40
b FH(noise)30 b(input.)p eop
%%Page: 119 132
119 131 bop 3764 -200 a FH(119)300 99 y(the)31 b(state)g(matrices)g
(are;)603 441 y(\024)587 464 y FD(A)666 478 y FA(1)788
464 y FH(=)942 221 y Ft(2)942 367 y(6)942 417 y(6)942
467 y(6)942 520 y(4)1039 374 y FH(1)83 b(0)1039 600 y(0)g(0)1254
221 y Ft(3)1254 367 y(7)1254 417 y(7)1254 467 y(7)1254
520 y(5)1355 464 y FH(,)1447 440 y(\024)1441 464 y FD(b)1499
478 y FA(1)1564 464 y FH(=)1660 221 y Ft(2)1660 367 y(6)1660
417 y(6)1660 467 y(6)1660 520 y(4)1786 374 y FH(0)1756
600 y FG(C)1821 614 y FA(5)1902 221 y Ft(3)1902 367 y(7)1902
417 y(7)1902 467 y(7)1902 520 y(5)2003 464 y FH(,)2090
463 y(\024)2089 464 y FD(c)2135 427 y FB(t)2135 487 y
FA(1)2200 464 y FH(=)2296 320 y Ft(")2386 487 y FH(0)2527
451 y FA(1)p 2502 466 85 4 v 2502 518 a FB(C)2552 527
y Fs(5)2638 320 y Ft(#)2732 464 y FH(,)2839 441 y(\024)2818
464 y FG(D)2893 478 y FA(1)2958 464 y FH(=)25 b(0)31
b(,)3237 441 y(\024)3216 464 y FG(D)3291 478 y FA(2)3356
464 y FH(=)25 b(0)30 b(,)603 926 y(\024)587 949 y FD(A)666
963 y FA(2)788 949 y FH(=)942 706 y Ft(2)942 852 y(6)942
902 y(6)942 951 y(6)942 1005 y(4)1189 822 y FB(C)1239
831 y Fs(3)p 1049 838 365 4 v 1049 890 a FB(C)1099 899
y Fs(1)1134 890 y FA(+)p FB(C)1239 899 y Fs(2)1273 890
y FA(+)p FB(C)1378 899 y Fs(3)1506 859 y FH(0)1208 1085
y(0)253 b(0)1593 706 y Ft(3)1593 852 y(7)1593 902 y(7)1593
951 y(7)1593 1005 y(5)1694 949 y FH(,)1786 925 y(\024)1780
949 y FD(b)1838 963 y FA(2)1903 949 y FH(=)1999 706 y
Ft(2)1999 852 y(6)1999 902 y(6)1999 951 y(6)1999 1005
y(4)2175 822 y Fv(\000)p FB(C)2280 831 y Fs(1)2315 822
y FB(C)2365 831 y Fs(3)p 2105 838 V 2105 890 a FB(C)2155
899 y Fs(1)2190 890 y FA(+)p FB(C)2295 899 y Fs(2)2330
890 y FA(+)p FB(C)2435 899 y Fs(3)2235 1085 y FG(C)2300
1099 y FA(4)2521 706 y Ft(3)2521 852 y(7)2521 902 y(7)2521
951 y(7)2521 1005 y(5)2622 949 y FH(,)2708 948 y(\024)2708
949 y FD(c)2754 912 y FB(t)2754 972 y FA(2)2819 949 y
FH(=)2915 805 y Ft(")3005 972 y FH(0)3146 936 y FA(1)p
3121 951 85 4 v 3121 1003 a FB(C)3171 1012 y Fs(4)3257
805 y Ft(#)3351 949 y FH(,)612 1286 y(\023)590 1309 y
FG(D)665 1323 y FA(1)788 1309 y FH(=)83 b Fz(\000)1130
1248 y FG(C)1195 1262 y FA(2)1255 1248 y FH(+)20 b FG(C)1411
1262 y FA(3)p 1023 1288 536 4 v 1023 1371 a FG(C)1088
1385 y FA(1)1147 1371 y FH(+)g FG(C)1303 1385 y FA(2)1363
1371 y FH(+)g FG(C)1519 1385 y FA(3)1598 1309 y FH(,)1705
1286 y(\023)1684 1309 y FG(D)1759 1323 y FA(2)1824 1309
y FH(=)25 b Fz(\000)p FH(1)31 b(.)1576 b(\(5.55\))300
1626 y(The)35 b(comp)s(onen)m(t)g(v)-5 b(alues)35 b(in)f(the)h(SC)f(in)
m(tegrator)j(are)e(the)h(same)f(as)h(the)f(ones)h(used)e(in)g(Example)g
(2.)300 1852 y(The)40 b(capacitances)i FG(C)1098 1866
y FA(4)1137 1852 y FH(,)h FG(C)1270 1866 y FA(5)1350
1852 y FH(and)d FG(C)1602 1866 y FA(6)1681 1852 y FH(are)h(100)h(pF.)e
(Figure)g(5.13\(a\))j(sho)m(ws)d(the)h(computed)f(result)300
2078 y(obtained)f(b)m(y)g(ev)-5 b(aluating)39 b(\(5.45\).)71
b(Figure)39 b(5.13\(b\))i(sho)m(ws)f(the)f(corresp)s(onding)f(measured)
h(result.)300 2304 y(The)26 b(measured)h(and)f(the)h(computed)g
(results)f(are)h(in)f(go)s(o)s(d)g(agreemen)m(t)j(since)d(there)h(is)f
(no)h(con)m(tin)m(uous)300 2530 y(path)j(b)s(et)m(w)m(een)h(the)g
(noise)e(input)g(and)h(the)g(output)g(in)f(this)h(example.)536
2755 y(Comparing)h(the)i(results)f(in)f(Fig.)i(5.13)h(to)f(those)h(of)e
(Example)g(2)h(\(Fig.)g(5.11\),)j(it)c(can)h(b)s(e)f(seen)300
2981 y(that)d(the)f(output)f(noise)h(PSD)f(increased)h(considerably)e
(due)h(to)i(the)f(sample-and-hold)e(circuit.)39 b(This)300
3207 y(ma)m(y)25 b(b)s(e)f(explained)e(with)h(the)i(signal)e(decomp)s
(osition)g(discussed)f(in)h(Sec.)i(5.3,)i(where)d(the)g(noise)g(signal)
300 3433 y(w)m(as)31 b(separated)h(in)m(to)f(the)g(sampled-and-held)e
(and)h(con)m(tin)m(uous)h(parts.)42 b(By)32 b(sampling)d(the)i
(sampled-)300 3659 y(and-held)38 b(noise)i(comp)s(onen)m(t,)j(w)m(e)d
(simply)e(get)j(a)f(dela)m(y)m(ed)g(sampled-and-held)e(noise)h(of)h
(the)h(same)300 3884 y(PSD,)28 b(as)h(it)f(w)m(as)h(b)s(efore.)39
b(But,)30 b(sampling)c(the)j(broadband)d FC(c)-5 b(ontinuous)30
b FH(noise)e(comp)s(onen)m(t)g(increases)300 4110 y(the)38
b(output)g(noise)g(lev)m(el)g(due)g(to)g(the)h(aliasing)e(e\013ect)i
(ev)m(en)g(though)f(the)h(lev)m(el)f(of)g(this)f(con)m(tin)m(uous)300
4336 y(noise)30 b(PSD)g(w)m(as)h(negligible)d(in)h(Example)g(2.)300
4623 y FL(5.7)135 b(Noise)46 b(analysis:)62 b FJ(1)p
Fl(=f)56 b FL(noise)46 b(input)300 4938 y FH(Opamps)25
b(exhibit)f(a)j(frequency)f(dep)s(enden)m(t)f(noise)h(PSD)g(whic)m(h)f
(is)g(c)m(haracterized)j(b)m(y)e(a)h(so-called)f(1)p
FG(=f)300 5164 y FH(noise.)47 b(In)32 b(this)g(section,)i(a)f(form)m
(ula)f(for)g(the)h(output)g(PSD)f FG(S)2483 5178 y FB(y)2524
5164 y FH(\()p FG(!)s FH(\))i(will)c(b)s(e)i(deriv)m(ed,)h(giv)m(en)f
(that)i(the)p eop
%%Page: 120 133
120 132 bop 3764 -200 a FH(120)300 99 y(input)28 b(noise)i(PSD)g(is;)
1859 324 y FG(S)1915 338 y FB(u)1959 324 y FH(\()p FG(!)s
FH(\))c(=)2247 263 y FG(\013)p 2221 303 111 4 v 2221
387 a Fz(j)p FG(!)s Fz(j)3668 324 y FH(\(5.56\))300 604
y(where)44 b FG(\013)h FH(in)f(\(5.56\))j(is)c(a)i(tec)m(hnology)h(dep)
s(enden)m(t)e(constan)m(t)i([73)q(].)84 b(Again,)48 b(note)e(that)f
FG(S)3619 618 y FB(u)3664 604 y FH(\()p FG(!)s FH(\))g(is)300
830 y(indep)s(enden)m(t)28 b(of)j(the)f(loss)g FG(\025)g
FH(of)h(the)f(opamp.)536 1056 y(Since)25 b FG(S)825 1070
y FB(u)870 1056 y FH(\()p FG(!)s FH(\))h(is)f(a)h(frequency-dep)s
(enden)m(t)e(quan)m(tit)m(y)-8 b(,)28 b(it)d(is)g(necessary)h(to)g
(return)f(to)h(the)g(general)300 1282 y(form)m(ula)37
b(in)g(\(5.9\))j(rather)e(than)g(\(5.11\).)66 b(Ho)m(w)m(ev)m(er,)42
b(the)d(decomp)s(osition)d(that)j(w)m(as)g(in)m(tro)s(duced)d(in)300
1507 y(Sec.)28 b(5.3)h(is)e(still)f(v)-5 b(alid,)27 b
FC(i.e.)39 b FG(S)1356 1521 y FB(y)1397 1507 y FH(\()p
FG(!)s FH(\))26 b(=)1665 1484 y(^)1649 1507 y FG(S)1705
1521 y FB(y)1746 1507 y FH(\()p FG(!)s FH(\))16 b(+)1994
1484 y(~)1978 1507 y FG(S)2034 1521 y FB(y)2075 1507
y FH(\()p FG(!)s FH(\))29 b(where)2510 1484 y(^)2494
1507 y FG(S)2550 1521 y FB(y)2591 1507 y FH(\()p FG(!)s
FH(\))g(and)2940 1484 y(~)2924 1507 y FG(S)2980 1521
y FB(y)3021 1507 y FH(\()p FG(!)s FH(\))g(are)f(giv)m(en)g(in)f
(\(5.15\))300 1733 y(and)j(\(5.16\))i(in)d(terms)i(of)1226
1710 y(^)1202 1733 y FG(H)1278 1747 y FB(n)1325 1733
y FH(\()p FG(!)s FH(\))g(and)1686 1710 y(~)1662 1733
y FG(H)1738 1747 y FB(n)1785 1733 y FH(\()p FG(!)s FH(\),)g(resp)s
(ectiv)m(ely)-8 b(.)536 1959 y(Just)29 b(as)h(w)m(as)g(done)g(for)f
(the)h(white)f(noise)g(case,)i(the)f(deriv)-5 b(ation)28
b(of)i FG(S)2962 1973 y FB(y)3003 1959 y FH(\()p FG(!)s
FH(\))g(is)f(attempted)h(using)300 2185 y(just)e(the)h(ideal)f(net)m(w)
m(ork)i(equations)e(\(5.3\))j(and)d(\(5.4\).)42 b(In)28
b(that)i(case,)g(the)f(transfer)g(functions)3671 2162
y(^)3647 2185 y FG(H)3723 2199 y FB(n)3769 2185 y FH(\()p
FG(!)s FH(\))300 2411 y(and)501 2388 y(~)477 2411 y FG(H)553
2425 y FB(n)600 2411 y FH(\()p FG(!)s FH(\))i(are)h(giv)m(en)f(in)e
(\(B.43\))34 b(and)c(\(B.45\),)k(resp)s(ectiv)m(ely)-8
b(.)42 b(Substituting)28 b(them)j(in)m(to)g(\(5.15\))j(and)300
2636 y(\(5.16\))f(results)c(in)890 2931 y(^)874 2954
y FG(S)930 2968 y FB(y)972 2954 y FH(\()p FG(!)s FH(\))83
b(=)1372 2892 y FG(\013)p 1349 2933 106 4 v 1349 3016
a(T)1415 2990 y FA(2)1512 2848 y FB(N)1484 2873 y Ft(X)1479
3057 y FB(k)r FA(=1)1668 2848 y FB(N)1639 2873 y Ft(X)1623
3054 y FB(m)p FA(=1)1791 2810 y Ft( )1856 2954 y FG(D)1931
2969 y FB(k)1974 2954 y FG(D)2049 2968 y FB(m)2208 2848
y Fv(1)2183 2873 y Ft(X)2131 3051 y FB(n)p FA(=)p Fv(\0001)2380
2892 y FG(V)2433 2907 y FB(k)2491 2892 y FH(\()p FG(n!)2638
2906 y FB(s)2674 2892 y FH(\))15 b FG(V)2798 2859 y Fv(\003)2777
2915 y FB(m)2859 2892 y FH(\()p FG(n!)3006 2906 y FB(s)3042
2892 y FH(\))p 2380 2933 699 4 v 2544 3016 a Fz(j)p FG(!)23
b Fz(\000)d FG(n!)2852 3030 y FB(s)2888 3016 y Fz(j)1185
3247 y FH(+)93 b(2)p Fz(<)1475 3103 y Ft(\()1542 3247
y FG(D)1617 3262 y FB(k)1660 3247 y FD(f)1702 3209 y
FB(t)1692 3269 y(m)1758 3247 y FH(\()p FG(!)s FH(\))p
FD(b)1946 3261 y FB(m)p FA(+1)2195 3141 y Fv(1)2171 3166
y Ft(X)2119 3345 y FB(n)p FA(=)p Fv(\0001)2367 3185 y
FG(V)2440 3152 y Fv(\003)2420 3212 y FB(k)2495 3185 y
FH(\()p FG(n!)2642 3199 y FB(s)2678 3185 y FH(\))16 b
FG(e)2771 3152 y FB(j)t FA(\()p FB(!)r Fv(\000)p FB(n!)3019
3160 y Fu(s)3052 3152 y FA(\))p FB(t)3104 3160 y Fu(m)p
2367 3226 801 4 v 2583 3309 a Fz(j)p FG(!)23 b Fz(\000)d
FG(n!)2891 3323 y FB(s)2927 3309 y Fz(j)3178 3103 y Ft(\)!)1339
3395 y(|)p 1376 3395 912 10 v 912 w({z)p 2362 3395 V
912 w(})2224 3497 y FH(\014nite)3668 3247 y(\(5.57\))300
3668 y(and)639 3962 y(~)624 3985 y FG(S)680 3999 y FB(y)721
3985 y FH(\()p FG(!)s FH(\))25 b(=)1006 3923 y FG(\013)p
982 3964 106 4 v 982 4047 a(T)1048 4021 y FA(2)1146 3879
y FB(N)1117 3904 y Ft(X)1113 4088 y FB(k)r FA(=1)1301
3879 y FB(N)1273 3904 y Ft(X)1257 4085 y FB(m)p FA(=1)1424
3985 y FD(f)1466 3947 y FB(t)1456 4007 y(k)1499 3985
y FH(\()p FG(!)s FH(\))p FD(b)1687 4000 y FB(k)r FA(+1)1836
3891 y Ft(\020)1885 3985 y FD(f)1927 3947 y FB(t)1917
4007 y(m)1984 3985 y FH(\()p FG(!)s FH(\))p FD(b)2172
3999 y FB(m)p FA(+1)2329 3891 y Ft(\021)2379 3914 y Fv(\003)2509
3879 y(1)2485 3904 y Ft(X)2433 4082 y FB(n)p FA(=)p Fv(\0001)2681
3923 y FG(e)2723 3890 y FB(j)t FA(\()p FB(!)r Fv(\000)p
FB(n!)2971 3898 y Fu(s)3005 3890 y FA(\)\()p FB(t)3084
3902 y Fu(k)3123 3890 y Fv(\000)p FB(t)3203 3898 y Fu(m)3262
3890 y FA(\))p 2681 3964 613 4 v 2803 4047 a Fz(j)p FG(!)e
Fz(\000)d FG(n!)3111 4061 y FB(s)3147 4047 y Fz(j)972
4133 y Ft(|)p 1009 4133 1091 10 v 1091 w({z)p 2174 4133
V 1091 w(})1999 4234 y FH(in\014nite)3319 3985 y FG(:)324
b FH(\(5.58\))300 4411 y(where)30 b FG(V)616 4426 y FB(k)659
4411 y FH(\()p FG(!)s FH(\))g(is)g(de\014ned)f(in)g(\(B.37\).)552
4613 y(^)536 4636 y FG(S)592 4650 y FB(y)633 4636 y FH(\()p
FG(!)s FH(\))i(is)e(zero)i(when)e(there)h(is)f(no)h(con)m(tin)m(uous)g
(path)g(b)s(et)m(w)m(een)g(the)h(input)d(and)h(output)h(in)f(an)m(y)300
4862 y(phase,)42 b(while)853 4839 y(~)837 4862 y FG(S)893
4876 y FB(y)935 4862 y FH(\()p FG(!)s FH(\))e(is)f(the)h
(sampled-and-held)e(comp)s(onen)m(t)i(of)g(the)g(output)g(noise)f(PSD.)
i(It)f(can)300 5088 y(b)s(e)e(sho)m(wn)f(that)i(b)s(oth)e(in\014nite)f
(series)i(in)f(\(5.57\))j(are)f(con)m(v)m(ergen)m(t)h(for)e
FG(!)j Fz(6)p FH(=)d FG(n!)3182 5102 y FB(s)3218 5088
y FH(,)i(but)e(the)g(in\014nite)300 5314 y(summation)29
b(in)g(\(5.58\))k(is)c(div)m(ergen)m(t.)p eop
%%Page: 121 134
121 133 bop 3764 -200 a FH(121)536 99 y(Unlik)m(e)23
b(in)f(the)i(case)h(of)e(white)g(noise)g(input,)h(the)f(1)p
FG(=f)34 b FH(input)22 b(PSD)h(in)g(\(5.56\))i(do)s(es)f(not)g(approac)
m(h)300 324 y(zero)36 b(as)g(the)g(loss)f FG(\025)h FH(approac)m(hes)g
(zero,)i FC(i.e.)56 b FG(\013)36 b FH(in)e(\(5.57\))k(and)d(\(5.58\))j
(is)d(a)h(constan)m(t.)58 b(Hence,)38 b(it)d(is)300 550
y(concluded,)c(that)g(for)h(an)f(ideal)f(SCN,)1690 527
y(^)1675 550 y FG(S)1731 564 y FB(y)1772 550 y FH(\()p
FG(!)s FH(\))h(exhibits)f(some)h(\014nite)g(v)-5 b(alue)30
b(while)g(the)h(sampled-and-)300 776 y(held)e(comp)s(onen)m(t)i(of)f
(the)h(output)f(noise)1763 753 y(~)1747 776 y FG(S)1803
790 y FB(y)1875 776 y FH(is)f(in\014nite.)536 1002 y(E\016cien)m(t)44
b(computation)f(of)h(the)f(output)g(noise)g(PSD)h(can)f(still)f(b)s(e)h
(p)s(erformed)e(for)j(a)g(lossy)300 1228 y(net)m(w)m(ork)c(that)g
(satis\014es)e(the)h(fast)h(c)m(harge)g(transfer)f(assumption)e
(describ)s(ed)g(in)h(Sec.)h(5.5.)68 b(In)38 b(that)300
1453 y(case,)30 b(\(5.40\))h(is)d(v)-5 b(alid.)38 b(F)-8
b(urthermore,)29 b(since)f(as)h FG(\025)g FH(b)s(ecomes)g(small,)2722
1430 y(~)2707 1453 y FG(S)2763 1467 y FB(y)2804 1453
y FH(\()p FG(!)s FH(\))g(in)e(\(5.58\))k(b)s(ecomes)e(m)m(uc)m(h)300
1679 y(larger)39 b(than)803 1656 y(^)787 1679 y FG(S)843
1693 y FB(y)885 1679 y FH(\()p FG(!)s FH(\))g(in)f(\(5.57\),)44
b(it)38 b(is)g(assumed)g(that)i(the)f(output)g(noise)f(PSD)h(due)f(to)i
(con)m(tin)m(uous)300 1905 y(input-output)28 b(path)j(is)e(negligible)f
(and)i(the)g(appro)m(ximation)g(\(5.41\))i(is)e(v)-5
b(alid.)536 2131 y FG(S)592 2145 y FB(y)633 2131 y FH(\()p
FG(!)s FH(\))31 b(is)f(ev)-5 b(aluated)30 b(using)f(\(5.41\),)k
(\(5.16\),)g(and)d(\(5.56\),)j(resulting)28 b(in)1575
2454 y FG(S)1631 2468 y FB(y)1672 2454 y FH(\()p FG(!)s
FH(\))1828 2429 y Fz(\030)1828 2458 y FH(=)1924 2454
y FG(\013)2074 2348 y Fv(1)2049 2373 y Ft(X)1997 2551
y FB(n)p FA(=)p Fv(\0001)2257 2270 y Ft(\014)2257 2320
y(\014)2257 2370 y(\014)2308 2344 y FH(~)2284 2367 y
FG(H)2360 2381 y FB(n)2407 2367 y FH(\()p FG(!)s FH(\))2537
2270 y Ft(\014)2537 2320 y(\014)2537 2370 y(\014)2565
2296 y FA(2)p 2246 2433 370 4 v 2246 2516 a Fz(j)p FG(!)23
b Fz(\000)d FG(n!)2554 2530 y FB(s)2590 2516 y Fz(j)3668
2454 y FH(\(5.59\))300 2767 y(where)589 2744 y(~)565
2767 y FG(H)641 2781 y FB(n)688 2767 y FH(\()p FG(!)s
FH(\))33 b(is)f(de\014ned)g(in)f(\(B.42\))k(in)d(terms)g(of)2147
2744 y(~)2123 2767 y FG(H)2199 2782 y FB(k)2242 2767
y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\).)49 b(F)-8 b(or)33
b(the)g(lossy)f(net)m(w)m(ork,)j(the)e(general)300 2993
y(expression)i(for)913 2970 y(~)889 2993 y FG(H)965 3008
y FB(k)1007 2993 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))38
b(in)d(\(5.32\))j(m)m(ust)e(b)s(e)g(used.)58 b FC(i.e.)2474
2970 y FH(~)2450 2993 y FG(H)2526 3008 y FB(k)2568 2993
y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))37 b(=)d FD(f)2972
2960 y FB(t)2962 3020 y(k)3005 2993 y FH(\()p FG(\025;)15
b(!)s FH(\))p FD(q)3283 3008 y FB(k)r FA(+1)3417 2993
y FH(\()p FG(\025;)g(\034)10 b FH(\))37 b(where)300 3219
y FD(q)355 3234 y FB(k)r FA(+1)488 3219 y FH(\()p FG(\025;)15
b(\034)10 b FH(\))31 b(is)f(giv)m(en)g(b)m(y)h(\(5.34\).)43
b(Substituting)27 b(\(5.34\))33 b(and)d(\(5.40\))i(in)m(to)f(\(5.32\),)
h(results)e(in)1587 3510 y(~)1563 3533 y FG(H)1639 3548
y FB(k)1681 3533 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))1928
3507 y Fz(\030)1928 3537 y FH(=)2023 3533 y FG(f)2078
3495 y Fv(0)2068 3555 y FB(k)2111 3533 y FH(\()p FG(!)s
FH(\))p FG(e)2283 3495 y Fv(\000)p FB(!)2382 3507 y Fu(k)2420
3495 y FA(\()p FB(t)2472 3507 y Fu(k)2511 3495 y Fv(\000)p
FB(\034)e FA(\))3668 3533 y FH(\(5.60\))300 3846 y(where)891
4072 y FG(f)946 4034 y Fv(0)936 4094 y FB(k)978 4072
y FH(\()p FG(!)s FH(\))26 b(=)f FD(f)1272 4034 y FB(t)1262
4094 y(k)1305 4072 y FH(\()p FG(!)s FH(\))1441 4048 y(\024)1435
4072 y FD(b)1493 4087 y FB(k)r FA(+1)1636 4010 y FG(p)1682
4025 y FA(2)p FB(;k)p 1636 4051 144 4 v 1681 4134 a FG(\025)1971
4072 y FH(and)182 b FG(!)2357 4087 y FB(k)2424 4072 y
FH(=)25 b Fz(\000)2605 4010 y FH(1)p 2601 4051 54 4 v
2601 4134 a FG(\025)2679 3978 y Ft(\020)2728 4072 y FG(p)2774
4087 y FA(1)p FB(;k)2892 4072 y FH(+)20 b FG(p)3029 4087
y FA(3)p FB(;k)3147 4049 y FH(\023)3126 4072 y FG(D)3201
4087 y FB(k)3244 3978 y Ft(\021)3668 4072 y FH(\(5.61\))300
4350 y(and,)32 b FG(p)550 4364 y FA(1)p FB(;i)633 4350
y FH(,)h FG(p)737 4364 y FA(2)p FB(;i)819 4350 y FH(,)g
FG(p)923 4364 y FA(3)p FB(;i)1038 4350 y FH(and)e FG(\025)i
FH(are)f(giv)m(en)g(b)m(y)g(\(5.29\))i(or)f(\(5.31\))h(dep)s(ending)29
b(on)j(whether)g(the)g(opamp)g(is)300 4576 y(mo)s(deled)j(b)m(y)g(a)i
(V)m(CCS)e(or)h(V)m(CVS,)g(resp)s(ectiv)m(ely)-8 b(.)57
b(Substituting)34 b(\(5.60\))k(in)m(to)e(the)g(general)g(form)m(ula)300
4802 y(for)458 4779 y(~)434 4802 y FG(H)510 4816 y FB(n)557
4802 y FH(\()p FG(!)s FH(\))26 b(in)e(\(B.42\))k(and)d(ev)-5
b(aluating)25 b(the)h(in)m(tegral)f(under)f(the)i(condition)e(that)i
FG(e)3206 4769 y Fv(\000)p FB(!)3305 4781 y Fu(k)3343
4769 y FA(\()p FB(t)3395 4781 y Fu(k)3434 4769 y Fv(\000)p
FB(t)3514 4781 y Fu(k)q Fr(\000)p Fs(1)3631 4769 y FA(\))3688
4802 y FG(<<)f FH(1)300 5027 y(\(the)31 b(fast)g(c)m(harge)g(transfer)f
(assumption\),)1362 5318 y(~)1338 5341 y FG(H)1414 5355
y FB(n)1460 5341 y FH(\()p FG(!)s FH(\))1616 5316 y Fz(\030)1616
5345 y FH(=)1732 5279 y(1)p 1722 5320 66 4 v 1722 5403
a FG(T)1846 5235 y FB(N)1817 5260 y Ft(X)1813 5445 y
FB(k)r FA(=1)1957 5341 y FG(f)2012 5303 y Fv(0)2002 5363
y FB(k)2044 5341 y FH(\()p FG(!)s FH(\))2297 5279 y FG(e)2339
5246 y FB(j)t FA(\()p FB(!)r Fv(\000)p FB(n!)2587 5254
y Fu(s)2620 5246 y FA(\))p FB(t)2672 5258 y Fu(k)p 2184
5320 643 4 v 2184 5403 a FG(j)5 b FH(\()p FG(!)24 b Fz(\000)c
FG(n!)2545 5417 y FB(s)2581 5403 y FH(\))h(+)f FG(!)2785
5418 y FB(k)2837 5341 y FG(:)806 b FH(\(5.62\))p eop
%%Page: 122 135
122 134 bop 3764 -200 a FH(122)300 99 y(Finally)-8 b(,)29
b(from)h(\(5.59\))j(and)c(\(5.62\),)k(the)e(output)f(noise)g(PSD)g(b)s
(ecomes;)p 670 224 2628 4 v 670 545 4 322 v 729 408 a
FG(S)785 422 y FB(y)826 408 y FH(\()p FG(!)s FH(\))982
383 y Fz(\030)982 412 y FH(=)1077 408 y FG(\013)1184
303 y FB(N)1155 328 y Ft(X)1151 512 y FB(k)r FA(=1)1340
303 y FB(N)1311 328 y Ft(X)1295 509 y FB(m)p FA(=1)1617
347 y FH(1)p 1473 387 334 4 v 1473 471 a FG(!)1530 486
y FB(k)1592 471 y FH(+)20 b FG(!)1740 485 y FB(m)1816
408 y FH(2)p Fz(<)1942 314 y Ft(n)1998 408 y FG(e)2040
371 y FB(j)t(!)r FA(\()p FB(t)2171 383 y Fu(k)2210 371
y Fv(\000)p FB(t)2290 379 y Fu(m)2349 371 y FA(\))2380
408 y FG(f)2435 371 y Fv(0)2425 431 y FB(k)2468 408 y
FH(\()p FG(!)s FH(\))p FG(f)2653 371 y Fv(0)2676 360
y(\003)2676 431 y FB(m)2742 408 y FH(\()p FG(!)s FH(\))p
FG(S)2928 423 y FB(k)r(;m)3053 408 y FH(\()p FG(!)s FH(\))3183
314 y Ft(o)p 3294 545 4 322 v 670 548 2628 4 v 3668 407
a FH(\(5.63\))300 716 y(where)1123 942 y FG(S)1179 957
y FB(k)r(;m)1304 942 y FH(\()p FG(!)s FH(\))25 b(=)1595
880 y(1)p 1565 921 106 4 v 1565 1004 a FG(T)1631 978
y FA(2)1772 836 y Fv(1)1747 861 y Ft(X)1696 1040 y FB(n)p
FA(=)p Fv(\0001)2237 880 y FG(e)2279 847 y Fv(\000)p
FB(j)t(n!)2454 855 y Fu(s)2487 847 y FA(\()p FB(t)2539
859 y Fu(k)2578 847 y Fv(\000)p FB(t)2658 855 y Fu(m)2717
847 y FA(\))p 1944 921 1098 4 v 1944 1004 a Fz(j)p FG(!)e
Fz(\000)d FG(n!)2252 1018 y FB(s)2288 1004 y Fz(j)15
b FH(\()q FG(!)2421 1019 y FB(k)2483 1004 y FH(+)20 b
FG(j)5 b FH(\()p FG(!)24 b Fz(\000)c FG(n!)2935 1018
y FB(s)2971 1004 y FH(\)\))3052 942 y FG(:)591 b FH(\(5.64\))300
1218 y(Theoretically)-8 b(,)37 b(the)g(1)p FG(=f)46 b
FH(noise)36 b(analysis)e(can)j(b)s(e)e(carried)h(out)g(using)f
(\(5.63\))j(and)e(\(5.64\))i(since)e(the)300 1443 y(in\014nite)42
b(series)i(in)g(\(5.64\))j(is)d(con)m(v)m(ergen)m(t)j(and)d(dep)s(ends)
f(on)h(the)h(loss)f(through)g FG(!)3323 1458 y FB(k)3410
1443 y FH(\(see)i(\(5.61\)\).)300 1669 y(Ho)m(w)m(ev)m(er,)c(\(5.64\))f
(is)c(n)m(umerically)f(ine\016cien)m(t)h(since)h(the)g(in\014nite)e
(summation)h(do)s(es)g(not)i(con)m(v)m(erge)300 1895
y(fast)c(for)f(large)g(v)-5 b(alues)34 b(of)h FG(!)1288
1910 y FB(k)1364 1895 y FH(in)e(\(5.61\).)55 b(An)34
b(e\016cien)m(t)h(and)f(closed-form)g(ev)-5 b(aluation)34
b(of)h FG(S)3550 1910 y FB(k)r(;m)3674 1895 y FH(\()p
FG(!)s FH(\))g(is)300 2121 y(p)s(ossible,)c(pro)m(vided)f(that)j(the)g
(output)f(noise)f(PSD)i(is)e(computed)h(for)g(a)h(\014nite)e(frequency)
h(range.)47 b(In)300 2347 y(particular,)29 b(it)h(is)f(assumed)h(that)
1896 2573 y Fz(j)p FG(!)s Fz(j)25 b FG(<)g(K)7 b(!)2268
2587 y FB(s)3668 2573 y FH(\(5.65\))300 2848 y(where)24
b FG(K)31 b FH(is)23 b(a)i(p)s(ositiv)m(e)e(in)m(teger.)39
b(The)24 b(algorithm)g(for)g(computing)f FG(S)2706 2863
y FB(k)r(;m)2831 2848 y FH(\()p FG(!)s FH(\))h(is)g(giv)m(en)g(in)f
(App)s(endix)f(E.)300 3074 y(It)k(turns)f(out)h(that)g(the)g(form)m
(ulation)f(b)s(ecomes)h(less)g(computationally)e(e\016cien)m(t)j(for)e
(a)i(larger)e(v)-5 b(alue)26 b(of)300 3300 y FG(K)33
b FH(\(see)28 b(\(E.5\)\).)41 b(It)27 b(is,)f(therefore,)j(preferable)c
(to)j(c)m(ho)s(ose)f FG(K)34 b FH(just)26 b(large)g(enough)h(to)g(co)m
(v)m(er)i(the)d(desired)300 3526 y(frequency)33 b(range.)50
b(Note)34 b(that)g(setting)g FG(K)40 b FH(do)s(es)33
b(not)g(bandlimit)e(the)i(input)e(1)p FG(=f)44 b FH(noise.)49
b(Therefore,)300 3751 y(the)31 b(foldo)m(v)m(er)f(e\013ect)i(is)e
(still)e(accurately)j(computed.)300 3994 y Fx(5.7.1)112
b(Example)300 4278 y FH(Here,)34 b(the)e(circuit)f(in)g(Fig.)i(5.12)h
(is)d(analyzed)i(for)f(1)p FG(=f)42 b FH(noise)32 b(due)g(to)h(the)f
(opamp)g(in)g(the)g(in)m(tegrator)300 4504 y(part)23
b(of)g(the)g(circuit.)37 b(The)22 b(prop)s(osed)f(form)m(ulas)h(are)h
(v)-5 b(alid)22 b(for)g(an)h(ideal)e(1)p FG(=f)33 b FH(noise.)38
b(Because)24 b(this)e(t)m(yp)s(e)300 4730 y(of)30 b(noise)e(source)i
(is)e(not)i(readily)d(a)m(v)-5 b(ailable,)30 b(a)f(programmable)g
(noise)g(generator)h(has)f(b)s(een)g(designed,)300 4956
y(whic)m(h)f(can)i(pro)s(duce)e(an)h(appro)m(ximate)g(1)p
FG(=f)40 b FH(noise)28 b(in)g(a)i(prescrib)s(ed)d(frequency)h(range.)41
b(The)29 b(PSD)g(of)300 5181 y(the)35 b(generator)h(appro)m(ximates)e
(the)h(ideal)f(1)p FG(=f)45 b FH(noise)34 b(PSD)g FG(\013=)p
Fz(j)p FG(!)s Fz(j)i FH(within)c Fz(\006)p FH(1)j(dB)g(accuracy)g(in)f
(the)300 5407 y(frequency)c(range)h(30)g(Hz)g(-)f(150)i(kHz)f(where)f
FG(\013)h FH(is)e(a)i(tunable)e(gain)h(factor.)p eop
%%Page: 123 136
123 135 bop 3764 -200 a FH(123)536 99 y(According)37
b(to)h(the)g(discussion)c(in)i(Sec.)i(5.6,)i(since)d(the)g(bandwidth)d
(of)k(the)f(noise)g(source)g(in)300 324 y(this)32 b(example)g(is)g
(\014nite,)h(the)g(quan)m(tit)m(y)g FG(!)1775 339 y FB(k)1847
299 y Fz(\030)1847 328 y FH(=)1947 324 y Fz(\000)p FG(!)2075
338 y FA(0)2114 324 y FG(A)2182 338 y FA(0)2243 301 y
FH(\023)2222 324 y FG(D)2297 339 y FB(k)2373 324 y FH(\(where)2695
301 y(\023)2673 324 y FG(D)2748 339 y FB(k)2821 324 y
FG(<)c FH(0\))34 b(m)m(ust)f(b)s(e)f(less)g(than)h(the)300
550 y(bandwidth)28 b(of)i(the)h(noise)e(source.)41 b(Therefore,)31
b(the)f(losses)g(of)h(the)f(opamp)g(m)m(ust)h(b)s(e)e(increased.)536
776 y(An)h(opamp)f(with)g FG(A)1257 790 y FA(0)1322 776
y FH(=)c(250)31 b(and)e FG(!)1817 790 y FA(0)1882 776
y FH(=)c(2000)31 b(rad/sec)g(w)m(as)f(designed)f([74)q(].)41
b(By)30 b(selecting)g(the)300 1002 y(capacitor)38 b(v)-5
b(alues)36 b(of)h(the)h(circuit)d(in)h(Fig.)61 b(5.12)39
b(as)e FG(C)2252 1016 y FA(1)2328 1002 y FH(=)f(2)h(nF,)g
FG(C)2754 1016 y FA(2)2830 1002 y FH(=)f FG(C)3002 1016
y FA(3)3078 1002 y FH(=)g Fz(\001)15 b(\001)g(\001)37
b FH(=)g FG(C)3500 1016 y FA(6)3575 1002 y FH(=)f(1)i(nF,)300
1228 y(mak)m(es)32 b(\()p Fz(\000)p FG(!)737 1242 y FA(0)776
1228 y FG(A)844 1242 y FA(0)905 1205 y FH(\023)883 1228
y FG(D)958 1242 y FA(1)998 1228 y FH(\))p FG(=)p FH(\(2)p
FG(\031)s FH(\))c(=)e(39)p FG(:)p FH(75)33 b(kHz)f(and)e(\()p
Fz(\000)p FG(!)2139 1242 y FA(0)2178 1228 y FG(A)2246
1242 y FA(0)2307 1205 y FH(\023)2286 1228 y FG(D)2361
1242 y FA(2)2400 1228 y FH(\))p FG(=)p FH(\(2)p FG(\031)s
FH(\))f(=)c(79)p FG(:)p FH(58)33 b(kHz;)f(b)s(oth)f(of)g(them)g(are)300
1453 y(less)40 b(than)g(the)h(bandwidth)d(of)i(the)h(1)p
FG(=f)51 b FH(noise)40 b(source.)71 b(Using)40 b(the)g(state)i
(parameters)f(in)e(\(5.55\),)300 1679 y FG(!)357 1693
y FA(1)436 1654 y Fz(\030)436 1683 y FH(=)546 1679 y
Fz(\000)p FG(A)685 1693 y FA(0)724 1679 y FG(!)781 1693
y FA(0)841 1656 y FH(\023)820 1679 y FG(D)895 1693 y
FA(1)935 1679 y FH(,)121 b FG(!)1138 1693 y FA(2)1217
1654 y Fz(\030)1217 1683 y FH(=)1327 1679 y Fz(\000)p
FG(A)1466 1693 y FA(0)1505 1679 y FG(!)1562 1693 y FA(0)1623
1656 y FH(\023)1601 1679 y FG(D)1676 1693 y FA(2)1716
1679 y FH(,)g FG(T)53 b FH(=)39 b(0)p FG(:)p FH(25)h(ms,)h(and)e
FG(t)2675 1693 y FA(1)2753 1679 y FH(=)h FG(T)10 b(=)p
FH(2,)42 b(the)d(computed)g(result)300 1905 y(of)c(\(5.63\))i(is)d(sho)
m(wn)g(in)g(Fig.)h(5.14\(a\))j(where)c FG(\013)f FH(=)g(0)p
FG(:)p FH(0815)k(scaling)d(factor)i(is)e(used.)53 b(The)35
b(measured)300 2131 y(result)28 b(is)h(sho)m(wn)g(in)f(Fig.)i
(5.14\(a\).)43 b(The)29 b(deviation)f(b)s(elo)m(w)h(100)i(Hz)f(is)e
(due)h(to)h(the)g(inaccuracy)f(of)h(the)300 2357 y(sp)s(ectrum)f
(analyzer.)41 b(The)30 b(data)h(ab)s(o)m(v)m(e)g(this)f(frequency)g
(matc)m(hes)h(accurately)-8 b(.)300 2643 y FL(5.8)135
b(Multiple)46 b(Noisy)g(elemen)l(ts)300 2959 y FH(The)33
b(noise)f(analysis)g(for)h(ideal)f(SCN's)g(in)g(the)i(previous)d
(sections,)j(has)f(b)s(een)g(dev)m(elop)s(ed)f(under)g(the)300
3185 y(assumption)g(that)i(the)g(SCN)f(con)m(tains)h(only)e(one)i
(noisy)f(elemen)m(t.)51 b(It)33 b(is)g(ine\016cien)m(t)g(to)h(directly)
e(use)300 3411 y(the)d(expressions)f(deriv)m(ed)h(in)f(those)i
(sections)f(to)h(compute)f(the)h(output)f(noise)g(PSD)g(due)f(to)i(m)m
(ultiple)300 3636 y(noisy)h(elemen)m(ts.)47 b(In)31 b(this)g(section,)j
(it)d(is)h(sho)m(wn)f(ho)m(w)i(the)f(m)m(ultiple)e(noise)h(sources)i
(can)f(b)s(e)g(handled)300 3862 y(e\016cien)m(tly)-8
b(.)70 b(The)40 b(follo)m(wing)e(subsection)h(pro)m(vides)g(a)i
(summary)e(of)h(relev)-5 b(an)m(t)40 b(net)m(w)m(ork)h(de\014nitions)
300 4088 y(and)29 b(outlines)g(the)h(problem)f(that)i(m)m(ust)f(b)s(e)f
(solv)m(ed)h(to)h(dev)m(elop)f(the)g(e\016cien)m(t)h(noise)e(form)m
(ulation)g(for)300 4314 y(m)m(ultiple)36 b(noise)i(sources.)64
b(The)38 b(remaining)e(subsections)h(describ)s(e)g(in)g(detail)g(the)h
(solution)f(to)i(this)300 4540 y(problem.)300 4783 y
Fx(5.8.1)112 b(Net)m(w)m(ork)37 b(de\014nitions)g(for)g(e\016cien)m(t)g
(noise)g(analysis)300 5068 y FH(A)43 b(noiseless)f(ideal)g(SCN)g(is)g
(a)h(subset)g(of)g(SC)f(and)g(SI)g(net)m(w)m(orks)i(and)e(can)i(b)s(e)e
(describ)s(ed)f(b)m(y)i(the)300 5293 y(small-signal)29
b(equations)h(\(3.23\),)k(whic)m(h)c(are)i(CS/MNA)f(equations)g(under)e
(the)j(instan)m(t)e(settling)h(ap-)p eop
%%Page: 124 137
124 136 bop 3764 -200 a FH(124)300 99 y(pro)m(ximation.)56
b(Recall)36 b(from)f(Sec.)i(2.5,)h(that)f(the)f(unkno)m(wns)e(in)h(the)
h(CS/MNA)g(equations)f(consist)300 324 y(of)h(no)s(de)g(v)m(oltages)i
(and)e(branc)m(h)f(curren)m(ts.)58 b(It)37 b(will)c(b)s(e)j(sho)m(wn)f
(later,)j(that)f(for)f(the)h(noise)e(form)m(ula-)300
550 y(tion,)g(it)e(is)h(necessary)g(to)h(kno)m(w)f(the)h(c)m(harge)g
(that)g(has)e(passed)h(through)g(a)g(v)m(oltage)i(source)e(branc)m(h,)
300 776 y(whic)m(h)i(means)h(that)h(the)f(CS/MNA)h(equations)f(in)f
(\(3.23\))j(are)f(not)f(su\016cien)m(t.)61 b(In)36 b(App)s(endix)f(F)i
(it)300 1002 y(is)e(sho)m(wn)f(that)j(for)e(the)g(subset)g(of)h(elemen)
m(ts)g(in)e(the)i(ideal)e(SCN,)h(it)g(is)g(p)s(ossible)e(to)j
(transform)f(the)300 1228 y(CS/MNA)23 b(equations)g(in)m(to)g(a)g(form)
g(where)f(instead)h(of)g(the)g(branc)m(h)f(curren)m(ts,)j(the)e(unkno)m
(wns)e(consists)300 1453 y(of)29 b(\\branc)m(h)g(c)m(harges".)42
b(This)27 b(set)j(of)f(equations)g(mak)m(e)h(it)e(p)s(ossible)f(to)j
(compute)f(the)g(c)m(harge)i(through)300 1679 y(the)g(v)m(oltage)h
(source.)536 1905 y(Giv)m(en)25 b(a)g(noiseless)e(ideal)g(SCN)h(with)g
(a)h(v)m(ector)h(of)f(signal)e(inputs)f FD(u)p FH(\()p
FG(t)p FH(\))k(and)e(a)g(v)m(ector)j(of)d(outputs)300
2131 y FD(y)q FH(\()p FG(t)p FH(\))35 b(the)f(net)m(w)m(ork)g(can)g(b)s
(e)f(describ)s(ed)e(b)m(y)j(the)g(set)g(of)g(linear)e(algebraic)h
(CS/MNA)h(equations)f(from)300 2357 y(App)s(endix)28
b(F)988 2388 y Ft(2)988 2534 y(6)988 2584 y(6)988 2633
y(6)988 2687 y(4)1137 2541 y FD(C)1213 2556 y FB(cs;k)1085
2767 y FD(G)1167 2782 y FB(S)t(C)5 b(N)s(;k)1432 2388
y Ft(3)1432 2534 y(7)1432 2584 y(7)1432 2633 y(7)1432
2687 y(5)1502 2631 y FD(x)1557 2646 y FB(k)1600 2631
y FH(\()p FG(t)p FH(\))26 b(=)1825 2388 y Ft(2)1825 2534
y(6)1825 2584 y(6)1825 2633 y(6)1825 2687 y(4)1921 2541
y FD(C)1997 2508 y Fv(0)1997 2567 y FB(cs;k)1996 2767
y FD(0)2164 2388 y Ft(3)2164 2534 y(7)2164 2584 y(7)2164
2633 y(7)2164 2687 y(5)2234 2631 y FD(x)2289 2646 y FB(k)r
Fv(\000)p FA(1)2422 2631 y FH(\()p FG(t)2490 2646 y FB(k)r
Fv(\000)p FA(1)2623 2631 y FH(\))21 b(+)2770 2388 y Ft(2)2770
2534 y(6)2770 2584 y(6)2770 2633 y(6)2770 2687 y(4)2877
2541 y FD(0)2867 2767 y(l)2896 2782 y FB(k)2980 2388
y Ft(3)2980 2534 y(7)2980 2584 y(7)2980 2633 y(7)2980
2687 y(5)3051 2631 y FD(u)p FH(\()p FG(t)p FH(\))456
b(\(5.66\))300 2960 y(and)1781 3186 y FD(y)q FH(\()p
FG(t)p FH(\))27 b(=)d FD(m)2150 3148 y FB(t)2150 3208
y(k)2192 3186 y FD(x)2247 3201 y FB(k)2290 3186 y FH(\()p
FG(t)p FH(\))p FG(:)1250 b FH(\(5.67\))300 3465 y(It)39
b(is)f(sho)m(wn)h(in)f(App)s(endix)e(F)k(that)f FD(C)1712
3480 y FB(cs;k)1837 3465 y FH(,)j FD(C)1980 3432 y Fv(0)1980
3492 y FB(cs;k)2105 3465 y FH(,)f(and)e FD(l)2386 3480
y FB(k)2467 3465 y FH(are)h(the)f(same)h(as)f(in)f(CS/MNA)h(equa-)300
3691 y(tions)f(\(3.23\),)44 b(while)37 b FD(G)1158 3706
y FB(S)t(C)5 b(N)s(;k)1421 3691 y FH(and)38 b FD(G)1688
3706 y FB(k)1770 3691 y FH(from)h(\(3.23\))i(di\013er.)66
b(The)38 b(v)m(ector)j FD(x)3094 3706 y FB(k)3137 3691
y FH(\()p FG(t)p FH(\))f(is)e(the)h(v)m(ector)i(of)300
3917 y(unkno)m(wns)31 b(con)m(taining)h(no)s(de)f(v)m(oltages)j(and)e
(\\branc)m(h)g(c)m(harges")i(\(de\014ned)e(in)f(\(F.2\)\).)49
b(The)31 b(elemen)m(t)300 4143 y(stamps)h(for)f(\(5.66\))j(are)f(giv)m
(en)e(in)g(Sec.)h(F.2.)46 b(The)32 b(net)m(w)m(ork)h(represen)m(ted)e
(b)m(y)h(\(5.66\))i(and)d(\(5.67\))k(will)300 4369 y(b)s(e)30
b(referred)f(to)i(as)g(the)g FC(original)i(SCN)p FH(.)e(It)f(is)g
(illustrated)e(in)h(Fig.)h(5.15\(a\).)536 4594 y(Since)25
b(\(5.66\))k(has)d(a)h(similar)c(structure)j(to)h(the)f(more)h(general)
f(CS/MNA)h(equations)e(in)g(\(3.23\),)300 4820 y(it)i(is)f(p)s(ossible)
e(to)k(apply)e(the)h(pro)s(cedure)f(in)g(Sec.)h(3.3)i(to)e(transform)g
(the)g(net)m(w)m(ork)h(equations)f(in)m(to)g(the)300
5046 y(state)32 b(c)m(harge)f(v)-5 b(ariable)29 b(form:)1548
5363 y FD(q)1603 5378 y FB(k)1729 5363 y FH(=)82 b FD(A)1961
5378 y FB(k)2004 5363 y FD(q)2059 5378 y FB(k)r Fv(\000)p
FA(1)2212 5363 y FH(+)20 b FD(B)2377 5378 y FB(k)2420
5363 y FD(u)p FH(\()p FG(t)2546 5378 y FB(k)r Fv(\000)p
FA(1)2679 5363 y FH(\))954 b(\(5.68\))p eop
%%Page: 125 138
125 137 bop 3764 -200 a FH(125)417 7 y
 26575831 10064609 723599 36969349 27299430 47033958 startTexFig
 417 7 a
%%BeginDocument: figs/update.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      96 144 moveto 272 144 lineto 272 264 lineto 96 264 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 40 208 16 16 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 192 moveto
      40 168 lineto
      96 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 224 moveto
      40 248 lineto
      96 248 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      292 212 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      325 203 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      311 203 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      311 212 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      60 196 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      93 187 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      79 187 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      79 196 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 168 moveto
      328 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 248 moveto
      328 248 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      112 182 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      163 186 moveto (,k) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      192 183 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      212 186 moveto (cs,k) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      208 230 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      220 233 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      112 398 moveto (a\) Original SCN) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      131 185 moveto (SCN) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      120 231 moveto (C') show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      140 234 moveto (cs,k) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      504 144 moveto 680 144 lineto 680 264 lineto 504 264 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      448 216 moveto
      448 168 lineto
      504 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      448 216 moveto
      448 240 lineto
      504 240 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      700 212 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      733 203 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      719 203 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      719 212 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      425 268 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      477 270 moveto (0) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      439 267 moveto (\() show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      447 268 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      680 168 moveto
      736 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      680 248 moveto
      736 248 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      520 182 moveto (G) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      571 186 moveto (,k) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      600 183 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      620 186 moveto (cs,k) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      616 238 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      628 241 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      512 398 moveto (b\) Modified SCN) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [17 0 0 -17 0 0] makefont setfont
   gsave
      539 185 moveto (SCN) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      528 239 moveto (C') show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      548 242 moveto (cs,k) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 544 320 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      532 320 moveto
      512 320 lineto
      512 264 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      557 320 moveto
      584 320 lineto
      584 264 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      524 361 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      542 361 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      551 361 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      543 362 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      608 264 moveto
      608 304 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      656 264 moveto
      656 304 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      613 331 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      638 331 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      647 331 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      639 332 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      537 145 moveto 180 rotate (^) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      617 145 moveto 180 rotate (^) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      545 201 moveto 180 rotate (^) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      630 204 moveto 180 rotate (^) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      351 346 moveto
      399 346 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      351 356 moveto
      399 356 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      387 337 moveto
      405 351 lineto
      387 365 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      455 267 moveto (\)=) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      523 293 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      538 296 moveto (in) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      561 301 moveto
      561 286 lineto
      556 290 lineto
      564 273 lineto
      572 290 lineto
      567 286 lineto
      567 301 lineto
      561 301 lineto
   stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sun Oct 25 15:20:21 1998
%%EndDocument

 endTexFig
 1518 1478 a FH(Figure)30 b(5.15:)42 b(SCN)30 b(de\014nitions.)1485
1753 y FD(y)q FH(\()p FG(t)p FH(\))85 b(=)d FD(C)1958
1768 y FB(k)2000 1753 y FD(q)2055 1768 y FB(k)2119 1753
y FH(+)19 b FD(D)2289 1768 y FB(k)2332 1753 y FD(u)p
FH(\()p FG(t)p FH(\))p FG(;)1150 b FH(\(5.69\))300 2070
y(where)34 b(the)g(state)h(matrices)g FD(A)1401 2085
y FB(k)1443 2070 y FH(,)g FD(B)1577 2085 y FB(k)1620
2070 y FH(,)h FD(C)1757 2085 y FB(k)1799 2070 y FH(,)f(and)f
FD(D)2120 2085 y FB(k)2196 2070 y FH(and)g(the)g(c)m(harge)i(state)f(v)
m(ector)h FD(q)3385 2085 y FB(k)3462 2070 y FH(are)e(de\014ned)300
2296 y(in)29 b(Sec.)i(3.3.)536 2522 y(The)24 b(metho)s(d)g(used)f(to)i
(compute)g(the)f(output)g(noise)g(PSD)g(due)f(to)i FC(one)g
FH(noisy)e(elemen)m(t)i(required)300 2748 y(that)38 b(the)g(original)d
(SCN)i(is)f(mo)s(di\014ed)f(to)k(the)e(net)m(w)m(ork)h(of)g(Fig.)g
(5.5,)i(where)d(the)h(noisy)e(elemen)m(t)i(is)300 2974
y(replaced)d(b)m(y)g(a)h(v)m(oltage)i(source)d FG(z)t
FH(\()p FG(t)p FH(\))i(that)f(mo)s(dels)e(its)h(b)s(eha)m(vior.)56
b(The)35 b(mo)s(di\014ed)e(net)m(w)m(ork)j(is)f(also)300
3199 y(an)c(ideal)f(SCN)g(and)h(can)g(b)s(e)g(represen)m(ted)g(b)m(y)g
(a)g(di\013eren)m(t)g(set)h(of)f(CS/MNA)g(net)m(w)m(ork)h(equations)f
(for)300 3425 y(ideal)e(SCN's:)994 3438 y Ft(2)994 3585
y(6)994 3634 y(6)994 3684 y(6)994 3737 y(4)1158 3568
y FH(\024)1143 3592 y FD(C)1219 3607 y FB(cs;k)1109 3794
y FH(\024)1091 3817 y FD(G)1173 3832 y FB(S)t(C)5 b(N)s(;k)1437
3438 y Ft(3)1437 3585 y(7)1437 3634 y(7)1437 3684 y(7)1437
3737 y(5)1513 3681 y FH(\024)1508 3682 y FD(x)1563 3697
y FB(k)1606 3682 y FH(\()p FG(t)p FH(\))26 b(=)1830 3438
y Ft(2)1830 3585 y(6)1830 3634 y(6)1830 3684 y(6)1830
3737 y(4)1942 3568 y FH(\024)1927 3592 y FD(C)2003 3559
y Fv(0)2003 3618 y FB(cs;k)2002 3817 y FD(0)2170 3438
y Ft(3)2170 3585 y(7)2170 3634 y(7)2170 3684 y(7)2170
3737 y(5)2245 3681 y FH(\024)2240 3682 y FD(x)2295 3697
y FB(k)r Fv(\000)p FA(1)2428 3682 y FH(\()p FG(t)2496
3697 y FB(k)r Fv(\000)p FA(1)2629 3682 y FH(\))21 b(+)2776
3438 y Ft(2)2776 3585 y(6)2776 3634 y(6)2776 3684 y(6)2776
3737 y(4)2882 3592 y FD(0)2864 3793 y FH(\024)2873 3817
y FD(l)2902 3832 y FB(k)2986 3438 y Ft(3)2986 3585 y(7)2986
3634 y(7)2986 3684 y(7)2986 3737 y(5)3056 3682 y FG(z)t
FH(\()p FG(t)p FH(\))463 b(\(5.70\))1750 4117 y FG(y)s
FH(\()p FG(t)p FH(\))84 b(=)2159 4116 y(\024)2138 4117
y FD(m)2226 4080 y FB(t)2226 4140 y(k)2273 4116 y FH(\024)2268
4117 y FD(x)2323 4132 y FB(k)2366 4117 y FH(\()p FG(t)p
FH(\))1199 b(\(5.71\))1731 4368 y FG(w)r FH(\()p FG(t)p
FH(\))84 b(=)e FD(d)2196 4330 y FB(t)2196 4390 y(k)2244
4367 y FH(\024)2239 4368 y FD(x)2294 4383 y FB(k)2337
4368 y FH(\()p FG(t)p FH(\))p FG(:)1203 b FH(\(5.72\))300
4685 y(F)-8 b(or)26 b(con)m(v)m(enience,)i(the)e(mo)s(di\014ed)e(net)m
(w)m(ork)i(is)f(illustrated)f(in)g(Fig.)i(5.15\(b\).)41
b(The)25 b(signal)g(input)e(v)m(ector)300 4911 y(in)h(the)h(mo)s
(di\014ed)e(net)m(w)m(ork)j(is)e(set)i(to)g(zero.)40
b(The)24 b(new)h(input)e(is)h(a)i(single)d(v)m(oltage)k(source)f(with)d
(a)j(scalar)300 5137 y(w)m(a)m(v)m(eform)38 b FG(z)t
FH(\()p FG(t)p FH(\).)60 b(The)36 b(additional)e(output)i(equation)g
(\(5.72\))j(is)c(required)g(to)i(pro)s(duce)f(the)g(v)m(oltage)300
5362 y FG(w)r FH(\()p FG(t)p FH(\))31 b(de\014ned)e(in)h(Fig.)g
(5.4\(b\))i(and)e(\(c\).)41 b(The)30 b(v)m(ector)i FD(d)2245
5377 y FB(k)2318 5362 y FH(maps)e(the)h(unkno)m(wns)d(to)k
FG(w)r FH(\()p FG(t)p FH(\).)p eop
%%Page: 126 139
126 138 bop 3764 -200 a FH(126)536 99 y(The)21 b(net)m(w)m(ork)i
(equations)e(for)g(the)h(mo)s(di\014ed)e(net)m(w)m(ork)i(can)g(also)f
(b)s(e)g(transformed)g(in)m(to)h(the)f(stage)300 324
y(c)m(harge)29 b(v)-5 b(ariable)26 b(form)h(resulting)f(in)g(the)i
(equations)f(\(5.22\),)k(\(5.23\),)f(and)d(\(5.24\).)42
b(It)28 b(is)e(imp)s(ortan)m(t)h(to)300 550 y(note)j(that)g(for)f(eac)m
(h)i(noisy)d(elemen)m(t)i(there)f(is)g(a)g(di\013eren)m(t)g(mo)s
(di\014ed)e(net)m(w)m(ork)k(and)d(a)i(di\013eren)m(t)f(set)h(of)300
776 y(net)m(w)m(ork)h(equations.)536 1002 y(The)i(expression)e(for)i
(the)g(output)f(noise)h(PSD)f(due)h(to)g(white)f(noise)g(input)f(is)h
(giv)m(en)h(in)f(\(5.38\))300 1228 y(and)e(is)f(rep)s(eated)i(here)f
(for)g(con)m(v)m(enience:)1341 1511 y FG(S)1397 1525
y FB(y)1438 1511 y FH(\()p FG(!)s FH(\))c(=)f Fz(\000)1771
1449 y FH(2)1818 1425 y(^)1816 1449 y FG(k)1884 1426
y FH(^)1866 1449 y FG(T)13 b(\022)p 1771 1490 207 4 v
1841 1573 a(T)2035 1405 y FB(N)2007 1430 y Ft(X)2002
1614 y FB(k)r FA(=1)2156 1327 y Ft(\014)2156 1377 y(\014)2156
1427 y(\014)2184 1424 y FD(F)2250 1392 y FB(t)2250 1451
y(k)2292 1424 y FH(\()p FG(!)s FH(\))2428 1401 y(\024)2422
1424 y FD(b)2480 1439 y FB(k)r FA(+1)2614 1424 y FG(p)2660
1439 y FA(2)p FB(;k)2757 1327 y Ft(\014)2757 1377 y(\014)2757
1427 y(\014)2785 1353 y FA(2)p 2156 1490 668 4 v 2183
1503 a Ft(\020)2232 1597 y FG(p)2278 1612 y FA(1)p FB(;k)2396
1597 y FH(+)20 b FG(p)2533 1612 y FA(3)p FB(;k)2651 1574
y FH(\023)2630 1597 y FG(D)2705 1612 y FB(k)2748 1503
y Ft(\021)2834 1511 y FG(:)809 b FH(\(5.73\))300 1794
y(The)41 b(matrix)g(notation)h FD(F)1246 1809 y FB(k)1289
1794 y FH(\()p FG(!)s FH(\))g(is)e(used)h(instead)g(of)h(the)g(v)m
(ector)h FD(f)2706 1809 y FB(k)2749 1794 y FH(\()p FG(!)s
FH(\))f(in)e(\(5.38\),)47 b(since)41 b(m)m(ultiple)300
2020 y(outputs)32 b(are)g(considered.)46 b(Note)33 b(that)g(this)e(mak)
m(es)i FG(S)2206 2034 y FB(y)2248 2020 y FH(\()p FG(!)s
FH(\))f(in)f(\(5.73\))k(a)e(v)m(ector.)48 b(The)31 b(matrix)h
FD(F)3727 2035 y FB(k)3769 2020 y FH(\()p FG(!)s FH(\))300
2246 y(is)j(de\014ned)g(in)f(\(3.43\))k(and)d(is)g(a)i(function)d(of)i
(matrices)g FD(A)2375 2261 y FB(k)2418 2246 y FH(,)h(and)f
FD(C)2739 2261 y FB(k)2817 2246 y FH(in)e(\(5.68\))k(and)d(\(5.69\).)60
b(Since)300 2472 y FD(A)379 2487 y FB(k)422 2472 y FH(,)31
b(and)g FD(C)732 2487 y FB(k)805 2472 y FH(are)g(from)g(the)g(original)
e(SCN)i(equations,)g FD(F)2374 2487 y FB(k)2416 2472
y FH(\()p FG(!)s FH(\))h(is)e(the)h(same)h(for)f(all)f(noisy)g(elemen)m
(ts)300 2697 y(and)38 b(needs)g(to)i(b)s(e)e(computed)h(only)e(once.)67
b(The)38 b(v)m(ector)2379 2673 y(\024)2372 2697 y FD(b)2430
2712 y FB(k)2512 2697 y FH(and)g(the)h(quan)m(tit)m(y)3255
2674 y(\023)3234 2697 y FG(D)3309 2712 y FB(k)3390 2697
y FH(are)g(from)g(the)300 2923 y(state)32 b(c)m(harge)g(equations)e
(\(5.22\))j(and)d(\(5.24\))j(and)d(are)h(therefore)g(di\013eren)m(t)f
(for)h(eac)m(h)h(noisy)d(elemen)m(t.)300 3149 y(The)g(parameters)h
FG(p)1002 3164 y FA(1)p FB(;k)1099 3149 y FH(,)g FG(p)1200
3164 y FA(2)p FB(;k)1297 3149 y FH(,)g(and)f FG(p)1574
3164 y FA(1)p FB(;k)1700 3149 y FH(are)h(dep)s(enden)m(t)e(on)i(the)f
(input)f(capacitance)j FG(C)3366 3164 y FB(in;k)3495
3149 y FH(,)e(sho)m(wn)g(in)300 3375 y(Fig.)g(5.15.)41
b(The)28 b(input)f(capacitance)j(is)d(a)i(prop)s(ert)m(y)f(of)g(the)h
(mo)s(di\014ed)d(net)m(w)m(ork)k(and)e(is)f(also)h(di\013eren)m(t)300
3601 y(for)i(eac)m(h)i(noisy)d(elemen)m(t.)536 3826 y(The)38
b(expression)f(in)g(\(5.73\))k(m)m(ust)d(b)s(e)f(ev)-5
b(aluated)39 b(for)f(eac)m(h)h(noisy)f(elemen)m(t.)65
b(Ho)m(w)m(ev)m(er,)42 b(it)c(is)300 4052 y(ine\016cien)m(t)e(to)i
(obtain)1131 4028 y(\024)1125 4052 y FD(b)f FH(and)1424
4029 y(\023)1403 4052 y FG(D)1478 4067 y FB(k)1558 4052
y FH(b)m(y)g(constructing)f(the)h(state)h(c)m(harge)g(v)-5
b(ariable)36 b(equations)h(of)g(the)300 4278 y(mo)s(di\014ed)d(net)m(w)
m(ork)j(eac)m(h)h(time.)58 b(F)-8 b(urthermore,)38 b(the)e(state)i(c)m
(harge)g(v)-5 b(ariable)35 b(equations)h(cannot)h(b)s(e)300
4504 y(used)29 b(to)i(compute)g(the)f(input)e(capacitance)k
FG(C)1940 4519 y FB(in;k)2069 4504 y FH(.)41 b(In)29
b(the)h(follo)m(wing)f(sections)h(it)g(is)f(sho)m(wn)h(ho)m(w)g(the)300
4730 y(net)m(w)m(ork)25 b(equations)f(in)e(\(5.70\),)28
b(\(5.71\),)g(and)c(\(5.72\))i(can)e(b)s(e)g(used)f(to)i(e\016cien)m
(tly)f(compute)g(the)g(output)300 4956 y(PSD)31 b(due)f(to)i(m)m
(ultiple)c(noisy)i(elemen)m(ts.)43 b(In)30 b(Sec.)h(5.8.2)i(it)d(is)g
(sho)m(wn)h(ho)m(w)g(\(5.70\))i(can)e(b)s(e)f(e\016cien)m(tly)300
5181 y(constructed)h(b)m(y)g(utilizing)d(the)j(concept)h(of)f(Large)h
(Change)f(Sensitivit)m(y)e([61)q(,)i(62)q(].)42 b(In)31
b(Sec.)g(5.8.3)i(the)300 5407 y(expression)j(for)h(the)g(output)g
(noise)g(PSD)g(is)f(rederiv)m(ed)g(in)g(terms)h(of)h(the)f(parameters)h
(in)e(\(5.70\))j(to)p eop
%%Page: 127 140
127 139 bop 3764 -200 a FH(127)300 99 y(a)m(v)m(oid)34
b(the)g(computation)g(of)1350 75 y(\024)1344 99 y FD(b)1402
114 y FB(k)1444 99 y FH(.)51 b(In)33 b(Sec.)h(5.8.4)i(and)d(Sec.)h
(5.8.5)i(it)d(is)g(sho)m(wn)g(ho)m(w)h(the)g(parameters)321
301 y(\023)300 324 y FG(D)375 339 y FB(k)448 324 y FH(and)c
FG(C)690 339 y FB(in;k)849 324 y FH(can)h(b)s(e)f(computed)g(e\016cien)
m(tly)-8 b(.)300 568 y Fx(5.8.2)112 b(Large)39 b(c)m(hange)f
(sensitivit)m(y)300 852 y FH(The)23 b(di\013erence)h(in)e(the)i(top)s
(ology)g(b)s(et)m(w)m(een)h(the)f(original)e(SCN)h(and)g(the)h(mo)s
(di\014ed)e(SCN)h(for)h(the)g(three)300 1078 y(di\013eren)m(t)29
b(t)m(yp)s(es)g(of)g(noisy)f(elemen)m(ts)h(is)g(sho)m(wn)f(in)g(Fig.)h
(5.16.)42 b(In)28 b(all)g(three)i(cases,)g(the)f(noisy)f(elemen)m(t)300
1304 y(is)d(replaced)g(b)m(y)h(a)g(v)m(oltage)i(source.)39
b(The)26 b(\\subnet)m(w)m(ork")g(represen)m(ts)g(the)g(remaining)e
(elemen)m(ts)i(whic)m(h)300 1530 y(are)31 b(the)f(same)h(in)e(b)s(oth)h
(the)g(original)f(SCN)g(and)h(the)h(mo)s(di\014ed)d(SCN.)i(It)g(is)g
(imp)s(ortan)m(t)f(to)i(note)g(that)300 1756 y(for)d(all)g(three)h
(cases,)h(the)f(transformation)f(do)s(es)g(not)h(c)m(hange)g(the)g
(structure)f(of)h(the)g(c)m(harge)h(surfaces.)300 1981
y(\(See)h(Sec.)g(2.4)g(for)f(the)h(explanation)e(of)i(the)g(c)m(harge)g
(surface)f(structure.\))536 2207 y(It)22 b(is)f(sho)m(wn)h(in)f(App)s
(endix)e(G)j(that)h(for)f(all)f(three)h(cases)h(in)e(Fig.)h(5.16,)k
(the)c(relationship)d(b)s(et)m(w)m(een)300 2433 y(the)36
b(mo)s(di\014ed)e(SCN)h(equations)h(in)f(\(5.70\),)40
b(\(5.71\),)g(and)35 b(\(5.72\))j(and)e(the)g(original)e(SCN)h
(equations)300 2659 y(in)29 b(\(5.66\))k(and)c(\(5.67\))k(can)e(b)s(e)e
(expressed)h(as)h(follo)m(ws:)1381 2786 y Ft(2)1381 2932
y(6)1381 2982 y(6)1381 3032 y(6)1381 3085 y(4)1545 2916
y FH(\024)1530 2939 y FD(C)1606 2954 y FB(cs;k)1496 3142
y FH(\024)1478 3165 y FD(G)1560 3180 y FB(S)t(C)5 b(N)s(;k)1824
2786 y Ft(3)1824 2932 y(7)1824 2982 y(7)1824 3032 y(7)1824
3085 y(5)1905 3030 y FH(=)2001 2786 y Ft(2)2001 2932
y(6)2001 2982 y(6)2001 3032 y(6)2001 3085 y(4)2150 2939
y FD(C)2226 2954 y FB(cs;k)2098 3165 y FD(G)2180 3180
y FB(S)t(C)g(N)s(;k)2445 2786 y Ft(3)2445 2932 y(7)2445
2982 y(7)2445 3032 y(7)2445 3085 y(5)2520 3030 y FH(+)2611
2786 y Ft(2)2611 2932 y(6)2611 2982 y(6)2611 3032 y(6)2611
3085 y(4)2718 2939 y FD(0)2700 3141 y FH(\024)2708 3165
y FD(l)2737 3180 y FB(k)2821 2786 y Ft(3)2821 2932 y(7)2821
2982 y(7)2821 3032 y(7)2821 3085 y(5)2892 3030 y FD(a)2943
2992 y FB(t)2943 3052 y(k)3668 3030 y FH(\(5.74\))1396
3362 y(\024)1381 3386 y FD(C)1457 3401 y FB(cs;k)1607
3386 y FH(=)25 b FD(C)1779 3401 y FB(cs;k)1904 3386 y
FG(;)2232 3362 y FH(\024)2217 3386 y FD(C)2293 3348 y
Fv(0)2293 3408 y FB(cs;k)2443 3386 y FH(=)g FD(C)2615
3348 y Fv(0)2615 3408 y FB(cs;k)2740 3386 y FG(;)903
b FH(\(5.75\))1402 3635 y(\024)1381 3636 y FD(m)1469
3651 y FB(k)1536 3636 y FH(=)25 b FD(m)1720 3651 y FB(k)1762
3636 y FG(;)1881 b FH(\(5.76\))300 3953 y(where)27 b(the)g(addition)e
(of)i(the)h(v)m(ector)g(pro)s(duct)e(in)g(\(5.74\))j(is)d(a)i
(Rank-1-Up)s(date)g([61)q(,)f(62)q(].)40 b(The)26 b(v)m(ectors)292
4155 y(\024)300 4179 y FD(l)329 4194 y FB(k)402 4179
y FH(and)k FD(a)630 4194 y FB(k)703 4179 y FH(for)g(eac)m(h)h(of)g(the)
f(three)h(t)m(yp)s(es)f(of)h(noisy)e(elemen)m(ts)i(are)g(giv)m(en)f(in)
f(App)s(endix)f(G.)536 4405 y(It)41 b(is)e(imp)s(ortan)m(t)g(to)i(note)
g(the)g(relationship)d(in)g(\(5.75\).)73 b(Recall)40
b(from)g(Sec.)h(3.2.2)h(that)f(the)300 4631 y(top)35
b(ro)m(w)g(of)g(\(5.70\))i(represen)m(ts)e(the)g(c)m(harge)h(conserv)-5
b(ation)35 b(equations)f(for)h(the)g(linear)e(or)i(linearized)300
4857 y(net)m(w)m(ork,)c(and)f(the)h(v)m(ector)1678 5083
y FD(q)1733 5098 y FB(k)1801 5083 y FH(=)1912 5059 y(\024)1897
5083 y FD(C)1973 5045 y Fv(0)1973 5105 y FB(cs;k)2103
5082 y FH(\024)2098 5083 y FD(x)2153 5098 y FB(k)r Fv(\000)p
FA(1)2286 5083 y FH(\()p FG(t)2354 5098 y FB(k)r Fv(\000)p
FA(1)2487 5083 y FH(\))1146 b(\(5.77\))300 5362 y(is)24
b(a)h(c)m(harge)h(state)h(v)m(ector)f(whose)f(en)m(tries)f(represen)m
(t)h(the)g(total)h(c)m(harges)g(inside)d(c)m(harge)j(surfaces.)38
b(The)p eop
%%Page: 128 141
128 140 bop 3764 -200 a FH(128)317 7 y
 28154594 41574072 855162 9143664 29009756 50717736 startTexFig
 317 7 a
%%BeginDocument: figs/update_elm.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      72 144 moveto 296 144 lineto 296 240 lineto 72 240 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 180 moveto
      40 168 lineto
      72 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 203 moveto
      40 224 lineto
      72 224 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      308 203 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      341 194 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      327 194 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      327 204 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      28 156 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      61 146 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      47 146 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      47 156 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 168 moveto
      328 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 224 moveto
      328 224 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      112 62 moveto (Original SCN) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      520 144 moveto 720 144 lineto 720 240 lineto 520 240 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      488 200 moveto
      488 168 lineto
      520 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      488 200 moveto
      488 224 lineto
      520 224 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      732 203 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      765 194 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      751 194 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      751 204 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      460 156 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      485 156 moveto (\)=0) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      471 156 moveto (\() show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      479 156 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      720 168 moveto
      752 168 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      720 224 moveto
      752 224 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      560 62 moveto (Noisy SCN) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 592 304 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      580 304 moveto
      536 304 lineto
      536 240 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      605 304 moveto
      640 304 lineto
      640 240 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      572 331 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      590 332 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      599 332 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      591 332 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      383 58 moveto
      431 58 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      383 68 moveto
      431 68 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      419 49 moveto
      437 63 lineto
      419 77 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 302 moveto
      192 302 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 302 moveto
      104 302 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 240 moveto
      104 304 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      132 227 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      150 228 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      159 228 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      151 228 moveto (t) show
   grestore

% OVAL
newpath 192 302 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 192 302 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 104 302 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 302 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      100 330 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      188 330 moveto ( j) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      116 218 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      192 217 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      120 190 moveto (Subnetwork) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      552 190 moveto (Subnetwork) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 40 192 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 536 304 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 536 304 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      644 322 moveto ( j ) show
   grestore

% OVAL
newpath 640 304 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 640 304 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      524 322 moveto (i ) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      548 218 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      640 217 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      88 464 moveto 312 464 lineto 312 560 lineto 88 560 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 500 moveto
      56 488 lineto
      88 488 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 523 moveto
      56 544 lineto
      88 544 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      324 523 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      357 514 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      343 514 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      343 524 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      44 476 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      77 466 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      63 466 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      63 476 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      312 488 moveto
      344 488 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      312 544 moveto
      344 544 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      536 464 moveto 736 464 lineto 736 560 lineto 536 560 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      504 520 moveto
      504 488 lineto
      536 488 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      504 520 moveto
      504 544 lineto
      536 544 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      748 523 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      781 514 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      767 514 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      767 524 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      476 476 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      501 476 moveto (\)=0) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      487 476 moveto (\() show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      495 476 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      736 488 moveto
      768 488 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      736 544 moveto
      768 544 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 584 600 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      572 600 moveto
      552 600 lineto
      552 560 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      597 600 moveto
      616 600 lineto
      616 560 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      564 635 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      582 636 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      591 636 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      583 636 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      664 560 moveto
      664 600 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      720 560 moveto
      720 600 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      669 547 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      694 548 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      703 548 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      695 548 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      244 602 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      248 649 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      161 632 moveto (A) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      172 638 moveto (0) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 608 moveto
      152 632 lineto
      168 656 lineto
      184 632 lineto
      168 608 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 608 moveto
      168 592 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 656 moveto
      168 680 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 560 moveto
      96 592 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 560 moveto
      144 592 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 560 moveto
      240 592 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 560 moveto
      296 592 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      108 547 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      126 548 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      135 548 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      127 548 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      237 547 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      262 548 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      271 548 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      263 548 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 680 moveto
      96 680 lineto
      96 592 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 592 moveto
      296 680 lineto
      224 680 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 592 moveto
      224 592 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 592 moveto
      168 592 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 168 592 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 168 592 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 168 680 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 168 680 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 224 592 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 224 592 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 224 680 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 224 680 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      172 586 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      172 700 moveto ( j) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      212 586 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      212 702 moveto (l ) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      188 594 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      192 665 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      136 510 moveto (Subnetwork) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      568 510 moveto (Subnetwork) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 56 512 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 552 600 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 552 600 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      532 618 moveto ( j ) show
   grestore

% OVAL
newpath 616 600 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 616 600 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 664 600 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 664 600 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 720 600 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 720 600 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      620 618 moveto (i ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      652 618 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      732 618 moveto (l ) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      620 538 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      560 537 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      684 586 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      712 585 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% OVAL
newpath 168 302 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 168 302 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 128 302 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 128 302 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 302 moveto
      128 302 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 240 moveto
      192 304 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      555 277 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      570 280 moveto (in) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      320 374 moveto (\(a\) Closed switch.) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      368 734 moveto (\(b\) VCVS.) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      597 280 moveto
      597 265 lineto
      592 269 lineto
      600 252 lineto
      608 269 lineto
      603 265 lineto
      603 280 lineto
      597 280 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      121 629 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      132 633 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 616 moveto
      32 0 atan dup cos 10 mul 144 exch sub
      exch sin 10 mul 648 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      144 648 10 4 0 32 tgifarrowtip
   closepath fill
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      88 864 moveto 312 864 lineto 312 960 lineto 88 960 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 900 moveto
      56 888 lineto
      88 888 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 923 moveto
      56 944 lineto
      88 944 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      324 923 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      357 914 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      343 914 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      343 924 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      44 876 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      77 866 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      63 866 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      63 876 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      312 888 moveto
      344 888 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      312 944 moveto
      344 944 lineto
   stroke
   1 setlinewidth
grestore

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      536 864 moveto 736 864 lineto 736 960 lineto 536 960 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      504 920 moveto
      504 888 lineto
      536 888 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      504 920 moveto
      504 944 lineto
      536 944 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      748 923 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      781 914 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      767 914 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      767 924 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      476 876 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      501 876 moveto (\)=0) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      487 876 moveto (\() show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      495 876 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      736 888 moveto
      768 888 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      736 944 moveto
      768 944 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 584 1024 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      572 1024 moveto
      552 1024 lineto
      552 960 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      597 1024 moveto
      616 1024 lineto
      616 960 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      564 1059 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      582 1060 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      591 1060 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      583 1060 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      664 960 moveto
      664 1000 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      720 960 moveto
      720 1000 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      669 947 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      694 948 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      703 948 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      695 948 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      244 1002 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      248 1049 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 1008 moveto
      168 992 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 1056 moveto
      168 1072 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 960 moveto
      96 992 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 960 moveto
      144 992 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 960 moveto
      240 992 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 960 moveto
      296 992 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      108 947 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      126 948 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      135 948 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      127 948 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      237 947 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      262 948 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      271 948 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      263 948 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 1072 moveto
      96 1072 lineto
      96 992 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      296 992 moveto
      296 1072 lineto
      224 1072 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 992 moveto
      224 992 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 992 moveto
      168 992 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 168 992 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 168 992 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 168 1072 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 168 1072 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 224 992 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 224 992 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 224 1072 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 224 1072 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      172 986 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      172 1092 moveto ( j) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      212 986 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      212 1094 moveto (l ) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      188 994 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      192 1057 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      136 910 moveto (Subnetwork) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      568 910 moveto (Subnetwork) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 56 912 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 552 1024 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 552 1024 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      532 1042 moveto ( j ) show
   grestore

% OVAL
newpath 616 1024 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 616 1024 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 664 1000 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 664 1000 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 720 1000 4 4 tgifellipse fill
gsave
   2 setlinewidth
   newpath 720 1000 4 4 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      620 1042 moveto (i ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      652 1018 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      732 1018 moveto (l ) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      620 938 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      560 937 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      684 986 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      712 985 moveto 180 rotate (-) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      336 1150 moveto (\(c\) Ideal Opamp.) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      121 1029 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      132 1033 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 1016 moveto
      32 0 atan dup cos 10 mul 144 exch sub
      exch sin 10 mul 1048 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      144 1048 10 4 0 32 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 168 1020 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 168 1044 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 224 1032 12 24 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 1008 moveto
      224 992 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      224 1056 moveto
      224 1072 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      236 1103 moveto (nullator ) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      100 1103 moveto (norator) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      563 997 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      578 1000 moveto (in) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      597 1000 moveto
      597 985 lineto
      592 989 lineto
      600 972 lineto
      608 989 lineto
      603 985 lineto
      603 1000 lineto
      597 1000 lineto
   stroke
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Dec 18 10:40:10 1998
%%EndDocument

 endTexFig
 657 5470 a FH(Figure)30 b(5.16:)42 b(T)-8 b(op)s(ology)31
b(transformations)e(from)h(original)f(SCN)h(to)h(noisy)e(SCN)p
eop
%%Page: 129 142
129 141 bop 3764 -200 a FH(129)300 99 y(fact)30 b(that)689
75 y(\024)674 99 y FD(C)750 66 y Fv(0)750 125 y FB(cs;k)904
99 y FH(is)f(the)g(same)h(as)g FD(C)1564 66 y Fv(0)1564
125 y FB(cs;k)1718 99 y FH(from)f(the)g(original)f(SCN,)h(means)g(that)
h(the)f(structure)g(of)h(the)300 324 y(c)m(harge)39 b(surfaces)f(has)f
(not)h(c)m(hanged.)64 b(Consequen)m(tly)-8 b(,)40 b(the)e(c)m(harge)h
(state)g(v)m(ector)g(for)f(the)g(mo)s(di\014ed)300 550
y(net)m(w)m(ork)31 b(can)g(b)s(e)f(written)f(as)1665
776 y FD(q)1720 791 y FB(k)1788 776 y FH(=)c FD(C)1960
738 y Fv(0)1960 798 y FB(cs;k)2090 775 y FH(\024)2085
776 y FD(x)2140 791 y FB(k)r Fv(\000)p FA(1)2273 776
y FH(\()p FG(t)2341 791 y FB(k)r Fv(\000)p FA(1)2474
776 y FH(\))p FG(:)1134 b FH(\(5.78\))300 1042 y(This)22
b(prop)s(ert)m(y)g(is)h(imp)s(ortan)m(t)f(b)s(ecause)h(there)h(is)e(no)
h(need)g(to)i(lo)s(cate)f(a)f(new)g(set)h(of)f(c)m(harge)i(surfaces)e
(for)300 1268 y(the)33 b(mo)s(di\014ed)e(net)m(w)m(orks)i(corresp)s
(onding)e(to)j(eac)m(h)g(noisy)e(elemen)m(t,)i(and)e(b)s(ecause)h(the)g
(same)h(matrix)300 1493 y FD(C)376 1460 y Fv(0)376 1520
y FB(cs;k)531 1493 y FH(can)d(b)s(e)f(used)f(for)h(all)g(noisy)f
(elemen)m(ts.)536 1719 y(In)h(the)g(follo)m(wing)f(sections,)i(it)f
(will)d(b)s(e)j(sho)m(wn)g(that)h(to)g(obtain)e(the)i(parameters)g
(required)d(for)300 1945 y(the)k(noise)f(form)m(ulation,)f(it)i(will)c
(b)s(e)j(necessary)h(to)g(solv)m(e)g(the)g(linear)e(system)i(of)f
(equations)g(in)g(\(5.70\))300 2171 y(under)e(the)h(condition)1118
2170 y(\024)1113 2171 y FD(x)1168 2186 y FB(k)r Fv(\000)p
FA(1)1301 2171 y FH(\()p FG(t)1369 2186 y FB(k)r Fv(\000)p
FA(1)1502 2171 y FH(\))c(=)f FD(0)31 b FH(and)e FG(z)t
FH(\()p FG(t)p FH(\))d(=)f(1,)31 b FC(i.)42 b(e.)1593
2270 y Ft(2)1593 2416 y(6)1593 2466 y(6)1593 2516 y(6)1593
2569 y(4)1757 2400 y FH(\024)1742 2423 y FD(C)1818 2438
y FB(cs;k)1708 2626 y FH(\024)1690 2649 y FD(G)1772 2664
y FB(S)t(C)5 b(N)s(;k)2037 2270 y Ft(3)2037 2416 y(7)2037
2466 y(7)2037 2516 y(7)2037 2569 y(5)2112 2513 y FH(\024)2107
2514 y FD(x)2162 2529 y FB(k)2230 2514 y FH(=)2326 2270
y Ft(2)2326 2416 y(6)2326 2466 y(6)2326 2516 y(6)2326
2569 y(4)2433 2423 y FD(0)2415 2625 y FH(\024)2423 2649
y FD(l)2452 2664 y FB(k)2536 2270 y Ft(3)2536 2416 y(7)2536
2466 y(7)2536 2516 y(7)2536 2569 y(5)3668 2514 y FH(\(5.79\))300
2857 y(T)-8 b(aking)30 b(adv)-5 b(an)m(tage)32 b(of)f(the)f(prop)s
(erties)f(in)g(\(5.74\),)k(the)e(system)f(in)f(\(5.79\))k(can)e(b)s(e)e
(rewritten)h(as)1278 2956 y Ft(0)1278 3102 y(B)1278 3152
y(B)1278 3202 y(B)1278 3255 y(@)1351 2956 y(2)1351 3102
y(6)1351 3152 y(6)1351 3202 y(6)1351 3255 y(4)1500 3109
y FD(C)1576 3124 y FB(cs;k)1447 3335 y FD(G)1529 3350
y FB(S)t(C)5 b(N)s(;k)1794 2956 y Ft(3)1794 3102 y(7)1794
3152 y(7)1794 3202 y(7)1794 3255 y(5)1870 3200 y FH(+)1961
2956 y Ft(2)1961 3102 y(6)1961 3152 y(6)1961 3202 y(6)1961
3255 y(4)2067 3109 y FD(0)2049 3311 y FH(\024)2057 3335
y FD(l)2086 3350 y FB(k)2171 2956 y Ft(3)2171 3102 y(7)2171
3152 y(7)2171 3202 y(7)2171 3255 y(5)2241 3200 y FD(a)2292
3162 y FB(t)2292 3222 y(k)2335 2956 y Ft(1)2335 3102
y(C)2335 3152 y(C)2335 3202 y(C)2335 3255 y(A)2427 3199
y FH(\024)2422 3200 y FD(x)2477 3215 y FB(k)2546 3200
y FH(=)2642 2956 y Ft(2)2642 3102 y(6)2642 3152 y(6)2642
3202 y(6)2642 3255 y(4)2748 3109 y FD(0)2730 3311 y FH(\024)2738
3335 y FD(l)2767 3350 y FB(k)2852 2956 y Ft(3)2852 3102
y(7)2852 3152 y(7)2852 3202 y(7)2852 3255 y(5)3668 3200
y FH(\(5.80\))300 3543 y(Using)30 b(the)g(concept)h(of)g(large)f(c)m
(hange)i(sensitivit)m(y)-8 b(,)29 b([61)r(,)h(62)q(],)h(it)f(can)g(b)s
(e)g(sho)m(wn)g(that)330 3771 y Ft(\022\024)538 3816
y Fn(\024)525 3837 y Fk(C)594 3849 y Fj(cs;k)494 3920
y Fn(\024)477 3941 y Fk(G)552 3953 y Fj(S)s(C)t(N)s(;k)805
3771 y Ft(\025)867 3888 y Fn(+)950 3771 y Ft(\024)1045
3835 y Fk(0)1028 3917 y Fn(\024)1035 3939 y Fk(l)1062
3951 y Fj(k)1144 3771 y Ft(\025)1202 3888 y Fk(a)1248
3854 y Fj(t)1248 3909 y(k)1289 3771 y Ft(\023)1350 3785
y Fi(\000)p Fh(1)1462 3888 y Fn(=)1550 3771 y Ft(\024)1683
3837 y Fk(C)1752 3849 y Fj(cs;k)1635 3937 y Fk(G)1710
3949 y Fj(S)s(C)t(N)s(;k)1963 3771 y Ft(\025)2007 3788
y Fi(\000)p Fh(1)2110 3771 y Ft(\024)2205 3835 y Fk(0)2188
3917 y Fn(\024)2196 3939 y Fk(l)2223 3951 y Fj(k)2304
3771 y Ft(\025)2367 3888 y Fg(\000)2460 3658 y Ft(\024)2593
3724 y Fk(C)2662 3736 y Fj(cs;k)2545 3824 y Fk(G)2620
3836 y Fj(S)s(C)t(N)s(;k)2873 3658 y Ft(\025)2917 3675
y Fi(\000)p Fh(1)3020 3658 y Ft(\024)3115 3722 y Fk(0)3098
3804 y Fn(\024)3105 3826 y Fk(l)3132 3838 y Fj(k)3214
3658 y Ft(\025)3272 3775 y Fk(a)3318 3745 y Fj(t)3318
3798 y(k)3373 3658 y Ft(\024)3506 3724 y Fk(C)3575 3736
y Fj(cs;k)3458 3824 y Fk(G)3533 3836 y Fj(S)s(C)t(N)s(;k)3786
3658 y Ft(\025)3830 3675 y Fi(\000)p Fh(1)p 2460 3869
1460 4 v 2668 4016 a Fn(1)18 b(+)g Fk(a)2857 3988 y Fj(t)2857
4041 y(k)2912 3899 y Ft(\024)3046 3966 y Fk(C)3115 3978
y Fj(cs;k)2998 4065 y Fk(G)3073 4077 y Fj(S)s(C)t(N)s(;k)3326
3899 y Ft(\025)3370 3916 y Fi(\000)p Fh(1)3473 3899 y
Ft(\024)3568 3963 y Fk(0)3550 4046 y Fn(\024)3558 4067
y Fk(l)3585 4079 y Fj(k)3667 3899 y Ft(\025)3668 4174
y FH(\(5.81\))330 4400 y(Solving)29 b(for)795 4399 y(\024)790
4400 y FD(x)845 4415 y FB(k)918 4400 y FH(in)g(\(5.80\))k(and)d(using)f
(the)h(prop)s(ert)m(y)g(in)f(\(5.81\))k(results)c(in)1333
4688 y(\024)1328 4689 y FD(x)1383 4704 y FB(k)1451 4689
y FH(=)c FD(x)1602 4704 y FB(k)1665 4689 y Fz(\000)1795
4627 y FD(x)1850 4642 y FB(k)1893 4627 y FD(a)1944 4594
y FB(t)1944 4654 y(k)1986 4627 y FD(x)2041 4642 y FB(k)p
1766 4668 348 4 v 1766 4751 a FH(1)20 b(+)g FD(a)1973
4720 y FB(t)1973 4779 y(k)2016 4751 y FD(x)2071 4766
y FB(k)2149 4689 y FH(=)25 b FD(x)2300 4704 y FB(k)2358
4545 y Ft( )2585 4627 y FH(1)p 2433 4668 V 2433 4751
a(1)c(+)f FD(a)2641 4720 y FB(t)2641 4779 y(k)2684 4751
y FD(x)2739 4766 y FB(k)2791 4545 y Ft(!)3668 4689 y
FH(\(5.82\))300 4978 y(where)30 b FD(x)618 4993 y FB(k)691
4978 y FH(is)f(the)i(solution)e(to)1593 5006 y Ft(2)1593
5152 y(6)1593 5202 y(6)1593 5252 y(6)1593 5305 y(4)1742
5159 y FD(C)1818 5174 y FB(cs;k)1690 5385 y FD(G)1772
5400 y FB(S)t(C)5 b(N)s(;k)2037 5006 y Ft(3)2037 5152
y(7)2037 5202 y(7)2037 5252 y(7)2037 5305 y(5)2107 5250
y FD(x)2162 5265 y FB(k)2230 5250 y FH(=)2326 5006 y
Ft(2)2326 5152 y(6)2326 5202 y(6)2326 5252 y(6)2326 5305
y(4)2433 5159 y FD(0)2415 5361 y FH(\024)2423 5385 y
FD(l)2452 5400 y FB(k)2536 5006 y Ft(3)2536 5152 y(7)2536
5202 y(7)2536 5252 y(7)2536 5305 y(5)3668 5250 y FH(\(5.83\))p
eop
%%Page: 130 143
130 142 bop 3764 -200 a FH(130)300 99 y(Note,)41 b(that)d(in)f
(\(5.83\),)k(the)d(v)m(ector)1604 75 y(\024)1613 99 y
FD(l)1642 114 y FB(k)1722 99 y FH(is)e(di\013eren)m(t)i(for)f(eac)m(h)i
(noisy)d(elemen)m(t,)k(while)c(the)i(matrices)300 324
y FD(G)382 339 y FB(S)t(C)5 b(N)s(;k)650 324 y FH(and)43
b FD(C)916 339 y FB(cs;k)1086 324 y FH(are)h(from)g(the)h(original)d
(SCN)i(and)g(are)g(the)h(same)g(for)f(all)f(noisy)g(elemen)m(ts.)300
550 y FC(Ther)-5 b(efor)g(e,)36 b(the)e(only)g(extr)-5
b(a)35 b(work)g(r)-5 b(e)g(quir)g(e)g(d)36 b(to)e(obtain)2273
549 y FH(\024)2269 550 y FD(x)2324 565 y FB(k)2400 550
y FC(for)h(an)f(additional)i(noisy)f(element)f(is)g(the)300
776 y(b)-5 b(ackwar)g(d)33 b(and)e(forwar)-5 b(d)33 b(substitution)e
(in)g(\(5.83\))h(for)f(a)f(di\013er)-5 b(ent)32 b(right-hand-side)g(ve)
-5 b(ctor,)31 b(and)g(then)300 1002 y(ve)-5 b(ctor)33
b(sc)-5 b(aling)34 b(and)f(ve)-5 b(ctor)34 b(pr)-5 b(o)g(duct)34
b(op)-5 b(er)g(ations)36 b(in)c(\(5.82\).)300 1242 y
Fx(5.8.3)112 b(Alternativ)m(e)36 b(expression)h(for)h
Fm(S)2013 1257 y FB(y)2054 1242 y FK(\()p Fm(!)t FK(\))300
1526 y FH(In)33 b(this)f(section,)j(the)f(expression)e(for)i(the)g
(output)f(noise)g(PSD)g(in)g(\(5.73\))i(is)e(rederiv)m(ed)g(in)m(to)g
(a)h(form)300 1752 y(that)d(can)g(tak)m(e)h(adv)-5 b(an)m(tage)32
b(of)e(the)h(large)f(c)m(hange)i(sensitivit)m(y)d(prop)s(erties)g
(discussed)f(in)h(Sec.)i(5.8.2.)536 1978 y(The)f(deriv)-5
b(ation)29 b(b)s(egins)g(with)g(\(5.33\))k(whic)m(h)c(is)1115
2273 y FG(S)1171 2287 y FB(y)1212 2273 y FH(\()p FG(!)s
FH(\))d(=)35 b(lim)1464 2333 y FB(\025)p Fv(!)p FA(0)1636
2212 y FG(S)1692 2226 y FB(u)1737 2212 y FH(\()p FG(\025)p
FH(\))p 1636 2252 225 4 v 1715 2335 a FG(T)1918 2167
y FB(N)1890 2192 y Ft(X)1885 2377 y FB(k)r FA(=1)2029
2158 y Ft(Z)2112 2184 y FB(t)2137 2196 y Fu(k)2075 2347
y FB(t)2100 2359 y Fu(k)q Fr(\000)p Fs(1)2237 2176 y
Ft(\014)2237 2225 y(\014)2237 2275 y(\014)2264 2273 y
FD(F)2330 2236 y FB(t)2330 2296 y(k)2373 2273 y FH(\()p
FG(!)s FH(\))p FD(q)2558 2288 y FB(k)r FA(+1)2691 2273
y FH(\()p FG(\025;)15 b(\034)10 b FH(\))2904 2176 y Ft(\014)2904
2225 y(\014)2904 2275 y(\014)2933 2202 y FA(2)2988 2273
y FG(d\034)593 b FH(\(5.84\))300 2568 y(As)35 b(discussed)e(in)h(Sec.)h
(5.8.1,)k FD(F)1456 2583 y FB(k)1498 2568 y FH(\()p FG(!)s
FH(\))d(is)e(a)h(prop)s(ert)m(y)g(from)f(original)g(SCN)g(and)g(is)g
(the)i(same)f(for)g(all)300 2794 y(noisy)g(elemen)m(ts,)j(while)c
FD(q)1243 2809 y FB(k)1286 2794 y FH(\()p FG(\025;)15
b(\034)10 b FH(\),)38 b(as)f(giv)m(en)e(in)g(\(5.34\),)40
b(is)35 b(a)h(function)f(of)2984 2770 y(\024)2978 2794
y FD(b)3036 2809 y FB(k)3115 2794 y FH(whic)m(h)f(is)h(a)i(prop)s(ert)m
(y)300 3020 y(of)32 b(the)h(mo)s(di\014ed)d(net)m(w)m(ork.)48
b(T)-8 b(o)32 b(a)m(v)m(oid)h(computing)2160 2996 y(\024)2154
3020 y FD(b)f FH(for)g(eac)m(h)i(noisy)d(elemen)m(t,)j(the)e
(expression)f(for)300 3246 y FD(q)355 3261 y FB(k)398
3246 y FH(\()p FG(\025;)15 b(\034)10 b FH(\))35 b(is)d(deriv)m(ed)h(in)
f(terms)i(of)g(the)f(net)m(w)m(ork)i(equations)e(in)g(\(5.70\),)k
(making)c(it)g(p)s(ossible)e(to)j(tak)m(e)300 3472 y(adv)-5
b(an)m(tage)32 b(of)f(the)f(large)h(c)m(hange)g(sensitivit)m(y)e(prop)s
(erties.)536 3697 y(Recall)h(from)g(Sec.)g(5.4.3,)j(that)d
FD(q)1705 3712 y FB(k)r FA(+1)1838 3697 y FH(\()p FG(\025;)15
b(\034)10 b FH(\))32 b(is)d(the)h(state)i(c)m(harge)f(v)m(ector)h
(during)c(in)m(terv)-5 b(al)29 b FG(I)3767 3712 y FB(k)r
FA(+1)300 3923 y FH(of)34 b(the)g(lossy)f(net)m(w)m(ork)i(in)d(Sec.)i
(5.4.2)i(when)d(the)h(initial)d(conditions)h(are)i(zero)h(and)e(the)h
(noise)f(input)300 4149 y(is)28 b FG(u)p FH(\()p FG(t)p
FH(\))e(=)f FG(\016)s FH(\()p FG(t)19 b Fz(\000)f FG(\034)10
b FH(\))29 b(where)g FG(t)1295 4164 y FB(k)r Fv(\000)p
FA(1)1453 4149 y FG(<)c(\034)35 b Fz(\024)25 b FG(t)1753
4164 y FB(k)1796 4149 y FH(.)40 b(F)-8 b(or)30 b(the)f(net)m(w)m(ork)h
(equations)f(in)f(\(5.70\),)k(the)e(zero)g(initial)300
4375 y(conditions)f(mean)h(that)1806 4600 y(\024)1801
4601 y FD(x)1856 4616 y FB(k)r Fv(\000)p FA(1)1989 4601
y FH(\()p FG(t)2057 4616 y FB(k)r Fv(\000)p FA(1)2190
4601 y FH(\))c(=)f FD(0)1269 b FH(\(5.85\))300 4869 y(and)32
b(as)h(sho)m(wn)f(in)f(App)s(endix)f(D,)k(the)f(resp)s(onse)f(of)h(the)
g(lossy)f(net)m(w)m(ork)h(to)g(the)g(delta)g(input)e(can)i(b)s(e)300
5095 y(mo)s(deled)c(b)m(y)h(setting)h FG(z)t FH(\()p
FG(t)p FH(\))g(in)e(\(5.70\))k(to)1364 5390 y FG(z)t
FH(\()p FG(t)1478 5405 y FB(k)1521 5390 y FG(;)15 b(\025)p
FH(\))26 b(=)1785 5329 y(1)p 1781 5369 54 4 v 1781 5453
a FG(\025)1864 5390 y(p)1910 5405 y FA(2)p FB(;k)2028
5390 y FG(e)2083 5325 y Fs(1)p 2080 5337 37 4 v 2080
5378 a Fu(\025)2127 5358 y FH(\()2162 5352 y FB(p)2198
5364 y Fs(1)p Fu(;k)2285 5352 y FA(+)p FB(p)2376 5364
y Fs(3)p Fu(;k)2479 5335 y FA(\023)2463 5352 y FB(D)2521
5364 y Fu(k)2559 5358 y FH(\))2594 5352 y FA(\()p FB(t)2646
5364 y Fu(k)2685 5352 y Fv(\000)p FB(\034)8 b FA(\))2811
5390 y FG(:)832 b FH(\(5.86\))p eop
%%Page: 131 144
131 143 bop 3764 -200 a FH(131)300 99 y(where)40 b FG(\025)g
FH(in)f FG(z)t FH(\()p FG(t)896 114 y FB(k)939 99 y FG(;)15
b(\025)p FH(\))41 b(denotes)g(that)g(the)g(loss)e(has)i(not)f(b)s(een)g
(set)h(to)g(zero)g(y)m(et.)72 b(Applying)38 b(\(5.85\))300
324 y(and)30 b(\(5.86\))i(to)g(\(5.70\))g(giv)m(es)1330
432 y Ft(2)1330 578 y(6)1330 627 y(6)1330 677 y(6)1330
730 y(4)1494 561 y FH(\024)1479 585 y FD(C)1555 600 y
FB(cs;k)1446 787 y FH(\024)1427 810 y FD(G)1509 825 y
FB(S)t(C)5 b(N)s(;k)1774 432 y Ft(3)1774 578 y(7)1774
627 y(7)1774 677 y(7)1774 730 y(5)1849 674 y FH(\024)1844
675 y FD(x)1899 690 y FB(k)1942 675 y FH(\()p FG(t)2010
690 y FB(k)2053 675 y FG(;)15 b(\025)p FH(\))26 b(=)2303
432 y Ft(2)2303 578 y(6)2303 627 y(6)2303 677 y(6)2303
730 y(4)2410 585 y FD(0)2392 786 y FH(\024)2400 810 y
FD(l)2429 825 y FB(k)2513 432 y Ft(3)2513 578 y(7)2513
627 y(7)2513 677 y(7)2513 730 y(5)2584 675 y FG(z)t FH(\()p
FG(t)2698 690 y FB(k)2741 675 y FG(;)15 b(\025)p FH(\))799
b(\(5.87\))300 1026 y(The)30 b(solution)f(to)i(\(5.87\))i(can)d(b)s(e)g
(expressed)g(as)1684 1322 y(\024)1679 1323 y FD(x)1734
1338 y FB(k)1777 1323 y FH(\()p FG(t)1845 1338 y FB(k)1887
1323 y FG(;)15 b(\025)p FH(\))27 b(=)2142 1322 y(\024)2137
1323 y FD(x)2192 1338 y FB(k)2235 1323 y FG(z)t FH(\()p
FG(t)2349 1338 y FB(k)2392 1323 y FG(;)15 b(\025)p FH(\))1148
b(\(5.88\))300 1620 y(where)568 1619 y(\024)563 1620
y FD(x)618 1635 y FB(k)691 1620 y FH(is)29 b(the)i(solution)e(to)i
(\(5.79\).)536 1846 y(Finally)-8 b(,)29 b(from)h(\(5.78\),)1511
2143 y FD(q)1566 2158 y FB(k)r FA(+1)1699 2143 y FH(\()p
FG(\025;)15 b(\034)10 b FH(\))27 b(=)e FD(C)2111 2105
y Fv(0)2111 2165 y FB(cs;k)r FA(+1)2331 2142 y FH(\024)2326
2143 y FD(x)2381 2158 y FB(k)2424 2143 y FH(\()p FG(t)2492
2158 y FB(k)2535 2143 y FG(;)15 b(\025)p FH(\))p FG(:)980
b FH(\(5.89\))300 2440 y(The)26 b(full)e(expression)h(for)h
FD(q)1262 2455 y FB(k)r FA(+1)1395 2440 y FH(\()p FG(\025;)15
b(\034)10 b FH(\))27 b(is)e(obtained)h(b)m(y)g(com)m(bining)f
(\(5.89\),)k(\(5.88\),)h(and)25 b(\(5.86\))k(result-)300
2666 y(ing)h(in)1111 2891 y FD(q)1166 2906 y FB(k)r FA(+1)1299
2891 y FH(\()p FG(\025;)15 b(\034)10 b FH(\))27 b(=)e
FD(C)1711 2854 y Fv(0)1711 2914 y FB(cs;k)r FA(+1)1931
2890 y FH(\024)1926 2891 y FD(x)1981 2906 y FB(k)2037
2830 y FH(1)p 2034 2870 54 4 v 2034 2954 a FG(\025)2117
2891 y(p)2163 2906 y FA(2)p FB(;k)2280 2891 y FG(e)2335
2826 y Fs(1)p 2333 2838 37 4 v 2333 2879 a Fu(\025)2379
2859 y FH(\()2415 2853 y FB(p)2451 2865 y Fs(1)p Fu(;k)2538
2853 y FA(+)p FB(p)2629 2865 y Fs(3)p Fu(;k)2732 2836
y FA(\023)2716 2853 y FB(D)2774 2865 y Fu(k)2812 2859
y FH(\))2847 2853 y FA(\()p FB(t)2899 2865 y Fu(k)2938
2853 y Fv(\000)p FB(\034)8 b FA(\))3063 2891 y FG(:)580
b FH(\(5.90\))300 3161 y(No)m(w,)26 b(it)d(is)g(p)s(ossible)e(to)k
(deriv)m(e)e(the)h(expression)e(for)i FG(S)2167 3175
y FB(y)2208 3161 y FH(\()p FG(!)s FH(\).)39 b(Inserting)22
b(\(5.90\))k(in)m(to)e(\(5.84\),)j(ev)-5 b(aluating)300
3387 y(the)31 b(in)m(tegral)f(and)f(taking)i(the)f(limit)e(partially)h
(giv)m(es;)944 3684 y FG(S)1000 3698 y FB(y)1041 3684
y FH(\()p FG(!)s FH(\))d(=)f Fz(\000)1407 3623 y FH(1)p
1374 3663 112 4 v 1374 3746 a(2)p FG(T)1510 3565 y Ft(\022)1582
3684 y FH(lim)1571 3744 y FB(\025)p Fv(!)p FA(0)1743
3623 y FG(S)1799 3637 y FB(u)1844 3623 y FH(\()p FG(\025)p
FH(\))p 1743 3663 225 4 v 1829 3746 a FG(\025)1978 3565
y Ft(\023)2087 3578 y FB(N)2059 3603 y Ft(X)2054 3788
y FB(k)r FA(=1)2208 3500 y Ft(\014)2208 3550 y(\014)2208
3600 y(\014)2236 3598 y FD(F)2302 3565 y FB(t)2302 3624
y(k)2344 3598 y FH(\()p FG(!)s FH(\))c FD(C)2571 3565
y Fv(0)2571 3624 y FB(cs;k)r FA(+1)2791 3597 y FH(\024)2786
3598 y FD(x)2841 3613 y FB(k)2904 3598 y FG(p)2950 3613
y FA(2)p FB(;k)3047 3500 y Ft(\014)3047 3550 y(\014)3047
3600 y(\014)3075 3527 y FA(2)p 2208 3663 907 4 v 2354
3676 a Ft(\020)2403 3770 y FG(p)2449 3785 y FA(1)p FB(;k)2567
3770 y FH(+)f FG(p)2704 3785 y FA(3)p FB(;k)2822 3747
y FH(\023)2801 3770 y FG(D)2876 3785 y FB(k)2919 3676
y Ft(\021)3215 3684 y FG(;)428 b FH(\(5.91\))300 3981
y(where)30 b(the)g(remaining)f(limit)f(in)h(\(5.91\))k(can)d(b)s(e)g
(carried)g(out)g(as)h(in)e(\(5.37\))k(or)d(\(5.42\).)536
4207 y(The)38 b(output)g(PSD)g(in)f(\(5.91\))j(m)m(ust)e(b)s(e)g
(computed)g(for)g(eac)m(h)h(noisy)e(elemen)m(t.)65 b
FC(This)41 b(c)-5 b(an)40 b(b)-5 b(e)300 4433 y(done)40
b(e\016ciently)g(by)g(c)-5 b(omputing)1521 4432 y FH(\024)1517
4433 y FD(x)1572 4448 y FB(k)1654 4433 y FC(c)g(orr)g(esp)g(onding)43
b(to)d(e)-5 b(ach)41 b(noisy)f(element)g(thr)-5 b(ough)41
b(the)f(up)-5 b(date)300 4659 y(pr)g(op)g(erty)35 b(in)e(\(5.82\).)43
b(The)33 b(matrix)h FD(C)1632 4626 y Fv(0)1632 4685 y
FB(cs;k)1790 4659 y FC(is)e(the)h(same)g(for)h(al)5 b(l)33
b(noisy)g(elements.)536 4884 y FH(The)24 b(output)h(PSD)f(due)g(to)i(1)
p FG(=f)35 b FH(noise)24 b(input)f(can)i(also)f(b)s(e)h(expressed)f(in)
f(terms)i(of)3426 4883 y(\024)3421 4884 y FD(x)3476 4899
y FB(k)3519 4884 y FH(.)38 b(If)25 b(\(5.90\))300 5110
y(is)k(used)h(in)f(\(5.32\),)k(then)d(\(5.60\))j(b)s(ecomes;)1587
5384 y(~)1563 5407 y FG(H)1639 5422 y FB(k)1681 5407
y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))1928 5382 y Fz(\030)1928
5411 y FH(=)2023 5407 y FG(f)2078 5370 y Fv(0)2068 5430
y FB(k)2111 5407 y FH(\()p FG(!)s FH(\))p FG(e)2283 5370
y Fv(\000)p FB(!)2382 5382 y Fu(k)2420 5370 y FA(\()p
FB(t)2472 5382 y Fu(k)2511 5370 y Fv(\000)p FB(\034)e
FA(\))3668 5407 y FH(\(5.92\))p eop
%%Page: 132 145
132 144 bop 3764 -200 a FH(132)300 99 y(where)775 324
y FG(f)830 287 y Fv(0)820 347 y FB(k)862 324 y FH(\()p
FG(!)s FH(\))26 b(=)f FD(F)1180 287 y FB(t)1180 347 y(k)1223
324 y FH(\()p FG(!)s FH(\))p FD(C)1429 287 y Fv(0)1429
347 y FB(cs;k)r FA(+1)1649 323 y FH(\024)1644 324 y FD(x)1699
339 y FB(k)1752 262 y FG(p)1798 277 y FA(2)p FB(;k)p
1752 303 144 4 v 1797 387 a FG(\025)2087 324 y FH(and)182
b FG(!)2473 339 y FB(k)2540 324 y FH(=)25 b Fz(\000)2721
263 y FH(1)p 2717 303 54 4 v 2717 387 a FG(\025)2795
230 y Ft(\020)2844 324 y FG(p)2890 339 y FA(1)p FB(;k)3008
324 y FH(+)20 b FG(p)3145 339 y FA(3)p FB(;k)3263 301
y FH(\023)3242 324 y FG(D)3317 339 y FB(k)3360 230 y
Ft(\021)3668 324 y FH(\(5.93\))300 604 y(The)32 b(expression)g(for)g
FG(f)1126 571 y Fv(0)1116 631 y FB(k)1158 604 y FH(\()p
FG(!)s FH(\))i(in)d(\(5.93\))k(can)e(then)g(b)s(e)f(used)g(in)f(the)i
(expression)e(for)i(the)g(output)f(PSD)300 830 y(in)d(\(5.63\).)300
1083 y Fx(5.8.4)112 b(Computation)37 b(of)1476 1057 y
FK(\023)1453 1083 y Fm(D)1534 1098 y FB(k)300 1367 y
FH(F)-8 b(rom)28 b(the)g(expression)f(for)g(the)h(output)g(PSD)f(in)g
(\(5.91\),)k(it)c(can)h(b)s(e)f(seen)h(that)h(when)d
FG(p)3354 1381 y FA(3)p FB(;i)3465 1367 y FH(is)h(not)h(zero,)300
1593 y(it)34 b(is)g(necessary)h(to)g(compute)1407 1570
y(\023)1386 1593 y FG(D)1461 1608 y FB(k)1504 1593 y
FH(.)53 b(This)33 b(is)g(the)i(case)h(when)d(the)i(noisy)e(elemen)m(t)i
(is)f(a)h(V)m(CVS)f(or)h(an)300 1819 y(ideal)d(opamp.)50
b(\()34 b(See)f(\(5.27\),)k(\(5.29\),)g(and)c(\(5.31\).\))52
b(The)33 b(quan)m(tit)m(y)2780 1796 y(\023)2759 1819
y FG(D)2834 1834 y FB(k)2910 1819 y FH(is)g(de\014ned)f(in)g(\(5.24\).)
52 b(It)34 b(is)300 2045 y(the)29 b(transfer)g(function)e(from)i(the)g
(input)e FG(z)t FH(\()p FG(t)p FH(\))j(to)f(the)g(output)g
FG(w)r FH(\()p FG(t)p FH(\))h(in)e(the)h(mo)s(di\014ed)e(SCN)h(when)g
(the)300 2270 y(state)k(c)m(harge)f(v)m(ector)h FD(q)1136
2285 y FB(k)1209 2270 y FH(is)e(zero,)h FC(i.)42 b(e.)1371
2587 y FG(w)r FH(\()p FG(t)p FH(\))27 b(=)1685 2565 y(\023)1663
2587 y FG(D)1738 2602 y FB(k)1781 2587 y FG(z)t FH(\()p
FG(t)p FH(\))304 b(when)90 b FD(q)2587 2602 y FB(k)2655
2587 y FH(=)25 b FD(0)p FG(:)840 b FH(\(5.94\))536 2905
y(Note,)29 b(that)d(if)f FG(z)t FH(\()p FG(t)p FH(\))i(=)e(1)h(in)f
(\(5.94\),)k(then)d FG(w)r FH(\()p FG(t)p FH(\))g(=)2295
2882 y(\023)2273 2905 y FG(D)s FH(.)39 b(This)25 b(means)h(that)3107
2882 y(\023)3085 2905 y FG(D)3160 2920 y FB(k)3229 2905
y FH(can)h(b)s(e)e(computed)300 3130 y(b)m(y)20 b(applying)f(the)h
(conditions)f FG(z)t FH(\()p FG(t)p FH(\))27 b(=)d(1)d(and)f
FD(q)1908 3145 y FB(k)1976 3130 y FH(=)25 b FD(0)c FH(to)g(the)g(net)m
(w)m(ork)g(equations)g(in)e(\(5.70\))k(and)c(\(5.72\).)300
3356 y(F)-8 b(rom)37 b(\(5.78\),)k(the)36 b(condition)g
FD(q)1464 3371 y FB(k)1542 3356 y FH(=)f FD(0)i FH(means)f(that)2229
3355 y(\024)2224 3356 y FD(x)2279 3371 y FB(k)r Fv(\000)p
FA(1)2448 3356 y FH(=)f FD(0)i FH(in)e(\(5.70\).)62 b(F)-8
b(urthermore,)38 b(setting)300 3582 y FG(z)t FH(\()p
FG(t)p FH(\))26 b(=)f(1)31 b(in)e(\(5.70\))j(results)e(in)1593
3618 y Ft(2)1593 3764 y(6)1593 3814 y(6)1593 3864 y(6)1593
3917 y(4)1757 3748 y FH(\024)1742 3771 y FD(C)1818 3786
y FB(cs;k)1708 3974 y FH(\024)1690 3997 y FD(G)1772 4012
y FB(S)t(C)5 b(N)s(;k)2037 3618 y Ft(3)2037 3764 y(7)2037
3814 y(7)2037 3864 y(7)2037 3917 y(5)2112 3861 y FH(\024)2107
3862 y FD(x)2162 3877 y FB(k)2230 3862 y FH(=)2326 3618
y Ft(2)2326 3764 y(6)2326 3814 y(6)2326 3864 y(6)2326
3917 y(4)2433 3771 y FD(0)2415 3973 y FH(\024)2423 3997
y FD(l)2452 4012 y FB(k)2536 3618 y Ft(3)2536 3764 y(7)2536
3814 y(7)2536 3864 y(7)2536 3917 y(5)3668 3862 y FH(\(5.95\))300
4195 y(and)30 b(from)g(\(5.72\))1744 4398 y(\023)1722
4421 y FG(D)1797 4436 y FB(k)1866 4421 y FH(=)25 b FG(w)r
FH(\()p FG(t)p FH(\))h(=)f FD(d)2312 4383 y FB(t)2312
4443 y(k)2359 4420 y FH(\024)2355 4421 y FD(x)2410 4436
y FB(k)2452 4421 y FG(:)1191 b FH(\(5.96\))300 4701 y
FC(Note,)44 b(that)758 4700 y FH(\024)753 4701 y FD(x)808
4716 y FB(k)893 4701 y FC(is)e(the)g(same)g(ve)-5 b(ctor)43
b(that)g(has)g(b)-5 b(e)g(en)42 b(c)-5 b(ompute)g(d)44
b(for)e(the)g(output)h(PSD)e(expr)-5 b(ession)300 4927
y(in)34 b(\(5.91\),)h(ther)-5 b(efor)g(e,)36 b(the)e(only)g(additional)
i(c)-5 b(omputation)37 b(r)-5 b(e)g(quir)g(e)g(d)35 b(for)f(c)-5
b(omputation)36 b(of)3553 4904 y FH(\023)3531 4927 y
FG(D)3606 4942 y FB(k)3683 4927 y FC(is)e(the)300 5152
y(ve)-5 b(ctor)33 b(pr)-5 b(o)g(duct)35 b(in)e(\(5.96\).)p
eop
%%Page: 133 146
133 145 bop 3764 -200 a FH(133)1129 7 y
 15327150 8748974 131563 42823925 15458713 51572899 startTexFig
 1129 7 a
%%BeginDocument: figs/cin_net.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   2 setlinewidth
   newpath
      88 16 moveto 360 16 lineto 360 136 lineto 88 136 lineto
   closepath stroke
   1 setlinewidth
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      32 88 moveto
      32 40 lineto
      88 40 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      32 88 moveto
      32 112 lineto
      88 112 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      380 84 moveto (y) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      413 74 moveto 180 rotate (\() show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      399 74 moveto 180 rotate (\)) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      399 84 moveto (t) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      9 140 moveto (u) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      61 142 moveto (0) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      23 140 moveto (\() show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      31 140 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      360 40 moveto
      416 40 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      360 120 moveto
      416 120 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 176 208 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      164 208 moveto
      128 208 lineto
      128 136 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      189 208 moveto
      232 208 lineto
      232 136 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      156 241 moveto (z) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      174 242 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      183 242 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      175 242 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      280 136 moveto
      280 176 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      328 136 moveto
      328 176 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      285 203 moveto (w) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      310 204 moveto (\() tgifrighttext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      319 204 moveto (\)) show
   grestore

% TEXT
0 setgray
/NewCenturySchlbk-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      311 204 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      39 140 moveto (\)=) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      121 45 moveto (-q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      143 48 moveto (c,k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      171 117 moveto (C) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      186 120 moveto (in,k) show
   grestore

% OVAL
newpath 128 69 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 128 69 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      232 69 moveto
      189 69 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      189 44 moveto
      189 95 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      175 44 moveto
      177.67 60.67 177.67 77.67
      175 95 curveto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      177 69 moveto
      128 69 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% OVAL
newpath 230 69 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 230 69 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      232 72 moveto
      232 136 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      128 72 moveto
      128 136 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      201 45 moveto (+q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      225 48 moveto (c,k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      166 173 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      177 176 moveto (z,k) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 184 moveto
      0 -40 atan dup cos 10 mul 152 exch sub
      exch sin 10 mul 184 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      152 184 10 4 -40 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      216 230 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Bold findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      128 218 moveto (_) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Nov 19 13:55:10 1998
%%EndDocument

 endTexFig
 1123 1311 a FH(Figure)30 b(5.17:)42 b(De\014nitions)29
b(for)h(computation)h(of)f FG(C)2934 1326 y FB(in;l)300
1576 y Fx(5.8.5)150 b(Computation)36 b(of)i Fm(C)1561
1591 y FB(in;k)300 1860 y FH(When)26 b(the)h(noisy)f(elemen)m(t)h(is)e
(a)i(closed)g(switc)m(h)f(or)g(an)h(ideal)e(opamp,)i(the)g(parameters)g
FG(p)3408 1875 y FA(1)p FB(;k)3505 1860 y FH(,)h FG(p)3604
1875 y FA(2)p FB(;k)3701 1860 y FH(,)g(and)300 2086 y
FG(p)346 2101 y FA(3)p FB(;k)465 2086 y FH(are)23 b(functions)d(of)i
FG(C)1152 2101 y FB(in;k)1281 2086 y FH(,)i(whic)m(h)d(is)g(the)h
(input)e(capacitance)k(de\014ned)c(in)h(Fig.)h(5.15\(b\).)40
b(\(See)22 b(\(5.27\),)300 2312 y(\(5.29\),)33 b(and)d(\(5.31\).\))536
2538 y(The)20 b(concept)h(b)s(ehind)d(the)i(computation)g(of)h(the)f
(input)f(capacitance)i(is)f(illustrated)e(in)h(Fig.)h(5.17.)300
2764 y(The)28 b(net)m(w)m(ork)i(in)e(the)h(\014gure)g(is)f(the)h(mo)s
(di\014ed)e(SCN.)h(The)h(dashed)f(capacitor)i(represen)m(ts)e(the)i
(equiv-)300 2990 y(alen)m(t)d(capacitance)h(across)f(the)g(terminals)e
(of)i(the)g(v)m(oltage)h(source)f FG(z)t FH(\()p FG(t)p
FH(\))g(during)e(the)i(in)m(terv)-5 b(al)25 b FG(I)3636
3005 y FB(k)3679 2990 y FH(.)39 b(The)300 3215 y Fz(\006)p
FG(q)412 3230 y FB(c;k)540 3215 y FH(represen)m(t)c(the)h(equiv)-5
b(alen)m(t)35 b(of)h(the)g(c)m(harges)h(on)f(the)f(plates)h(of)g(that)g
(capacitor.)58 b(The)35 b(c)m(harge)300 3441 y FD(q)355
3456 y FB(z)s(;k)483 3441 y FH(is)30 b(the)g(c)m(harge)i(that)f(has)f
(passed)g(through)g(the)g(v)m(oltage)i(source)f(during)d(the)j(in)m
(terv)-5 b(al)29 b FG(I)3570 3456 y FB(k)3613 3441 y
FH(.)536 3667 y(If)h(the)h(initial)c(c)m(harge)32 b(on)e(the)h
(capacitor)g(is)e(zero,)j(then)1623 3953 y Fz(\000)p
FG(q)1735 3968 y FB(z)s(;k)1857 3953 y FH(=)25 b FG(q)1994
3968 y FB(c;k)2112 3953 y FH(=)g FG(C)2273 3968 y FB(in;k)2402
3953 y FG(z)t FH(\()p FG(t)p FH(\))p FG(:)1092 b FH(\(5.97\))300
4240 y(If)30 b FG(z)t FH(\()p FG(t)p FH(\))h(is)e(set)i(to)g(1)g(v)m
(olt,)g(then)1763 4465 y FG(C)1828 4480 y FB(in;k)1983
4465 y FH(=)24 b Fz(\000)2204 4403 y FG(q)2245 4418 y
FB(z)s(;k)p 2159 4444 228 4 v 2159 4528 a FH(1)31 b(v)m(olt)2396
4465 y FG(;)1247 b FH(\(5.98\))300 4730 y(and)30 b(if)f
FG(q)601 4745 y FB(z)s(;k)729 4730 y FH(is)g(kno)m(wn,)h(then)h(the)f
(input)e(capacitance)k(can)f(b)s(e)f(computed.)536 4956
y(Recall)41 b(that)h(the)f(v)m(ector)h(of)g(unkno)m(wns)2034
4955 y(\024)2029 4956 y FD(x)2084 4971 y FB(k)2168 4956
y FH(in)e(\(5.70\))j(con)m(tains)e(the)g(\\branc)m(h)g(c)m(harges")i
(of)300 5181 y(v)m(oltage)e(source)e(branc)m(hes)g(whic)m(h)f(are)h
(de\014ned)f(in)g(App)s(endix)e(F)k(as)f(the)g(c)m(harge)i(that)f(has)e
(passed)300 5407 y(through)f(a)i(branc)m(h)e(during)f(the)i(switc)m
(hing)f(in)m(terv)-5 b(al.)62 b(This)37 b(means)h(that)g(the)g(net)m(w)
m(ork)h(equations)p eop
%%Page: 134 147
134 146 bop 3764 -200 a FH(134)300 99 y(in)28 b(\(5.70\))j(can)f(b)s(e)
e(used)h(to)h(compute)f FG(q)1679 114 y FB(z)s(;k)1806
99 y FH(as)g(follo)m(ws.)40 b(First,)29 b(to)g(set)h(the)g(initial)c(c)
m(harge)k(to)g(zero,)h(the)300 324 y(v)m(ector)578 323
y(\024)573 324 y FD(x)628 339 y FB(k)671 324 y FH(\()p
FG(t)739 339 y FB(k)r Fv(\000)p FA(1)872 324 y FH(\))f(in)g(\(5.70\))i
(is)e(set)h(to)g(zero.)41 b(Next,)32 b(setting)e FG(z)t
FH(\()p FG(t)p FH(\))c(=)f(1)31 b(results)e(in)1581 446
y Ft(2)1581 592 y(6)1581 641 y(6)1581 691 y(6)1581 744
y(4)1745 575 y FH(\024)1730 599 y FD(C)1806 614 y FB(cs;k)1696
801 y FH(\024)1677 824 y FD(G)1759 839 y FB(S)t(C)5 b(N)s(;k)2024
446 y Ft(3)2024 592 y(7)2024 641 y(7)2024 691 y(7)2024
744 y(5)2099 688 y FH(\024)2095 689 y FD(x)2150 704 y
FB(k)2218 689 y FH(=)2314 446 y Ft(2)2314 592 y(6)2314
641 y(6)2314 691 y(6)2314 744 y(4)2420 599 y FD(0)2402
800 y FH(\024)2411 824 y FD(l)2440 839 y FB(k)2524 446
y Ft(3)2524 592 y(7)2524 641 y(7)2524 691 y(7)2524 744
y(5)2594 689 y FG(:)1049 b FH(\(5.99\))300 1054 y(The)35
b(system)h(of)g(equations)f(in)g(\(5.99\))i(is)e(solv)m(ed)h(to)g
(obtain)f(the)h(v)m(ector)h(of)f(unkno)m(wns)3463 1053
y(\024)3458 1054 y FD(x)3513 1069 y FB(k)3592 1054 y
FH(and)f(the)300 1280 y(c)m(harge)d(through)d(the)i(v)m(oltage)h
(source)f(is)1842 1591 y FG(q)1883 1606 y FB(z)s(;k)2006
1591 y FH(=)25 b FD(c)2148 1553 y FB(t)2148 1613 y(in)2224
1590 y FH(\024)2219 1591 y FD(x)2274 1606 y FB(k)2317
1591 y FG(;)1280 b FH(\(5.100\))300 1902 y(where)28 b
FD(c)607 1916 y FB(in)707 1902 y FH(is)g(a)h(v)m(ector)i(that)e
(selects)g(the)g(branc)m(h)f(c)m(harge)i(from)e(the)h(v)m(ector)i(of)e
(unkno)m(wns.)38 b(Com)m(bin-)300 2128 y(ing)30 b(\(5.100\))j(with)c
(\(5.98\))j(giv)m(es)f(the)g(\014nal)e(result)1787 2439
y FG(C)1852 2454 y FB(in;k)2006 2439 y FH(=)c Fz(\000)p
FD(c)2219 2401 y FB(t)2219 2461 y(in)2295 2438 y FH(\024)2290
2439 y FD(x)2345 2454 y FB(k)2388 2439 y FG(:)1209 b
FH(\(5.101\))536 2750 y FC(Note,)28 b(that)962 2749 y
FH(\024)957 2750 y FD(x)1012 2765 y FB(k)1081 2750 y
FC(is)e(the)h(same)f(ve)-5 b(ctor)27 b(that)h(has)f(b)-5
b(e)g(en)26 b(c)-5 b(ompute)g(d)28 b(for)f(the)g(output)g(PSD)e(expr)-5
b(ession)300 2976 y(in)28 b(\(5.91\),)i(ther)-5 b(efor)g(e,)30
b(the)e(only)h(additional)h(c)-5 b(omputation)30 b(r)-5
b(e)g(quir)g(e)g(d)30 b(for)e(c)-5 b(omputation)30 b(of)e
FG(C)3532 2991 y FB(in;k)3689 2976 y FC(is)g(the)300
3201 y(ve)-5 b(ctor)33 b(pr)-5 b(o)g(duct)35 b(in)e(\(5.101\).)300
3444 y Fx(5.8.6)112 b(Algorithm)35 b(for)i(e\016cien)m(t)g(noise)g
(analysis)300 3728 y FH(The)30 b(follo)m(wing)g(algorithm)g(summarizes)
f(the)i(steps)g(required)e(for)i(e\016cien)m(t)g(computation)g(of)g
(output)300 3954 y(noise)f(PSD)g(for)g(ideal)f(SCN's)h(with)f(m)m
(ultiple)f(noise)i(sources.)300 4187 y FC(A)n(lgorithm)h
FH(5.8.1:)138 b Fw(Noise)47 b(analysis)300 4370 y(Given:)395
4543 y FG(!)452 4557 y FB(star)r(t)611 4543 y Fw(,)h
FG(!)764 4557 y FB(stop)943 4543 y Fw(-)f(start)g(and)f(stop)h
(frequencies)e(for)i(output)f(noise)g(PSD.)395 4716 y
FG(N)468 4730 y FB(s)553 4716 y Fw(-)h(number)g(of)g(noisy)f(elements)
395 4888 y FG(N)58 b Fw(-)48 b(number)e(of)h(phases)300
5061 y(Start:)395 5234 y(/*)h(Construct)d(CS/MNA)h(equations)f(for)i
(original)f(SCN)h(*/)395 5407 y(for)g(\()p FG(k)29 b
FH(=)24 b(1)p FG(;)15 b(:)g(:)g(:)j(;)d(N)10 b Fw(\))p
eop
%%Page: 135 148
135 147 bop 3764 -200 a FH(135)634 99 y Fw([Constrcut)45
b(CS-graph)h(Table)g(for)h(phase)f FG(k)s Fw(])191 b(Algorithm)45
b(2.4.1.)634 271 y([Construct)g FD(G)1241 286 y FB(S)t(C)5
b(N)s(;k)1464 271 y Fw(,)48 b FD(C)1636 286 y FB(cs;k)1761
271 y Fw(,)f FD(C)1932 238 y Fv(0)1932 298 y FB(cs;k)2105
271 y Fw(from)g(device)f(stamps])189 b(Equation)45 b(\(F.7\))i(and)f
(Sec.)h(F.2)395 450 y(end)g(for)395 623 y(/*)h(Charge)e(state)g
(variable)g(formulation)e(*/)395 796 y(for)j(\()p FG(k)29
b FH(=)24 b(1)p FG(;)15 b(:)g(:)g(:)j(;)d(N)10 b Fw(\))634
969 y([Compute)46 b FD(r)1107 984 y FB(k)1149 969 y FG(;)63
b FD(m)1325 984 y FB(k)1367 969 y Fw(])191 b(Equations)45
b(\(3.26\),)h(\(3.22\))634 1141 y([Compute)g FD(A)1143
1156 y FB(k)1185 1141 y FG(;)63 b FD(C)1349 1156 y FB(k)1392
1141 y Fw(])190 b(Equations)46 b(\(3.36\),)f(\(3.33\))395
1314 y(end)i(for)395 1547 y(/*)h(compute)d(parameters)g(that)i(depend)f
(on)h(the)g(noisy)g(element)e(*/)j(for)f(\()p FG(k)28
b FH(=)d(1)p FG(;)15 b(:)g(:)g(:)i(;)e(N)10 b Fw(\))634
1720 y(for)47 b(\()p FG(i)25 b FH(=)g(1)p FG(;)15 b(:)g(:)g(:)i(;)e(N)
1345 1734 y FB(s)1383 1720 y Fw(\))873 1893 y([Solve)46
b(for)1403 1892 y FH(\024)1398 1893 y FD(x)1453 1908
y FB(k)r(;i)1587 1893 y Fw(])191 b(Equations)45 b(\(5.83\),)h(\(5.82\))
894 2050 y FH(\023)873 2073 y FG(D)948 2088 y FB(k)r(;i)1060
2073 y FH(=)24 b FD(d)1213 2040 y FB(t)1213 2099 y(k)r(;i)1305
2072 y FH(\024)1300 2073 y FD(x)1355 2088 y FB(k)r(;i)1632
2073 y Fw(Equation)46 b(\(5.96\))873 2251 y FG(C)938
2266 y FB(in;k)r(;i)1136 2251 y FH(=)25 b Fz(\000)p FD(c)1349
2218 y FB(t)1349 2278 y(in;k)r(;i)1526 2250 y FH(\024)1522
2251 y FD(x)1577 2266 y FB(k)r(;i)1663 2251 y Fw(])191
b(Equation)45 b(\(5.101\))634 2430 y(end)i(for)395 2603
y(end)g(for)g(/*)g(Frequency)f(dependent)f(computations)f(*/)395
2776 y(for)j(\()p FG(!)691 2790 y FA(0)778 2776 y Fw(=)g
FG(!)930 2790 y FB(star)r(t)1137 2776 y Fw(to)g FG(!)1337
2790 y FB(stop)1468 2776 y Fw(\))h(do)634 2949 y([Compute)e
FD(F)1130 2963 y FB(N)1197 2949 y FH(\()p FG(!)1289 2963
y FA(0)1328 2949 y FH(\))p Fw(])191 b(Equation)46 b(\(3.43\))634
3067 y(for)h(\()p FG(k)k Fw(=)c FG(N)58 b Fw(to)47 b
FH(2)p Fw(\))h(do)873 3240 y([Compute)d FD(F)1368 3255
y FB(k)r Fv(\000)p FA(1)1501 3240 y FH(\()p FG(!)1593
3254 y FA(0)1632 3240 y FH(\))j Fw(from)f FD(F)2020 3255
y FB(k)2062 3240 y FH(\()p FG(!)2154 3254 y FA(0)2194
3240 y FH(\))p Fw(])191 b(Equation)45 b(\(3.48\))634
3413 y(end)i(for)634 3586 y(for)g(\()p FG(i)25 b FH(=)g(1)p
FG(;)15 b(:)g(:)g(:)i(;)e(N)1345 3600 y FB(s)1383 3586
y Fw(\))873 3759 y([Compute)45 b FG(S)1358 3773 y FB(y)1399
3759 y FH(\()p FG(!)1491 3773 y FA(0)1531 3759 y FH(\))j
Fw(using)e(\(5.91\))g(for)h(white)g(noise)f(sources])873
3932 y([Compute)f FG(S)1358 3946 y FB(y)1399 3932 y FH(\()p
FG(!)1491 3946 y FA(0)1531 3932 y FH(\))j Fw(using)e(\(5.93\),)g
(\(5.92\))g(and)h(\(5.63\))f(for)h(1/f)g(noise)f(sources])634
4105 y(end)h(for)395 4278 y(end)g(for)536 4578 y FH(It)e(is)f(imp)s
(ortan)m(t)g(to)i(note,)j(that)d(the)f(only)f(w)m(ork)h(required)e(for)
i(an)g(additional)e(noisy)h(ele-)300 4804 y(men)m(t)33
b(is)e(an)i(addtional)e(bakw)m(ard/forw)m(ard)h(substitution)e(to)j
(compute)2876 4803 y(\024)2872 4804 y FD(x)2927 4819
y FB(k)3002 4804 y FH(and)f(additional)e(v)m(ecotor)300
5030 y(m)m(ultiplications)i(to)k(compute)1434 5007 y(\023)1413
5030 y FG(D)1488 5045 y FB(k)1566 5030 y FH(and)e FG(C)1812
5045 y FB(in;k)1942 5030 y FH(.)54 b(This)33 b(is)i(m)m(uc)m(h)g(less)f
(w)m(ork)h(than)g(ev)-5 b(aluating)35 b(matrix)300 5256
y(exp)s(onen)m(tials)29 b(and)h(solving)f(bilateral)g(matrix)h
(equations.)p eop
%%Page: 136 149
136 148 bop 3764 -200 a FH(136)300 99 y FL(5.9)135 b(Conclusion)300
414 y FH(In)26 b(this)f(c)m(hapter,)j(a)f(general)f(metho)s(d)g(has)g
(b)s(een)g(presen)m(ted)g(for)g(determining)f(the)h(output)g(noise)g
(PSD)300 640 y(of)37 b(ideal)e(SCN's)g(and)h(it)g(has)g(b)s(een)g(sho)m
(wn)f(that)i(the)g(results)e(can)i(b)s(e)e(applied)g(to)i(real)f(SCN's)
f(that)300 866 y(satisfy)c(the)g(fast)g(c)m(harge)i(transfer)d
(assumption.)42 b(The)31 b(task)g(for)g(computing)g(the)g(output)g
(noise)f(PSD)300 1092 y(has)24 b(b)s(een)f(simpli\014ed)d(to)k(ev)-5
b(aluating)24 b(closed-form)f(expressions)g(for)g(b)s(oth)g(white)g
(and)h(1)p FG(=f)34 b FH(input)22 b(noise)300 1318 y(input.)46
b(There)32 b(is)g(no)g(need)h(to)g(compute)g(eigen)m(v)-5
b(alues,)34 b(matrix)e(exp)s(onen)m(tials,)g(or)h(to)g(solv)m(e)g
(bilateral)300 1543 y(matrix)40 b(equations.)72 b(E\016cien)m(t)41
b(algorithm)f(has)g(b)s(een)g(dev)m(elop)s(ed)g(for)h(the)g(case)h(of)f
(m)m(ultiple)e(noise)300 1769 y(sources.)f(Noise)24 b(sources)f
(considered)g(w)m(ere)h(MOS)f(switc)m(hes)g(with)f(\014nite)g
FF(on)p FH(-resistances)i(and)e(opamps)300 1995 y(with)i
(input-referred)f(noise)h(PSD's.)39 b(The)25 b(algorithm)f(has)h(b)s
(een)f(implemen)m(ted)g(in)g(SWITCAP3.)38 b(The)300 2221
y(theoretical)e(results)e(ha)m(v)m(e)j(b)s(een)e(con\014rmed)g(b)m(y)g
(measuremen)m(ts)h(using)e(circuits)g(that)i(are)g(carefully)300
2447 y(breadb)s(oarded)31 b(to)i(mak)m(e)h(fair)d(comparisons.)47
b(External)32 b(noise)g(generators)h(w)m(ere)g(used)f(to)h(test)h(b)s
(oth)300 2673 y(white)29 b(and)h(1)p FG(=f)41 b FH(noise)30
b(cases.)p eop
%%Page: 137 150
137 149 bop 3764 -200 a FH(137)300 721 y FM(Chapter)65
b(6)300 1095 y(Conclusions)300 1653 y FH(The)29 b(theme)h(of)f(this)g
(thesis)f(has)h(b)s(een)g(to)h(pro)m(vide)f(circuit)f(designers)g(with)
g(a)i(to)s(ol)f(that)h(allo)m(ws)f(them)300 1878 y(to)24
b(trade)g(o\013)g(some)g(detail)e(of)i(the)f(sim)m(ulation)f(of)h(SI)g
(or)h(SC)e(net)m(w)m(orks,)k(while)21 b(dramatically)h(increasing)300
2104 y(the)28 b(sim)m(ulation)e(sp)s(eed.)39 b(In)27
b(particular,)g(the)g(appro)m(ximations)g(that)h(w)m(ere)g(made)g(are)g
(that)h(the)f(clo)s(c)m(ks)300 2330 y(c)m(hange)j(their)e(state)j
(instan)m(taneously)d(and)h(that)g(the)h(net)m(w)m(ork)f(reac)m(hes)i
(its)d(settling)h(state)h(instan)m(tly)300 2556 y(after)e(eac)m(h)g
(clo)s(c)m(k)g(transition.)38 b(Under)28 b(suc)m(h)g(appro)m
(ximations,)g(it)f(is)h(p)s(ossible)e(to)j(mo)s(del)e(the)h(net)m(w)m
(ork)300 2782 y(with)k(algebraic)h(equations)g(rather)h(than)f
(di\013eren)m(tial-algebraic)f(equations)h(\(D)m(AE's\),)j(whic)m(h)d
(leads)300 3008 y(to)e(e\016cien)m(t)g(time-)f(and)g(frequency-domain)f
(analyses.)536 3233 y(The)j(\014rst)g(con)m(tribution)g(of)h(this)e
(thesis)h(is)g(the)h(Charge)g(Surface/)f(Mo)s(di\014ed)g(No)s(dal)g
(Analysis)300 3459 y(\(CS/MNA\))44 b(whic)m(h)f(can)g(b)s(e)g(used)g
(to)h(mo)s(del)f(a)h(switc)m(hed)e(net)m(w)m(ork)j(under)d(the)h
(instan)m(t)h(settling)300 3685 y(appro)m(ximation.)68
b(The)39 b(analyses)h(do)s(es)f(not)h(require)f(eliminating)e
(\\resistiv)m(e")j(elemen)m(ts)g(from)g(the)300 3911
y(net)m(w)m(ork,)35 b(therefore,)g(b)s(oth)d(SC)g(and)h(SI)f(net)m(w)m
(orks)i(ma)m(y)g(b)s(e)e(sim)m(ulated.)48 b(In)33 b(fact,)i(the)e(SC)f
(net)m(w)m(orks)300 4137 y(can)f(b)s(e)e(sim)m(ulated)h(in)f(greater)i
(detail)f(than)g(with)f(the)h(form)m(ulation)g(strictly)f(for)h(SCN's.)
536 4363 y(The)23 b(instan)m(t)h(settling)f(appro)m(ximation)f(is)h
(made)h(b)m(y)f(appro)m(ximating)g(the)g(state)i(of)f(the)g(net)m(w)m
(ork)300 4588 y(within)i(the)i(switc)m(hing)e(in)m(terv)-5
b(al)28 b(b)m(y)g(the)g(settling)f(state.)42 b(The)27
b(settling)h(state)h(is)e(de\014ned)g(as)h(the)h(state)300
4814 y(where)j(all)f(capacitor)i(curren)m(ts)f(are)h(zero,)h(and)e(can)
g(b)s(e)g(computed)g(using)f(the)i(CS/MNA)f(equations)300
5040 y(dev)m(elop)s(ed)e(in)f(Chapter)h(2.)536 5266 y(An)i(imp)s(ortan)
m(t)f(prop)s(ert)m(y)h(of)g(the)g(CS/MNA)g(net)m(w)m(ork)h(equations)f
(is)f(that)i(they)f(are)h(compat-)p eop
%%Page: 138 151
138 150 bop 3764 -200 a FH(138)300 99 y(ible)32 b(with)h(the)g(same)i
(device)e(mo)s(dels)g(used)g(in)f(a)i(SPICE-lik)m(e)e(sim)m(ulator.)50
b(Hence,)36 b(it)d(is)g(p)s(ossible)e(to)300 324 y(incorp)s(orate)g
(existing)g(device)h(mo)s(dels)f(for)g(MOS)h(transistors,)f(whic)m(h)g
(are)h(essen)m(tial)g(elemen)m(ts)g(in)f(SI)300 550 y(net)m(w)m(orks)25
b(and)f(also)h(app)s(ear)f(in)f(the)i(opamp)f(implemen)m(tations)g(of)g
(SC)g(net)m(w)m(orks.)40 b(The)24 b(MOS)g(transis-)300
776 y(tors)j(are)g(also)g(used)g(as)g(switc)m(hes.)39
b(It)27 b(w)m(as)g(sho)m(wn)g(that,)h(under)e(the)h(instan)m(t)f
(settling)h(appro)m(ximation,)300 1002 y(the)37 b(c)m(harge)i(leak)-5
b(age)38 b(e\013ect)h(of)e(an)g(MOS)g(transistor)f(cannot)i(b)s(e)f
(sim)m(ulated)f(when)g(it)h(is)f(used)g(as)i(a)300 1228
y(switc)m(h)26 b(that)h(m)m(ust)g(hold)e(a)i(c)m(harge)h(on)f(a)g
(capacitor.)40 b(The)26 b(c)m(hannel)g(c)m(harge)i(redistribution)23
b(e\013ect)29 b(can)300 1453 y(b)s(e)d(sim)m(ulated)f(under)g(the)i
(appro)m(ximation)f(that)h(the)f(clo)s(c)m(k)h(transitions)e(are)i
(instan)m(taneous,)h(and)e(the)300 1679 y(clo)s(c)m(k)31
b(feedthrough)f(e\013ect)h(can)g(b)s(e)f(sim)m(ulated)f(completely)-8
b(.)536 1905 y(In)33 b(Chapter)g(2,)h(the)g(non-linear)e(algebraic)h
(equations)g(obtained)f(from)h(the)h(CS/MNA)f(under)300
2131 y(the)22 b(instan)m(t)f(settling)h(appro)m(ximation)e(w)m(ere)i
(applied)e(to)j(dev)m(elop)e(e\016cien)m(t)h(time-domain)f(form)m
(ulation)300 2357 y(whic)m(h)28 b(requires)g(only)g(one)i(Newton)g
(iteration)e(p)s(er)h(switc)m(hing)e(in)m(terv)-5 b(al)29
b(when)f(the)i(input)d(is)h(sampled)300 2583 y(and)41
b(held.)71 b(It)42 b(w)m(as)f(sho)m(wn)g(in)f(Chapter)h(4,)j(that)e
(the)f(time-domain)f(sim)m(ulation)g(of)h(a)h(non-linear)300
2808 y(net)m(w)m(ork)h(in)f(SWITCAP3)g(is)f(10)i(or)g(more)g(times)f
(faster)h(than)f(the)h(con)m(tin)m(uous-time)f(sim)m(ulation)300
3034 y(in)c(HSPICE)g({)h(dep)s(ending)e(on)i(the)g(n)m(umerical)f(in)m
(tegration)h(time)g(step)g(tak)m(en)h(in)e(the)h(con)m(tin)m(uous)300
3260 y(time)27 b(algorithm.)39 b(The)28 b(transien)m(t)f(sim)m(ulation)
f(w)m(as)i(demonstrated)g(on)f(a)h(SI)f(sigma-delta)h(mo)s(dulator)300
3486 y(where)d(the)h(latc)m(hed)g(comparators)g(and)f(the)h(logic)f
(elemen)m(ts)h(w)m(ere)h(ideal,)e(while)f(the)i(D/A)g(con)m(v)m
(erters,)300 3712 y(SI)36 b(in)m(tegrators)h(and)f(switc)m(hes)g(w)m
(ere)h(describ)s(ed)d(on)i(the)h(transistor)f(lev)m(el.)58
b(The)36 b(analysis)f(w)m(as)i(also)300 3937 y(demonstrated)c(on)f(an)g
(SI)g(\014lter)g(where)g(it)g(w)m(as)h(used)e(to)j(v)m(erify)d(the)i
(small-signal)d(transfer)i(function)300 4163 y(and)e(to)h(sim)m(ulate)e
(the)i(distortion)e(for)h(the)h(case)g(of)g(a)f(large)h(signal)e
(input.)536 4389 y(It)j(is)f(imp)s(ortan)m(t)g(to)h(k)m(eep)h(in)d
(mind,)g(that)j(the)f(transien)m(t)f(sim)m(ulation)f(presen)m(ted)h
(here)h(is)f(only)300 4615 y(a)k(go)s(o)s(d)g(appro)m(ximation)f(when)g
(the)h(\014nite)f(settling)h(e\013ects)h(are)g(small.)53
b(In)34 b(fact,)j(it)e(is)f(a)i(go)s(o)s(d)e(idea)300
4841 y(to)c(p)s(erform)d(a)j(short)e(sim)m(ulation)g(using)f(a)i(con)m
(tin)m(uous-time)g(sim)m(ulator)f(to)i(v)m(erify)e(that)i(the)f(net)m
(w)m(ork)300 5067 y(settles)i(fast)g(within)c(eac)m(h)32
b(switc)m(hing)d(in)m(terv)-5 b(al.)536 5292 y(In)44
b(Chapter)h(3,)k(the)c(algebraic)f(CS/MNA)h(equations)g(w)m(ere)g
(applied)e(to)j(dev)m(elop)e(e\016cien)m(t)p eop
%%Page: 139 152
139 151 bop 3764 -200 a FH(139)300 99 y(frequency-domain)30
b(form)m(ulation)g(for)h(SC)f(and)g(SI)h(\014lters)f(under)f(the)i
(small-signal)e(assumption)h(and)300 324 y(the)h(instan)m(t)g(settling)
f(appro)m(ximation.)41 b(Again,)31 b(it)f(is)g(an)h(adv)-5
b(an)m(tage)32 b(that)g(CS/MNA)f(equations)g(are)300
550 y(compatible)i(with)g(the)h(existing)e(device)i(mo)s(dels.)50
b(In)33 b(this)g(case,)j(it)d(allo)m(ws)g(the)h(designer)f(to)h(sp)s
(ecify)300 776 y(the)d(net)m(w)m(ork)h(at)g(the)g(transistor)e(lev)m
(el)h(and)g(the)g(small-signal)e(parameters)j(are)f(then)g
(automatically)300 1002 y(extracted)44 b(and)e(the)h(frequency)f(resp)s
(onse)g(computed.)77 b(The)43 b(second)f(order)h(e\013ects)h(of)f(the)f
(MOS)300 1228 y(transistor)34 b(suc)m(h)g(as)i(the)f(clo)s(c)m(k)g
(feedthrough)f(and)g(c)m(hannel)g(c)m(harge)i(redistribution)c(only)h
(e\013ect)k(the)300 1453 y(bias)25 b(solution)f(and)h(consequen)m(tly)h
(the)g(small-signal)d(parameters,)k(while)d(the)i(e\013ects)h(suc)m(h)f
(transistor)300 1679 y(mismatc)m(h,)38 b(\014nite)d(output)h(imp)s
(edance)f(and)g(parasitic)g(capacitances)j(in)d(the)h(signal)f(path)h
(are)h(also)300 1905 y(tak)m(en)31 b(in)m(to)g(accoun)m(t)h(in)d(the)h
(actual)h(frequency)f(resp)s(onse)f(computation.)536
2131 y(The)36 b(frequency-domain)f(sim)m(ulation)f(w)m(as)i
(demonstrated)h(on)f(a)g(SI)g(\014lter)f(in)g(Chapter)g(4.)59
b(A)300 2357 y(fast)36 b(transien)m(t)f(sim)m(ulation)e(of)j(the)f
(\014lter,)h(with)e(small-signal)f(inputs)g(set)j(to)g(zero,)i(w)m(as)d
(p)s(erformed)300 2583 y(un)m(til)e(the)i(resp)s(onse)f(to)i(the)f
(bias)f(inputs)f(reac)m(hed)i(a)h(steady-state.)56 b(The)34
b(frequency-domain)g(algo-)300 2808 y(rithm)f(then)h(used)g(the)h(bias)
f(solution)f(to)i(obtain)g(the)f(small-signal)f(parameters)i(and)f
(compute)h(the)300 3034 y(frequency)f(resp)s(onse.)53
b(The)34 b(time)h(for)f(the)h(computation)g(of)g(the)g(frequency)f
(resp)s(onse)g(is)f(negligible)300 3260 y(compared)k(to)h(the)g(time)f
(required)e(for)j(obtaining)e(the)h(bias)f(p)s(oin)m(ts.)61
b(Ho)m(w)m(ev)m(er,)41 b(the)d(total)g(time)f(of)300
3486 y(computing)k(the)i(bias)e(p)s(oin)m(ts)g(and)h(the)g(frequency)g
(resp)s(onse)f(is)g(still)f(m)m(uc)m(h)j(less)e(than)h(using)f(the)300
3712 y(transien)m(t/FFT)36 b(metho)s(d.)57 b(The)35 b(frequency)g(resp)
s(onse)g(computed)h(b)m(y)g(SWITCAP3)f(w)m(as)h(sho)m(wn)f(to)300
3937 y(b)s(e)26 b(a)h(close)f(appro)m(ximation)g(to)h(the)f(resp)s
(onse)g(computed)g(through)g(a)h(transien)m(t/FFT)g(metho)s(d)e(using)
300 4163 y(HSPICE.)536 4389 y(Although,)k(b)s(oth)g(the)h(time-)f(and)g
(frequency-domain)g(form)m(ulations)f(w)m(ere)i(demonstrated)f(us-)300
4615 y(ing)38 b(non-linear)f(circuits,)j(it)e(is)g(imp)s(ortan)m(t)g
(to)i(k)m(eep)g(in)d(mind)g(that)j(if)d(the)j(net)m(w)m(ork)f(elemen)m
(ts)h(are)300 4841 y(linear,)35 b(the)h(sim)m(ulation)d(sp)s(eed)i(is)f
(orders)h(of)g(magnitude)g(greater.)57 b(F)-8 b(or)36
b(the)g(transien)m(t)f(sim)m(ulation,)300 5067 y(the)f(Newton)h
(iteration)e(reduces)h(to)g(a)h(single)d(LU)i(decomp)s(osition)f(and)g
(for)h(the)g(frequency-domain)300 5292 y(sim)m(ulation)c(there)j(is)e
(no)h(need)g(to)h(obtain)e(the)h(bias)g(p)s(oin)m(ts.)44
b(Sim)m(ulation)30 b(with)h(linear)g(elemen)m(ts)h(has)p
eop
%%Page: 140 153
140 152 bop 3764 -200 a FH(140)300 99 y(pro)m(v)m(en)28
b(to)h(b)s(e)f(useful)e(for)i(SCN's)g(and)f(with)g(the)h(form)m
(ulation)f(presen)m(ted)h(here)g(it)g(is)f(no)m(w)h(p)s(ossible)e(to)
300 324 y(p)s(erform)j(similar)f(sim)m(ulation)g(for)i(SI)g(net)m(w)m
(orks.)536 550 y(The)41 b(second)h(ma)5 b(jor)42 b(con)m(tribution)e
(of)i(this)e(thesis)h(is)g(the)h(noise)f(analysis)f(for)h(ideal)g
(SCN's)300 776 y(presen)m(ted)i(in)e(Chapter)h(5.)78
b(Just)42 b(lik)m(e)g(the)g(time-)h(and)f(frequency-domain)f(form)m
(ulations)h(in)f(this)300 1002 y(thesis,)k(the)e(noise)f(form)m
(ulation)f(a)m(v)m(oids)i(using)e(di\013eren)m(tial)g(equations)i(for)f
(net)m(w)m(ork)i(description.)300 1228 y(The)36 b(form)m(ulation)g(is)f
(based)i(on)f(the)h(concept)h(that)f(if)f(the)h(losses)f(of)h(a)g(real)
g(SCN)f(are)h(approac)m(hed)300 1453 y(to)30 b(zero,)h(the)f(output)f
(p)s(o)m(w)m(er)g(sp)s(ectral)g(densit)m(y)g(\(PSD\))h(approac)m(hes)g
(a)g(\014nite)e(v)-5 b(alue.)40 b(By)30 b(p)s(erforming)300
1679 y(the)45 b(limit)d(computation)i(separately)h(for)f(the)h(loss)e
(corresp)s(onding)g(to)i(eac)m(h)h(noisy)d(elemen)m(t,)49
b(the)300 1905 y(resulting)33 b(expressions)h(for)h(the)g(output)g
(noise)f(PSD)h(are)h(in)e(terms)h(of)g(parameters)g(of)h(ideal)e(SCN's)
300 2131 y(and)f(in)f(terms)h(of)h(parameters)f(of)h(the)f(noise)g
(sources.)50 b(Unlik)m(e)32 b(in)g(other)i(form)m(ulations,)f(there)h
(is)e(no)300 2357 y(need)k(to)h(compute)f(eigen)m(v)-5
b(alues,)38 b(matrix)e(exp)s(onen)m(tials,)g(or)g(to)h(solv)m(e)g
(bilateral)d(matrix)i(equations.)300 2583 y(Although,)29
b(the)h(expressions)e(consider)h(only)f(one)i(noisy)f(elemen)m(t,)h
(tec)m(hniques)g(are)g(presen)m(ted)f(whic)m(h)300 2808
y(lead)k(to)i(e\016cien)m(t)f(algorithm)f(for)g(computing)g(output)h
(noise)f(PSD)g(due)h(to)g(m)m(ultiple)d(noise)j(sources.)300
3034 y(Eac)m(h)28 b(additional)e(noise)g(source)i(requires)e(only)h
(one)g(extra)i(bac)m(kw)m(ard/forw)m(ard)f(substitution)d(\(of)j(the)
300 3260 y(LU)i(decomp)s(osition\),)g(and)g(sev)m(eral)g(v)m(ector)i
(dot-pro)s(duct)e(computations.)536 3486 y(F)-8 b(orm)m(ulas)45
b(ha)m(v)m(e)h(b)s(een)e(deriv)m(ed)g(for)g(the)h(cases)g(of)g(white)f
(and)g(1)p FG(=f)55 b FH(noise)44 b(inputs.)81 b(It)45
b(has)300 3712 y(also)40 b(b)s(een)g(sho)m(wn)g(that)h(the)f(results)f
(are)i(a)g(go)s(o)s(d)f(appro)m(ximation)f(to)i(the)g(output)f(noise)g
(PSD)g(of)300 3937 y(real)31 b(SCN's)f(that)i(satisfy)f(the)g(fast)h(c)
m(harge)g(transfer)f(assumption.)42 b(Noise)31 b(sources)g(considered)f
(w)m(ere)300 4163 y(MOS)f(switc)m(hes)h(with)f(\014nite)g
FF(on)p FH(-resistances)g(that)i(pro)s(duce)e(white)g(noise)g(and)g
(opamps)h(with)f(input-)300 4389 y(referred)37 b(noise)h(PSD)g
(consisting)f(of)h(b)s(oth)g(white)f(and)h(1)p FG(=f)48
b FH(noise.)64 b(The)37 b(theoretical)i(results)e(ha)m(v)m(e)300
4615 y(b)s(een)g(con\014rmed)g(b)m(y)h(measuremen)m(ts)g(using)f
(circuits)f(that)j(are)f(carefully)f(breadb)s(oarded)f(to)j(mak)m(e)300
4841 y(fair)f(comparisons.)65 b(External)38 b(noise)g(generators)i(w)m
(ere)f(used)f(to)h(test)h(b)s(oth)e(white)g(and)g(1)p
FG(=f)49 b FH(noise)300 5067 y(cases.)p eop
%%Page: 141 154
141 153 bop 300 721 a FM(Bibliograph)-5 b(y)345 1223
y FH([1])47 b(Y.)31 b(P)-8 b(.)31 b(Tsividis)c(and)k(P)-8
b(.)31 b(An)m(tognetti,)h(editors,)41 b FC(Design)32
b(of)i(MOS)e(VLSI)g(Cir)-5 b(cuits)34 b(for)f(T)-7 b(ele)i(c)g(om-)487
1392 y(munic)g(ations)p FH(,)42 b(Pren)m(tice-Hall,)30
b(Englew)m(o)s(o)s(d)g(Cli\013s,)e(NJ,)j(1985.)345 1636
y([2])47 b(R.)30 b(Gregorian)g(and)f(G.C.)h(T)-8 b(emes,)41
b FC(A)n(nalo)-5 b(g)33 b(MOS)e(Inte)-5 b(gr)g(ate)g(d)34
b(Cir)-5 b(cuits)33 b(for)g(Signal)f(Pr)-5 b(o)g(c)g(essing)p
FH(,)487 1805 y(John)29 b(Wiley)h(and)g(Sons,)g(New)g(Y)-8
b(ork,)31 b(1986.)345 2050 y([3])47 b(P)-8 b(.)44 b(E.)g(Allen)e(and)h
(E.)g(Sanc)m(hez-Sinencio,)83 b FC(Switche)-5 b(d)46
b(Cap)-5 b(acitor)47 b(Cir)-5 b(cuits)p FH(,)84 b(V)-8
b(an)44 b(Nostrand)487 2219 y(Reinhold,)28 b(New)j(Y)-8
b(ork,)31 b(1984.)345 2463 y([4])47 b(B.)27 b(J.)g(Hostic)m(k)-5
b(a,)29 b(W.)e(Bro)s(c)m(kherde,)h(U.Kleine,)f(and)f(R.)h(Sc)m(h)m(w)m
(eer,)37 b(\\Design)27 b(of)g(nonlinear)d(analog)487
2632 y(switc)m(hed-capacitor)j(circuits)f(using)f(building)e(blo)s(c)m
(ks,")36 b FC(IEEE)28 b(T)-7 b(r)i(ansactions)32 b(on)e(Cir)-5
b(cuits)30 b(and)487 2802 y(Systems)p FH(,)h(v)m(ol.)g(CAS-31,)g(no.)g
(4,)g(pp.345-368,)i(April)28 b(1984.)345 3046 y([5])47
b(S.)38 b(J.)h(Doub)s(ert,)i(D.)f(V)-8 b(allancourt,)41
b(and)d(Y.)h(Tsividis,)65 b(\\Curren)m(t)39 b(copier)f(cells,")68
b FC(Ele)-5 b(ctr)g(onics)487 3215 y(L)g(etters)p FH(,)31
b(v)m(ol.)g(24,)h(no.)e(25,)i(pp.)d(1560{1562,)35 b(Decem)m(b)s(er)c
(1988.)345 3459 y([6])47 b(D.)30 b(V)-8 b(allancourt)30
b(and)f(Y.)i(P)-8 b(.)30 b(Tsividis,)36 b(\\Sampled-curren)m(t)29
b(circuits,")39 b(In)29 b FC(IEEE)j(International)487
3629 y(Symp)-5 b(osium)34 b(on)g(Cir)-5 b(cuits)33 b(and)g(Systems)p
FH(,)f(pages)f(1592{1595,)j(1989.)345 3873 y([7])47 b(J.)26
b(B.)g(Hughes,)h(N.)f(C.)g(Bird,)g(and)f(I.)h(C.)f(Macb)s(eth,)35
b(\\Switc)m(hed)25 b(curren)m(ts)h({)g(a)g(new)g(tec)m(hnique)f(for)487
4042 y(analog)g(sampled-data)f(signal)g(pro)s(cessing,")31
b(In)24 b FC(IEEE)j(International)i(Symp)-5 b(osium)30
b(on)e(Cir)-5 b(cuits)487 4211 y(and)33 b(Systems)p FH(,)f(pages)f
(1584{1587,)k(1989.)345 4455 y([8])47 b(J.)26 b(B.)h(Hughes,)g(I.)f(C.)
h(Macb)s(eth,)g(and)f(D.)h(M.)g(P)m(attullo,)34 b(\\Second)27
b(generation)g(switc)m(hed)e(curren)m(t)487 4625 y(signal)k(pro)s
(cessing,")39 b(In)30 b FC(IEEE)h(International)k(Symp)-5
b(osium)35 b(on)e(Cir)-5 b(cuits)32 b(and)i(Systems)p
FH(,)d(pages)487 4794 y(2805{2808,)k(1989.)345 5038 y([9])47
b(J.)33 b(B.)h(Hughes)f(and)g(K.)g(W.)h(Moulding,)49
b(\\S)2048 5005 y FA(2)2087 5038 y FH(I:)33 b(a)h(t)m(w)m(o-step)h
(approac)m(h)f(to)g(switc)m(hed)f(curren)m(ts,")487 5208
y(In)d FC(IEEE)h(International)k(Symp)-5 b(osium)35 b(on)e(Cir)-5
b(cuits)33 b(and)g(Systems)p FH(,)f(pages)f(1235{1238,)j(1993.)2032
5656 y(141)p eop
%%Page: 142 155
142 154 bop 3764 -200 a FH(142)300 99 y([10])47 b(G.)34
b(C.)f(T)-8 b(emes,)34 b(P)-8 b(.)34 b(Dev)-5 b(al,)35
b(and)e(V.)g(V)-8 b(alencic,)50 b(\\Sc)34 b(circuits:)45
b(The)33 b(state)h(of)g(the)f(art)h(compared)487 268
y(to)f(SI)e(tec)m(hniques,")47 b(In)32 b FC(IEEE)h(International)k
(Symp)-5 b(osium)36 b(on)f(Cir)-5 b(cuits)35 b(and)g(Systems)p
FH(,)f(pages)487 437 y(1231{1234,)h(1993.)300 680 y([11])47
b(L.)d(W.)g(Nagel,)85 b FC(SPICE2:)67 b(A)45 b(c)-5 b(omputer)46
b(Pr)-5 b(o)g(gr)g(am)48 b(to)d(Simulate)h(Semic)-5 b(onductor)47
b(Cir)-5 b(cuits)p FH(,)487 850 y(Electronics)30 b(Researc)m(h)h(Lab.)f
(Rep)s(ort,)h(ERL-M520,)h(Univ.)d(of)i(Calif.,)e(Berk)m(eley)-8
b(,)32 b(Ma)m(y)f(1975.)300 1092 y([12])47 b(L.)31 b(O.)h(Ch)m(ua)f
(and)g(P)-8 b(.)32 b(M.)g(Lin,)43 b FC(Computer-aide)-5
b(d)36 b(analysis)g(of)e(ele)-5 b(ctr)g(onic)34 b(cir)-5
b(cuits:)45 b(algorithms)487 1262 y(and)33 b(c)-5 b(omputational)36
b(te)-5 b(chniques)p FH(,)41 b(Pren)m(tice-Hall,)30 b(1975.)300
1505 y([13])47 b(J.)39 b(Vlac)m(h,)i(J.)e(M.)g(W)-8 b(o)5
b(jciec)m(ho)m(wski,)43 b(and)38 b(A.)h(Opal,)67 b(\\Analysis)38
b(of)h(nonlinear)e(net)m(w)m(orks)i(with)487 1674 y(inconsisten)m(t)24
b(initial)f(conditions,")33 b FC(IEEE)27 b(T)-7 b(r)i(ansactions)31
b(on)d(Cir)-5 b(cuits)29 b(and)g(Systems{I)p FH(,)e(v)m(ol.)f(42,)487
1844 y(no.)k(4,)h(pp.)f(195{200,)k(April)28 b(1995.)300
2086 y([14])47 b(M.)29 b(Koksal)e(and)h(Y.)h(T)-8 b(ok)j(ad,)37
b(\\Determination)29 b(of)f(initial)e(conditions)g(in)h(activ)m(e)j
(RLC)d(net)m(w)m(orks)487 2256 y(\\,)41 b FC(Cir)-5 b(cuit)33
b(The)-5 b(ory)34 b(and)f(Applic)-5 b(ations)p FH(,)33
b(v)m(ol.)e(6,)g(pp.)e(5{11,)k(1978.)300 2499 y([15])47
b(M.)42 b(T)-8 b(anak)j(a,)77 b(\\Form)m(ulations)41
b(for)h(switc)m(hing)e(transformation)h(matrices)g(of)h(large)g(switc)m
(hed)487 2668 y(net)m(w)m(orks,")56 b(In)35 b FC(IEEE)h(International)j
(Symp)-5 b(osium)39 b(on)e(Cir)-5 b(cuits)37 b(and)h(Systems)p
FH(,)f(pages)f(1487{)487 2838 y(1490,)c(1988.)300 3080
y([16])47 b(A.)42 b(Opal)f(and)g(J.)h(Vlac)m(h,)79 b(\\Consisten)m(t)42
b(initial)d(conditions)i(of)h(linear)e(switc)m(hed)i(net)m(w)m(orks,")
487 3250 y FC(IEEE)31 b(T)-7 b(r)i(ansactions)36 b(on)d(Cir)-5
b(cuits)33 b(and)g(Systems)p FH(,)f(v)m(ol.)e(37,)i(no.)e(3,)h(pp.)f
(364{372,)k(Marc)m(h)d(1990.)300 3493 y([17])47 b(R.)38
b(Sc)m(haumann,)h(M.)g(S.)e(Ghausi,)i(and)f(K.)f(R.)i(Lak)m(er,)65
b FC(Design)39 b(of)h(A)n(nalo)-5 b(g)40 b(Filters:)57
b(Passive,)487 3662 y(A)-5 b(ctive)32 b(R)n(C,)g(and)i(Switche)-5
b(d)34 b(Cap)-5 b(acitor)p FH(,)43 b(Pren)m(tice)31 b(Hall,)e(Englew)m
(o)s(o)s(d)h(Cli\013s,)e(NJ.,)j(1990.)300 3905 y([18])47
b(A.)30 b(C.)g(M.)h(de)f(Queiroz)f(and)h(P)-8 b(.)31
b(R.)f(M.)h(Pinheiro,)38 b(\\Exact)31 b(design)e(of)i(switc)m
(hed-curren)m(t)e(ladder)487 4074 y(\014lters,")39 b
FC(IEEE)31 b(International)j(Symp)-5 b(osium)35 b(on)d(Cir)-5
b(cuits)33 b(and)g(Systems)p FH(,)e(San)e(Diago,)i(CA,)f(pp.)487
4244 y(855{858,)k(Ma)m(y)d(1992.)300 4487 y([19])47 b(J.)27
b(Sc)m(hec)m(h)m(tman,)j(A.)e(C.)f(M.)h(de)f(Queiroz,)h(and)f(L.)h(P)-8
b(.)28 b(Caloba,)36 b(\\Switc)m(hed-curren)m(t)27 b(\014lters)f(using)
487 4656 y(comp)s(onen)m(t)k(sim)m(ulation,")38 b FC(IEEE)30
b(International)35 b(Symp)-5 b(osium)33 b(on)g(Cir)-5
b(cuits)32 b(and)h(Systems)p FH(,)e(pp.)487 4826 y(569{572,)j(1994.)300
5068 y([20])47 b(M.)27 b(L.)g(Liou,)34 b(\\Exact)28 b(analysis)d(of)h
(linear)f(circuits)h(con)m(taining)g(p)s(erio)s(dically)d(op)s(erated)j
(switc)m(hes)487 5238 y(with)i(applications,")37 b FC(IEEE)30
b(T)-7 b(r)i(ansactions)34 b(on)e(Cir)-5 b(cuit)32 b(The)-5
b(ory)p FH(,)31 b(v)m(ol.)f(CT-19,)g(no.)f(2,)h(pp.)e(146{)487
5407 y(154,)k(Marc)m(h)f(1972.)p eop
%%Page: 143 156
143 155 bop 3764 -200 a FH(143)300 99 y([21])47 b(T.)40
b(Strom)g(and)g(S.)h(Signell,)71 b(\\Analysis)39 b(of)i(p)s(erio)s
(dically)c(switc)m(hed)i(linear)g(circuits,")73 b FC(IEEE)487
268 y(T)-7 b(r)i(ansactions)45 b(on)e(Cir)-5 b(cuits)43
b(and)h(Systems)p FH(,)h(v)m(ol.)c(CAS-24,)k(no.)c(10)h(,)i(pp.)d
(531{541,)47 b(Octob)s(er)487 437 y(1977.)300 670 y([22])g(E.)39
b(P)-8 b(.)39 b(Rudd)e(and)h(R.)g(Sc)m(haumann,)67 b(\\A)39
b(program)f(for)h(the)g(analysis)e(of)i(the)f(high-frequency)487
839 y(b)s(eha)m(vior)32 b(of)i(switc)m(hed-cpacitor)f(net)m(w)m(orks,")
51 b FC(IEEE)35 b(International)i(Symp)-5 b(osium)38
b(on)e(Cir)-5 b(cuits)487 1008 y(and)33 b(Systems)p FH(,)f(pp.)e
(1173{1176)k(Jun.)29 b(1985,)k(Ky)m(oto,)f(Japan.)300
1241 y([23])47 b(Y.)39 b(Murak)-5 b(ami,)69 b(\\A)39
b(metho)s(d)g(for)g(the)g(form)m(ulation)f(and)h(solution)f(of)h
(circuits)f(comp)s(osed)h(of)487 1410 y(switc)m(hes)30
b(and)f(linear)g(RLC)g(elemen)m(ts,")41 b FC(IEEE)31
b(T)-7 b(r)i(ansactions)35 b(on)e(Cir)-5 b(cuits)33 b(and)g(Systems)p
FH(,)f(v)m(ol.)487 1579 y(CAS-34,)f(no.)f(5,)i(pp.)d(496{509,)34
b(Ma)m(y)d(1987.)300 1812 y([24])47 b(D.)i(B.)g(Ribner)d(and)i(M.)h(A.)
g(Cop)s(eland,)97 b(\\Computer-aided)47 b(analysis)g(of)i(nonideal)e
(linear)487 1981 y(switc)m(hed-capacitor)j(net)m(w)m(orks)g(for)f
(high-frequency)e(applicatoins,")101 b FC(IEEE)49 b(International)487
2150 y(Symp)-5 b(osium)34 b(on)g(Cir)-5 b(cuits)33 b(and)g(Systems)p
FH(,)f(pp.)d(1169{1172)35 b(Jun.)29 b(1985,)j(Ky)m(oto,)g(Japan.)300
2383 y([25])47 b(J.)d(Rabaey)-8 b(,)49 b(J.)44 b(V)-8
b(andew)m(alle,)48 b(and)43 b(H.)i(De)g(Man,)86 b(\\On)43
b(the)i(frequency)e(dmain)g(analysis)g(of)487 2552 y(switc)m(hed)30
b(capacitor)i(net)m(w)m(orks)g(including)c(all)i(parasitics,")43
b FC(IEEE)32 b(International)k(Symp)-5 b(osium)487 2721
y(on)33 b(Cir)-5 b(cuits)33 b(and)h(Systems)p FH(,)d(pp.)f(868{871,)j
(Apr.)d(1981,)j(Chicago,)d(Illinois.)300 2954 y([26])47
b(L.)36 b(B.)g(W)-8 b(olo)m(vitz)37 b(and)f(J.)f(I.)h(Sew)m(ell,)57
b(\\General)36 b(analysis)f(of)h(large)g(linear)e(switc)m(hed)h
(capacitor)487 3123 y(net)m(w)m(orks,")42 b FC(IEE)32
b(Pr)-5 b(o)g(c)g(e)g(e)g(dings)p FH(,)32 b(v)m(ol.)f(135,)h(Pt.)f(G,)g
(no.)f(3,)h(pp.)f(119{124,)j(June)d(1988.)300 3355 y([27])47
b(A.)38 b(Opal)e(and)g(J.)i(Vlac)m(h,)63 b(\\Analysis)36
b(and)g(sensitivit)m(y)g(of)i(p)s(erio)s(dically)33 b(switc)m(hed)k
(linear)e(net-)487 3525 y(w)m(orks,")g FC(IEEE)28 b(T)-7
b(r)i(ansactions)32 b(on)d(Cir)-5 b(cuits)30 b(and)g(Systems)p
FH(,)e(v)m(ol.)f(36,)h(no.)f(4,)h(pp.)e(522{532,)k(April)487
3694 y(1989.)300 3926 y([28])47 b(M.)24 b(L.)g(Liou)f(and)h(Y.)g(L.)g
(Kuo,)31 b(\\Exact)25 b(analysis)e(of)h(switc)m(hed)f(capacitor)i
(circuits)e(with)f(arbitrary)487 4096 y(inputs,")33 b
FC(IEEE)28 b(T)-7 b(r)i(ansactions)31 b(on)e(Cir)-5 b(cuits)30
b(and)f(Systems)p FH(,)g(v)m(ol.)d(CAS-26,)i(no.)e(4,)i(pp.)e(213{223,)
487 4265 y(April)i(1979.)300 4497 y([29])47 b(Y.)33 b(Sun,)45
b(\\Direct)33 b(analysis)e(of)i(time-v)-5 b(arying)31
b(con)m(tin)m(uous)i(and)e(discrete)h(di\013erence)g(equations)487
4667 y(with)26 b(applications)g(to)i(non)m(uniformly)c(switc)m
(hed-capacitor)k(circuits,")35 b FC(IEEE)29 b(T)-7 b(r)i(ansactions)32
b(on)487 4836 y(Cir)-5 b(cuits)33 b(and)g(Systems)p FH(,)f(v)m(ol.)f
(CAS-28,)g(no.)f(2,)h(pp.)f(93{100,)j(F)-8 b(ebruary)30
b(1981.)300 5068 y([30])47 b(E.)29 b(Hok)m(enek)h(and)e(G.)h(S.)g(Mosc)
m(h)m(ytz,)40 b(\\Analysis)28 b(of)h(m)m(ultiphase)e(switc)m
(hed-capacitor)i(net)m(w)m(orks)487 5238 y(using)j(the)h(inde\014nite)e
(admittance)j(matrix,")50 b FC(IEE)34 b(Pr)-5 b(o)g(c)g(e)g(e)g(dings)p
FH(,)37 b(v)m(ol.)c(127,)j(Pt.)e(G,)g(no.)f(5,)i(pp.)487
5407 y(226{241,)f(Octob)s(er)c(1980.)p eop
%%Page: 144 157
144 156 bop 3764 -200 a FH(144)300 99 y([31])47 b(J.)34
b(V)-8 b(andew)m(alle,)35 b(H.)f(De)h(Man,)g(and)f(J.)g(Rabaey)-8
b(,)53 b(\\The)34 b(adjoin)m(t)g(switc)m(hed)f(capacitor)i(net)m(w)m
(ork)487 268 y(and)g(its)h(application)e(to)j(frequency)-8
b(,)38 b(noise)e(and)f(sensitivit)m(y)g(analysis,")58
b FC(Cir)-5 b(cuit)38 b(The)-5 b(ory)40 b(and)487 437
y(Applic)-5 b(ations)p FH(,)33 b(v)m(ol.)d(9,)h(pp.)f(77{88,)j(1981.)
300 681 y([32])47 b(Y.)31 b(Tsividis,)39 b(\\Principle)29
b(of)i(op)s(eration)f(and)h(analysis)e(of)i(switc)m(hed-capacitor)h
(circuits,")42 b FC(Pr)-5 b(o-)487 851 y(c)g(e)g(e)g(dings)33
b(of)g(the)g(IEEE)p FH(,)d(v)m(ol.)h(71,)g(no.)g(8,)g(pp.)e(926{940,)34
b(August)c(1983.)300 1095 y([33])47 b(J.)28 b(Vlac)m(h,)h(K.)f
(Singhal,)e(and)i(M.)g(Vlac)m(h,)37 b(\\Computer)28 b(orien)m(ted)g
(form)m(ulation)f(of)h(equations)g(and)487 1264 y(analysis)c(of)h
(switc)m(hed-capacitor)h(net)m(w)m(orks,")34 b FC(IEEE)27
b(T)-7 b(r)i(ansactions)30 b(on)f(Cir)-5 b(cuits)28 b(and)h(Systems)p
FH(,)487 1433 y(v)m(ol.)i(CAS-31,)g(no.)f(9,)h(pp.)f(753{765,)k(Septem)
m(b)s(er)29 b(1984.)300 1678 y([34])47 b(B.)38 b(Li)f(and)f(D.)j(Gu,)63
b(\\SSCNAP:)37 b(A)h(program)f(for)g(sym)m(b)s(olic)f(analysis)g(of)i
(switc)m(hed)f(cap)s(citor)487 1847 y(circuits,")43 b
FC(IEEE)33 b(T)-7 b(r)i(ansactions)36 b(on)e(Computer-A)n(ide)-5
b(d)35 b(Design)p FH(,)d(v)m(ol.)g(11,)h(no.)e(3,)i(pp.)e(334{340,)487
2016 y(Marc)m(h)g(1992.)300 2260 y([35])47 b(M.)39 b(L.)g(Liou,)i(Y.)e
(L.)g(KUO,)g(and)f(C.)h(F.)g(Lee,)69 b(\\A)40 b(tutorial)e(on)h
(computer-aided)f(analysis)g(of)487 2430 y(switc)m(hed-capacitor)h
(circuits,")67 b FC(Pr)-5 b(o)g(c)g(e)g(e)g(dings)42
b(of)e(the)h(IEEE)p FH(,)d(v)m(ol.)h(71,)j(no.)d(8,)i(pp.)d(987{1005,)
487 2599 y(August)30 b(1983.)300 2843 y([36])47 b(K.)58
b(Suy)m(ama,)65 b(S.)58 b(C.)f(F)-8 b(ang,)67 b(and)57
b(Y.)h(P)-8 b(.)59 b(Tsividis,)126 b(\\Sim)m(ulation)56
b(of)i(mixed)f(switc)m(hed-)487 3013 y(capacitor/digital)34
b(net)m(w)m(orks)g(with)f(signal-driv)m(en)f(switc)m(hes,")52
b FC(IEEE)35 b(Journal)i(of)g(Solid-State)487 3182 y(cir)-5
b(cuits)p FH(,)31 b(v)m(ol.)f(25,)i(no.)e(6,)h(pp.)f(1403{1413,)35
b(Decem)m(b)s(er)c(1990.)300 3426 y([37])47 b(I.)35 b(Y)-8
b(usim)35 b(and)g(K.)g(Suy)m(ama,)58 b(\\Analysis)34
b(of)i(switc)m(hed-capacitor)g(and)f(switc)m(hed-curren)m(t)g(net-)487
3595 y(w)m(orks)25 b(with)f(complete)i(settling)e(assumption,")32
b FC(IEEE)27 b(International)j(Symp)-5 b(osium)30 b(on)f(Cir)-5
b(cuits)487 3765 y(and)33 b(Systems)p FH(,)f(pp.)e(428-431,)j(Ma)m(y)f
(1996.)300 4009 y([38])47 b(I.)39 b(Y)-8 b(usim,)39 b(G.)h(Ionis,)g
(and)e(K.)g(Suy)m(ama,)68 b(\\Sim)m(ulator)37 b(for)i(switc)m
(hed-curren)m(t)f(in)m(tegrated)h(cir-)487 4178 y(cuits,")h
FC(IEEE)32 b(Custom)h(Inte)-5 b(gr)g(ate)g(d)35 b(Cir)-5
b(cuits)33 b(Confer)-5 b(enc)g(e)p FH(,)32 b(pp.)d(459-462,)34
b(Ma)m(y)d(1998.)300 4422 y([39])47 b(S.)d(C.)g(F)-8
b(ang,)49 b(Y.)c(P)-8 b(.)45 b(Tsividis,)f(and)g(O.)g(Wing,)85
b(\\State)46 b(c)m(harge)g(form)m(ulation)d(of)h(switc)m(hed-)487
4592 y(capacitor)35 b(net)m(w)m(orks)f(con)m(taining)g(nonlinear)e(and)
h(time-v)-5 b(arying)33 b(elemen)m(ts,")53 b FC(IEEE)35
b(T)-7 b(r)i(ansac-)487 4761 y(tions)33 b(on)g(Cir)-5
b(cuits)33 b(and)h(Systems)p FH(,)d(v)m(ol.)g(CAS-31,)g(no.)g(11,)g
(pp.)f(968{974,)k(No)m(v)m(em)m(b)s(er)d(1984.)300 5005
y([40])47 b(S.)37 b(C.)h(F)-8 b(ang,)40 b(Y.)e(P)-8 b(.)38
b(Tsividis,)e(and)h(O.)h(Wing,)63 b(\\Time-)37 b(and)g
(frequency-domain)g(analysis)f(of)487 5174 y(linear)d(switc)m
(hed-capacitor)j(net)m(w)m(orks)g(using)e(state)i(c)m(harge)g(v)-5
b(ariables,")55 b FC(IEEE)36 b(T)-7 b(r)i(ansactions)487
5344 y(on)33 b(Computer-A)n(ide)-5 b(d)34 b(Design)p
FH(,)c(v)m(ol.)g(CAD-4,)i(no.)f(4,)g(pp.)e(651{661,)34
b(Octob)s(er)c(1985.)p eop
%%Page: 145 158
145 157 bop 3764 -200 a FH(145)300 99 y([41])47 b(S.)c(C.)g(F)-8
b(ang,)85 b FC(A)n(nalysis,)47 b(Computer)f(Simulation,)j(and)d(Pr)-5
b(op)g(erties)47 b(of)d(Switche)-5 b(d-Cap)g(acitor)487
268 y(Networks)p FH(,)41 b(PhD)30 b(thesis,)g(Colum)m(bia)f(Univ)m
(ersit)m(y)-8 b(,)30 b(New)h(Y)-8 b(ork,)31 b(1983.)300
511 y([42])47 b(A.)25 b(C.)g(M.)g(de)f(Queiroz,)i(P)-8
b(.)25 b(R.)g(M.)g(Pinheiro,)f(and)g(L.)h(P)-8 b(.)25
b(Caloba,)33 b(\\No)s(dal)24 b(analysis)f(of)i(switc)m(hed-)487
680 y(curren)m(t)39 b(\014lters,")70 b FC(IEEE)41 b(T)-7
b(r)i(ansactions)43 b(on)f(Cir)-5 b(cuits)42 b(and)g(Systems{II)p
FH(,)f(v)m(ol.)f(40,)j(no.)d(1,)j(pp.)487 850 y(10{18,)33
b(Jan)m(uary)d(1993.)300 1092 y([43])47 b(R.)37 b(J.)g(T)-8
b(rih)m(y)36 b(and)h(R.)g(A.)h(Rohrer,)62 b(\\A)37 b(switc)m(hed)g
(capacitor)h(circuit)e(sim)m(ulator:)53 b(A)-10 b(WEswit,")487
1262 y FC(IEEE)31 b(Journal)j(of)f(Solid-State)h(cir)-5
b(cuits)p FH(,)31 b(v)m(ol.)f(29,)i(no.)e(3,)h(pp.)f(217{225,)k(Marc)m
(h)d(1994.)300 1505 y([44])47 b(B.)38 b(F)-8 b(urrer)37
b(and)g(Guggen)m(b)s(\177)-48 b(uhl,)64 b(\\Noise)38
b(analysis)e(of)i(a)g(switc)m(hed)f(capacitor)i(biquad,")63
b FC(IEEE)487 1674 y(International)45 b(Symp)-5 b(osium)45
b(on)e(Cir)-5 b(cuits)43 b(and)g(Systems)p FH(,)j(pp.)40
b(460-463,)47 b(Ma)m(y)c(1982,)j(\(Rome,)487 1844 y(Italy\).)300
2086 y([45])h(F.)35 b(Malob)s(erti,)h(F.)f(Mon)m(tecc)m(hi,)j(and)c(V.)
i(Sv)m(elto,)55 b(\\Noise)36 b(and)e(gain)h(in)e(a)i(SC)f(in)m
(tegrator)i(with)487 2256 y(real)30 b(op)s(erational)f(ampli\014er,")39
b FC(A)n(lta)33 b(F)-7 b(r)i(e)g(q.)p FH(,)31 b(v)m(ol.)g(L\(1\),)h
(pp.)d(4-11,)j(1981.)300 2499 y([46])47 b(C.)28 b(Gob)s(et)i(and)e(A.)h
(Knob,)37 b(Noise)29 b(analysis)f(of)h(switc)m(hed)f(capacitor)h(net)m
(w)m(orks,)39 b FC(IEEE)30 b(Interna-)487 2668 y(tional)k(Symp)-5
b(osium)34 b(on)f(Cir)-5 b(cuits)33 b(and)h(Systems)p
FH(,)e(v)m(ol.)e(CAS-30,)h(pp.)f(37-43,)j(Jan.)d(1983.)300
2911 y([47])47 b(H.)40 b(W)-8 b(einric)m(h)m(ter,)71
b(\\Equiv)-5 b(alen)m(t)39 b(noise)g(sources)g(of)h(switc)m
(hed-capacitor)g(net)m(w)m(ork)h(elemen)m(ts,")487 3080
y FC(IEEE)30 b(International)k(Symp)-5 b(osium)33 b(on)f(Cir)-5
b(cuits)32 b(and)g(Systems)p FH(,)f(pp.)d(38-41,)k(Ma)m(y)e(1982.)h
(Rome,)487 3250 y(Italy)-8 b(.)300 3493 y([48])47 b(G.)31
b(Mueller,)41 b(\\A)31 b(con)m(tribution)f(to)h(noise)f(analysis)g(of)h
(SC-net)m(w)m(orks,")43 b FC(in)32 b(Pr)-5 b(o)g(c.)34
b(6th)g(ECCTD)p FH(,)487 3662 y(pp.)29 b(293-296,)34
b(1983)e(Stuttgart,)g(Austria.)300 3905 y([49])47 b(J.)41
b(Rabaey)-8 b(,)45 b(J.)c(V)-8 b(andew)m(alle,)43 b(and)e(H.)g(De)h
(Man,)75 b(\\A)41 b(general)g(and)g(e\016cien)m(t)g(noise)f(analysis)
487 4074 y(tec)m(hnique)34 b(for)f(switc)m(hed)h(capacitor)g
(\014lters,")52 b FC(IEEE)35 b(International)j(Symp)-5
b(osium)38 b(on)f(Cir)-5 b(cuits)487 4244 y(and)33 b(Systems)p
FH(,)f(pp.)e(570-573,)j(Ma)m(y)f(1983.)g(Newp)s(ort)e(Beac)m(h,)i(CA.)
300 4487 y([50])47 b(Z.Q.)22 b(Shang)g(and)h(J.I.)f(Sew)m(ell,)29
b(\\E\016cien)m(t)23 b(noise)f(analysis)g(metho)s(ds)g(for)g(large)h
(non-ideal)f(SC)g(and)487 4656 y(SI)k(circuits,")35 b
FC(IEEE)28 b(International)k(Symp)-5 b(osium)32 b(on)e(Cir)-5
b(cuits)30 b(and)g(Systems)p FH(,)f(pp.)d(5.565-5.568,)487
4826 y(June)j(1994.)k(London,)c(England.)300 5068 y([51])47
b(J.)37 b(Go)s(ette,)j(A.)e(Kaelin,)f(W.)g(Guggen)m(b)s(\177)-48
b(uhl,)38 b(and)e(G.)i(S.)e(Mosc)m(h)m(ytz,)64 b(\\An)37
b(appro)m(ximate)h(noise)487 5238 y(computation)c(for)f(general)h(in)m
(tegrator-based)h(SC)e(\014lters,")52 b FC(IEEE)35 b(T)-7
b(r)i(ansactions)38 b(on)f(Cir)-5 b(cuits)487 5407 y(and)33
b(Systems)p FH(,)f(v)m(ol.)f(38,)g(p.)f(1249-1254,)35
b(No)m(v)m(em)m(b)s(er)c(1991.)p eop
%%Page: 146 159
146 158 bop 3764 -200 a FH(146)300 99 y([52])47 b(M.)23
b(Okum)m(ura,)h(H.)f(T)-8 b(animoto,)25 b(T.)d(Itakura,)j(and)d(T.)h
(Suga)m(w)m(ara,)31 b(\\Numerical)22 b(noise)g(analysis)f(for)487
268 y(nonlinear)30 b(circuits)g(with)h(p)s(erio)s(dic)e(large)j(signal)
e(excitation)j(including)28 b(cyclostationary)33 b(noise)487
437 y(sources,")38 b FC(IEEE)29 b(T)-7 b(r)i(ansactions)33
b(on)e(Cir)-5 b(cuits)31 b(and)h(Systems{I)p FH(,)e(v)m(ol.)e(40,)i
(no.)e(9,)h(pp.)f(1255-1268,)487 607 y(Septem)m(b)s(er)i(1993.)300
843 y([53])47 b(J.)24 b(S.)h(Ro)m(yc)m(ho)m(wdh)m(ury)-8
b(,)26 b(D.)g(Long,)g(and)e(P)-8 b(.)25 b(F)-8 b(eldman,)32
b(\\Cyclostationary)25 b(noise)f(analysis)f(of)i(large)487
1012 y(rf)k(circuits)g(with)f(m)m(ulti-tone)i(excitations,")40
b FC(IEEE)32 b(Custom)h(Inte)-5 b(gr)g(ate)g(d)34 b(Cir)-5
b(cuits)33 b(Confer)-5 b(enc)g(e)p FH(,)487 1182 y(Ma)m(y)31
b(1997.)300 1418 y([54])47 b(J.)29 b(H.)h(Fisher,)38
b(\\Noise)30 b(sources)g(and)e(calculation)h(tec)m(hniques)g(for)g
(switc)m(hed)g(capacitor)h(\014lters,")487 1587 y FC(IEEE)h(Journal)j
(of)f(Solid-State)h(cir)-5 b(cuits)p FH(,)31 b(v)m(ol.)f(SC-17,)h(pp.)f
(742-752,)k(August)c(1982.)300 1823 y([55])47 b(J.)26
b(F.)h(Go)s(ette)h(and)e(C-A.)h(Gob)s(et,)36 b(\\Exact)28
b(noise)d(analysis)g(of)i(SC)f(circuits)f(and)g(an)i(appro)m(ximate)487
1993 y(computer)f(implemen)m(tation,")33 b FC(IEEE)28
b(T)-7 b(r)i(ansactions)31 b(on)e(Cir)-5 b(cuits)28 b(and)i(Systems)p
FH(,)e(v)m(ol.)e(CAS-36,)487 2162 y(pp.)j(508-521,)34
b(April)28 b(1989.)300 2398 y([56])47 b(L.)23 b(T\023)-45
b(oth)22 b(and)g(K.)h(Suy)m(ama,)29 b(Exact)24 b(noise)e(analysis)f(of)
i('ideal')f(sc)h(net)m(w)m(orks,)30 b FC(IEEE)25 b(International)487
2568 y(Symp)-5 b(osium)34 b(on)g(Cir)-5 b(cuits)33 b(and)g(Systems)p
FH(,)f(pp.)d(1585-1588,)35 b(June)29 b(1991.)j(Singap)s(ore.)300
2804 y([57])47 b(L.)30 b(T\023)-45 b(oth,)29 b(I.)h(Y)-8
b(usim,)29 b(and)g(K.)h(Suy)m(ama,)39 b(E\016cien)m(t)30
b(noise)f(analysis)f(of)i(ideal)e(switc)m(hed-capacitor)487
2973 y(net)m(w)m(orks)36 b(with)e(exp)s(erimen)m(tal)g(v)m
(eri\014cation,)57 b FC(IEEE)36 b(International)k(Symp)-5
b(osium)39 b(on)f(Cir)-5 b(cuits)487 3143 y(and)33 b(Systems)p
FH(,)f(pp.)e(1504-1507,)k(June)29 b(1997.)k(Hong)e(Kong.)300
3379 y([58])47 b(L.)37 b(T\023)-45 b(oth,)38 b(I.)f(Y)-8
b(usim,)37 b(and)f(K.)h(Suy)m(ama,)61 b(Noise)37 b(analysis)e(of)i
('ideal')f(switc)m(hed-capacitor)h(net-)487 3548 y(w)m(orks,)j
FC(IEEE)32 b(T)-7 b(r)i(ansactions)35 b(on)e(Cir)-5 b(cuits)33
b(and)h(Systems{I)p FH(,)e(T)-8 b(o)31 b(b)s(e)e(published)e(in)i(Dec.)
j(1998.)300 3785 y([59])47 b(Av)-5 b(an)m(t!)41 b(Corp)s(oration,)30
b(F)-8 b(remon)m(t,)32 b(CA,)40 b FC(HSPICE)32 b(Manual)p
FH(,)f(July)e(1998.)300 4021 y([60])47 b(Dept.)23 b(of)f(Electrical)g
(Engineering)e(and)i(Computer)f(Science,)j(UC)e(Berk)m(eley)-8
b(,)31 b FC(BSIM3v3)25 b(Manual)p FH(.)300 4257 y([61])47
b(J.)38 b(Vlac)m(h)g(and)g(K.)g(Singhal,)64 b FC(Computer)41
b(Metho)-5 b(ds)41 b(for)f(Cir)-5 b(cuit)40 b(A)n(nalysis)g(and)h
(Design)p FH(,)65 b(V)-8 b(an)487 4427 y(Nostrand)30
b(Reinhold,)e(second)j(edition,)e(1994.)300 4663 y([62])47
b(P)-8 b(.)28 b(F)-8 b(eldman)27 b(and)g(R.)g(F)-8 b(reund,)36
b(Class)26 b(notes)i(for)f(n)m(umerical)f(circuit)g(analysis,)35
b(Course)27 b(EE6213,)487 4832 y(at)k(Colum)m(bia)e(Univ)m(ersit)m(y)-8
b(,)30 b(1995.)300 5068 y([63])47 b(J.)33 b(H.)h(Shieh)e(and)h(B.)h(J.)
g(Sheu)e(M.)i(P)m(atil,)51 b(\\Measuremen)m(t)35 b(and)e(analyses)g(of)
h(c)m(harge)h(injection)487 5238 y(in)29 b(MOS)h(analog)h(switc)m
(hes,")42 b FC(IEEE)32 b(Journal)i(of)f(Solid-State)h(cir)-5
b(cuits)p FH(,)31 b(v)m(ol.)g(SC-22,)h(no2.)f(,)g(pp.)487
5407 y(277{281,)j(April)28 b(1987.)p eop
%%Page: 147 160
147 159 bop 3764 -200 a FH(147)300 99 y([64])47 b(M.)21
b(Giusepp)s(e)e(and)g(P)-8 b(.)21 b(An)m(tognetti,)28
b FC(Semic)-5 b(onductor)25 b(Devic)-5 b(e)23 b(Mo)-5
b(deling)24 b(with)g(SPICE)p FH(,)g(McGra)m(w-)487 268
y(Hill,)k(second)j(edition,)e(1993.)300 499 y([65])47
b(F.)39 b(Rahali)e(G.)j(W)-8 b(egmann,)41 b(E.)e(A.)g(Vittoz,)68
b(\\Charge)39 b(injection)f(in)f(analog)i(MOS)g(switc)m(hes,")487
668 y FC(IEEE)27 b(Journal)i(of)f(Solid-State)i(cir)-5
b(cuits)p FH(,)26 b(v)m(ol.)g(SC-22,)h(no.)e(6,)i(pp.)e(1091{1097,)31
b(Decem)m(b)s(er)26 b(1987.)300 899 y([66])47 b(T.A.C.M.)39
b(Claasen)e(and)h(W.F.G.)h(Mec)m(klen)m(br\177)-45 b(auk)m(er,)66
b(\\On)38 b(stationary)g(linear)f(time-v)-5 b(arying)487
1068 y(systems,")46 b FC(IEEE)33 b(T)-7 b(r)i(ansactions)37
b(on)d(Cir)-5 b(cuits)35 b(and)g(Systems)p FH(,)e(v)m(ol.)g(CAS-)e(29,)
j(no.)e(3,)h(pp.)e(169{)487 1237 y(184,)h(Marc)m(h)f(1982.)300
1468 y([67])47 b(J.)c(B.)h(Hughes)f(and)f(K.)h(W.)h(Moulding,)80
b(\\A)43 b(switc)m(hed-curren)m(t)g(double)f(sampling)f(bilinear)487
1637 y(z-transform)29 b(\014lter)f(tec)m(hneque,")41
b(In)28 b FC(IEEE)j(International)j(Symp)-5 b(osium)33
b(on)g(Cir)-5 b(cuits)32 b(and)g(Sys-)487 1807 y(tems)p
FH(,)f(pages)g(293{296,)j(1994.)300 2037 y([68])47 b(S.)37
b(J.)h(Doub)s(ert)f(and)h(D.)g(V)-8 b(allancourt,)64
b(\\A)39 b(transistor-only)d(curren)m(t-mo)s(de)i FG(\033)s(\016)j
FH(mo)s(dulator,")487 2207 y FC(IEEE)31 b(Journal)j(of)f(Solid-State)h
(cir)-5 b(cuits)p FH(,)31 b(v)m(ol.)f(27,)i(no.)e(5,)h(pp.)f(821{830,)k
(Ma)m(y)d(1992.)300 2437 y([69])47 b(K.)30 b(Suy)m(ama)h(and)e(S.)h(C.)
h(F)-8 b(ang,)41 b FC(SWITCAP2)33 b(User's)f(Manual)p
FH(,)41 b(Colum)m(bia)29 b(Univ)m(ersit)m(y)-8 b(,)30
b(1990.)300 2668 y([70])47 b(A.)37 b(P)m(ap)s(oulis,)57
b FC(Pr)-5 b(ob)g(ability,)41 b(R)-5 b(andom)41 b(V)-7
b(ariables,)40 b(and)f(Sto)-5 b(chastic)40 b(Pr)-5 b(o)g(c)g(esses)p
FH(,)61 b(pp.)36 b(226{228,)487 2838 y(McGra)m(w-Hill,)30
b(second)g(edition,)g(1984.)300 3068 y([71])47 b(A.)26
b(P)m(ap)s(oulis,)33 b FC(Signal)c(A)n(nalysis.)k FH(\(p.)26
b(65,)i(p.)e(99,)i(pp.)d(14{15.\),)30 b(McGra)m(w-Hill,)c(New)g(Y)-8
b(ork,)28 b(1977.)300 3299 y([72])47 b(S.)38 b(O.)h(Rice,)68
b(\\Resp)s(onse)39 b(of)g(p)s(erio)s(dically)c(v)-5 b(arying)38
b(systems)h(to)h(hot)f(noise)f(-)h(application)e(to)487
3468 y(switc)m(hed)43 b(rc)h(circuits,")84 b FC(Bel)5
b(l)45 b(Syst.)h(T)-7 b(e)i(chnic)g(al)46 b(Journal)p
FH(,)j(v)m(ol.)c(49,)j(no.)c(9,)k(pp.)c(2221{2247,)487
3638 y(No)m(v)m(em)m(b)s(er)31 b(1970.)300 3868 y([73])47
b(Y.)26 b(P)-8 b(.)26 b(Tsividis,)31 b FC(Op)-5 b(er)g(ation)30
b(and)f(Mo)-5 b(deling)29 b(of)g(the)g(MOS)e(T)-7 b(r)i(ansistor)p
FH(,)37 b(\(p.)26 b(343\),)i(McGra)m(w-Hill,)487 4038
y(1987.)300 4268 y([74])47 b(A.)33 b(S.)g(Sedra)f(and)h(K.)g(C.)g
(Smith,)47 b FC(Micr)-5 b(o)g(ele)g(ctr)g(onic)37 b(Cir)-5
b(cuits)p FH(,)50 b(\(pp.)32 b(70-72\))k(Saunders)31
b(College)487 4438 y(Publishing,)26 b(1991.)300 4668
y([75])47 b(A.)d(S.)g(Deif,)84 b FC(A)-5 b(dvanc)g(e)g(d)47
b(Matrix)e(The)-5 b(ory)47 b(for)f(Scientists)f(and)h(Engine)-5
b(ers)p FH(,)85 b(\(pp.)43 b(155-211\),)487 4838 y(Gordon)30
b(and)g(Breac)m(h)h(Science)g(Publishers,)c(1991.)300
5068 y([76])47 b(L.)26 b(T\023)-45 b(oth)27 b(and)f(E.)h(Simon)m(yi,)33
b(\\Examination)26 b(of)h(the)f(eigen)m(v)-5 b(alues)27
b(of)g(ideal)e(SC)h(circuits)f(based)h(on)487 5238 y(state)34
b(equation)f(approac)m(h,")49 b FC(Pr)-5 b(o)g(c.)35
b(of)g(the)h(Eur)-5 b(op)g(e)g(an)36 b(Conf.)g(Cir)-5
b(c.)35 b(The)-5 b(ory)36 b(and)g(Design)p FH(,)d(pp.)487
5407 y(482-486,)g(1988.)p eop
%%Page: 148 161
148 160 bop 3764 -200 a FH(148)300 99 y([77])47 b(I.)33
b(S.)f(Gradsh)m(teyn)h(and)f(I.)h(M.)h(Ryzhik,)47 b FC(T)-7
b(able)36 b(of)f(Inte)-5 b(gr)g(als,)37 b(Series,)e(and)h(Pr)-5
b(o)g(ducts)p FH(,)50 b(\(p.)33 b(943,)487 268 y(p.)d(305,\))i
(Academic)f(Press,)f(Inc.,)h(London,)e(1980.)300 512
y([78])47 b(G.)37 b(F)-8 b(o)s(dor,)62 b FC(L)-5 b(aplac)g(e)40
b(T)-7 b(r)i(ansforms)41 b(in)e(Engine)-5 b(ering)p FH(,)61
b(\(p.192\))39 b(\(translated)d(from)h(Hungarian\))487
681 y(Ak)-5 b(ad)m(\023)-43 b(emiai)30 b(Kiad\023)-45
b(o,)30 b(Budap)s(est,)g(1965.)300 925 y([79])47 b(S.)27
b(C.)h(F)-8 b(ang,)29 b(Y.)f(P)-8 b(.)28 b(Tsividis,)d(and)i(O.)h
(Wing,)36 b(\\Analyses)27 b(of)h(SCN's)f(with)f(nonlinear)g(and)h
(time-)487 1095 y(v)-5 b(arying)35 b(elemen)m(ts)h(using)e(time-in)m(v)
-5 b(arian)m(t)35 b(c)m(harge)i(v)-5 b(ariables,")56
b FC(IEEE)37 b(International)j(Symp)-5 b(o-)487 1264
y(sium)33 b(on)g(Cir)-5 b(cuits)33 b(and)g(Systems)p
FH(,)f(Rome,)f(Italy)-8 b(,)31 b(pp.)e(1{4,)j(Ma)m(y)g(1982.)p
eop
%%Page: 149 162
149 161 bop 3764 -200 a FH(149)300 721 y FM(App)5 b(endix)65
b(A)300 1095 y(Relationship)i(b)5 b(et)-5 b(w)g(een)65
b(c)-5 b(harge)65 b(conserv)-11 b(ation)300 1302 y(equations)66
b(and)e(K)-5 b(CL)64 b(equations)300 1860 y FH(In)29
b(this)g(app)s(endix)e(it)j(is)f(sho)m(wn)g(that)i(a)f(c)m(harge)h
(conserv)-5 b(ation)30 b(equation)g(is)f(a)h(linear)f(com)m(bination)g
(of)300 2086 y(the)i(K)m(CL)f(equations)g(of)g(the)h(no)s(des)e(inside)
f(the)j(corresp)s(onding)d(c)m(harge)k(surface.)536 2312
y(Consider)d(a)i(branc)m(h)e FG(b)i FH(b)s(et)m(w)m(een)g(no)s(des)e
FG(i)i FH(and)f FG(j)5 b FH(.)1783 2338 y
 4999414 6709739 131563 43744870 5130977 50454609 startTexFig
 1783 2338 a
%%BeginDocument: figs/branch.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      96 104 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      111 113 moveto (b,i) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      85 76 moveto
      30 0 atan dup cos 10 mul 85 exch sub
      exch sin 10 mul 106 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      85 106 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      85 202 moveto
      -30 0 atan dup cos 10 mul 85 exch sub
      exch sin 10 mul 172 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      85 172 10 4 0 -30 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      96 192 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      111 201 moveto (b,j) show
   grestore

% OVAL
newpath 69 203 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 69 203 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      48 78 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      40 214 moveto ( j) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      69 76 moveto
      69 142 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      69 138 moveto
      69 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 69 75 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 69 75 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      61 131 moveto
      69 139 lineto
      77 131 lineto
   stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      8 136 moveto (I) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      23 145 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 121 moveto
      30 0 atan dup cos 10 mul 48 exch sub
      exch sin 10 mul 151 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      48 151 10 4 0 30 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Aug 20 14:07:50 1998
%%EndDocument

 endTexFig
 300 3414 a FH(Using)30 b(the)g(De\014nitions)f(2.3.1,)j(the)f(con)m
(tribution)e(of)h(this)g(branc)m(h)f(to)j(the)e(K)m(CL)g(equations)g
(is:)1123 3689 y(K)m(CL)g(eqn)g(for)g(no)s(de)g FG(i)p
FH(:)174 b Fz(\001)15 b(\001)g(\001)22 b FH(+)e FG(I)2360
3704 y FB(b)2394 3689 y FH(\()p FG(t)p FH(\))112 b(+)e
Fz(\001)15 b(\001)g(\001)27 b FH(=)e(0)1112 3915 y(K)m(CL)30
b(eqn)g(for)g(no)s(de)g FG(j)5 b FH(:)174 b Fz(\001)15
b(\001)g(\001)22 b(\000)e FG(I)2360 3930 y FB(b)2394
3915 y FH(\()p FG(t)p FH(\))112 b(+)e Fz(\001)15 b(\001)g(\001)27
b FH(=)e(0)p FG(:)3690 3780 y FH(\(A.1\))300 4145 y(If)35
b(the)h(t)m(w)m(o)h(K)m(CL)f(equations)f(for)h(no)s(des)f
FG(i)h FH(and)f FG(j)42 b FH(are)36 b(added)f(together,)k(the)d(curren)
m(t)f(con)m(tribution)300 4371 y(from)30 b(branc)m(h)h
FG(b)f FH(will)f(cancel)i(and)f(will)e(not)j(app)s(ear)g(in)e(the)i
(sum.)41 b(This)29 b(argumen)m(t)j(can)f(b)s(e)f(extended)300
4597 y(to)h(the)g(case)g(where)f(K)m(CL)g(equations)g(for)g(sev)m(eral)
h(no)s(des)e(are)i(summed.)536 4823 y(The)21 b(expression)f(for)h(the)g
(sum)f(of)i(the)f(K)m(CL)g(equations)g(of)g(the)g(no)s(des)g(inside)e
(a)i(c)m(harge)i(surface)e FG(A)300 5049 y FH(is)1645
5194 y Ft(X)1615 5377 y FB(i)p Fv(2N)1744 5388 y Fu(A)1915
5194 y Ft(X)1900 5378 y FB(b)p Fv(2B)2023 5388 y Fu(i)2065
5274 y FG(I)2105 5289 y FB(b;i)2183 5274 y FH(\()p FG(t)p
FH(\))117 b(=)25 b(0)p FG(;)1121 b FH(\(A.2\))p eop
%%Page: 150 163
150 162 bop 3764 -200 a FH(150)300 99 y(where)23 b Fz(B)616
113 y FB(i)668 99 y FH(and)g FG(I)878 114 y FB(b;i)980
99 y FH(are)h(from)g(De\014nition)e(2.3.1)k(and)d Fz(N)2206
113 y FB(A)2286 99 y FH(is)g(from)h(De\014nition)e(2.4.4.)41
b(F)-8 b(or)24 b(the)g(branc)m(hes)300 324 y(ha)m(ving)f(b)s(oth)f(no)s
(des)g(inside)f(the)j(same)f(c)m(harge)h(surface,)h(the)f(con)m
(tribution)d(to)j(\(A.2\))h(is)d(canceled.)38 b(The)300
550 y(only)26 b(remaining)e(con)m(tributions)h(are)i(the)g(ones)g(from)
f(the)h(branc)m(hes)f(that)h(cross)g(the)f(b)s(oundary)f(of)i(the)300
776 y(c)m(harge)i(surface)f({)g(namely)-8 b(,)29 b(the)f(capacitor)g
(and)g(the)g(op)s(en)f(switc)m(h)g(branc)m(hes)h(that)g(de\014ne)g(the)
g(c)m(harge)300 1002 y(surface.)40 b(Since)28 b(the)g(curren)m(ts)g
(through)g(op)s(en)g(switc)m(hes)g(is)g(zero,)i(the)e(only)g(remaining)
f(con)m(tributions)300 1228 y(to)37 b(\(A.2\))g(are)f(the)g(capacitor)h
(curren)m(ts)f(of)g(the)g FC(surfac)-5 b(e)38 b(c)-5
b(ap)g(acitors)p FH(.)60 b(Consequen)m(tly)-8 b(,)37
b(\(A.2\))g(can)g(b)s(e)300 1453 y(rewritten)29 b(in)h(terms)g(of)g
(the)h(curren)m(ts)f(in)f(surface)h(capacitor)h(branc)m(hes)f(only)-8
b(.)536 1679 y(Let)41 b FG(I)749 1693 y FB(c;A)897 1679
y FH(b)s(e)f(the)g(curren)m(t)g(lea)m(ving)h(the)f(c)m(harge)i(surface)
e FG(A)h FH(through)f(capacitor)h FG(c)p FH(.)71 b(Let)41
b Fz(C)3843 1693 y FB(A)300 1905 y FH(represen)m(t)27
b(the)g(set)g(of)g(surface)g(capacitors)g(of)g(the)g(c)m(harge)h
(surface)e FG(A)h FH(\(as)h(in)d(De\014nition)g(2.4.1\).)42
b(Then)300 2131 y(\(A.2\))32 b(is)d(equiv)-5 b(alen)m(t)30
b(to)1811 2276 y Ft(X)1789 2460 y FB(c)p Fv(2C)1904 2471
y Fu(A)1969 2357 y FG(I)2009 2371 y FB(c;A)2116 2357
y FH(\()p FG(t)p FH(\))c(=)f(0)p FG(:)1279 b FH(\(A.3\))536
2617 y(Note,)32 b(that)1718 2843 y FG(I)1758 2857 y FB(c;A)1865
2843 y FH(\()p FG(t)p FH(\))26 b(=)2116 2782 y FG(d)p
2100 2822 81 4 v 2100 2906 a(dt)2190 2843 y(q)2231 2857
y FB(c;A)2338 2843 y FH(\()p FG(t)p FH(\))p FG(;)1224
b FH(\(A.4\))300 3104 y(where)30 b FG(q)604 3118 y FB(c;A)741
3104 y FH(is)f(the)i(c)m(harge)h(on)e(the)h(plate)f(of)h(the)f
(capacitor)h FG(c)g FH(that)g(is)e(inside)g(the)h(surface)h
FG(A)p FH(.)41 b(\(Same)300 3330 y(de\014nition)28 b(as)j(in)e
(\(2.27\).\))43 b(In)m(tegrating)31 b(\(A.3\))h(o)m(v)m(er)g(time)e
(from)g FG(t)2615 3291 y FA(+)2615 3358 y FB(k)r Fv(\000)p
FA(1)2778 3330 y FH(to)h FG(t)f FH(results)f(in;)1064
3494 y Ft(Z)1147 3520 y FG(t)1110 3682 y(t)1143 3644
y FA(+)1143 3710 y FB(k)r Fv(\000)p FA(1)1318 3528 y
Ft(X)1295 3712 y FB(c)p Fv(2C)1410 3723 y Fu(A)1502 3547
y FG(d)p 1486 3588 V 1486 3671 a(dt)1576 3609 y(q)1617
3623 y FB(c;A)1724 3609 y FH(\()p FG(t)p FH(\))p FG(dt)d
FH(=)2051 3528 y Ft(X)2028 3712 y FB(c)p Fv(2C)2143 3723
y Fu(A)2209 3609 y FG(q)2250 3623 y FB(c;A)2357 3609
y FH(\()p FG(t)p FH(\))20 b Fz(\000)2594 3528 y Ft(X)2571
3712 y FB(c)p Fv(2C)2686 3723 y Fu(A)2752 3609 y FG(q)2793
3623 y FB(c;A)2899 3609 y FH(\()p FG(t)2967 3570 y FA(+)2967
3637 y FB(k)r Fv(\000)p FA(1)3100 3609 y FH(\))555 b(\(A.5\))300
3888 y(or)1564 4033 y Ft(X)1541 4216 y FB(c)p Fv(2C)1656
4227 y Fu(A)1722 4113 y FG(q)1763 4127 y FB(c;A)1869
4113 y FH(\()p FG(t)p FH(\))26 b(=)2117 4033 y Ft(X)2094
4216 y FB(c)p Fv(2C)2209 4227 y Fu(A)2275 4113 y FG(q)2316
4127 y FB(c;A)2422 4113 y FH(\()p FG(t)2490 4075 y FA(+)2490
4141 y FB(k)r Fv(\000)p FA(1)2623 4113 y FH(\))1032 b(\(A.6\))300
4374 y(The)37 b(reason)h(for)g(starting)f(the)h(in)m(tegration)g(with)e
FG(t)2159 4336 y FA(+)2159 4402 y FB(k)r Fv(\000)p FA(1)2329
4374 y FH(is)h(b)s(ecause)h(\(A.3\))h(is)e(only)f(v)-5
b(alid)37 b(after)h(the)300 4600 y(switc)m(hing)h(instan)m(t)h
FG(t)1061 4615 y FB(k)r Fv(\000)p FA(1)1193 4600 y FH(.)70
b(Ho)m(w)m(ev)m(er,)45 b(b)s(oth)39 b(sides)g(of)h(the)h(equalit)m(y)e
(in)g(\(A.6\))j(represen)m(t)e(the)g(total)300 4826 y(c)m(harge)33
b(inside)d(the)i(surface,)g(whic)m(h)f(can)h(b)s(e)f(expressed)g(in)g
(terms)g(of)h(the)g(c)m(harges)h(on)f(the)g(capacitor)300
5052 y(plates)e(at)h(the)g FG(t)864 5067 y FB(k)r Fv(\000)p
FA(1)996 5052 y FH(.)41 b(Therefore)30 b(the)h(righ)m(t)f(side)f(of)i
(the)f(equalit)m(y)g(in)f(\(A.6\))j(can)f(b)s(e)f(written)f(as)1485
5250 y Ft(X)1462 5433 y FB(c)p Fv(2C)1577 5444 y Fu(A)1643
5330 y FG(q)1684 5344 y FB(c;A)1790 5330 y FH(\()p FG(t)1858
5292 y FA(+)1858 5359 y FB(k)r Fv(\000)p FA(1)1991 5330
y FH(\))d(=)2171 5250 y Ft(X)2148 5433 y FB(c)p Fv(2C)2263
5444 y Fu(A)2328 5330 y FG(q)2369 5344 y FB(c;A)2476
5330 y FH(\()p FG(t)2544 5345 y FB(k)r Fv(\000)p FA(1)2677
5330 y FH(\))p FG(:)953 b FH(\(A.7\))p eop
%%Page: 151 164
151 163 bop 3764 -200 a FH(151)300 99 y(Com)m(bining)28
b(\(A.6\))j(and)f(\(A.7\))h(results)e(in)g(the)h(desired)f(form)g(of)h
(the)h(c)m(harge)g(conserv)-5 b(ation)30 b(equation)300
324 y(\(same)h(as)g(\(2.27\)\))1551 469 y Ft(X)1529 653
y FB(c)p Fv(2C)1644 664 y Fu(A)1709 550 y FG(q)1750 564
y FB(c;A)1857 550 y FH(\()p FG(t)p FH(\))26 b(=)2104
469 y Ft(X)2082 653 y FB(c)p Fv(2C)2197 664 y Fu(A)2262
550 y FG(q)2303 564 y FB(c;A)2410 550 y FH(\()p FG(t)2478
565 y FB(k)r Fv(\000)p FA(1)2611 550 y FH(\))p FG(:)1019
b FH(\(A.8\))536 830 y(Only)37 b(linear)f(op)s(erators)i(\(summation)f
(and)g(in)m(tegration\))i(ha)m(v)m(e)g(b)s(een)e(used)g(to)i(deriv)m(e)
e(\(A.8\))300 1056 y(from)29 b(\(A.2\),)i(therefore,)g(the)e(c)m(harge)
i(conserv)-5 b(ation)29 b(equation)h(is)e(a)i(linear)e(com)m(bination)g
(of)i(the)f(K)m(CL)300 1282 y(equations)h(for)g(the)h(no)s(des)e
(inside)f(the)j(c)m(harge)h(surface.)p eop
%%Page: 152 165
152 164 bop 3764 -200 a FH(152)300 721 y FM(App)5 b(endix)65
b(B)300 1095 y(Deriv)-11 b(ation)68 b(of)c(H)1625 1121
y Fl(n)1700 1095 y Ff(\()p Fe(!)6 b Ff(\))300 1653 y
FH(In)31 b(this)f(app)s(endix,)f(the)j(expression)e(for)h
FG(H)1826 1667 y FB(n)1873 1653 y FH(\()p FG(!)s FH(\))h(in)e(\(3.39\))
k(is)c(deriv)m(ed)h(for)g(an)g(N-phase)h(p)s(erio)s(dically)300
1878 y(switc)m(hed)37 b(net)m(w)m(ork)i(that)f(has)g(a)g(p)s(erio)s(d)d
(of)j FG(T)51 b FH(and)37 b(is)g(represen)m(ted)g(b)m(y)h(the)g(state)h
(c)m(harge)g(v)-5 b(ariable)300 2104 y(equations)30 b(\(3.24\))j(and)c
(\(3.25\).)536 2330 y(F)-8 b(or)31 b(con)m(v)m(enience,)h(the)f(state)g
(c)m(harge)h(v)-5 b(ariable)29 b(equations)h(are)1475
2639 y FD(q)1530 2653 y FB(m)1679 2639 y FH(=)83 b FD(A)1912
2653 y FB(m)1979 2639 y FD(q)2034 2653 y FB(m)p Fv(\000)p
FA(1)2211 2639 y FH(+)20 b FD(B)2376 2653 y FB(m)2443
2639 y FG(u)p FH(\()p FG(t)2563 2653 y FB(m)p Fv(\000)p
FA(1)2720 2639 y FH(\))939 b(\(B.1\))1445 2890 y FG(y)s
FH(\()p FG(t)p FH(\))83 b(=)g FD(C)1909 2904 y FB(m)1975
2890 y FD(q)2030 2904 y FB(m)2117 2890 y FH(+)20 b FD(D)2288
2904 y FB(m)2355 2890 y FG(u)p FH(\()p FG(t)p FH(\))p
FG(:)1159 b FH(\(B.2\))300 3199 y(The)30 b(general)g(expression)f(for)i
FG(H)1454 3213 y FB(n)1500 3199 y FH(\()p FG(!)s FH(\))g(is)1388
3508 y FG(H)1464 3522 y FB(n)1511 3508 y FH(\()p FG(!)s
FH(\))26 b(=)1783 3447 y(1)p 1773 3487 66 4 v 1773 3571
a FG(T)1863 3393 y Ft(Z)1946 3420 y FB(T)1910 3582 y
FA(0)2017 3508 y FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))p FG(e)2362 3471 y FB(j)t FA(\()p FB(!)r Fv(\000)p
FB(n!)2610 3479 y Fu(s)2644 3471 y FA(\))p FB(\034)2714
3508 y FG(d\034)893 b FH(\(B.3\))300 3817 y(where)29
b FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))30 b(is)e(the)i(F)-8
b(ourier)28 b(transform)h(of)g FG(h)p FH(\()p FG(t;)15
b(\034)10 b FH(\))31 b(whic)m(h)d(is)g(the)h(system)h(resp)s(onse)e(to)
i(a)g(dela)m(y)m(ed)300 4043 y(delta)k(function)f FG(\016)s
FH(\()p FG(t)24 b Fz(\000)f FG(\034)10 b FH(\).)53 b(The)34
b(deriv)-5 b(ation)33 b(will)f(b)s(e)i(done)g(for)g(one)h(input)d(and)i
(one)h(output,)g(whic)m(h)300 4269 y(will)25 b(mak)m(e)j
FG(u)p FH(\()p FG(t)p FH(\),)h FG(y)s FH(\()p FG(t)p
FH(\),)g FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\),)29
b(and)e FG(H)1724 4283 y FB(n)1771 4269 y FH(\()p FG(!)s
FH(\))h(scalars)f(and)g FD(B)2468 4283 y FB(i)2524 4269
y FH(and)g FD(C)2774 4283 y FB(i)2829 4269 y FH(v)m(ectors.)41
b(The)27 b(results)g(can)h(b)s(e)300 4495 y(generalized)i(to)h(m)m
(ultiple)d(inputs)g(and)i(outputs.)536 4721 y(The)g(metho)s(d)g(for)g
(deriving)e(the)j(expression)e(for)h FG(H)2354 4735 y
FB(n)2401 4721 y FH(\()p FG(!)s FH(\))h(is)e(as)i(follo)m(ws:)411
4902 y(1.)46 b(Deriv)m(e)41 b FG(h)p FH(\()p FG(t;)15
b(\034)10 b FH(\))41 b(whic)m(h)d(is)h(the)h(output)f
FG(y)s FH(\()p FG(t)p FH(\))h(of)g(the)g(system)g(in)f(\(B.1\))i(and)e
(\(B.2\))j(when)d(the)527 5015 y(input)29 b FG(u)p FH(\()p
FG(t)p FH(\))d(=)e FG(\016)s FH(\()p FG(t)e Fz(\000)e
FG(\034)10 b FH(\).)411 5199 y(2.)46 b(Deriv)m(e)31 b
FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))31 b(b)m(y)g(taking)f
(the)h(F)-8 b(ourier)29 b(transform)h(of)h FG(h)p FH(\()p
FG(t;)15 b(\034)10 b FH(\).)411 5384 y(3.)46 b(Deriv)m(e)31
b FG(H)890 5398 y FB(n)937 5384 y FH(\()p FG(!)s FH(\))g(b)m(y)f
(carrying)f(out)i(the)g(in)m(tegral)f(in)f(\(B.3\).)p
eop
%%Page: 153 166
153 165 bop 3764 -200 a FH(153)300 99 y FL(B.1)135 b(Deriving)46
b Fl(h)p FJ(\()p Fl(t;)20 b(\034)13 b FJ(\))300 414 y
FH(In)27 b(the)g(rest)g(of)h(the)f(deriv)-5 b(ation,)27
b(the)h(index)e FG(k)k FH(will)25 b(b)s(e)h(used)h(to)h(represen)m(t)f
(the)h(in)m(terv)-5 b(al)26 b(during)f(whic)m(h)300 640
y(the)31 b(impulse)c FG(\016)s FH(\()p FG(t)22 b Fz(\000)e
FG(\034)10 b FH(\))30 b(o)s(ccurs)g({)h FC(i.e.)1382
924 y FG(t)1415 939 y FB(k)r Fv(\000)p FA(1)1573 924
y FG(<)25 b(\034)35 b Fz(\024)25 b FG(t)1873 939 y FB(k)2188
924 y FG(or)276 b(\034)35 b Fz(2)25 b FG(I)2750 939 y
FB(k)2793 924 y FG(:)876 b FH(\(B.4\))300 1209 y(Let)31
b FG(h)515 1224 y FB(k)558 1209 y FH(\()p FG(t;)15 b(\034)10
b FH(\))31 b(b)s(e)f(the)g(system)h(resp)s(onse)e(to)j
FG(\016)s FH(\()p FG(t)21 b Fz(\000)f FG(\034)10 b FH(\))30
b(when)g FG(\034)40 b FH(is)29 b(in)h(phase)g FG(k)j
FH(or)754 1493 y FG(h)806 1508 y FB(k)849 1493 y FH(\()p
FG(t;)15 b(\034)10 b FH(\))26 b(=)1164 1296 y Ft(8)1164
1371 y(>)1164 1396 y(<)1164 1545 y(>)1164 1570 y(:)1279
1420 y FG(h)p FH(\()p FG(t;)15 b(\034)10 b FH(\))85 b(if)29
b FG(t)1725 1435 y FB(k)r Fv(\000)p FA(1)1883 1420 y
FG(<)c(\034)35 b Fz(\024)25 b FG(t)2183 1435 y FB(k)2226
1420 y FG(;)288 b FH(where)30 b FG(k)e Fz(2)d FH(1)p
FG(;)15 b FH(2)p FG(;)g(:)g(:)g(:)j(;)d(N)1279 1589 y
FH(0)285 b(otherwise.)3694 1493 y(\(B.5\))300 1777 y(Fig.)30
b(B.1\(a\))i(illustrates)c FG(h)1238 1792 y FB(k)1281
1777 y FH(\()p FG(t;)15 b(\034)10 b FH(\).)41 b(The)29
b(shado)m(w)m(ed)h(area)h(represen)m(ts)e(the)h(phase)f(in)g(whic)m(h)f
(the)i(input)300 2003 y FG(\016)s FH(\()p FG(t)21 b Fz(\000)f
FG(\034)10 b FH(\))31 b(o)s(ccurs.)536 2229 y(Next,)h
FG(h)836 2244 y FB(k)879 2229 y FH(\()p FG(t;)15 b(\034)10
b FH(\))31 b(is)e(decomp)s(osed)i(with)e(resp)s(ect)h(to)h
FG(t)f FH(as)h(follo)m(ws:)1550 2513 y FG(h)1602 2528
y FB(k)1645 2513 y FH(\()p FG(t;)15 b(\034)10 b FH(\))27
b(=)1961 2489 y(^)1961 2513 y FG(h)2013 2528 y FB(k)2056
2513 y FH(\()p FG(t;)15 b(\034)10 b FH(\))21 b(+)2362
2489 y(~)2361 2513 y FG(h)2413 2528 y FB(k)2456 2513
y FH(\()p FG(t;)15 b(\034)10 b FH(\))1045 b(\(B.6\))300
2798 y(where)564 2774 y(^)563 2798 y FG(h)615 2813 y
FB(k)658 2798 y FH(\()p FG(t;)15 b(\034)10 b FH(\))31
b(and)1060 2774 y(~)1059 2798 y FG(h)1111 2813 y FB(k)1154
2798 y FH(\()p FG(t;)15 b(\034)10 b FH(\))31 b(are)g(de\014ned)e(as)485
3058 y(^)484 3082 y FG(h)536 3097 y FB(k)579 3082 y FH(\()p
FG(t;)15 b(\034)10 b FH(\))26 b(=)894 2885 y Ft(8)894
2960 y(>)894 2984 y(<)894 3134 y(>)894 3159 y(:)1010
3008 y FG(h)1062 3023 y FB(k)1105 3008 y FH(\()p FG(t;)15
b(\034)10 b FH(\))84 b(if)29 b FG(t)c Fz(\024)g FG(t)1652
3023 y FB(k)1010 3178 y FH(0)327 b(otherwise,)1909 3082
y(and)2147 3058 y(~)2146 3082 y FG(h)2198 3097 y FB(k)2241
3082 y FH(\()p FG(t;)15 b(\034)10 b FH(\))26 b(=)2556
2885 y Ft(8)2556 2960 y(>)2556 2984 y(<)2556 3134 y(>)2556
3159 y(:)2672 3008 y FG(h)2724 3023 y FB(k)2767 3008
y FH(\()p FG(t;)15 b(\034)10 b FH(\))84 b(if)29 b FG(t)c(>)g(t)3314
3023 y FB(k)2672 3178 y FH(0)327 b(otherwise.)3694 3082
y(\(B.7\))300 3387 y(The)30 b(de\014nitions)d(of)1030
3363 y(^)1030 3387 y FG(h)1082 3402 y FB(k)1125 3387
y FH(\()p FG(t;)15 b(\034)10 b FH(\))31 b(and)1526 3363
y(~)1525 3387 y FG(h)1577 3402 y FB(k)1620 3387 y FH(\()p
FG(t;)15 b(\034)10 b FH(\))31 b(are)g(illustrated)d(in)g(Figs.)j(B.1)g
(\(b\))f(and)f(\(c\),)j(resp)s(ectiv)m(ely)-8 b(.)300
3613 y(While)565 3589 y(^)564 3613 y FG(h)616 3628 y
FB(k)659 3613 y FH(\()p FG(t;)15 b(\034)10 b FH(\))30
b(is)f(the)g(system)h(resp)s(onse)e(during)f(the)j(in)m(terv)-5
b(al)28 b(when)h(the)g(impulse)e FG(\016)s FH(\()p FG(t)19
b Fz(\000)f FG(\034)10 b FH(\))30 b(o)s(ccurs,)301 3815
y(~)300 3839 y FG(h)352 3854 y FB(k)395 3839 y FH(\()p
FG(t;)15 b(\034)10 b FH(\))31 b(is)f(the)g(resp)s(onse)g(during)e(the)i
(rest)h(of)f(the)h(in)m(terv)-5 b(als.)300 4065 y FG(h)p
FH(\()p FG(t;)15 b(\034)10 b FH(\))36 b FD(in)f(in)m(terv)-6
b(al)35 b FG(I)1123 4080 y FB(k)p 300 4101 866 4 v 536
4291 a FH(During)f FG(I)888 4306 y FB(k)930 4291 y FH(,)993
4267 y(~)992 4291 y FG(h)p FH(\()p FG(t;)15 b(\034)10
b FH(\))36 b(is)e(zero)h(and)1748 4267 y(^)1747 4291
y FG(h)p FH(\()p FG(t;)15 b(\034)10 b FH(\))36 b(is)e(deriv)m(ed)g(as)h
(follo)m(ws.)53 b(The)34 b(equations)h(\(B.1\))i(and)300
4517 y(\(B.2\))32 b(ha)m(v)m(e)g(the)e(follo)m(wing)f(prop)s(erties:)
1094 4725 y FG(m)c FH(=)g FG(k)s(;)289 b(t)25 b Fz(2)g
FG(I)1843 4740 y FB(k)1885 4725 y FG(;)1094 4894 y(u)p
FH(\()p FG(t)p FH(\))h(=)f FG(\016)s FH(\()p FG(t)c Fz(\000)f
FG(\034)10 b FH(\))p FG(;)1094 5063 y(u)p FH(\()p FG(t)1214
5078 y FB(k)r Fv(\000)p FA(1)1347 5063 y FH(\))26 b(=)f
FG(\016)s FH(\()p FG(t)1615 5078 y FB(k)r Fv(\000)p FA(1)1769
5063 y Fz(\000)20 b FG(\034)10 b FH(\))26 b(=)e(0)274
b(b)s(ecause)30 b FG(t)2754 5078 y FB(k)r Fv(\000)p FA(1)2912
5063 y Fz(62)25 b FG(I)3038 5078 y FB(k)3080 5063 y FG(;)1094
5233 y(y)s FH(\()p FG(t)p FH(\))h(=)1368 5209 y(^)1367
5233 y FG(h)1419 5248 y FB(k)1462 5233 y FH(\()p FG(t;)15
b(\034)10 b FH(\))p FG(;)1094 5402 y FD(q)1149 5417 y
FB(k)r Fv(\000)p FA(1)1308 5402 y FH(=)25 b(0)303 b(b)s(ecause)30
b(initial)e(conditions)h(are)i(zero)3694 5052 y(\(B.8\))p
eop
%%Page: 154 167
154 166 bop 3764 -200 a FH(154)700 944 y
 22102670 26115359 -131563 25654886 21971107 51770245 startTexFig
 700 944 a
%%BeginDocument: figs/ht.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   pat7 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      72 161 moveto 200 161 lineto 200 169 lineto 72 169 lineto
   closepath fill
grestore
gsave
   1.415 setmiterlimit
   newpath
      72 161 moveto 200 161 lineto 200 169 lineto 72 169 lineto
   closepath stroke
   1 setmiterlimit
grestore

% OVAL
newpath 72 165 8 8 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   pat7 8 1 0 72 300 32 div div tgifsetpattern
   newpath 72 165 8 8 tgifellipse stroke
grestore

% OVAL
gsave
   pat7 8 1 0 72 300 32 div div tgifsetpattern
   newpath 200 165 8 8 tgifellipse fill
grestore
gsave
   2 setlinewidth
   pat7 8 1 0 72 300 32 div div tgifsetpattern
   newpath 200 165 8 8 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      468 201 moveto (T) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      508 208 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      496 187 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 133 moveto
      272.67 114.33 273.83 102.17 275.50 96.50 curveto
      277.17 90.83 278.83 87.17 280.50 85.50 curveto
      282.17 83.83 284.50 82.17 287.50 80.50 curveto
      290.50 78.83 294.67 77.67
      300 77 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      300 77 moveto
      332 77 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      352 101 moveto
      388 101 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      388 101 moveto
      424 101 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      424 101 moveto
      424.67 108.33 425.83 113.50 427.50 116.50 curveto
      429.17 119.50 430.83 121.83 432.50 123.50 curveto
      434.17 125.17 437.83 126.83 443.50 128.50 curveto
      449.17 130.17 460.00 131.67
      476 133 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      476 133 moveto
      477.33 136.33 478.50 138.83 479.50 140.50 curveto
      480.50 142.17 481.33 143.50 482.00 144.50 curveto
      482.67 145.50 484.50 146.83 487.50 148.50 curveto
      490.50 150.17 493.00 151.17 495.00 151.50 curveto
      497.00 151.83 499.83 152.17 503.50 152.50 curveto
      507.17 152.83 512.67 153.00
      520 153 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      520 153 moveto
      548 153 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      20 29 moveto
      152 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      20 181 lineto
   stroke
grestore
gsave
   newpath
      20 29 8 3 0 -152 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      56 165 moveto
      0 524 atan dup cos 8 mul 580 exch sub
      exch sin 8 mul 165 exch sub lineto
   stroke
grestore
gsave
   newpath
      580 165 8 3 524 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      424 157 moveto
      424 173 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      45 199 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      55 206 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      65 206 moveto (-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      191 200 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      201 207 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      255 200 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      265 207 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      273 208 moveto (+1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      408 201 moveto (= T) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      476 157 moveto
      476 173 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 133 moveto
      272 133 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 133 moveto
      200 133 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 165 moveto
      104 165 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      584 170 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      99 197 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      72 153 moveto
      72 153 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      104 49 moveto
      116 0 atan dup cos 12 mul exch sin 12 mul rmoveto
      104 165 lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      104 49 12 5 0 -116 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      116 64 moveto (d) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      132 64 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      184 64 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      156 64 moveto (-) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      143 62 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      171 62 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 133 moveto
      200 133 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      72 157 moveto
      72 173 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      156 161 moveto
      -108 68 atan dup cos 8 mul exch sin 8 mul rmoveto
      224 53 lineto
      312 53 lineto
   stroke
grestore
gsave
   newpath
      156 161 8 3 -68 108 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      232 44 moveto (range for ) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 157 moveto
      272 173 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 157 moveto
      200 173 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 165 moveto
      104 165 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      472 422 moveto (T) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      503 422 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      513 429 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      499 409 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      52 388 moveto
      0 528 atan dup cos 8 mul 580 exch sub
      exch sin 8 mul 388 exch sub lineto
   stroke
grestore
gsave
   newpath
      580 388 8 3 528 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      428 380 moveto
      428 396 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      59 421 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      69 427 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      77 428 moveto (-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      187 421 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      197 427 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      259 421 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      269 427 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      277 428 moveto (+1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      412 422 moveto (T) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 380 moveto
      480 396 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      36 360 moveto
      36 360 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 356 moveto
      204 356 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      108 384 moveto
      108 384 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      584 393 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      103 418 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      76 376 moveto
      76 376 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 356 moveto
      204 356 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      76 376 moveto
      76 396 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 380 moveto
      276 396 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 380 moveto
      204 396 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 388 moveto
      108 388 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      108 344 moveto
      108 388 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 388 moveto
      336 388 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      336 388 moveto
      388 388 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      388 388 moveto
      520 388 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      204 388 moveto
      204 356 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      20 408 moveto
      -108 0 atan dup cos 8 mul 20 exch sub
      exch sin 8 mul 300 exch sub lineto
   stroke
grestore
gsave
   newpath
      20 300 8 3 0 -108 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      16 293 moveto (h) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      36 294 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      76 294 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      52 294 moveto (,) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      47 292 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      63 291 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      27 304 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      17 281 moveto (^) show
   grestore

% OVAL
newpath 108 344 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 108 344 4 4 tgifellipse stroke
grestore

% OVAL
newpath 204 356 4 4 tgifellipse fill
gsave
   newpath 204 356 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      200 133 moveto
      203.33 137.67 205.83 141.50 207.50 144.50 curveto
      209.17 147.50 210.17 149.67 210.50 151.00 curveto
      210.83 152.33 211.17 152.83 211.50 152.50 curveto
      211.83 152.17 212.17 151.17 212.50 149.50 curveto
      212.83 147.83 213.83 146.17 215.50 144.50 curveto
      217.17 142.83 218.83 141.83 220.50 141.50 curveto
      222.17 141.17 224.50 140.83 227.50 140.50 curveto
      230.50 140.17 232.67 139.67 234.00 139.00 curveto
      235.33 138.33 238.50 137.50 243.50 136.50 curveto
      248.50 135.50 258.00 134.33
      272 133 curveto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 204 388 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 204 388 4 4 tgifellipse stroke
grestore

% OVAL
newpath 108 388 4 4 tgifellipse fill
gsave
   newpath 108 388 4 4 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      472 662 moveto (T) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      507 662 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      518 667 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      500 649 moveto 180 rotate (+) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 594 moveto
      276.67 575.33 277.83 563.17 279.50 557.50 curveto
      281.17 551.83 282.83 548.17 284.50 546.50 curveto
      286.17 544.83 288.50 543.17 291.50 541.50 curveto
      294.50 539.83 298.67 538.67
      304 538 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      304 538 moveto
      336 538 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      356 562 moveto
      392 562 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      392 562 moveto
      428 562 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      428 562 moveto
      428.67 569.33 429.83 574.50 431.50 577.50 curveto
      433.17 580.50 434.83 582.83 436.50 584.50 curveto
      438.17 586.17 441.83 587.83 447.50 589.50 curveto
      453.17 591.17 464.00 592.67
      480 594 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 594 moveto
      481.33 597.33 482.50 599.83 483.50 601.50 curveto
      484.50 603.17 485.33 604.50 486.00 605.50 curveto
      486.67 606.50 488.50 607.83 491.50 609.50 curveto
      494.50 611.17 497.00 612.17 499.00 612.50 curveto
      501.00 612.83 503.83 613.17 507.50 613.50 curveto
      511.17 613.83 516.67 614.00
      524 614 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [2 2] 0 setdash
   newpath
      524 614 moveto
      552 614 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      52 626 moveto
      0 528 atan dup cos 8 mul 580 exch sub
      exch sin 8 mul 626 exch sub lineto
   stroke
grestore
gsave
   newpath
      580 626 8 3 528 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      428 618 moveto
      428 634 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      59 661 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      70 665 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      81 665 moveto (-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      187 661 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      198 665 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      259 661 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      270 665 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      280 665 moveto (+1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      412 662 moveto (T) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      480 618 moveto
      480 634 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 594 moveto
      276 594 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 594 moveto
      204 594 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      152 566 moveto
      152 566 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      584 627 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      76 614 moveto
      76 614 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 594 moveto
      204 594 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      76 618 moveto
      76 634 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      276 618 moveto
      276 634 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 618 moveto
      204 634 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 594 moveto
      207.33 598.67 209.83 602.50 211.50 605.50 curveto
      213.17 608.50 214.17 610.67 214.50 612.00 curveto
      214.83 613.33 215.17 613.83 215.50 613.50 curveto
      215.83 613.17 216.17 612.17 216.50 610.50 curveto
      216.83 608.83 217.83 607.17 219.50 605.50 curveto
      221.17 603.83 222.83 602.83 224.50 602.50 curveto
      226.17 602.17 228.50 601.83 231.50 601.50 curveto
      234.50 601.17 236.67 600.67 238.00 600.00 curveto
      239.33 599.33 242.50 598.50 247.50 597.50 curveto
      252.50 596.50 262.00 595.33
      276 594 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 594 moveto
      204 594 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 594 moveto
      204 594 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      204 618 moveto
      204 634 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 204 594 4 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 204 594 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      48 626 moveto
      204 626 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 204 626 4 4 tgifellipse fill
gsave
   newpath 204 626 4 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      20 642 moveto
      -128 0 atan dup cos 8 mul 20 exch sub
      exch sin 8 mul 514 exch sub lineto
   stroke
grestore
gsave
   newpath
      20 514 8 3 0 -128 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      38 528 moveto (h) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      61 529 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      101 529 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      80 529 moveto (,) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      71 528 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      88 526 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      50 539 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      39 509 moveto (~) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      108 344 moveto
      110.00 334.00 112.50 327.17 115.50 323.50 curveto
      118.50 319.83 121.00 317.33 123.00 316.00 curveto
      125.00 314.67 127.83 314.50 131.50 315.50 curveto
      135.17 316.50 137.67 318.00 139.00 320.00 curveto
      140.33 322.00 141.83 324.50 143.50 327.50 curveto
      145.17 330.50 146.33 332.67 147.00 334.00 curveto
      147.67 335.33 149.17 337.17 151.50 339.50 curveto
      153.83 341.83 155.67 343.50 157.00 344.50 curveto
      158.33 345.50 160.50 346.50 163.50 347.50 curveto
      166.50 348.50 168.83 349.17 170.50 349.50 curveto
      172.17 349.83 175.17 350.50 179.50 351.50 curveto
      183.83 352.50 192.00 354.00
      204 356 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 121 moveto
      106.00 111.00 108.50 104.17 111.50 100.50 curveto
      114.50 96.83 117.00 94.33 119.00 93.00 curveto
      121.00 91.67 123.83 91.50 127.50 92.50 curveto
      131.17 93.50 133.67 95.00 135.00 97.00 curveto
      136.33 99.00 137.83 101.50 139.50 104.50 curveto
      141.17 107.50 142.33 109.67 143.00 111.00 curveto
      143.67 112.33 145.17 114.17 147.50 116.50 curveto
      149.83 118.83 151.67 120.50 153.00 121.50 curveto
      154.33 122.50 156.50 123.50 159.50 124.50 curveto
      162.50 125.50 164.83 126.17 166.50 126.50 curveto
      168.17 126.83 171.17 127.50 175.50 128.50 curveto
      179.83 129.50 188.00 131.00
      200 133 curveto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      476 65 moveto (h) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      498 66 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      538 66 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      517 66 moveto (,) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      509 64 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      525 63 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      488 76 moveto (k) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      548 81 moveto
      460 81 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      460 81 moveto
      44 -24 atan dup cos 8 mul 436 exch sub
      exch sin 8 mul 125 exch sub lineto
   stroke
grestore
gsave
   newpath
      436 125 8 3 -24 44 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      331 45 moveto (t) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [2 2] 0 setdash
   newpath
      204 626 moveto
      204 538 lineto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      312 244 moveto (\(a \)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      312 465 moveto (\(b \)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      313 704 moveto (\(c \)) show
   grestore

% BOX
newpath
   336 614 moveto 388 614 lineto 388 638 lineto 336 638 lineto
closepath 1 setgray fill
0 setgray

% BOX
newpath
   336 372 moveto 388 372 lineto 388 396 lineto 336 396 lineto
closepath 1 setgray fill
0 setgray

% BOX
newpath
   336 153 moveto 388 153 lineto 388 177 lineto 336 177 lineto
closepath 1 setgray fill
0 setgray

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      328 165 moveto
      396 165 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      328 388 moveto
      396 388 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      328 626 moveto
      396 626 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      4 165 moveto
      36 165 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [12 4 4 4 4 4] 0 setdash
   newpath
      4 165 moveto
      36 165 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      38 153 moveto
      41.33 157.00 42.50 159.83 41.50 161.50 curveto
      40.50 163.17 39.17 164.33 37.50 165.00 curveto
      35.83 165.67 34.50 166.83 33.50 168.50 curveto
      32.50 170.17 34.00 173.00
      38 177 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      48 153 moveto
      50.67 157.00 51.50 159.83 50.50 161.50 curveto
      49.50 163.17 48.33 164.33 47.00 165.00 curveto
      45.67 165.67 44.50 166.83 43.50 168.50 curveto
      42.50 170.17 44.00 173.00
      48 177 curveto
   stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      12 171 moveto 180 rotate (0) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      4 388 moveto
      36 388 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      38 376 moveto
      41.33 380.00 42.50 382.83 41.50 384.50 curveto
      40.50 386.17 39.17 387.33 37.50 388.00 curveto
      35.83 388.67 34.50 389.83 33.50 391.50 curveto
      32.50 393.17 34.00 396.00
      38 400 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      48 376 moveto
      50.67 380.00 51.50 382.83 50.50 384.50 curveto
      49.50 386.17 48.33 387.33 47.00 388.00 curveto
      45.67 388.67 44.50 389.83 43.50 391.50 curveto
      42.50 393.17 44.00 396.00
      48 400 curveto
   stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      13 393 moveto 180 rotate (0) show
      -180 rotate 
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      4 626 moveto
      36 626 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      38 614 moveto
      41.33 618.00 42.50 620.83 41.50 622.50 curveto
      40.50 624.17 39.17 625.33 37.50 626.00 curveto
      35.83 626.67 34.50 627.83 33.50 629.50 curveto
      32.50 631.17 34.00 634.00
      38 638 curveto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      48 614 moveto
      50.67 618.00 51.50 620.83 50.50 622.50 curveto
      49.50 624.17 48.33 625.33 47.00 626.00 curveto
      45.67 626.67 44.50 627.83 43.50 629.50 curveto
      42.50 631.17 44.00 634.00
      48 638 curveto
   stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      12 631 moveto 180 rotate (0) show
      -180 rotate 
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      382 200 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      392 207 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      30 35 moveto (h) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      58 36 moveto (\() show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      98 36 moveto (\)) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      78 36 moveto (,) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      69 34 moveto (t) show
   grestore

% TEXT
0 setgray
/Symbol findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      85 34 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      45 46 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      500 201 moveto (t) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Sep  4 12:03:54 1998
%%EndDocument

 endTexFig
 561 4448 a FH(Figure)30 b(B.1:)42 b(Illustration)28
b(of)i FG(h)1677 4463 y FB(k)1720 4448 y FH(\()p FG(t;)15
b(\034)10 b FH(\))32 b(and)d(its)h(decomp)s(osition)f(according)h(to)h
(\(B.5\).)p eop
%%Page: 155 168
155 167 bop 3764 -200 a FH(155)300 99 y(Applying)28 b(\(B.8\))k(to)f
(\(B.1\))h(and)e(\(B.2\))i(mak)m(es)1477 416 y FD(q)1532
431 y FB(k)1658 416 y FH(=)83 b(0)1837 b(\(B.9\))1287
642 y(^)1286 666 y FG(h)1338 681 y FB(k)1381 666 y FH(\()p
FG(t;)15 b(\034)10 b FH(\))84 b(=)f FD(D)1892 681 y FB(k)1934
666 y FG(\016)s FH(\()p FG(t)22 b Fz(\000)e FG(\034)10
b FH(\))182 b(where)30 b FG(t)25 b Fz(2)g FG(I)2872 681
y FB(k)3649 666 y FH(\(B.10\))301 960 y(~)300 984 y FG(h)p
FH(\()p FG(t;)15 b(\034)10 b FH(\))36 b FD(in)f(in)m(terv)-6
b(al)35 b FG(I)1123 999 y FB(k)r FA(+1)p 300 1020 956
4 v 536 1209 a FH(Prop)s(erties)29 b(of)i(\(B.1\))h(and)e(\(B.2\))i
(are:)1263 1450 y FG(m)25 b FH(=)g FG(k)f FH(+)c(1)p
FG(;)288 b(t)25 b Fz(2)g FG(I)2168 1465 y FB(k)r FA(+1)2301
1450 y FG(;)1263 1620 y(u)p FH(\()p FG(t)p FH(\))h(=)f
FG(\016)s FH(\()p FG(t)c Fz(\000)f FG(\034)10 b FH(\))26
b(=)f(0)273 b(b)s(ecause)91 b FG(t)25 b Fz(62)g FG(I)2869
1635 y FB(k)2911 1620 y FG(;)1263 1789 y(u)p FH(\()p
FG(t)1383 1804 y FB(k)1426 1789 y FH(\))h(=)f FG(\016)s
FH(\()p FG(t)1694 1804 y FB(k)1758 1789 y Fz(\000)20
b FG(\034)10 b FH(\))273 b(b)s(ecause)91 b FG(t)2637
1804 y FB(k)2704 1789 y Fz(2)25 b FG(I)2830 1804 y FB(k)2873
1789 y FG(;)1263 1958 y FD(q)1318 1973 y FB(k)1386 1958
y FH(=)g(0)273 b(from)30 b(\(B.9\))1263 2128 y FG(y)s
FH(\()p FG(t)p FH(\))c(=)1537 2104 y(~)1536 2128 y FG(h)1588
2143 y FB(k)1631 2128 y FH(\()p FG(t;)15 b(\034)10 b
FH(\))3649 1778 y(\(B.11\))300 2346 y(Applying)28 b(\(B.11\))33
b(to)e(\(B.1\))h(and)d(\(B.2\))k(results)c(in,)1445 2663
y FD(q)1500 2678 y FB(k)r FA(+1)1716 2663 y FH(=)83 b
FD(B)1944 2678 y FB(k)r FA(+1)2077 2663 y FG(\016)s FH(\()p
FG(t)2188 2678 y FB(k)2252 2663 y Fz(\000)20 b FG(\034)10
b FH(\))1221 b(\(B.12\))1345 2890 y(~)1344 2914 y FG(h)1396
2929 y FB(k)1439 2914 y FH(\()p FG(t;)15 b(\034)10 b
FH(\))84 b(=)f FD(C)1946 2877 y FB(t)1946 2937 y(k)r
FA(+1)2078 2914 y FD(q)2133 2929 y FB(k)r FA(+1)2539
2914 y FG(t)25 b Fz(2)g FG(I)2723 2929 y FB(k)r FA(+1)3649
2914 y FH(\(B.13\))301 3207 y(~)300 3231 y FG(h)p FH(\()p
FG(t;)15 b(\034)10 b FH(\))36 b FD(in)f(in)m(terv)-6
b(als)35 b FG(I)1164 3245 y FB(nN)7 b FA(+)p FB(i)1388
3231 y FD(where)34 b FG(nN)c FH(+)20 b FG(i)26 b(>)f(k)e
FH(+)d(1)p 300 3267 2004 4 v 536 3457 a(Prop)s(erties)29
b(of)i(\(B.1\))h(and)e(\(B.2\))i(are:)506 3698 y FG(m)25
b FH(=)g FG(nN)30 b FH(+)20 b FG(i;)107 b FH(where)30
b FG(n)24 b Fz(2)h(f)p FH(0)p FG(;)15 b FH(1)p FG(;)g
FH(2)p FG(;)g(:)g(:)g(:)t Fz(g)p FG(;)107 b(i)26 b Fz(2)e(f)p
FH(1)p FG(;)15 b FH(2)p FG(;)g(:)g(:)g(:)k(;)c(N)10 b
Fz(g)31 b FH(and)f(\()p FG(nN)g FH(+)20 b FG(i)p FH(\))26
b FG(>)f(k)e FH(+)d(1)p FG(;)506 3867 y(t)25 b Fz(2)g
FG(I)690 3881 y FB(nN)7 b FA(+)p FB(i)879 3867 y FG(;)506
4037 y(u)p FH(\()p FG(t)p FH(\))26 b(=)f(0)p FG(;)506
4206 y(u)p FH(\()p FG(t)626 4220 y FB(nN)7 b FA(+)p FB(i)p
Fv(\000)p FA(1)906 4206 y FH(\))25 b(=)g(0)506 4376 y
FD(A)585 4390 y FB(nN)7 b FA(+)p FB(i)800 4376 y FH(=)25
b FD(A)975 4390 y FB(i)1276 4376 y FH(and)272 b FD(C)1771
4390 y FB(nN)7 b FA(+)p FB(i)1984 4376 y FH(=)25 b FD(C)2156
4390 y FB(i)3649 4503 y FH(\(B.14\))300 4729 y(Applying)j(\(B.14\))33
b(to)e(\(B.1\))h(and)d(\(B.2\))k(results)c(in,)1385 5046
y FD(q)1440 5060 y FB(nN)7 b FA(+)p FB(i)1712 5046 y
FH(=)82 b FD(A)1944 5060 y FB(i)1973 5046 y FD(q)2028
5060 y FB(nN)7 b FA(+)p FB(i)p Fv(\000)p FA(1)3649 5046
y FH(\(B.15\))1341 5273 y(~)1340 5296 y FG(h)1392 5311
y FB(k)1435 5296 y FH(\()p FG(t;)15 b(\034)10 b FH(\))84
b(=)e FD(C)1941 5259 y FB(t)1941 5319 y(i)1971 5296 y
FD(q)2026 5310 y FB(nN)7 b FA(+)p FB(i)2487 5296 y FG(t)26
b Fz(2)e FG(I)2671 5310 y FB(nN)7 b FA(+)p FB(i)3649
5296 y FH(\(B.16\))p eop
%%Page: 156 169
156 168 bop 3764 -200 a FH(156)300 99 y(Giv)m(en)31 b
FD(q)619 114 y FB(k)r FA(+1)783 99 y FH(in)f(\(B.12\),)k(the)d
(equations)g(\(B.15\))j(and)c(\(B.16\))k(can)d(b)s(e)g(used)f(to)i
(describ)s(e)3472 75 y(~)3471 99 y FG(h)3523 114 y FB(k)3566
99 y FH(\()p FG(t;)15 b(\034)10 b FH(\))32 b(for)300
324 y(an)m(y)f FG(t)25 b Fz(2)g FG(I)656 338 y FB(m)752
324 y FH(where)30 b FG(m)25 b(>)g(k)f FH(+)c(1.)536 550
y(F)-8 b(or)31 b(in)m(terv)-5 b(als)30 b FG(I)1104 564
y FB(i)1162 550 y FH(where)g FG(k)23 b FH(+)d(1)26 b
FG(<)f(i)h Fz(\024)f FG(N)30 b FH(+)20 b(1)1471 839 y
FD(q)1526 853 y FB(i)1580 839 y FH(=)25 b FD(A)1755 853
y FB(i)1783 839 y FD(A)1862 853 y FB(i)p Fv(\000)p FA(1)1996
839 y Fz(\001)15 b(\001)g(\001)h FD(A)2196 854 y FB(k)r
FA(+3)2329 839 y FD(A)2408 854 y FB(k)r FA(+2)2541 839
y FD(q)2596 854 y FB(k)r FA(+1)3649 839 y FH(\(B.17\))300
1128 y(and)30 b(from)g(\(B.16\))943 1393 y(~)942 1417
y FG(h)994 1432 y FB(k)1037 1417 y FH(\()p FG(t;)15 b(\034)10
b FH(\))26 b(=)f FD(C)1428 1379 y FB(t)1428 1439 y(i)1457
1417 y FD(A)1536 1431 y FB(i)1565 1417 y FD(A)1644 1431
y FB(i)p Fv(\000)p FA(1)1777 1417 y Fz(\001)15 b(\001)g(\001)h
FD(A)1977 1432 y FB(k)r FA(+3)2110 1417 y FD(A)2189 1432
y FB(k)r FA(+2)2322 1417 y FD(q)2377 1432 y FB(k)r FA(+1)2783
1417 y FH(where)30 b FG(t)25 b Fz(2)g FG(I)3230 1431
y FB(i)3649 1417 y FH(\(B.18\))300 1705 y(Both)31 b(\(B.13\))i(and)c
(\(B.18\))k(can)e(b)s(e)e(expressed)h(together)i(as)939
1970 y(~)938 1994 y FG(h)990 2009 y FB(k)1033 1994 y
FH(\()p FG(t;)15 b(\034)10 b FH(\))26 b(=)f FD(C)1424
1957 y FB(t)1424 2017 y(i)1453 1994 y FD(P)1524 2009
y FB(k)r(;i)1611 1994 y FD(q)1666 2009 y FB(k)r FA(+1)1799
1994 y FG(;)197 b(t)26 b Fz(2)e FG(I)2205 2008 y FB(i)2234
1994 y FG(;)197 b(i)25 b Fz(2)g(f)p FH(2)p FG(;)15 b
FH(3)p FG(;)g(:)g(:)g(:)k(;)c(N)30 b FH(+)20 b(1)p Fz(g)388
b FH(\(B.19\))300 2283 y(b)m(y)30 b(de\014ning)1268 2586
y FD(P)1339 2601 y FB(k)r(;i)1451 2586 y FH(=)1547 2314
y Ft(8)1547 2389 y(>)1547 2414 y(>)1547 2438 y(>)1547
2463 y(>)1547 2488 y(<)1547 2638 y(>)1547 2663 y(>)1547
2687 y(>)1547 2712 y(>)1547 2737 y(:)1662 2427 y FD(0)684
b FH(if)29 b FG(i)d Fz(\024)f FG(k)s(;)1662 2597 y FD(1)684
b FH(if)29 b FG(i)d FH(=)f FG(k)e FH(+)d(1)p FG(;)1662
2766 y FD(A)1741 2780 y FB(i)1769 2766 y FD(A)1848 2780
y FB(i)p Fv(\000)p FA(1)1982 2766 y Fz(\001)15 b(\001)g(\001)h
FD(A)2182 2781 y FB(k)r FA(+2)2398 2766 y FH(if)29 b
FG(i)d(>)f(k)e FH(+)d(1)p FG(:)3649 2586 y FH(\(B.20\))301
2926 y(~)300 2950 y FG(h)p FH(\()p FG(t;)15 b(\034)10
b FH(\))36 b FD(in)f(in)m(terv)-6 b(als)35 b FG(I)1164
2964 y FB(m)1266 2950 y FD(where)f FG(m)25 b(>)g(N)30
b FH(+)20 b(1)p 300 2986 1714 4 v 536 3176 a(Note)32
b FD(q)811 3190 y FB(N)7 b FA(+1)994 3176 y FH(=)25 b
FD(P)1161 3191 y FB(k)r(;N)7 b FA(+1)1377 3176 y FD(q)1432
3191 y FB(k)r FA(+1)1565 3176 y FH(.)40 b(By)31 b(in)m(tro)s(ducing)
1143 3464 y FD(S)1201 3478 y FB(i)1254 3464 y FH(=)25
b FD(A)1429 3478 y FB(i)1458 3464 y FD(A)1537 3478 y
FB(i)p Fv(\000)p FA(1)1655 3464 y FD(A)1734 3478 y FB(i)p
Fv(\000)p FA(2)1868 3464 y Fz(\001)15 b(\001)g(\001)h
FD(A)2068 3478 y FA(3)2107 3464 y FD(A)2186 3478 y FA(2)2498
3464 y FH(2)26 b Fz(\024)f FG(i)h Fz(\024)f FG(N)30 b
FH(+)20 b(1)592 b(\(B.21\))300 3753 y(and)30 b(using)f(\(B.15\))j
(recursiv)m(ely)-8 b(,)30 b(the)g(follo)m(wing)f(can)i(b)s(e)f
(written:)1410 3966 y FD(q)1465 3980 y FB(N)7 b FA(+)p
FB(i)1694 3966 y FH(=)83 b FD(S)1906 3980 y FB(i)1934
3966 y FD(P)2005 3981 y FB(k)r(;N)7 b FA(+1)2221 3966
y FD(q)2276 3981 y FB(k)r FA(+1)1375 4135 y FD(q)1430
4149 y FA(2)p FB(N)g FA(+)p FB(i)1694 4135 y FH(=)83
b FD(S)1906 4149 y FB(i)1934 4135 y FD(S)1992 4149 y
FB(N)7 b FA(+1)2150 4135 y FD(P)2221 4150 y FB(k)r(;N)g
FA(+1)2437 4135 y FD(q)2492 4150 y FB(k)r FA(+1)1375
4304 y FD(q)1430 4318 y FA(3)p FB(N)g FA(+)p FB(i)1694
4304 y FH(=)83 b FD(S)1906 4318 y FB(i)1934 4304 y FH(\()p
FD(S)2027 4318 y FB(N)7 b FA(+1)2185 4304 y FH(\))2220
4272 y FA(2)2260 4304 y FD(P)2331 4319 y FB(k)r(;N)g
FA(+1)2547 4304 y FD(q)2602 4319 y FB(k)r FA(+1)1717
4415 y FH(.)1717 4448 y(.)1717 4481 y(.)1367 4650 y FD(q)1422
4664 y FB(nN)g FA(+)p FB(i)1694 4650 y FH(=)83 b FD(S)1906
4664 y FB(i)1934 4650 y FH(\()p FD(S)2027 4664 y FB(N)7
b FA(+1)2185 4650 y FH(\))2220 4618 y FB(n)p Fv(\000)p
FA(1)2358 4650 y FD(P)2429 4665 y FB(k)r(;N)g FA(+1)2645
4650 y FD(q)2700 4665 y FB(k)r FA(+1)1717 4761 y FH(.)1717
4794 y(.)1717 4827 y(.)3649 4385 y(\(B.22\))300 5017
y(Substituting)28 b(\(B.22\))k(in)m(to)f(\(B.16\))h(results)d(in,)1351
5209 y(~)1350 5233 y FG(h)1402 5248 y FB(k)1445 5233
y FH(\()p FG(t;)15 b(\034)10 b FH(\))26 b(=)f FD(C)1836
5200 y FB(t)1836 5257 y(i)1865 5233 y FD(S)1923 5247
y FB(i)1952 5233 y FH(\()p FD(S)2045 5247 y FB(N)7 b
FA(+1)2202 5233 y FH(\))2237 5200 y FB(n)p Fv(\000)p
FA(1)2375 5233 y FD(P)2446 5248 y FB(k)r(;N)g FA(+1)2662
5233 y FD(q)2717 5248 y FB(k)r FA(+1)849 5402 y FH(where)30
b FG(t)25 b Fz(2)g FG(I)1296 5416 y FB(nN)7 b FA(+)p
FB(i)1485 5402 y FG(;)197 b(n)25 b Fz(2)g(f)p FH(1)p
FG(;)15 b FH(2)p FG(;)g(:)g(:)g(:)33 b Fz(1g)183 b FG(i)25
b Fz(2)g(f)p FH(2)p FG(;)15 b FH(3)p FG(;)g(:)g(:)g(:)j(;)d(N)31
b FH(+)20 b(1)p Fz(g)3649 5306 y FH(\(B.23\))p eop
%%Page: 157 170
157 169 bop 3764 -200 a FH(157)536 99 y(With)24 b(\(B.19\),)j(\(B.16\))
f(and)d(\(B.10\),)28 b FG(h)1865 114 y FB(k)1908 99 y
FH(\()p FG(t;)15 b(\034)10 b FH(\))25 b(is)e(expressed)g(analytically)f
FC(within)j FH(an)m(y)f(switc)m(hing)300 324 y(in)m(terv)-5
b(al.)536 550 y(Next,)34 b(an)d(analytical)h(expression)e(is)h
(de\014ned)g(for)h FG(h)2372 565 y FB(k)2415 550 y FH(\()p
FG(t;)15 b(\034)10 b FH(\))32 b(whic)m(h)f(is)g(v)-5
b(alid)30 b(for)i(all)f(time)g FG(t)p FH(.)45 b(T)-8
b(o)300 776 y(do)30 b(that,)h(it)f(is)g(necessary)h(to)g(de\014ne)e(a)i
(the)g(gating)f(function)350 802 y
 11511808 7433339 131563 44468469 11643371 51901808 startTexFig
 350 802 a
%%BeginDocument: figs/gating.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      40 144 moveto
      0 272 atan dup cos 10 mul 312 exch sub
      exch sin 10 mul 144 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      312 144 10 4 272 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      232 160 moveto
      232 64 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      96 191 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      107 197 moveto (m-1) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      224 191 moveto (t) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      235 197 moveto (m) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      8 31 moveto (v  \(t\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      16 37 moveto (m) show
   grestore

% POLY/OPEN-SPLINE
gsave
   4 setlinewidth
   newpath
      103 63 moveto
      226 63 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 160 moveto
      -128 0 atan dup cos 10 mul 64 exch sub
      exch sin 10 mul 32 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      64 32 10 4 0 -128 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 64 moveto
      72 64 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      32 70 moveto (1) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      16 150 moveto (0) show
   grestore

% POLY/OPEN-SPLINE
gsave
   4 setlinewidth
   newpath
      47 143 moveto
      98 143 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   4 setlinewidth
   newpath
      239 143 moveto
      298 143 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   [4 4] 0 setdash
   newpath
      104 160 moveto
      104 64 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

% OVAL
newpath 103 142 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 103 142 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 103 62 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 231 142 6 6 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 231 62 6 6 tgifellipse fill
gsave
   2 setlinewidth
   newpath 231 62 6 6 tgifellipse stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Fri Oct  9 18:05:23 1998
%%EndDocument

 endTexFig
 2062 1310 a FG(v)2106 1324 y FB(m)2172 1310 y FH(\()p
FG(t)p FH(\))c(=)2397 1113 y Ft(8)2397 1188 y(>)2397
1212 y(<)2397 1362 y(>)2397 1387 y(:)2513 1236 y FH(1)k(if)g
FG(t)2705 1250 y FB(m)p Fv(\000)p FA(1)2886 1236 y Fz(\024)25
b FG(t)g(<)g(t)3169 1250 y FB(m)2513 1406 y FH(0)30 b(otherwise.)3457
1310 y(\(B.24\))300 1820 y(Then,)g(using)f(\(B.10\),)j(\(B.19\))h(and)d
(\(B.23\),)410 2082 y(~)409 2106 y FG(h)461 2121 y FB(k)504
2106 y FH(\()p FG(t;)15 b(\034)10 b FH(\))27 b(=)820
2001 y FB(N)7 b FA(+1)836 2025 y Ft(X)839 2208 y FB(i)p
FA(=2)988 2106 y FG(v)1032 2120 y FB(i)1060 2106 y FH(\()p
FG(t)p FH(\))p FD(C)1239 2069 y FB(t)1239 2129 y(i)1269
2106 y FD(P)1340 2121 y FB(k)r(;i)1427 2106 y FD(q)1482
2121 y FB(k)r FA(+1)1635 2106 y FH(+)1757 2001 y Fv(1)1732
2025 y Ft(X)1726 2207 y FB(n)p FA(=1)1874 2001 y FB(N)g
FA(+1)1891 2025 y Ft(X)1894 2208 y FB(i)p FA(=2)2042
2106 y FG(v)2086 2120 y FB(i)2115 2106 y FH(\()p FG(t)20
b Fz(\000)g FG(nT)13 b FH(\))p FD(C)2526 2069 y FB(t)2526
2129 y(i)2555 2106 y FD(S)2613 2120 y FB(i)2641 2106
y FH(\()p FD(S)2734 2120 y FB(N)7 b FA(+1)2892 2106 y
FH(\))2927 2069 y FB(n)p Fv(\000)p FA(1)3064 2106 y FD(P)3135
2121 y FB(k)r(;N)g FA(+1)3351 2106 y FD(q)3406 2121 y
FB(k)r FA(+1)3649 2106 y FH(\(B.25\))300 2392 y(and)1585
2594 y(^)1584 2618 y FG(h)1636 2633 y FB(k)1679 2618
y FH(\()p FG(t;)15 b(\034)10 b FH(\))26 b(=)f FG(v)2038
2633 y FB(k)2081 2618 y FH(\()p FG(t)p FH(\))p FD(D)2264
2633 y FB(k)2307 2618 y FG(\016)s FH(\()p FG(t)d Fz(\000)e
FG(\034)10 b FH(\))1033 b(\(B.26\))300 2883 y(Note,)27
b(that)731 2859 y(^)730 2883 y FG(h)q FH(\()p FG(t;)15
b(\034)10 b FH(\))24 b(is)f(a)i(function)d(of)i FD(D)1681
2898 y FB(k)1748 2883 y FH(while)1980 2859 y(~)1979 2883
y FG(h)p FH(\()p FG(t;)15 b(\034)10 b FH(\))25 b(is)e(a)h(function)f
(of)h FD(A)2929 2898 y FB(k)2972 2883 y FH(,)h FD(B)3096
2898 y FB(k)3139 2883 y FH(,)g(and)f FD(C)3436 2898 y
FB(k)3478 2883 y FH(.)38 b(F)-8 b(rom)25 b(the)300 3108
y(net)m(w)m(ork)e(equations)f(in)f(\(B.1\))k(and)c(\(B.2\))k(it)c(can)i
(b)s(e)f(seen)g(that)h FD(D)2576 3123 y FB(k)2642 3108
y FH(represen)m(ts)f(the)g(con)m(tin)m(uous)h(input-)300
3334 y(output)34 b(path.)54 b(Therefore,)1306 3310 y(^)1305
3334 y FG(h)q FH(\()p FG(t;)15 b(\034)10 b FH(\))35 b(is)f(the)h(part)f
(of)h(the)g(impulse)d(resp)s(onse)i(due)g(to)h(the)g(con)m(tin)m(uous)
300 3560 y(input-output)c(path)i(while)1298 3536 y(~)1298
3560 y FG(h)p FH(\()p FG(t;)15 b(\034)10 b FH(\))34 b(is)e(the)h(part)g
(due)f(to)i(the)f(sampling.)46 b(In)32 b(the)h(follo)m(wing)f
(sections,)300 3786 y FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))31 b(and)f FG(H)887 3800 y FB(n)934 3786 y FH(\()p
FG(!)s FH(\))g(will)e(also)i(b)s(e)g(decomp)s(osed)g(in)f(this)h(w)m(a)
m(y)-8 b(.)300 4067 y FL(B.2)135 b(Deriving)46 b Fl(H)9
b FJ(\()p Fl(!)t(;)20 b(\034)13 b FJ(\))300 4383 y FG(H)7
b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))31 b(is)f(the)g(F)-8
b(ourier)30 b(transform)g(of)g FG(h)p FH(\()p FG(t;)15
b(\034)10 b FH(\).)42 b(The)30 b(decomp)s(osition)f(in)g(\(B.5\))j
(lead)e(to)574 4669 y FG(H)650 4684 y FB(k)693 4669 y
FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))26 b(=)1035 4472
y Ft(8)1035 4547 y(>)1035 4572 y(<)1035 4721 y(>)1035
4746 y(:)1150 4596 y FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))84 b(if)29 b FG(t)1653 4611 y FB(k)r Fv(\000)p
FA(1)1811 4596 y FG(<)c(\034)36 b Fz(\024)25 b FG(t)2112
4611 y FB(k)1150 4765 y FH(0)342 b(otherwise,)2493 4669
y(where)30 b FG(k)f Fz(2)c FH(1)p FG(;)15 b FH(2)p FG(;)g(:)g(:)g(:)j
(;)d(N)10 b(;)290 b FH(\(B.27\))300 4956 y(where)31 b
FG(H)640 4971 y FB(k)682 4956 y FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))32 b(is)e(the)i(F)-8 b(ourier)31 b(transform)f(of)h
FG(h)2074 4971 y FB(k)2118 4956 y FH(\()p FG(t;)15 b(\034)10
b FH(\).)44 b(According)31 b(to)h(\(B.6\))h FG(H)3238
4971 y FB(k)3280 4956 y FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))32 b(is)e(further)300 5181 y(decomp)s(osed)g(in)m(to)1455
5407 y FG(H)1531 5422 y FB(k)1573 5407 y FH(\()p FG(!)s(;)15
b(\034)10 b FH(\))26 b(=)1939 5384 y(^)1915 5407 y FG(H)1991
5422 y FB(k)2033 5407 y FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))22 b(+)2389 5384 y(~)2366 5407 y FG(H)2442 5422
y FB(k)2484 5407 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))p
FG(;)920 b FH(\(B.28\))p eop
%%Page: 158 171
158 170 bop 3764 -200 a FH(158)300 99 y(where)580 76
y(^)556 99 y FG(H)632 114 y FB(k)674 99 y FH(\()p FG(!)s(;)15
b(\034)10 b FH(\))24 b(and)1112 76 y(~)1088 99 y FG(H)1164
114 y FB(k)1206 99 y FH(\()p FG(!)s(;)15 b(\034)10 b
FH(\))25 b(are)e(the)h(F)-8 b(ourier)23 b(transforms)f(of)2597
75 y(^)2596 99 y FG(h)2648 114 y FB(k)2691 99 y FH(\()p
FG(t;)15 b(\034)10 b FH(\))24 b(and)3079 75 y(~)3078
99 y FG(h)3130 114 y FB(k)3173 99 y FH(\()p FG(t;)15
b(\034)10 b FH(\),)26 b(resp)s(ectiv)m(ely)-8 b(.)300
324 y FD(Deriving)753 301 y FH(^)730 324 y FG(H)806 339
y FB(k)848 324 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))p
300 360 804 4 v 536 550 a(Using)30 b(\(B.26\))1287 844
y(^)1263 867 y FG(H)1339 882 y FB(k)1381 867 y FH(\()p
FG(!)s(;)15 b(\034)10 b FH(\))84 b(=)1839 752 y Ft(Z)1922
779 y Fv(1)1885 941 y(\0001)2030 867 y FG(v)2074 882
y FB(k)2117 867 y FH(\()p FG(t)p FH(\))p FD(D)2300 882
y FB(k)2343 867 y FG(\016)s FH(\()p FG(t)21 b Fz(\000)f
FG(\034)10 b FH(\))p FG(e)2693 830 y Fv(\000)p FB(j)t(!)r(t)2857
867 y FG(dt)1685 1118 y FH(=)1839 1003 y Ft(Z)1922 1029
y FB(t)1947 1041 y Fu(k)1885 1192 y FB(t)1910 1204 y
Fu(k)q Fr(\000)p Fs(1)2046 1118 y FD(D)2126 1133 y FB(k)2169
1118 y FG(\016)s FH(\()p FG(t)21 b Fz(\000)f FG(\034)10
b FH(\))p FG(e)2519 1080 y Fv(\000)p FB(j)t(!)r(t)2683
1118 y FG(dt)1287 1346 y FH(^)1263 1369 y FG(H)1339 1384
y FB(k)1381 1369 y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))84
b(=)f FD(D)1919 1384 y FB(k)1962 1369 y FG(e)2004 1331
y Fv(\000)p FB(j)t(!)r(\034)3649 1369 y FH(\(B.29\))300
1686 y FD(Deriving)753 1663 y FH(~)730 1686 y FG(H)806
1701 y FB(k)848 1686 y FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))p 300 1722 V 536 1912 a(Note)22 b(that)g(the)f(only)f(dep)s
(endence)g(on)g(the)h(time)g(v)-5 b(ariable)19 b FG(t)i
FH(in)f(\(B.25\))j(is)c(in)h FG(v)3186 1926 y FB(i)3214
1912 y FH(\()p FG(t)p FH(\))i(and)e FG(v)3550 1926 y
FB(i)3578 1912 y FH(\()p FG(t)q Fz(\000)q FG(nT)13 b
FH(\).)300 2138 y(Let)1743 2363 y FG(V)1796 2377 y FB(i)1824
2363 y FH(\()p FG(!)s FH(\))26 b(=)f Fz(F)9 b(f)p FG(v)2239
2377 y FB(i)2268 2363 y FH(\()p FG(t)p FH(\))p Fz(g)p
FG(;)1208 b FH(\(B.30\))300 2643 y(where)36 b Fz(F)9
b(f\001g)38 b FH(represen)m(ts)e(the)h(F)-8 b(ourier)36
b(transform)g(op)s(eration.)58 b(Due)37 b(to)g(the)g(shift)e(prop)s
(ert)m(y)h(of)h(the)300 2869 y(F)-8 b(ourier)30 b(transform,)1498
3095 y FG(V)1551 3109 y FB(i)1579 3095 y FH(\()p FG(!)s
FH(\))p FG(e)1751 3057 y Fv(\000)p FB(j)t(!)r(nT)2009
3095 y FH(=)24 b Fz(F)9 b(f)p FG(v)2267 3109 y FB(i)2297
3095 y FH(\()p FG(t)20 b Fz(\000)g FG(nT)13 b FH(\))p
Fz(g)p FG(:)947 b FH(\(B.31\))300 3375 y(T)-8 b(aking)30
b(the)h(F)-8 b(ourier)29 b(transform)h(of)h(\(B.25\))h(and)e(using)f
(\(B.30\))j(and)e(\(B.31\))j(results)c(in)449 3669 y(~)425
3692 y FG(H)501 3707 y FB(k)543 3692 y FH(\()p FG(!)s(;)15
b(\034)10 b FH(\))27 b(=)885 3586 y FB(N)7 b FA(+1)902
3611 y Ft(X)905 3793 y FB(i)p FA(=2)1054 3692 y FG(V)1107
3706 y FB(i)1135 3692 y FH(\()p FG(!)s FH(\))p FD(C)1341
3654 y FB(t)1341 3714 y(i)1371 3692 y FD(P)1442 3707
y FB(k)r(;i)1529 3692 y FD(q)1584 3707 y FB(k)r FA(+1)1737
3692 y FH(+)1859 3586 y Fv(1)1834 3611 y Ft(X)1828 3792
y FB(n)p FA(=1)1976 3586 y FB(N)g FA(+1)1992 3611 y Ft(X)1995
3793 y FB(i)p FA(=2)2144 3692 y FG(V)2197 3706 y FB(i)2225
3692 y FH(\()p FG(!)s FH(\))p FG(e)2397 3654 y Fv(\000)p
FB(j)t(!)r(nT)2630 3692 y FD(C)2706 3654 y FB(t)2706
3714 y(i)2735 3692 y FD(S)2793 3706 y FB(i)2821 3692
y FH(\()p FD(S)2914 3706 y FB(N)g FA(+1)3072 3692 y FH(\))3107
3654 y FB(n)p Fv(\000)p FA(1)3244 3692 y FD(P)3315 3707
y FB(k)r(;N)g FA(+1)3531 3692 y FD(q)3586 3707 y FB(k)r
FA(+1)3750 3692 y FH(.)3649 3917 y(\(B.32\))300 4143
y(Rearranging)30 b(terms)g(in)f(\(B.32\))k(giv)m(es)498
4437 y(~)474 4460 y FG(H)550 4475 y FB(k)593 4460 y FH(\()p
FG(!)s(;)15 b(\034)10 b FH(\))26 b(=)935 4355 y FB(N)7
b FA(+1)951 4380 y Ft(X)954 4562 y FB(i)p FA(=2)1103
4460 y FG(V)1156 4474 y FB(i)1184 4460 y FH(\()p FG(!)s
FH(\))p FD(C)1390 4423 y FB(t)1390 4483 y(i)1435 4317
y Ft( )1501 4460 y FD(P)1572 4475 y FB(k)r(;i)1679 4460
y FH(+)20 b FD(S)1828 4474 y FB(i)1871 4317 y Ft( )1968
4355 y Fv(1)1943 4380 y Ft(X)1937 4561 y FB(n)p FA(=1)2085
4460 y FG(e)2127 4423 y Fv(\000)p FB(j)t(!)r(nT)2359
4460 y FH(\()p FD(S)2452 4474 y FB(N)7 b FA(+1)2610 4460
y FH(\))2645 4423 y FB(n)p Fv(\000)p FA(1)2782 4317 y
Ft(!)2863 4460 y FD(P)2934 4475 y FB(k)r(;N)g FA(+1)3150
4317 y Ft(!)3231 4460 y FD(q)3286 4475 y FB(k)r FA(+1)3449
4460 y FH(.)175 b(\(B.33\))300 4778 y(The)30 b(in\014nite)e(summation)h
(in)g(\(B.33\))k(is)c(a)i(geometric)g(progression.)567
4937 y Fv(1)542 4962 y Ft(X)536 5143 y FB(n)p FA(=1)684
5043 y FG(e)726 5005 y Fv(\000)p FB(j)t(!)r(nT)958 5043
y FH(\()p FD(S)1051 5057 y FB(N)7 b FA(+1)1208 5043 y
FH(\))1243 5005 y FB(n)p Fv(\000)p FA(1)1406 5043 y FH(=)83
b FG(e)1602 5005 y Fv(\000)p FB(j)t(!)r(T)1837 4937 y
Fv(1)1812 4962 y Ft(X)1806 5143 y FB(n)p FA(=1)1954 5043
y FG(e)1996 5005 y Fv(\000)p FB(j)t(!)r FA(\()p FB(n)p
Fv(\000)p FA(1\))p FB(T)2373 5043 y FH(\()p FD(S)2466
5057 y FB(N)7 b FA(+1)2624 5043 y FH(\))2659 5005 y FB(n)p
Fv(\000)p FA(1)1406 5294 y FH(=)83 b FG(e)1602 5256 y
Fv(\000)p FB(j)t(!)r(T)1837 5188 y Fv(1)1812 5213 y Ft(X)1806
5394 y FB(n)p FA(=0)1939 5294 y FH(\()p FG(e)2016 5256
y Fv(\000)p FB(j)t(!)r(T)2205 5294 y FD(S)2263 5308 y
FB(N)7 b FA(+1)2421 5294 y FH(\))2456 5256 y FB(n)2528
5294 y FH(=)2624 5200 y Ft(\020)2674 5294 y FG(e)2716
5256 y FB(j)t(!)r(T)2850 5294 y FD(1)20 b Fz(\000)g FD(S)3071
5308 y FB(N)7 b FA(+1)3229 5200 y Ft(\021)3278 5223 y
Fv(\000)p FA(1)3388 5294 y FG(;)3649 5174 y FH(\(B.34\))p
eop
%%Page: 159 172
159 171 bop 3764 -200 a FH(159)300 99 y(assuming)43 b(that)h(all)f(the)
i(eigen)m(v)-5 b(alues)43 b(of)i FD(S)1889 113 y FB(N)7
b FA(+1)2090 99 y FH(are)45 b(inside)c(of)k(the)f(unit)e(circle)i([75)q
(])3457 66 y FA(1)3497 99 y FH(.)81 b(Finally)-8 b(,)300
324 y(substituting)28 b(\(B.34\))33 b(in)m(to)d(\(B.33\))j(leads)c(to)
1660 604 y(~)1636 627 y FG(H)1712 642 y FB(k)1754 627
y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))27 b(=)e FD(F)2163
590 y FB(t)2163 650 y(k)2205 627 y FH(\()p FG(!)s FH(\))p
FD(q)2390 642 y FB(k)r FA(+1)2524 627 y FG(;)1100 b FH(\(B.35\))300
931 y(where)939 1156 y FD(F)1005 1119 y FB(t)1005 1179
y(k)1048 1156 y FH(\()p FG(!)s FH(\))26 b(=)1300 1051
y FB(N)7 b FA(+1)1316 1076 y Ft(X)1319 1258 y FB(i)p
FA(=2)1468 1156 y FG(V)1521 1170 y FB(i)1549 1156 y FH(\()p
FG(!)s FH(\))p FD(C)1755 1119 y FB(t)1755 1179 y(i)1800
1062 y Ft(h)1839 1156 y FD(P)1910 1171 y FB(k)r(;i)2017
1156 y FH(+)20 b FD(S)2166 1170 y FB(i)2210 1062 y Ft(\020)2259
1156 y FD(1)p FG(e)2353 1119 y FB(j)t(!)r(T)2508 1156
y Fz(\000)g FD(S)2657 1170 y FB(N)7 b FA(+1)2814 1062
y Ft(\021)2879 1156 y FD(P)2950 1171 y FB(k)r(;N)g FA(+1)3166
1062 y Ft(i)3220 1156 y FG(;)404 b FH(\(B.36\))300 1429
y(The)30 b(expression)f(for)i FG(V)1118 1443 y FB(i)1146
1429 y FH(\()p FG(!)s FH(\))g(is)e(obtained)h(b)m(y)h(taking)f(the)h(F)
-8 b(ourier)30 b(transform)g(of)h(\(B.24\).)43 b(The)30
b(result)300 1655 y(is:)1393 1881 y FG(V)1446 1895 y
FB(i)1474 1881 y FH(\()p FG(!)s FH(\))c(=)f FG(e)1768
1843 y Fv(\000)p FB(j)t(!)r FA(\()1939 1799 y Fu(t)1963
1815 y(i)p Fr(\000)p Fs(1)2068 1799 y(+)p Fu(t)2139 1815
y(i)p 1939 1828 226 4 v 2036 1869 a Fs(2)2174 1843 y
FA(\))2231 1881 y FH(\001)2307 1895 y FB(i)2360 1881
y FH(sinc)o(\()2557 1819 y FG(!)s FH(\001)2693 1833 y
FB(i)p 2557 1860 164 4 v 2617 1943 a FH(2)2731 1881 y(\))p
FG(;)858 b FH(\(B.37\))300 2154 y(where)1132 2379 y(sinc)o(\()p
FG(x)p FH(\))26 b(=)1538 2318 y FG(sin)p FH(\()p FG(x)p
FH(\))p 1538 2358 252 4 v 1637 2442 a FG(x)2072 2379
y(and)272 b FH(\001)2570 2393 y FB(i)2624 2379 y FH(=)24
b FG(t)2752 2393 y FB(i)2801 2379 y Fz(\000)c FG(t)2925
2393 y FB(i)p Fv(\000)p FA(1)3043 2379 y FG(:)581 b FH(\(B.38\))300
2674 y FL(B.3)135 b(Deriving)46 b Fl(H)1284 2692 y Fd(n)1338
2674 y FJ(\()p Fl(!)t FJ(\))300 2990 y FH(The)36 b(de\014nition)f(of)i
FG(H)1090 3004 y FB(n)1136 2990 y FH(\()p FG(!)s FH(\))h(is)e(giv)m(en)
g(in)g(\(B.3\).)62 b(According)36 b(to)i(the)f(decomp)s(osition)f(of)h
FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))37 b(in)300
3216 y(\(B.27\),)c FG(H)683 3230 y FB(n)729 3216 y FH(\()p
FG(!)s FH(\))e(can)g(b)s(e)f(rewritten)f(as)1244 3519
y FG(H)1320 3533 y FB(n)1366 3519 y FH(\()p FG(!)s FH(\))d(=)1638
3458 y(1)p 1628 3498 66 4 v 1628 3582 a FG(T)1752 3413
y FB(N)1723 3438 y Ft(X)1719 3623 y FB(k)r FA(=1)1863
3404 y Ft(Z)1946 3431 y FB(t)1971 3443 y Fu(k)1909 3593
y FB(t)1934 3605 y Fu(k)q Fr(\000)p Fs(1)2070 3519 y
FG(H)2146 3534 y FB(k)2188 3519 y FH(\()p FG(!)s(;)15
b(\034)10 b FH(\))p FG(e)2450 3482 y FB(j)t FA(\()p FB(!)r
Fv(\000)p FB(n!)2698 3490 y Fu(s)2733 3482 y FA(\))p
FB(\034)2803 3519 y FG(d\034)41 b FH(,)693 b(\(B.39\))300
3822 y FG(H)376 3836 y FB(n)423 3822 y FH(\()p FG(!)s
FH(\))30 b(is)g(further)f(decomp)s(osed)h(according)g(to)h(\(B.28\))i
(in)m(to)1584 4125 y FG(H)1660 4139 y FB(n)1707 4125
y FH(\()p FG(!)s FH(\))25 b(=)1982 4102 y(~)1958 4125
y FG(H)2034 4139 y FB(n)2081 4125 y FH(\()p FG(!)s FH(\))c(+)2346
4102 y(^)2323 4125 y FG(H)2399 4139 y FB(n)2445 4125
y FH(\()p FG(!)s FH(\))p FG(;)1049 b FH(\(B.40\))300
4429 y(where)1295 4631 y(^)1272 4654 y FG(H)1348 4668
y FB(n)1394 4654 y FH(\()p FG(!)s FH(\))26 b(=)1666 4593
y(1)p 1656 4633 V 1656 4717 a FG(T)1780 4549 y FB(N)1751
4574 y Ft(X)1747 4758 y FB(k)r FA(=1)1891 4539 y Ft(Z)1974
4566 y FB(t)1999 4578 y Fu(k)1937 4728 y FB(t)1962 4740
y Fu(k)q Fr(\000)p Fs(1)2122 4631 y FH(^)2098 4654 y
FG(H)2174 4669 y FB(k)2216 4654 y FH(\()p FG(!)s(;)15
b(\034)10 b FH(\))p FG(e)2478 4617 y FB(j)t FA(\()p FB(!)r
Fv(\000)p FB(n!)2726 4625 y Fu(s)2760 4617 y FA(\))p
FB(\034)2831 4654 y FG(d\034)731 b FH(\(B.41\))300 4927
y(and)1295 5130 y(~)1272 5153 y FG(H)1348 5167 y FB(n)1394
5153 y FH(\()p FG(!)s FH(\))26 b(=)1666 5091 y(1)p 1656
5132 V 1656 5215 a FG(T)1780 5047 y FB(N)1751 5072 y
Ft(X)1747 5257 y FB(k)r FA(=1)1891 5038 y Ft(Z)1974 5064
y FB(t)1999 5076 y Fu(k)1937 5227 y FB(t)1962 5239 y
Fu(k)q Fr(\000)p Fs(1)2122 5130 y FH(~)2098 5153 y FG(H)2174
5168 y FB(k)2216 5153 y FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))p FG(e)2478 5115 y FB(j)t FA(\()p FB(!)r Fv(\000)p
FB(n!)2726 5123 y Fu(s)2760 5115 y FA(\))p FB(\034)2831
5153 y FG(d\034)731 b FH(\(B.42\))p 300 5322 1440 4 v
404 5375 a Fs(1)438 5407 y Fy(It)25 b(can)h(b)r(e)g(sho)n(wn)g([76)q(])
g(that)f(this)h(is)g(a)g(su\016cien)n(t)g(condition)g(for)g(the)g
(stabilit)n(y)g(of)g(an)g(ideal)g(SCN.)p eop
%%Page: 160 173
160 172 bop 3764 -200 a FH(160)300 99 y FD(Deriving)753
76 y FH(^)730 99 y FG(H)806 113 y FB(n)852 99 y FH(\()p
FG(!)s FH(\))p 300 135 683 4 v 536 324 a(Inserting)29
b(\(B.29\))k(in)m(to)d(\(B.41\))j(results)c(in)596 583
y(^)573 606 y FG(H)649 620 y FB(n)695 606 y FH(\()p FG(!)s
FH(\))d(=)1025 545 y(1)p 1015 585 66 4 v 1015 668 a FG(T)1138
500 y FB(N)1110 525 y Ft(X)1106 710 y FB(k)r FA(=1)1249
491 y Ft(Z)1332 517 y FB(t)1357 529 y Fu(k)1296 680 y
FB(t)1321 692 y Fu(k)q Fr(\000)p Fs(1)1457 606 y FD(D)1537
621 y FB(k)1580 606 y FG(e)1622 569 y Fv(\000)p FB(j)t(!)r(\034)1799
606 y FG(e)1841 569 y FB(j)t FA(\()p FB(!)r Fv(\000)p
FB(n!)2089 577 y Fu(s)2122 569 y FA(\))p FB(\034)2193
606 y FG(d\034)35 b FH(=)2431 545 y(1)p 2421 585 V 2421
668 a FG(T)2545 500 y FB(N)2516 525 y Ft(X)2512 710 y
FB(k)r FA(=1)2656 491 y Ft(Z)2739 517 y FB(t)2764 529
y Fu(k)2702 680 y FB(t)2727 692 y Fu(k)q Fr(\000)p Fs(1)2863
606 y FD(D)2943 621 y FB(k)2986 606 y FG(e)3028 569 y
Fv(\000)p FB(j)t(n!)3203 577 y Fu(s)3236 569 y FB(\034)3279
606 y FG(d\034)851 878 y FH(=)1025 816 y(1)p 1015 856
V 1015 940 a FG(T)1138 772 y FB(N)1110 797 y Ft(X)1106
981 y FB(k)r FA(=1)1249 878 y FD(D)1329 893 y FB(k)1372
878 y FG(V)1425 893 y FB(k)1468 878 y FH(\()p FG(n!)1615
892 y FB(s)1651 878 y FH(\))3649 741 y(\(B.43\))300 1157
y(where)30 b FG(V)616 1172 y FB(k)659 1157 y FH(\()p
FG(!)s FH(\))g(is)g(the)g(same)h(as)g(in)e(\(B.37\).)300
1383 y FD(Deriving)753 1360 y FH(~)730 1383 y FG(H)806
1397 y FB(n)852 1383 y FH(\()p FG(!)s FH(\))p 300 1419
683 4 v 536 1609 a(F)-8 b(rom)31 b(\(B.35\))i(and)c(\(B.12\),)1495
1903 y(~)1471 1926 y FG(H)1547 1941 y FB(k)1589 1926
y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))27 b(=)e FD(F)1998
1889 y FB(t)1998 1949 y(k)2040 1926 y FH(\()p FG(!)s
FH(\))p FD(B)2244 1941 y FB(k)r FA(+1)2378 1926 y FG(\016)s
FH(\()p FG(t)2489 1941 y FB(k)2553 1926 y Fz(\000)20
b FG(\034)10 b FH(\))920 b(\(B.44\))300 2243 y(Inserting)29
b(\(B.44\))k(in)m(to)d(\(B.42\),)1037 2502 y(~)1014 2525
y FG(H)1090 2539 y FB(n)1136 2525 y FH(\()p FG(!)s FH(\))c(=)1466
2463 y(1)p 1456 2504 66 4 v 1456 2587 a FG(T)1579 2419
y FB(N)1551 2444 y Ft(X)1547 2629 y FB(k)r FA(=1)1690
2410 y Ft(Z)1773 2436 y FB(t)1798 2448 y Fu(k)1736 2599
y FB(t)1761 2611 y Fu(k)q Fr(\000)p Fs(1)1898 2525 y
FD(F)1964 2487 y FB(t)1964 2547 y(k)2006 2525 y FH(\()p
FG(!)s FH(\))p FD(B)2210 2540 y FB(k)r FA(+1)2344 2525
y FG(\016)s FH(\()p FG(t)2455 2540 y FB(k)2519 2525 y
Fz(\000)20 b FG(\034)10 b FH(\))p FG(e)2737 2487 y FB(j)t
FA(\()p FB(!)r Fv(\000)p FB(n!)2985 2495 y Fu(s)3018
2487 y FA(\))p FB(\034)3089 2525 y FG(d\034)1292 2796
y FH(=)1466 2735 y(1)p 1456 2775 V 1456 2859 a FG(T)1579
2691 y FB(N)1551 2716 y Ft(X)1547 2900 y FB(k)r FA(=1)1690
2796 y FD(F)1756 2759 y FB(t)1756 2819 y(k)1799 2796
y FH(\()p FG(!)s FH(\))p FD(B)2003 2811 y FB(k)r FA(+1)2137
2796 y FG(e)2179 2759 y FB(j)t FA(\()p FB(!)r Fv(\000)p
FB(n!)2427 2767 y Fu(s)2460 2759 y FA(\))p FB(t)2512
2771 y Fu(k)3649 2660 y FH(\(B.45\))p eop
%%Page: 161 174
161 173 bop 3764 -200 a FH(161)300 721 y FM(App)5 b(endix)65
b(C)300 1095 y(Deriv)-11 b(ation)68 b(of)c Fe(S)1578
1121 y Fl(y)1643 1095 y Ff(\()p Fe(!)6 b Ff(\))300 1653
y FH(In)30 b(this)f(app)s(endix)f(the)i(expressions)f(for)i
FG(S)1811 1667 y FB(y)1882 1653 y FH(in)e(\(5.13\),)k(\(5.14\),)g
(\(5.15\),)g(and)c(\(5.16\))k(is)d(deriv)m(ed.)300 1939
y FL(C.1)135 b(Stationary)46 b(white)g(noise)g(input)300
2255 y FH(When)30 b(the)h(input)d(is)i(a)g(stationary)h(white)e(noise,)
h(the)h(output)f(PSD)g(of)h(a)f(LPTV)g(net)m(w)m(ork)h(is)f([72)q(])
1467 2572 y FG(S)1523 2586 y FB(y)1564 2572 y FH(\()p
FG(!)s FH(\))c(=)f FG(S)1872 2586 y FB(u)1937 2511 y
FH(1)p 1927 2551 66 4 v 1927 2634 a FG(T)2018 2457 y
Ft(Z)2101 2483 y FB(T)2064 2646 y FA(0)2171 2572 y Fz(j)p
FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))p Fz(j)2525
2530 y FA(2)2580 2572 y FG(d\034)41 b FH(.)960 b(\(C.1\))300
2889 y(F)-8 b(or)23 b(a)g(p)s(erio)s(dically)c(switc)m(hed)j(net)m(w)m
(ork,)j(with)c(the)i(switc)m(hing)e(sequence)i(de\014ned)e(in)h(Sec.)h
(3.1,)i FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))300
3115 y(is)29 b(decomp)s(osed)h(with)g(resp)s(ect)g(to)h
FG(\034)40 b FH(as)31 b(in)e(\(B.27\).)43 b(Using)30
b(\(B.27\))i(in)d(\(C.1\))j(results)d(in;)1383 3432 y
FG(S)1439 3446 y FB(y)1481 3432 y FH(\()p FG(!)s FH(\))c(=)1742
3371 y FG(S)1798 3385 y FB(u)p 1742 3411 101 4 v 1760
3495 a FG(T)1901 3326 y FB(N)1873 3351 y Ft(X)1868 3536
y FB(k)r FA(=1)2012 3317 y Ft(Z)2095 3344 y FB(t)2120
3356 y Fu(k)2058 3506 y FB(t)2083 3518 y Fu(k)q Fr(\000)p
Fs(1)2219 3432 y Fz(j)q FG(H)2321 3447 y FB(k)2363 3432
y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))p Fz(j)2609 3390
y FA(2)2664 3432 y FG(d\034)40 b FH(.)877 b(\(C.2\))300
3749 y FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))31
b(w)m(as)g(further)e(decomp)s(osed)h(in)f(\(B.28\).)43
b(Applying)28 b(\(B.28\))33 b(to)e(\(C.2\))g(mak)m(es;)1174
4066 y FG(S)1230 4080 y FB(y)1271 4066 y FH(\()p FG(!)s
FH(\))26 b(=)1533 4005 y FG(S)1589 4019 y FB(x)p 1533
4045 100 4 v 1550 4129 a FG(T)1690 3961 y FB(N)1662 3986
y Ft(X)1658 4170 y FB(k)r FA(=1)1801 3952 y Ft(Z)1884
3978 y FB(t)1909 3990 y Fu(k)1848 4140 y FB(t)1873 4152
y Fu(k)q Fr(\000)p Fs(1)2009 3969 y Ft(\014)2009 4019
y(\014)2009 4069 y(\014)2060 4044 y FH(^)2037 4066 y
FG(H)2113 4081 y FB(k)2155 4066 y FH(\()p FG(!)s(;)15
b(\034)10 b FH(\))21 b(+)2511 4044 y(~)2487 4066 y FG(H)7
b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))2790 3969 y Ft(\014)2790
4019 y(\014)2790 4069 y(\014)2819 3995 y FA(2)2873 4066
y FG(d\034)41 b FH(.)667 b(\(C.3\))300 4384 y(Ev)-5 b(aluating)29
b(the)i(magnitude)e(op)s(eration)h(in)f(\(C.3\))j(giv)m(es)e(the)h
(desired)e(expressions;)1642 4701 y FG(S)1698 4715 y
FB(y)1739 4701 y FH(\()p FG(!)s FH(\))d(=)2007 4678 y(^)1991
4701 y FG(S)2047 4715 y FB(y)2088 4701 y FH(\()p FG(!)s
FH(\))21 b(+)2345 4678 y(~)2330 4701 y FG(S)2386 4715
y FB(y)2427 4701 y FH(\()p FG(!)s FH(\))1136 b(\(C.4\))300
5018 y(where)731 5221 y(^)715 5244 y FG(S)771 5258 y
FB(y)812 5244 y FH(\()p FG(!)s FH(\))26 b(=)f FG(S)1120
5258 y FB(u)1185 5182 y FH(1)p 1175 5223 66 4 v 1175
5306 a FG(T)1299 5138 y FB(N)1270 5163 y Ft(X)1266 5347
y FB(k)r FA(=1)1410 5129 y Ft(Z)1493 5155 y FB(t)1518
5167 y Fu(k)1456 5317 y FB(\034)8 b FA(=)p FB(t)1575
5329 y Fu(k)q Fr(\000)p Fs(1)1711 5125 y Ft(\022)1772
5146 y(\014)1772 5196 y(\014)1772 5246 y(\014)1824 5221
y FH(^)1800 5244 y FG(H)1876 5259 y FB(k)1918 5244 y
FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))2138 5146 y Ft(\014)2138
5196 y(\014)2138 5246 y(\014)2167 5173 y FA(2)2226 5244
y FH(+)20 b(2)p Fz(<)2443 5150 y Ft(\020)2517 5221 y
FH(~)2493 5244 y FG(H)2569 5259 y FB(k)2611 5244 y FH(\()p
FG(!)s(;)15 b(\034)10 b FH(\))2856 5221 y(^)2831 5244
y FG(H)2914 5206 y Fv(\003)2907 5266 y FB(k)2955 5244
y FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))3175 5150 y Ft(\021)3225
5125 y(\023)3301 5244 y FG(d\034)41 b FH(,)239 b(\(C.5\))p
eop
%%Page: 162 175
162 174 bop 3764 -200 a FH(162)300 99 y(and)1344 301
y(~)1329 324 y FG(S)1385 338 y FB(y)1426 324 y FH(\()p
FG(!)s FH(\))26 b(=)f FG(S)1734 338 y FB(u)1799 263 y
FH(1)p 1789 303 66 4 v 1789 387 a FG(T)1912 219 y FB(N)1884
243 y Ft(X)1879 428 y FB(k)r FA(=1)2023 209 y Ft(Z)2106
236 y FB(t)2131 248 y Fu(k)2069 398 y FB(\034)8 b FA(=)p
FB(t)2188 410 y Fu(k)q Fr(\000)p Fs(1)2325 227 y Ft(\014)2325
277 y(\014)2325 327 y(\014)2376 301 y FH(~)2352 324 y
FG(H)2428 339 y FB(k)2470 324 y FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))2690 227 y Ft(\014)2690 277 y(\014)2690 327 y(\014)2719
253 y FA(2)2774 324 y FG(d\034)832 b FH(\(C.6\))300 604
y(where)30 b(sup)s(erscript)e Fz(\003)i FH(denotes)h(complex)f
(conjugate)i(and)e Fz(<)p FH(\()p Fz(\001)p FH(\))g(represen)m(ts)h
(the)f(\\real")h(op)s(erator.)536 830 y(Recall)g(from)f(Sec.)h(B.2)h
(that)1601 807 y(^)1577 830 y FG(H)7 b FH(\()p FG(!)s(;)15
b(\034)10 b FH(\))32 b(is)d(the)i(con)m(tribution)f(to)h(the)h
(transfer)e(function)f(that)j(is)300 1056 y(due)23 b(to)i(a)f(con)m
(tin)m(uous)f(input-output)f(path.)39 b(If)23 b(there)h(is)f(no)h(con)m
(tin)m(uous)f(input-output)f(path,)3620 1033 y(^)3596
1056 y FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10 b FH(\))300
1282 y(is)33 b(zero.)54 b(Note,)37 b(in)c(\(C.5\))j(that)f(if)1549
1259 y(^)1525 1282 y FG(H)7 b FH(\()p FG(!)s(;)15 b(\034)10
b FH(\))36 b(is)d(zero,)2197 1259 y(^)2182 1282 y FG(S)5
b(y)s FH(\()p FG(!)s FH(\))35 b(is)e(also)h(zero.)54
b(This)33 b(means)h(that)3688 1259 y(^)3672 1282 y FG(S)3728
1296 y FB(y)3769 1282 y FH(\()p FG(!)s FH(\))300 1507
y(represen)m(ts)28 b(the)g(part)g(of)g(the)g(output)g(noise)f(PSD)h
(due)f(to)i(the)f(con)m(tin)m(uous)f(input-output)f(path)i(while)315
1710 y(~)300 1733 y FG(S)356 1747 y FB(y)397 1733 y FH(\()p
FG(!)s FH(\))j(represen)m(ts)f(the)h(sampled-and-held)d(noise)h(comp)s
(onen)m(t.)300 2020 y FL(C.2)135 b(Stationary)46 b Fc(non)p
FL(-white)f(noise)h(input)300 2335 y FH(When)27 b(the)g(input)e(is)h
(stationary)i(and)e FC(non)p FH(-white,)i(it)f(is)f(necessary)i(to)f
(use)g(the)h(more)f(general)g(expres-)300 2561 y(sion)i(for)i(the)f
(output)g(PSD)g([21)q(,)h(28)q(,)f(70)q(])1354 2878 y
FG(S)1410 2892 y FB(y)1451 2878 y FH(\()p FG(!)s FH(\))c(=)1780
2773 y Fv(1)1755 2798 y Ft(X)1703 2976 y FB(n)p FA(=)p
Fv(\0001)1942 2878 y Fz(j)p FG(H)2043 2892 y FB(n)2089
2878 y FH(\()p FG(!)s FH(\))p Fz(j)2245 2837 y FA(2)2300
2878 y FG(S)2356 2892 y FB(u)2401 2878 y FH(\()p FG(!)d
Fz(\000)d FG(n!)2719 2892 y FB(s)2755 2878 y FH(\))30
b(.)848 b(\(C.7\))300 3196 y(where)41 b FG(!)631 3210
y FB(s)712 3196 y FH(=)j(2)p FG(\031)s(=T)13 b FH(.)76
b(Similar)39 b(to)j(the)g(pro)s(cedure)f(for)h(the)g(case)h(of)f(the)g
(white)e(noise)i(input,)h(the)300 3421 y(decomp)s(osition)29
b(of)i FG(H)1079 3435 y FB(n)1125 3421 y FH(\()p FG(!)s
FH(\))g(in)e(\(B.39\))k(is)d(applied)e(to)j(\(C.7\).)42
b(This)29 b(results)g(in)g(the)i(decomp)s(osition)e(of)300
3647 y FG(S)356 3661 y FB(y)427 3647 y FH(as)i(in)e(\(C.4\))j(where)870
3941 y(^)854 3964 y FG(S)910 3978 y FB(y)951 3964 y FH(\()p
FG(!)s FH(\))26 b(=)1280 3859 y Fv(1)1255 3884 y Ft(X)1203
4062 y FB(n)p FA(=)p Fv(\0001)1442 3845 y Ft(\022)1503
3867 y(\014)1503 3917 y(\014)1503 3967 y(\014)1554 3941
y FH(^)1530 3964 y FG(H)1606 3978 y FB(n)1653 3964 y
FH(\()p FG(!)s FH(\))1783 3867 y Ft(\014)1783 3917 y(\014)1783
3967 y(\014)1811 3893 y FA(2)1871 3964 y FH(+)20 b(2)p
Fz(<)2088 3870 y Ft(\020)2161 3941 y FH(^)2137 3964 y
FG(H)2213 3978 y FB(n)2260 3964 y FH(\()p FG(!)s FH(\))2414
3941 y(~)2390 3964 y FG(H)2473 3927 y Fv(\003)2466 3987
y FB(n)2513 3964 y FH(\()p FG(!)s FH(\))2643 3870 y Ft(\021)2693
3845 y(\023)2770 3964 y FG(S)2826 3978 y FB(u)2885 3964
y FH(\()q FG(!)j Fz(\000)d FG(n!)3204 3978 y FB(s)3240
3964 y FH(\))45 b(,)348 b(\(C.8\))300 4281 y(and)1380
4484 y(~)1365 4507 y FG(S)1421 4521 y FB(y)1462 4507
y FH(\()p FG(!)s FH(\))26 b(=)1790 4402 y Fv(1)1765 4426
y Ft(X)1713 4605 y FB(n)p FA(=)p Fv(\0001)1952 4410 y
Ft(\014)1952 4460 y(\014)1952 4509 y(\014)2003 4484 y
FH(~)1979 4507 y FG(H)2055 4521 y FB(n)2102 4507 y FH(\()p
FG(!)s FH(\))2232 4410 y Ft(\014)2232 4460 y(\014)2232
4509 y(\014)2260 4436 y FA(2)2315 4507 y FG(S)2371 4521
y FB(u)2431 4507 y FH(\()p FG(!)d Fz(\000)d FG(n!)2749
4521 y FB(s)2785 4507 y FH(\))873 b(\(C.9\))p eop
%%Page: 163 176
163 175 bop 3764 -200 a FH(163)300 721 y FM(App)5 b(endix)65
b(D)300 1095 y(Lossy)h(net)-5 b(w)g(ork)64 b(prop)5 b(erties)300
1653 y FH(In)21 b(this)h(app)s(endix)d(it)j(is)f(sho)m(wn)h(that)h(the)
f(lossy)f(net)m(w)m(ork)i(in)e(Sec.)i(5.4.2)h(approac)m(hes)f(the)f
(ideal)f(net)m(w)m(ork)300 1878 y(in)28 b(Fig.)i(5.3)h(when)e(the)h
(loss)f FG(\025)g FH(approac)m(hes)i(zero.)41 b(Also,)30
b(the)g(expression)e(for)i FD(q)3095 1893 y FB(k)r FA(+1)3228
1878 y FH(\()p FG(\025;)15 b(\034)10 b FH(\))31 b(in)d(\(5.34\))k(is)
300 2104 y(deriv)m(ed.)536 2330 y(During)c(the)i(in)m(terv)-5
b(al)28 b FG(I)1365 2344 y FB(n;i)1455 2330 y FH(,)i(the)g(lossy)e(net)
m(w)m(ork)i(is)e(represen)m(ted)i(b)m(y)f(the)g(state)i(c)m(harge)f(v)
-5 b(ariable)300 2556 y(equations)36 b(\(5.22\),)k(\(5.23\),)g(and)c
(\(5.24\))i(and)e(b)m(y)g(the)g(di\013eren)m(tial)f(equation)h
(\(5.25\).)60 b(Substituting,)300 2782 y(\(5.24\))33
b(in)m(to)d(\(5.25\))j(results)c(in;)908 3075 y FG(\025)988
3014 y(d)p 971 3054 81 4 v 971 3138 a(dt)1062 3075 y(z)t
FH(\()p FG(t;)15 b(\025)p FH(\))26 b(=)f(\()p FG(p)1507
3089 y FA(1)p FB(;i)1610 3075 y FH(+)20 b FG(p)1747 3089
y FA(3)p FB(;i)1851 3052 y FH(\023)1830 3075 y FG(D)1905
3089 y FB(i)1934 3075 y FH(\))p FG(z)t FH(\()p FG(t;)15
b(\025)p FH(\))21 b(+)f FG(p)2369 3089 y FA(2)p FB(;i)2452
3075 y FG(u)p FH(\()p FG(t)p FH(\))h(+)f FG(p)2765 3089
y FA(3)p FB(;i)2848 3074 y FH(\023)2848 3075 y FD(c)2894
3038 y FB(t)2894 3098 y(i)2924 3075 y FD(q)2979 3089
y FB(nN)7 b FA(+)p FB(i)3168 3075 y FH(\()p FG(\025)p
FH(\))398 b(\(D.1\))300 3369 y(The)30 b(solution)f(to)i(\(D.1\))h(for)e
FG(t)25 b Fz(2)g FG(I)1506 3383 y FB(n;i)1627 3369 y
FH(is)721 3662 y FG(z)t FH(\()p FG(t;)15 b(\025)p FH(\))85
b(=)d FG(e)1256 3596 y Fs(1)p 1254 3608 37 4 v 1254 3650
a Fu(\025)1300 3630 y FH(\()1336 3624 y FB(p)1372 3634
y Fs(1)p Fu(;i)1447 3624 y FA(+)p FB(p)1538 3634 y Fs(3)p
Fu(;i)1629 3607 y FA(\023)1613 3624 y FB(D)1671 3634
y Fu(i)1697 3630 y FH(\))1733 3624 y FA(\()p FB(t)p Fv(\000)p
FB(nT)10 b Fv(\000)p FB(t)2014 3634 y Fu(i)p Fr(\000)p
Fs(1)2119 3624 y FA(\))2242 3662 y FG(z)t FH(\()p FG(nT)33
b FH(+)20 b FG(t)2588 3676 y FB(i)p Fv(\000)p FA(1)2706
3662 y FG(;)15 b(\025)p FH(\))855 b(\(D.2\))1048 3913
y Fz(\000)1345 3851 y FG(p)1391 3865 y FA(3)p FB(;i)1474
3850 y FH(\023)1474 3851 y FD(c)1520 3818 y FB(t)1520
3876 y(i)p 1211 3892 473 4 v 1211 3988 a FG(p)1257 4002
y FA(1)p FB(;i)1360 3988 y FH(+)20 b FG(p)1497 4002 y
FA(3)p FB(;i)1601 3965 y FH(\023)1580 3988 y FG(D)1655
4002 y FB(i)1784 3913 y FD(q)1839 3927 y FB(nN)7 b FA(+)p
FB(i)2029 3913 y FH(\()p FG(\025)p FH(\))2258 3819 y
Ft(\020)2308 3913 y FH(1)21 b Fz(\000)e FG(e)2519 3847
y Fs(1)p 2517 3859 37 4 v 2517 3900 a Fu(\025)2563 3880
y FH(\()2599 3874 y FB(p)2635 3884 y Fs(1)p Fu(;i)2710
3874 y FA(+)p FB(p)2801 3884 y Fs(3)p Fu(;i)2892 3858
y FA(\023)2876 3874 y FB(D)2934 3884 y Fu(i)2960 3880
y FH(\))2996 3874 y FA(\()p FB(t)p Fv(\000)p FB(nT)10
b Fv(\000)p FB(t)3277 3884 y Fu(i)p Fr(\000)p Fs(1)3382
3874 y FA(\))3414 3819 y Ft(\021)3689 3913 y FH(\(D.3\))1048
4177 y(+)82 b FG(p)1247 4191 y FA(2)p FB(;i)1345 4062
y Ft(Z)1428 4089 y FB(t)1391 4251 y(nT)10 b FA(+)p FB(t)1565
4261 y Fu(i)p Fr(\000)p Fs(1)1703 4116 y FH(1)p 1700
4156 54 4 v 1700 4240 a FG(\025)1763 4177 y(e)1818 4112
y Fs(1)p 1815 4124 37 4 v 1815 4165 a Fu(\025)1861 4145
y FH(\()1897 4139 y FB(p)1933 4149 y Fs(1)p Fu(;i)2008
4139 y FA(+)p FB(p)2099 4149 y Fs(3)p Fu(;i)2190 4122
y FA(\023)2174 4139 y FB(D)2232 4149 y Fu(i)2258 4145
y FH(\))2294 4139 y FA(\()p FB(t)p Fv(\000)p FB(\013)p
FA(\))2569 4177 y FG(u)p FH(\()p FG(\013)p FH(\))93 b
FG(d\013)31 b FH(.)686 b(\(D.4\))536 4471 y(In)30 b(the)g(ideal)g(SCN)f
FG(\025)d FH(=)e(0)31 b(and)1706 4764 y FG(z)t FH(\()p
FG(t;)15 b FH(0\))27 b(=)35 b(lim)2063 4824 y FB(\025)p
Fv(!)p FA(0)2225 4764 y FG(z)t FH(\()p FG(t;)15 b(\025)p
FH(\))p FG(:)1197 b FH(\(D.5\))300 5058 y(Assuming,)29
b(just)h(lik)m(e)f(in)g(\(5.38\),)k(that)e FG(p)1726
5073 y FA(1)p FB(;k)1844 5058 y FH(+)20 b FG(p)1981 5073
y FA(3)p FB(;k)2099 5035 y FH(\023)2078 5058 y FG(D)2153
5073 y FB(k)2221 5058 y FG(<)25 b FH(0)31 b(and)f(using,)f(in)g
(\(D.4\),)j(the)f(prop)s(ert)m(y)979 5351 y(lim)969 5411
y FB(\025)p Fv(!)p FA(0)1222 5351 y FG(p)1268 5365 y
FA(2)p FB(;i)1364 5290 y FH(1)p 1361 5330 54 4 v 1361
5414 a FG(\025)1424 5351 y(e)1479 5285 y Fs(1)p 1476
5297 37 4 v 1476 5339 a Fu(\025)1522 5319 y FH(\()1558
5313 y FB(p)1594 5323 y Fs(1)p Fu(;i)1669 5313 y FA(+)p
FB(p)1760 5323 y Fs(3)p Fu(;i)1851 5296 y FA(\023)1835
5313 y FB(D)1893 5323 y Fu(i)1919 5319 y FH(\))1955 5313
y FA(\()p FB(t)p Fv(\000)p FB(\013)p FA(\))2165 5351
y FH(=)25 b Fz(\000)2513 5290 y FG(p)2559 5304 y FA(2)p
FB(;i)p 2342 5330 473 4 v 2342 5426 a FG(p)2388 5440
y FA(1)p FB(;i)2490 5426 y FH(+)20 b FG(p)2627 5440 y
FA(3)p FB(;i)2731 5403 y FH(\023)2710 5426 y FG(D)2785
5440 y FB(i)2914 5351 y FG(\016)s FH(\()p FG(t)i Fz(\000)d
FG(\013)p FH(\))459 b(\(D.6\))p eop
%%Page: 164 177
164 176 bop 3764 -200 a FH(164)300 99 y(leads)30 b(to,)977
324 y FG(z)t FH(\()p FG(t;)15 b FH(0\))27 b(=)e Fz(\000)1548
263 y FG(p)1594 277 y FA(3)p FB(;i)1678 262 y FH(\023)1677
263 y FD(c)1723 230 y FB(t)1723 287 y(i)p 1415 303 473
4 v 1415 399 a FG(p)1461 413 y FA(1)p FB(;i)1564 399
y FH(+)1676 376 y(\023)1655 399 y FG(D)1730 413 y FB(i)1758
399 y FG(p)1804 413 y FA(3)p FB(;i)1988 324 y FD(q)2043
338 y FB(nN)7 b FA(+)p FB(i)2232 324 y FH(\(0\))21 b
Fz(\000)2641 263 y FG(p)2687 277 y FA(2)p FB(;i)p 2469
303 V 2469 399 a FG(p)2515 413 y FA(1)p FB(;i)2618 399
y FH(+)2730 376 y(\023)2709 399 y FG(D)2784 413 y FB(i)2812
399 y FG(p)2858 413 y FA(3)p FB(;i)3042 324 y FG(u)p
FH(\()p FG(t)p FH(\))p FG(:)467 b FH(\(D.7\))300 594
y(Note)30 b(that)f(the)g(result)e(in)g(\(D.7\))k(could)c(also)i(ha)m(v)
m(e)g(b)s(een)f(obtained)g(b)m(y)g(setting)h FG(\025)c
FH(=)g(0)k(in)e(\(D.1\).)42 b(Also)300 820 y(note,)31
b(that)312 1117 y FG(z)t FH(\()p FG(nT)i FH(+)20 b FG(t)658
1131 y FB(i)p Fv(\000)p FA(1)776 1117 y FG(;)15 b FH(0\))26
b(=)f Fz(\000)1278 1052 y FG(p)1324 1066 y FA(3)p FB(;i)p
Fv(\000)p FA(1)1498 1051 y FH(\023)1497 1052 y FD(c)1543
1019 y FB(t)1543 1076 y(i)p Fv(\000)p FA(1)p 1099 1096
743 4 v 1099 1192 a FG(p)1145 1206 y FA(1)p FB(;i)p Fv(\000)p
FA(1)1338 1192 y FH(+)1450 1169 y(\023)1429 1192 y FG(D)1504
1206 y FB(i)p Fv(\000)p FA(1)1623 1192 y FG(p)1669 1206
y FA(3)p FB(;i)p Fv(\000)p FA(1)1943 1117 y FD(q)1998
1131 y FB(nN)7 b FA(+)p FB(i)p Fv(\000)p FA(1)2277 1117
y FH(\(0\))21 b Fz(\000)2776 1056 y FG(p)2822 1070 y
FA(2)p FB(;i)p Fv(\000)p FA(1)p 2514 1096 V 2514 1192
a FG(p)2560 1206 y FA(1)p FB(;i)p Fv(\000)p FA(1)2753
1192 y FH(+)2865 1169 y(\023)2844 1192 y FG(D)2919 1206
y FB(i)p Fv(\000)p FA(1)3038 1192 y FG(p)3084 1206 y
FA(3)p FB(;i)p Fv(\000)p FA(1)3358 1117 y FG(u)p FH(\()p
FG(nT)33 b FH(+)20 b FG(t)3710 1131 y FB(i)p Fv(\000)p
FA(1)3828 1117 y FH(\))p FG(:)3689 1343 y FH(\(D.8\))300
1569 y(Substituting)28 b(\(D.7\))k(in)m(to)e(\(5.23\))j(and)d(\(D.8\))i
(in)m(to)e(\(5.22\),)j(and)d(using)f FG(\025)c FH(=)g(0)31
b(results)e(in;)1128 1866 y FD(q)1183 1880 y FB(nN)7
b FA(+)p FB(i)1372 1866 y FH(\(0\))85 b(=)d FD(A)1804
1880 y FB(i)1833 1866 y FD(q)1888 1880 y FB(nN)7 b FA(+)p
FB(i)p Fv(\000)p FA(1)2167 1866 y FH(\(0\))21 b(+)f FD(b)2452
1880 y FB(i)2480 1866 y FG(u)p FH(\()p FG(nT)33 b FH(+)20
b FG(t)2832 1880 y FB(i)p Fv(\000)p FA(1)2950 1866 y
FG(;)15 b FH(0\))619 b(\(D.9\))1251 2117 y FG(y)s FH(\()p
FG(t;)15 b FH(0\))85 b(=)d FD(c)1771 2079 y FB(t)1771
2139 y(i)1801 2117 y FD(q)1856 2131 y FB(nN)7 b FA(+)p
FB(i)2046 2117 y FH(\(0\))21 b(+)f FG(D)2348 2131 y FB(i)2376
2117 y FG(u)p FH(\()p FG(t;)15 b FH(0\))1028 b(\(D.10\))300
2414 y(where)520 2652 y FD(A)599 2666 y FB(i)653 2652
y FH(=)766 2628 y(\024)749 2652 y FD(A)828 2666 y FB(i)876
2652 y Fz(\000)974 2628 y FH(\024)967 2652 y FD(b)1025
2666 y FB(i)1054 2651 y FH(\023)1053 2652 y FD(c)1099
2614 y FB(t)1099 2674 y(i)p Fv(\000)p FA(1)1490 2590
y FG(p)1536 2604 y FA(3)p FB(;i)p Fv(\000)p FA(1)p 1228
2631 V 1228 2727 a FG(p)1274 2741 y FA(1)p FB(;i)p Fv(\000)p
FA(1)1467 2727 y FH(+)20 b FG(p)1604 2741 y FA(3)p FB(;i)p
Fv(\000)p FA(1)1799 2704 y FH(\023)1777 2727 y FG(D)1852
2741 y FB(i)p Fv(\000)p FA(1)2072 2652 y FG(;)83 b FD(b)2238
2666 y FB(i)2292 2652 y FH(=)25 b Fz(\000)2465 2628 y
FH(\024)2459 2652 y FD(b)2517 2666 y FB(i)2816 2590 y
FG(p)2862 2604 y FA(2)p FB(;i)p Fv(\000)p FA(1)p 2554
2631 V 2554 2727 a FG(p)2600 2741 y FA(1)p FB(;i)p Fv(\000)p
FA(1)2794 2727 y FH(+)2906 2704 y(\023)2885 2727 y FG(D)2960
2741 y FB(i)p Fv(\000)p FA(1)3078 2727 y FG(p)3124 2741
y FA(3)p FB(;i)p Fv(\000)p FA(1)3398 2652 y FG(;)520
2911 y FD(c)566 2874 y FB(t)566 2934 y(i)622 2911 y FH(=)718
2910 y(\024)718 2911 y FD(c)764 2874 y FB(t)764 2934
y(i)814 2911 y Fz(\000)905 2910 y FH(\023)905 2911 y
FD(c)951 2874 y FB(t)951 2934 y(i)1002 2888 y FH(\024)981
2911 y FG(D)1056 2925 y FB(i)1266 2850 y FG(p)1312 2864
y FA(3)p FB(;i)p 1094 2890 473 4 v 1094 2986 a FG(p)1140
3000 y FA(1)p FB(;i)1243 2986 y FH(+)20 b FG(p)1380 3000
y FA(3)p FB(;i)1484 2963 y FH(\023)1463 2986 y FG(D)1538
3000 y FB(i)1667 2911 y FG(;)488 b(D)2255 2925 y FB(i)2309
2911 y FH(=)25 b Fz(\000)2497 2888 y FH(\024)2476 2911
y FG(D)2551 2925 y FB(i)2760 2850 y FG(p)2806 2864 y
FA(2)p FB(;i)p 2589 2890 V 2589 2986 a FG(p)2635 3000
y FA(1)p FB(;i)2738 2986 y FH(+)2850 2963 y(\023)2829
2986 y FG(D)2904 3000 y FB(i)2932 2986 y FG(p)2978 3000
y FA(3)p FB(;i)3162 2911 y FG(:)3644 2776 y FH(\(D.11\))300
3161 y(By)33 b(ev)-5 b(aluating)33 b(\(D.11\))i(for)d(the)h(three)h(t)m
(yp)s(es)e(of)i(noisy)d(elemen)m(ts)j(considered)d(here,)j(it)e(can)i
(b)s(e)e(seen)300 3387 y(that)27 b FD(A)572 3401 y FB(i)600
3387 y FH(,)h FD(b)711 3401 y FB(i)739 3387 y FH(,)f
FD(c)837 3401 y FB(i)892 3387 y FH(and)f FG(D)1140 3401
y FB(i)1195 3387 y FH(in)f(\(D.11\))k(are)e(iden)m(tical)e(to)i(their)e
(coun)m(terparts)i(in)e(\(5.3\))k(and)d(\(5.4\).)41 b(Th)m(us,)300
3612 y(in)32 b(the)i(limit)d(of)i FG(\025)e FH(=)f(0,)k(the)g(lossy)f
(net)m(w)m(ork)h(is)e(iden)m(tical)h(to)h(the)f(ideal)g(SCN)f(and)h
(the)h(state)g(v)m(ector)300 3838 y FD(q)355 3852 y FB(nN)7
b FA(+)p FB(i)544 3838 y FH(\(0\))32 b(in)d(\(D.9\))j(and)e(\(D.10\))i
(is)e(equal)g(to)h FD(q)1999 3852 y FB(nN)7 b FA(+)p
FB(i)2218 3838 y FH(in)29 b(\(5.3\))j(and)e(\(5.4\).)536
4064 y(Next,)d(the)e(expression)e(for)h FD(q)1550 4079
y FB(k)r FA(+1)1683 4064 y FH(\()p FG(\025;)15 b(\034)10
b FH(\))26 b(in)d(\(5.34\))k(is)c(deriv)m(ed.)38 b(Similar)22
b(to)j FD(q)3184 4079 y FB(k)r FA(+1)3317 4064 y FH(\()p
FG(\034)10 b FH(\))25 b(in)e(the)i(ideal)300 4290 y(SCN)i(\(see)i
(deriv)-5 b(ation)27 b(of)h(\(B.12\)\),)k FD(q)1614 4305
y FB(k)r FA(+1)1747 4290 y FH(\()p FG(\025;)15 b(\034)10
b FH(\))29 b(is)e(the)h(state)i(c)m(harge)f(v)m(ector)g(of)g(the)f
(lossy)f(net)m(w)m(ork)i(in)300 4516 y(Sec.)i(5.4.2)h(during)c(in)m
(terv)-5 b(al)30 b FG(I)1361 4531 y FB(k)r FA(+1)1524
4516 y FH(when)f(the)i(noise)f(input)e(is)1278 4813 y
FG(u)p FH(\()p FG(t)p FH(\))e(=)f FG(\016)s FH(\()p FG(t)c
Fz(\000)f FG(\034)10 b FH(\))p FG(;)197 b FH(where)30
b FG(t)2381 4828 y FB(k)r Fv(\000)p FA(1)2539 4813 y
FG(<)25 b(\034)35 b Fz(\024)25 b FG(t)2839 4828 y FB(k)2882
4813 y FG(;)737 b FH(\(D.12\))300 5110 y(and)30 b(the)g(initial)e
(conditions)h(are)i(zero,)g FC(i.e)1318 5407 y FD(q)1373
5422 y FB(k)1416 5407 y FH(\()p FG(\025;)15 b(\034)10
b FH(\))26 b(=)f FD(0)183 b FH(and)e FG(z)t FH(\()p FG(t)2428
5422 y FB(k)r Fv(\000)p FA(1)2561 5407 y FG(;)15 b(\025)p
FH(\))26 b(=)f(0)p FG(:)763 b FH(\(D.13\))p eop
%%Page: 165 178
165 177 bop 3764 -200 a FH(165)300 99 y(The)32 b(extra)h(parameter)f
FG(\034)42 b FH(in)31 b FD(q)1407 114 y FB(k)1450 99
y FH(\()p FG(\025;)15 b(\034)10 b FH(\))33 b(and)f FD(q)1930
114 y FB(k)r FA(+1)2063 99 y FH(\()p FG(\025;)15 b(\034)10
b FH(\))33 b(denotes)g(the)f(sp)s(ecial)f(case)i(when)e(the)i(input)300
324 y(is)c(an)i(impulse)d(as)i(in)f(\(D.12\).)536 550
y(Setting)39 b FG(n)h FH(=)f(0)h(and)f FG(i)h FH(=)g
FG(k)29 b FH(+)d(1)39 b(in)f(the)i(state)g(equation)f(\(5.22\))j(and)c
(applying)f(the)j(initial)300 776 y(conditions)29 b(\(D.13\))j(giv)m
(es;)1587 1002 y FD(q)1642 1017 y FB(k)r FA(+1)1775 1002
y FH(\()p FG(\025;)15 b(\034)10 b FH(\))27 b(=)2117 978
y(\024)2111 1002 y FD(b)2169 1017 y FB(k)r FA(+1)2302
1002 y FG(z)t FH(\()p FG(t)2416 1017 y FB(k)2459 1002
y FG(;)15 b(\025)p FH(\))p FG(:)1032 b FH(\(D.14\))300
1282 y(Note)35 b(that)g FG(z)t FH(\()p FG(t)838 1297
y FB(k)881 1282 y FG(;)15 b(\025)p FH(\))34 b(is)f(part)h(of)g(in)m
(terv)-5 b(al)33 b FG(I)1818 1297 y FB(k)1894 1282 y
FH(and)g(can)i(b)s(e)e(obtained)g(from)g(\(D.2\),)k(\(D.3\),)g(and)c
(\(D.4\))300 1507 y(with)h FG(n)f FH(=)g(0)j(and)f FG(i)f
FH(=)f FG(k)s FH(.)56 b(Applying)32 b(the)k(initial)d(conditions)g(in)h
(\(D.13\))k(to)e(\(D.2\))h(and)e(\(D.3\),)k(and)300 1733
y(applying)28 b(the)j(input)d(in)h(\(D.12\))k(to)e(\(D.4\))h(results)d
(in;)1364 2050 y FG(z)t FH(\()p FG(t)1478 2065 y FB(k)1521
2050 y FG(;)15 b(\025)p FH(\))26 b(=)1785 1989 y(1)p
1781 2029 54 4 v 1781 2113 a FG(\025)1864 2050 y(p)1910
2065 y FA(2)p FB(;k)2028 2050 y FG(e)2083 1985 y Fs(1)p
2080 1997 37 4 v 2080 2038 a Fu(\025)2127 2018 y FH(\()2162
2012 y FB(p)2198 2024 y Fs(1)p Fu(;k)2285 2012 y FA(+)p
FB(p)2376 2024 y Fs(3)p Fu(;k)2479 1995 y FA(\023)2463
2012 y FB(D)2521 2024 y Fu(k)2559 2018 y FH(\))2594 2012
y FA(\()p FB(t)2646 2024 y Fu(k)2685 2012 y Fv(\000)p
FB(\034)8 b FA(\))2811 2050 y FG(:)808 b FH(\(D.15\))300
2367 y(Substituting)28 b(\(D.15\))k(in)m(to)f(\(D.14\))h(giv)m(es)1185
2685 y FD(q)1240 2700 y FB(k)r FA(+1)1373 2685 y FH(\()p
FG(\025;)15 b(\034)10 b FH(\))27 b(=)1722 2623 y(1)p
1719 2664 54 4 v 1719 2747 a FG(\025)1808 2661 y FH(\024)1802
2685 y FD(b)1860 2700 y FB(k)r FA(+1)2013 2685 y FG(p)2059
2700 y FA(2)p FB(;k)2176 2685 y FG(e)2231 2619 y Fs(1)p
2229 2631 37 4 v 2229 2672 a Fu(\025)2275 2652 y FH(\()2311
2646 y FB(p)2347 2658 y Fs(1)p Fu(;k)2434 2646 y FA(+)p
FB(p)2525 2658 y Fs(3)p Fu(;k)2628 2629 y FA(\023)2611
2646 y FB(D)2669 2658 y Fu(k)2707 2652 y FH(\))2743 2646
y FA(\()p FB(t)2795 2658 y Fu(k)2834 2646 y Fv(\000)p
FB(\034)8 b FA(\))2990 2685 y FH(.)629 b(\(D.16\))p eop
%%Page: 166 179
166 178 bop 3764 -200 a FH(166)300 721 y FM(App)5 b(endix)65
b(E)300 1095 y(Deriv)-11 b(ation)68 b(of)c Fe(S)1578
1121 y Fl(k)t(;m)1782 1095 y Ff(\()p Fe(!)6 b Ff(\))300
1653 y FH(First,)27 b(the)h(form)f(of)g(the)h(in\014nite)d(summation)h
(in)g(\(5.64\))j(is)e(simpli\014ed)c(b)m(y)k(eliminating)e(the)i(exp)s
(onen-)300 1878 y(tial)36 b(term)g FG(e)733 1846 y Fv(\000)p
FB(j)t(n)p FA(2)p FB(\031)r FA(\()p FB(t)994 1858 y Fu(k)1033
1846 y Fv(\000)p FB(t)1113 1854 y Fu(m)1172 1846 y FA(\))p
FB(=T)1290 1878 y FH(.)59 b(Since)35 b(the)i(clo)s(c)m(k)g(signals)e
(in)g(an)i(SCN)e(are)i(deriv)m(ed)f(from)g(a)h(common)300
2104 y(clo)s(c)m(k)28 b(through)g(frequency)f(division,)f(the)i(ratio)g
(\()p FG(t)2075 2119 y FB(k)2134 2104 y Fz(\000)15 b
FG(t)2253 2118 y FB(m)2319 2104 y FH(\))p FG(=T)42 b
FH(is)27 b(alw)m(a)m(ys)h(a)h(rational)e(n)m(um)m(b)s(er)g(.)40
b(Th)m(us,)300 2330 y(it)32 b(is)f(p)s(ossible)f(to)j(de\014ne)f
FG(M)1296 2345 y FB(k)r(;m)1453 2330 y FH(as)g(the)h(smallest)e(p)s
(ositiv)m(e)h(in)m(teger)g(suc)m(h)g(that)h FG(M)3211
2345 y FB(k)r(;m)3336 2330 y FH(\()p FG(t)3404 2345 y
FB(k)3468 2330 y Fz(\000)22 b FG(t)3594 2344 y FB(m)3660
2330 y FH(\))p FG(=T)46 b FH(is)300 2556 y(also)30 b(an)h(in)m(teger.)
41 b(Using)29 b(the)i(prop)s(ert)m(y)1610 2767 y Fv(1)1586
2792 y Ft(X)1534 2971 y FB(n)p FA(=)p Fv(\0001)1773 2873
y FG(a)1821 2887 y FB(n)1893 2873 y FH(=)2065 2767 y
Fv(1)2040 2792 y Ft(X)1989 2971 y FB(n)p FA(=)p Fv(\0001)2227
2767 y FB(M)7 b Fv(\000)p FA(1)2250 2792 y Ft(X)2248
2973 y FB(r)r FA(=0)2407 2873 y FG(a)2455 2887 y FB(nM)g
FA(+)p FB(r)300 3190 y FH(where)38 b FG(a)619 3204 y
FB(n)704 3190 y FH(is)f(an)h(arbitrary)f(sequence)h(and)g
FG(M)48 b FH(is)37 b(a)h(p)s(ositiv)m(e)f(in)m(teger,)k
FG(S)2955 3205 y FB(k)r(;m)3079 3190 y FH(\()p FG(!)s
FH(\))e(in)e(\(5.64\))j(can)f(b)s(e)300 3416 y(rewritten)29
b(as)1049 3642 y FG(S)1105 3657 y FB(k)r(;m)1230 3642
y FH(\()p FG(!)s FH(\))d(=)1667 3580 y(1)p 1492 3621
396 4 v 1492 3705 a FG(j)5 b FH(4)p FG(\031)1634 3679
y FA(2)1674 3705 y FG(M)1772 3674 y FA(2)1762 3733 y
FB(k)r(;m)1912 3522 y(M)1980 3534 y Fu(k)q(;m)2091 3522
y Fv(\000)p FA(1)1987 3561 y Ft(X)1985 3742 y FB(r)r
FA(=0)2197 3642 y FG(e)2239 3604 y Fv(\000)p FB(j)t(r)r
FA(2)p FB(\031)r FA(\()p FB(t)2491 3616 y Fu(k)2529 3604
y Fv(\000)p FB(t)2609 3612 y Fu(m)2668 3604 y FA(\))p
FB(=T)2786 3642 y FG(S)2842 3657 y FB(k)r(;m;r)3020 3642
y FH(\()p FG(!)s FH(\))547 b(\(E.1\))300 3922 y(where)972
4147 y FG(S)1028 4162 y FB(k)r(;m;r)1206 4147 y FH(\()p
FG(!)s FH(\))26 b(=)1534 4042 y Fv(1)1509 4067 y Ft(X)1458
4245 y FB(n)p FA(=)p Fv(\0001)2439 4086 y FH(1)p 1706
4126 1512 4 v 1706 4210 a Fz(j)p FG(x)1783 4225 y FB(k)r(;m;r)1961
4210 y FH(\()p FG(!)s FH(\))21 b Fz(\000)f FG(n)p Fz(j)15
b FH(\()p FG(x)2385 4225 y FB(k)r(;m;r)2563 4210 y FH(\()p
FG(!)s FH(\))21 b Fz(\000)f FG(j)5 b(y)2892 4225 y FB(k)r(;m)3037
4210 y Fz(\000)20 b FG(n)p FH(\))3697 4147 y(\(E.2\))300
4427 y(and)937 4653 y FG(x)989 4668 y FB(k)r(;m;r)1167
4653 y FH(\()p FG(!)s FH(\))26 b(=)1512 4592 y(1)p 1429
4632 213 4 v 1429 4715 a FG(M)1517 4730 y FB(k)r(;m)1667
4534 y Ft(\022)1738 4592 y FG(!)s(T)p 1738 4632 126 4
v 1751 4715 a FH(2)p FG(\031)1893 4653 y Fz(\000)20 b
FG(r)2028 4534 y Ft(\023)2286 4653 y FH(and)181 b FG(y)2659
4668 y FB(k)r(;m)2809 4653 y FH(=)2989 4592 y FG(!)3046
4607 y FB(k)3088 4592 y FG(T)p 2915 4632 314 4 v 2915
4715 a FH(2)p FG(\031)s(M)3103 4730 y FB(k)r(;m)3238
4653 y FG(:)434 b FH(\(E.3\))300 4933 y(F)-8 b(rom)31
b(the)f(de\014nition)e(of)j FG(M)1291 4948 y FB(k)r(;m)1416
4933 y FH(,)f FG(e)1513 4900 y FB(j)t(n)p FA(2)p FB(\031)r(M)1735
4912 y Fu(k)q(;m)1846 4900 y FA(\()p FB(t)1898 4912 y
Fu(k)1937 4900 y Fv(\000)p FB(t)2017 4908 y Fu(m)2076
4900 y FA(\))p FB(=T)2220 4933 y FH(=)24 b(1.)536 5159
y(The)33 b(sum)f(in)g(\(E.2\))i(can)g(b)s(e)e(ev)-5 b(aluated)33
b(in)f(a)i(closed)f(form,)g(as)h(sho)m(wn)e(in)g(Sec.)i(E.1,)g(pro)m
(vided)p eop
%%Page: 167 180
167 179 bop 3764 -200 a FH(167)300 99 y(that)31 b(there)g(exist)f(a)g
(p)s(ositiv)m(e)g(in)m(teger)h FG(K)1735 114 y FB(k)r(;m;r)1943
99 y FH(suc)m(h)f(that)h FG(x)2397 114 y FB(k)r(;m;r)2575
99 y FH(\()p FG(!)s FH(\))g(de\014ned)e(in)g(\(E.3\))j(satis\014es)1678
416 y Fz(j)q FG(x)1756 431 y FB(k)r(;m;r)1934 416 y FH(\()p
FG(!)s FH(\))p Fz(j)26 b FG(<)f(K)2288 431 y FB(k)r(;m;r)2496
416 y FH(.)1176 b(\(E.4\))300 733 y(In)30 b(this)f(case,)j(\(see)f
(Sec.)g(E.1\),)p 402 858 3193 4 v 402 1214 4 356 v 461
1057 a FG(S)517 1072 y FB(k)r(;m;r)695 1057 y FH(\()p
FG(!)s FH(\))25 b(=)1020 995 y FG(j)p 956 1036 170 4
v 956 1119 a(y)1001 1134 y FB(k)r(;m)1151 1034 y FH(^)1135
1057 y FG(S)1191 1072 y FB(k)r(;m;r)1369 1057 y FH(\()p
FG(!)s FH(\))c(+)1660 937 y FB(K)1720 949 y Fu(k)q(;m;r)1880
937 y Fv(\000)p FA(1)1755 976 y Ft(X)1611 1160 y FB(n)p
FA(=1)p Fv(\000)p FB(K)1859 1172 y Fu(k)q(;m;r)2778 995
y FH(1)p 2044 1036 1512 4 v 2044 1119 a Fz(j)q FG(x)2122
1134 y FB(k)r(;m;r)2300 1119 y FH(\()p FG(!)s FH(\))f
Fz(\000)g FG(n)p Fz(j)15 b FH(\()q FG(x)2724 1134 y FB(k)r(;m;r)2902
1119 y FH(\()p FG(!)s FH(\))21 b Fz(\000)e FG(j)5 b(y)3230
1134 y FB(k)r(;m)3376 1119 y Fz(\000)19 b FG(n)p FH(\))p
3591 1214 4 356 v 402 1217 3193 4 v 3697 1059 a(\(E.5\))300
1376 y(where)612 1611 y(^)597 1634 y FG(S)653 1649 y
FB(k)r(;m;r)831 1634 y FH(\()p FG(!)s FH(\))84 b(=)e(\011)15
b(\()p FG(K)1396 1649 y FB(k)r(;m;r)1595 1634 y Fz(\000)20
b FG(x)1738 1649 y FB(k)r(;m;r)1916 1634 y FH(\()p FG(!)s
FH(\))h(+)f FG(j)5 b(y)2245 1649 y FB(k)r(;m)2370 1634
y FH(\))20 b Fz(\000)g FH(\011)15 b(\()p FG(K)2714 1649
y FB(k)r(;m;r)2913 1634 y Fz(\000)20 b FG(x)3056 1649
y FB(k)r(;m;r)3234 1634 y FH(\()p FG(!)s FH(\)\))1045
1860 y(+)82 b(\011)15 b(\()p FG(K)1396 1875 y FB(k)r(;m;r)1595
1860 y FH(+)20 b FG(x)1738 1875 y FB(k)r(;m;r)1916 1860
y FH(\()p FG(!)s FH(\))h Fz(\000)f FG(j)5 b(y)2245 1875
y FB(k)r(;m)2370 1860 y FH(\))20 b Fz(\000)g FH(\011)15
b(\()p FG(K)2714 1875 y FB(k)r(;m;r)2913 1860 y FH(+)20
b FG(x)3056 1875 y FB(k)r(;m;r)3234 1860 y FH(\()p FG(!)s
FH(\)\))3697 1724 y(\(E.6\))300 2103 y(and)30 b(\011\()p
FG(z)t FH(\))h(is)e(the)i(psi-function)d([77)q(])1582
2070 y FA(1)1622 2103 y FH(.)536 2329 y(Finally)-8 b(,)31
b(it)g(is)g(necessary)h(to)h(determine)e(the)h(minim)m(um)d(v)-5
b(alues)31 b(for)h FG(K)3049 2344 y FB(k)r(;m;r)3259
2329 y FH(in)e(order)i(to)g(min-)300 2555 y(imize)40
b(the)i(terms)f(in)f(the)i(summation)1746 2522 y FA(2)1827
2555 y FH(of)f(\(E.5\).)75 b(The)41 b(range)g(of)h FG(x)2866
2570 y FB(k)r(;m;r)3044 2555 y FH(\()p FG(!)s FH(\))g(is)e(determined)g
(b)m(y)300 2780 y(the)g(original)e(frequency)h(range)h(in)e(\(5.65\))k
(and)d(the)h(de\014nition)d(of)j FG(x)2799 2795 y FB(k)r(;m;r)2977
2780 y FH(\()p FG(!)s FH(\))g(in)e(\(E.3\).)70 b(Com)m(bin-)300
3006 y(ing)34 b(\(5.65\))k(and)d(\(E.3\),)j(it)d(follo)m(ws)f(that)i
Fz(\000)p FH(\()p FG(K)30 b FH(+)24 b FG(r)s FH(\))p
FG(=)-5 b(M)2287 3021 y FB(k)r(;m)2445 3006 y FG(<)33
b(x)2601 3021 y FB(k)r(;m;r)2780 3006 y FH(\()p FG(!)s
FH(\))h FG(<)f FH(\()p FG(K)d Fz(\000)24 b FG(r)s FH(\))p
FG(=)-5 b(M)10 b FH(.)56 b(Because)300 3232 y Fz(j)p
FH(\()p FG(K)28 b FH(+)19 b FG(r)s FH(\))p FG(=)-5 b(M)762
3247 y FB(k)r(;m)888 3232 y Fz(j)25 b FG(>)g Fz(j)p FH(\()p
FG(K)j Fz(\000)20 b FG(r)s FH(\))p FG(=)-5 b(M)1497 3247
y FB(k)r(;m)1622 3232 y Fz(j)30 b FH(and)g FG(K)1931
3247 y FB(k)r(;m;r)2140 3232 y FH(m)m(ust)g(b)s(e)g(a)g(p)s(ositiv)m(e)
g(in)m(teger,)1636 3549 y FG(K)1713 3564 y FB(k)r(;m;r)1916
3549 y FH(=)2012 3405 y Ft(")2071 3488 y FG(K)d FH(+)19
b FG(r)p 2071 3528 239 4 v 2084 3612 a(M)2172 3627 y
FB(k)r(;m)2319 3405 y Ft(#)2388 3549 y FH(+)g(1)p FG(;)1149
b FH(\(E.7\))300 3866 y(where)25 b([)p FG(x)p FH(])h(denotes)g(the)g
(greatest)h(in)m(teger)f(not)g(larger)f(then)g FG(x)p
FH(.)39 b(Expressions)24 b(\(E.5\),)k(\(E.6\))f(and)d(\(E.7\),)300
4092 y(constitute)37 b(the)g(analytical)f(solution)g(for)h(the)g
(output)f(noise)g(PSD)h(due)f(to)i(1)p FG(=f)47 b FH(noise)36
b(input.)58 b(The)300 4318 y(summation)32 b(in)g(\(E.5\))i(represen)m
(ts)f(the)h(noise)e(in)g(the)i(frequency)e(range)i(of)f(in)m(terest)h
(without)e(taking)300 4544 y(the)d(foldo)m(v)m(er)h(e\013ect)g(in)m(to)
f(accoun)m(t.)42 b(The)29 b(term)g FG(j)2050 4521 y FH(^)2034
4544 y FG(S)2090 4559 y FB(k)r(;m;r)2268 4544 y FH(\()p
FG(!)s FH(\))p FG(=y)2488 4559 y FB(k)r(;m)2643 4544
y FH(determined)e(b)m(y)i(the)g(psi-functions)300 4770
y(in)g(\(E.6\))j(mo)s(dels)d(the)h(foldo)m(v)m(er)h(e\013ect)h(due)e
(to)h(higher)e(frequencies)g(\(see)i(\(5.9\)\).)p 300
4854 1440 4 v 404 4909 a Fs(1)438 4941 y Fy(If)i Fb(z)i
Fy(is)e(a)g(complex)f(n)n(um)n(b)r(er,)h(the)f(psi-function)g(is)i
(de\014ned)d(as)i(\011\()p Fb(z)s Fy(\))f(=)2699 4910
y Fu(d)p 2683 4924 64 4 v 2683 4966 a(dz)2757 4941 y
Fy(ln\000\()p Fb(z)s Fy(\))g(where)h(\000\()p Fb(z)s
Fy(\))f(is)h(the)f(gamma-)300 5032 y(function)26 b(de\014ned)e(as)j
(\000\()p Fb(z)s Fy(\))21 b(=)1209 4967 y Ft(R)1264 4988
y Fr(1)1248 5063 y Fs(0)1342 5032 y Fb(e)1378 5000 y
Fr(\000)p Fu(t)1453 5032 y Fb(t)1481 5000 y Fu(z)r Fr(\000)p
Fs(1)1595 5032 y Fb(dt)26 b Fy(for)g Fa(<f)p Fb(z)s Fa(g)d
Fb(>)e Fy(0.)404 5096 y Fs(2)438 5127 y Fy(Note)26 b(that)f
Fb(K)855 5136 y Fu(k)q(;m;r)1042 5127 y Fy(can)h(b)r(e)f(arbitrarily)i
(large)g(as)f(far)g(as)h(\(E.4\))f(is)g(satis\014ed)g(\(c.f.)36
b(Sec.)26 b(E.1\).)p eop
%%Page: 168 181
168 180 bop 3764 -200 a FH(168)300 99 y FL(E.1)135 b(Deriv)-7
b(ation)46 b(of)g Fl(S)1515 116 y Fd(k)s(;m;r)1723 99
y FJ(\()p Fl(!)t FJ(\))300 414 y FH(Here,)31 b(a)g(closed)f(form)m(ula)
g(is)f(dev)m(elop)s(ed)h(for)g(the)h(in\014nite)d(sum)1501
694 y FG(S)i FH(=)1759 588 y Fv(1)1735 613 y Ft(X)1683
792 y FB(n)p FA(=)p Fv(\0001)2288 633 y FH(1)p 1931 673
759 4 v 1931 756 a Fz(j)p FG(x)21 b Fz(\000)f FG(n)p
Fz(j)p FH(\()p FG(x)g Fz(\000)g FG(j)5 b(y)23 b Fz(\000)d
FG(n)p FH(\))3697 694 y(\(E.8\))300 974 y(where)32 b
FG(x)g FH(and)f FG(y)k FH(are)d(real)g(n)m(um)m(b)s(ers.)44
b(It)33 b(is)e(assumed)g(that)i(there)f(exists)g(a)g(p)s(ositiv)m(e)f
(in)m(teger)i FG(K)38 b FH(suc)m(h)300 1200 y(that)1895
1426 y Fz(j)p FG(x)p Fz(j)26 b FG(<)f(K)37 b FH(.)1439
b(\(E.9\))300 1687 y(Then,)26 b Fz(j)p FG(x)11 b Fz(\000)g
FG(n)p Fz(j)26 b FH(=)f FG(n)11 b Fz(\000)g FG(x)26 b
FH(if)f FG(n)f Fz(\025)h FG(K)7 b FH(,)27 b(and)f Fz(j)p
FG(x)11 b Fz(\000)g FG(n)p Fz(j)25 b FH(=)g FG(x)11 b
Fz(\000)g FG(n)26 b FH(if)f FG(n)g Fz(\024)g FG(K)7 b
FH(.)39 b(Hence,)28 b(\(E.8\))f(can)f(b)s(e)f(expressed)300
1912 y(as;)1817 2138 y FG(S)30 b FH(=)25 b FG(S)2055
2152 y FA(0)2114 2138 y FH(+)20 b FG(S)2261 2152 y Fv(1)3651
2138 y FH(\(E.10\))300 2399 y(where)993 2625 y FG(S)1049
2639 y FA(0)1113 2625 y FH(=)1258 2519 y FB(K)5 b Fv(\000)p
FA(1)1275 2544 y Ft(X)1209 2728 y FB(n)p FA(=1)p Fv(\000)p
FB(K)1842 2564 y FH(1)p 1486 2604 V 1486 2688 a Fz(j)p
FG(x)21 b Fz(\000)e FG(n)p Fz(j)p FH(\()p FG(x)i Fz(\000)f
FG(j)5 b(y)23 b Fz(\000)d FG(n)p FH(\))2345 2625 y(and)90
b FG(S)2638 2639 y Fv(1)2738 2625 y FH(=)2880 2519 y
Fv(1)2855 2544 y Ft(X)2834 2728 y FB(n)p FA(=)p FB(K)3011
2625 y FG(F)13 b FH(\()p FG(n)p FH(\))444 b(\(E.11\))300
2886 y(where)1393 3112 y FG(F)13 b FH(\()p FG(n)p FH(\))25
b(=)1961 3051 y Fz(\000)p FH(2)p FG(n)p FH(\(2)p FG(x)20
b Fz(\000)g FG(j)5 b(y)s FH(\))p 1720 3091 1022 4 v 1720
3174 a(\()p FG(n)1810 3148 y FA(2)1870 3174 y Fz(\000)20
b FG(x)2013 3148 y FA(2)2052 3174 y FH(\))15 b(\()q FG(n)2193
3148 y FA(2)2252 3174 y Fz(\000)20 b FH(\()p FG(x)g Fz(\000)g
FG(j)5 b(y)s FH(\))2666 3148 y FA(2)2707 3174 y FH(\))2782
3112 y(.)844 b(\(E.12\))536 3373 y(No)m(w,)34 b(the)f(metho)s(d)e
(presen)m(ted)i(in)e([78)q(])h(is)g(applied,)f(to)i(reduce)f(the)g
(problem)f(of)i(ev)-5 b(aluating)32 b(a)300 3599 y(n)m(umerical)j
(series)i(to)g(the)h(problem)d(of)i(ev)-5 b(aluating)36
b(a)i(de\014nite)e(in)m(tegral)g(using)g(the)h(Laplace)g(trans-)300
3825 y(formation.)66 b(Replacing)38 b(the)h(in)m(teger)g
FG(n)f FH(b)m(y)h(the)g(con)m(tin)m(uous)g(and)f(generally)g(complex)g
(v)-5 b(ariable)38 b FG(s)p FH(,)300 4051 y FG(F)13 b
FH(\()p FG(s)p FH(\))42 b(in)e(\(E.12\))j(b)s(ecomes)e(a)h(complex)f
(function)f(of)h FG(s)p FH(.)73 b(Then,)43 b FG(F)13
b FH(\()p FG(s)p FH(\))42 b(can)f(b)s(e)g(considered)f(as)i(the)300
4276 y(Laplace-transform)30 b(of)h(a)g(certain)f(function)f
FG(f)10 b FH(\()p FG(t)p FH(\).)40 b(Then,)620 4556 y
FG(F)13 b FH(\()p FG(s)p FH(\))26 b(=)926 4441 y Ft(Z)1009
4468 y Fv(1)972 4630 y FA(0)1098 4556 y FG(f)10 b FH(\()p
FG(t)p FH(\))p FG(e)1298 4519 y Fv(\000)p FB(st)1416
4556 y FG(dt)61 b FH(with)89 b FG(f)10 b FH(\()p FG(t)p
FH(\))25 b(=)2113 4470 y FG(e)2155 4437 y FB(tx)2240
4401 y Ft(\000)2278 4470 y FH(1)c Fz(\000)f FG(e)2477
4437 y Fv(\000)p FB(j)t(ty)2631 4401 y Ft(\001)2684 4376
y(\020)2734 4470 y FH(1)h Fz(\000)e FG(e)2932 4437 y
Fv(\000)p FB(t)p FA(\(2)p FB(x)p Fv(\000)p FB(j)t(y)r
FA(\))3272 4376 y Ft(\021)p 2113 4535 1209 4 v 2637 4619
a Fz(\000)p FG(j)5 b(y)3651 4556 y FH(\(E.13\))300 4836
y(where)24 b(the)g(in)m(tegral)g(in)g(\(E.13\))i(is)d(con)m(v)m(ergen)m
(t)k(if)c Fz(<f)p FG(s)p Fz(g)j(\025)e FG(K)31 b FH(holds.)38
b(Therefore,)25 b FG(F)13 b FH(\()p FG(s)p FH(\))25 b(can)g(b)s(e)e
(substi-)300 5062 y(tuted)29 b(in)m(to)f(\(E.11\).)42
b(Th)m(us,)28 b(using)f(the)i(form)m(ula)e(for)i(ev)-5
b(aluating)28 b(an)g(in\014nite)e(geometric)k(progression,)749
5342 y FG(S)805 5356 y Fv(1)905 5342 y FH(=)1046 5236
y Fv(1)1022 5261 y Ft(X)1001 5445 y FB(n)p FA(=)p FB(K)1178
5227 y Ft(Z)1261 5253 y Fv(1)1224 5415 y FA(0)1351 5342
y FG(f)10 b FH(\()p FG(t)p FH(\))p FG(e)1551 5304 y Fv(\000)p
FB(nt)1678 5342 y FG(dt)26 b FH(=)1880 5227 y Ft(Z)1963
5253 y Fv(1)1926 5415 y FA(0)2052 5342 y FG(f)10 b FH(\()p
FG(t)p FH(\))2271 5236 y Fv(1)2246 5261 y Ft(X)2225 5445
y FB(n)p FA(=)p FB(K)2402 5342 y FG(e)2444 5304 y Fv(\000)p
FB(nt)2572 5342 y FG(dt)26 b FH(=)2774 5227 y Ft(Z)2857
5253 y Fv(1)2820 5415 y FA(0)2956 5280 y FG(f)10 b FH(\()p
FG(t)p FH(\))p FG(e)3156 5247 y Fv(\000)p FB(K)5 b(t)p
2956 5321 349 4 v 2989 5404 a FH(1)21 b Fz(\000)f FG(e)3188
5378 y Fv(\000)p FB(t)3315 5342 y FG(dt)31 b FH(.)p eop
%%Page: 169 182
169 181 bop 3764 -200 a FH(169)300 99 y(Finally)-8 b(,)29
b(replacing)g FG(f)10 b FH(\()p FG(t)p FH(\))30 b(from)g(\(E.13\),)1027
416 y FG(S)1083 430 y Fv(1)1183 416 y FH(=)1291 354 y
FG(j)p 1289 395 48 4 v 1289 478 a(y)1362 301 y Ft(Z)1445
327 y Fv(1)1408 489 y FA(0)1545 260 y Ft(\000)1583 329
y FH(1)20 b Fz(\000)g FG(e)1781 296 y Fv(\000)p FB(j)t(ty)1936
260 y Ft(\001)1989 235 y(\020)2039 329 y FH(1)g Fz(\000)g
FG(e)2237 296 y Fv(\000)p FB(t)p FA(\(2)p FB(x)p Fv(\000)p
FB(j)t(y)r FA(\))2576 235 y Ft(\021)p 1545 395 1082 4
v 1944 478 a FH(1)g Fz(\000)g FG(e)2142 452 y Fv(\000)p
FB(t)2636 416 y FG(e)2678 378 y Fv(\000)p FA(\()p FB(K)5
b Fv(\000)p FB(x)p FA(\))p FB(t)2976 416 y FG(dt)92 b(:)478
b FH(\(E.14\))300 733 y(If)33 b(the)h(condition)e(in)g(\(E.9\))j
(holds,)e(the)g(in)m(tegral)h(in)e(\(E.14\))j(can)f(b)s(e)e(ev)-5
b(aluated)34 b(in)e(closed)i(form)f([77)q(])300 959 y(as)621
1184 y FG(S)677 1198 y Fv(1)776 1184 y FH(=)885 1123
y FG(j)p 882 1163 48 4 v 882 1247 a(y)955 1184 y FH(\()q(\011\()p
FG(K)27 b Fz(\000)20 b FG(x)g FH(+)g FG(j)5 b(y)s FH(\))21
b(+)f(\011\()p FG(K)27 b FH(+)19 b FG(x)i Fz(\000)f FG(j)5
b(y)s FH(\))21 b Fz(\000)e FH(\011\()p FG(K)27 b FH(+)20
b FG(x)p FH(\))h Fz(\000)f FH(\011\()p FG(K)27 b Fz(\000)20
b FG(x)p FH(\)\))336 b(\(E.15\))300 1464 y(where)30 b(\011\()p
FG(x)p FH(\))h(is)e(the)i(psi-function.)p eop
%%Page: 170 183
170 182 bop 3764 -200 a FH(170)300 721 y FM(App)5 b(endix)65
b(F)300 1095 y(CS/MNA)f(for)h(\\ideal")i(SCN's)300 1576
y FL(F.1)135 b(Net)l(w)l(ork)46 b(equations)g(for)f(ideal)h(SCN's)300
1892 y FH(The)33 b(CS/MNA)i(equations)e(de\014ned)g(in)g(Sec.)h(2.5)h
(\(Fig.)f(2.13\))i(are)f(general)f(enough)f(to)i(mo)s(del)e(b)s(oth)300
2118 y(SC)26 b(and)g(SI)h(net)m(w)m(orks.)40 b(Note)28
b(ho)m(w)m(ev)m(er,)i(that)d(the)g(unkno)m(wns)f(consist)g(of)h(no)s
(de)g(v)m(oltages)h(and)f(branc)m(h)300 2344 y(curren)m(ts.)42
b(F)-8 b(or)31 b(e\016cien)m(t)h(implemen)m(tation)d(of)i(the)g(noise)g
(analysis)e(in)h(Chapter)g(5,)i(it)e(is)g(necessary)h(to)300
2570 y(compute)i(the)g(c)m(harge)h(that)f(has)g(passed)f(through)g(a)h
(v)m(oltage)i(source.)48 b(This)31 b(means)h(that)i(the)e(set)i(of)300
2795 y(unkno)m(wns)29 b(should)f(con)m(tain)j(branc)m(h)f(c)m(harges)h
(instead)f(of)g(branc)m(h)g(curren)m(ts.)536 3021 y(Since)k(the)h
(noise)g(analysis)e(is)h(for)h(ideal)f(SCN's,)h(the)h(set)f(of)g(net)m
(w)m(ork)h(elemen)m(ts)f(is)f(restricted)300 3247 y(to)42
b(indep)s(enden)m(t)d(v)m(oltage)j(sources,)i(V)m(CVS's,)g(ideal)c
(switc)m(hes,)k(and)c(capacitors.)73 b(F)-8 b(or)42 b(this)e(set)i(of)
300 3473 y(elemen)m(ts,)35 b(it)f(is)f(p)s(ossible)e(to)k(mo)s(dify)d
(the)i(CS/MNA)g(equations)g(so)g(that)h(the)f(v)m(ector)h(of)g(unkno)m
(wns)300 3699 y(con)m(tains)i(the)f(branc)m(h)g(c)m(harges.)60
b(The)35 b(net)m(w)m(ork)j(equations)e(dev)m(elop)s(ed)f(in)g(this)h
(section)g(are)h(nearly)300 3925 y(iden)m(tical)d(to)h(the)g(equations)
g(in)e([79)q(,)i(41)q(,)g(39)q(,)g(40)q(].)54 b(The)34
b(di\013erence)h(b)s(eing)e(that)i(in)f([79)q(,)h(41)q(,)g(39)q(,)g(40)
q(])300 4150 y(the)27 b(n)m(um)m(b)s(er)e(of)h(equations)g(is)f
(reduced)h(b)m(y)g(eliminating)e(the)i(branc)m(h)g(c)m(harge)i(unkno)m
(wns,)d(while)g(here,)300 4376 y(they)31 b(are)f(not)h(eliminated)d(so)
j(that)g(they)g(can)f(b)s(e)g(used)f(in)h(the)g(noise)g(analysis.)536
4602 y(The)22 b(structure)h(of)f(the)h(CS/MNA)g(equations)g(is)e
(outlined)g(in)g(Fig.)i(2.13.)40 b(The)22 b(c)m(harge)i(conserv)-5
b(a-)300 4828 y(tion)24 b(equations)h(for)g(the)g(c)m(harge)h(surfaces)
f(and)f(the)i(BCR's)f(remain)e(the)j(same.)39 b(The)24
b(K)m(CL)h(equations,)300 5054 y(ho)m(w)m(ev)m(er,)i(are)e(in)m
(tegrated)g(o)m(v)m(er)h(time)e(resulting)e(in)h(Kirc)m(ho)m(vs)h
(Charge)g(La)m(w)h(\(K)m(ChL\))f(equations.)38 b(The)p
eop
%%Page: 171 184
171 183 bop 3764 -200 a FH(171)300 99 y(K)m(CL)30 b(equation)g(for)g
(no)s(de)g FG(i)h FH(is)e(giv)m(en)h(in)f(\(2.16\))k(and)d(it)g(is)1838
335 y Ft(X)1823 519 y FB(b)p Fv(2B)1946 529 y Fu(i)1988
416 y FG(I)2028 431 y FB(b;i)2106 416 y FH(\()p FG(t)p
FH(\))c(=)f(0)1323 b(\(F.1\))300 733 y(where)32 b FG(I)605
748 y FB(b;i)683 733 y FH(\()p FG(t)p FH(\))h(represen)m(ts)g(the)g
(curren)m(t)f(lea)m(ving)g(no)s(de)g FG(i)h FH(through)f(branc)m(h)g
FG(b)h FH(and)f Fz(B)3283 747 y FB(i)3343 733 y FH(represen)m(ts)h(the)
300 959 y(set)e(of)f(branc)m(hes)g(attac)m(hed)j(to)e(no)s(de)e
FG(i)p FH(.)536 1184 y(Let)39 b(the)f(\\branc)m(h)g(c)m(harge")i
FG(q)1605 1199 y FB(b;i)1720 1184 y FH(b)s(e)d(de\014ned)g(as)h(the)h
(c)m(harge)g(that)g(has)e(left)h(no)s(de)f FG(i)i FH(through)300
1410 y(branc)m(h)30 b FG(b)g FH(from)g(time)g FG(t)1125
1425 y FB(k)r Fv(\000)p FA(1)1288 1410 y FH(to)h(time)f
FG(t)p FH(,)h(then)1657 1727 y FG(q)1698 1742 y FB(b;i)1775
1727 y FH(\()p FG(t)p FH(\))26 b(=)2000 1612 y Ft(Z)2083
1639 y FB(t)2046 1801 y(t)2071 1813 y Fu(k)q Fr(\000)p
Fs(1)2207 1727 y FG(I)2247 1742 y FB(b;i)2325 1727 y
FH(\()p FG(\034)10 b FH(\))p FG(d\034)1167 b FH(\(F.2\))300
2045 y(Recall)29 b(that)h(the)f(time)g FG(t)1163 2060
y FB(k)r Fv(\000)p FA(1)1325 2045 y FH(b)s(elongs)f(to)i(the)f(in)m
(terv)-5 b(al)28 b FG(I)2282 2060 y FB(k)r Fv(\000)p
FA(1)2415 2045 y FH(,)i(while)d FG(t)2739 2060 y FB(k)r
Fv(\000)p FA(1)2897 2045 y FG(<)e(t)g Fz(\024)g FG(t)3180
2060 y FB(k)3251 2045 y FH(is)k(in)e(the)j(in)m(terv)-5
b(al)300 2270 y FG(I)340 2285 y FB(k)383 2270 y FH(.)68
b(Ho)m(w)m(ev)m(er,)44 b(the)c(relationship)c(in)j(\(F.2\))i(is)d
(time-in)m(v)-5 b(arian)m(t)39 b({)h(it)f(is)g(v)-5 b(alid)38
b(for)h(all)f(time)h FG(t)p FH(.)68 b(The)300 2496 y(curren)m(t)30
b(ma)m(y)h(ha)m(v)m(e)h(an)e(impulse)e(at)j FG(t)1627
2511 y FB(k)r Fv(\000)p FA(1)1790 2496 y FH(causing)f(a)g(discon)m(tin)
m(uit)m(y)f(in)g(the)i(c)m(harge.)536 2722 y(If)f(the)h(K)m(CL)f
(equation)g(is)f(in)m(tegrated)i(o)m(v)m(er)h(the)f(switc)m(hing)e(in)m
(terv)-5 b(al)29 b FG(I)3021 2737 y FB(k)3094 2722 y
FH(then)h(the)h(result)e(is)1647 2896 y Ft(Z)1730 2923
y FB(t)1693 3085 y(t)1718 3097 y Fu(k)q Fr(\000)p Fs(1)1855
2843 y Ft(0)1855 2992 y(@)1942 2931 y(X)1927 3115 y FB(b)p
Fv(2B)2050 3125 y Fu(i)2092 3011 y FG(I)2132 3026 y FB(b;i)2210
3011 y FH(\()p FG(t)p FH(\))d(=)f(0)2480 2843 y Ft(1)2480
2992 y(A)2059 3296 y FH(or)1669 3441 y Ft(X)1654 3626
y FB(b)p Fv(2B)1777 3636 y Fu(i)1819 3378 y Ft( )1885
3407 y(Z)1968 3433 y FB(t)1931 3596 y(t)1956 3608 y Fu(k)q
Fr(\000)p Fs(1)2092 3522 y FG(I)2132 3537 y FB(b;i)2210
3522 y FH(\()p FG(t)p FH(\))2313 3378 y Ft(!)2405 3522
y FH(=)f(0)2059 3802 y(or)1838 3947 y Ft(X)1823 4132
y FB(b)p Fv(2B)1946 4142 y Fu(i)1988 4028 y FG(q)2029
4043 y FB(b;i)2107 4028 y FH(\()p FG(t)p FH(\))h(=)g(0)3699
3517 y(\(F.3\))300 4318 y(The)30 b(relation)f(in)g(\(F.3\))j(is)d(the)h
(K)m(ChL)f(equation)h(for)g(the)g(cutset)h(of)f(branc)m(hes)g
(connected)h(to)g(no)s(de)e FG(i)p FH(.)300 4544 y(The)21
b(capacitors)i(ha)m(v)m(e)g(a)f(branc)m(h)f(c)m(harge)i(to)f(no)s(de)f
(v)m(oltage)j(relationship)19 b(that)j(can)g(b)s(e)f(directly)f(used)h
(in)300 4770 y(the)26 b(K)m(ChL)f(equation,)h(while)e(a)i(v)m(oltage)i
(source,)f(V)m(CVS,)f(or)f(a)h(closed)g(switc)m(h)f(requires)f(an)i
(additional)300 4995 y(unkno)m(wn)31 b(to)h(represen)m(t)g(its)g(branc)
m(h)f(c)m(harge)j(that)e(can)g(b)s(e)g(used)f(in)g(\(F.3\).)47
b(Note,)34 b(that)f(for)f(an)g(op)s(en)300 5221 y(switc)m(h,)e
FG(q)647 5236 y FB(b;i)750 5221 y FH(=)25 b(0.)p eop
%%Page: 172 185
172 184 bop 3764 -200 a FH(172)1000 7 y
 17366384 10459300 0 40718909 17366384 51178209 startTexFig
 1000 7 a
%%BeginDocument: figs/scn_eqns.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% BOX
gsave
   1.415 setmiterlimit
   newpath
      36 64 moveto 96 64 lineto 96 144 lineto 36 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      56 134 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      68 138 moveto (cs) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      63 78 moveto (1) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      108 98 moveto (charge conservation) show
      108 116 moveto (equations) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      108 182 moveto (KChL equations for) show
      108 200 moveto (non-reference nodes ) show
   grestore

% OVAL
newpath 63 109 1 1 tgifellipse fill
gsave
   newpath 63 109 1 1 tgifellipse stroke
grestore

% OVAL
newpath 63 101 1 1 tgifellipse fill
gsave
   newpath 63 101 1 1 tgifellipse stroke
grestore

% OVAL
newpath 63 93 1 1 tgifellipse fill
gsave
   newpath 63 93 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      36 144 moveto 96 144 lineto 96 224 lineto 36 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      40 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      52 218 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      63 158 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 63 189 1 1 tgifellipse fill
gsave
   newpath 63 189 1 1 tgifellipse stroke
grestore

% OVAL
newpath 63 181 1 1 tgifellipse fill
gsave
   newpath 63 181 1 1 tgifellipse stroke
grestore

% OVAL
newpath 63 173 1 1 tgifellipse fill
gsave
   newpath 63 173 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      96 64 moveto 256 64 lineto 256 144 lineto 96 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      96 144 moveto 256 144 lineto 256 224 lineto 96 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      4 64 moveto 36 64 lineto 36 304 lineto 4 304 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      12 290 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      24 294 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      19 86 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 19 193 1 1 tgifellipse fill
gsave
   newpath 19 193 1 1 tgifellipse stroke
grestore

% OVAL
newpath 19 185 1 1 tgifellipse fill
gsave
   newpath 19 185 1 1 tgifellipse stroke
grestore

% OVAL
newpath 19 177 1 1 tgifellipse fill
gsave
   newpath 19 177 1 1 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      104 42 moveto (Equations) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      364 64 moveto 396 64 lineto 396 144 lineto 364 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      372 134 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      384 138 moveto (n) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      379 78 moveto (1) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      408 106 moveto (node) show
      408 124 moveto (voltages) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      408 182 moveto (branch) show
      408 200 moveto (charges ) show
   grestore

% OVAL
newpath 379 109 1 1 tgifellipse fill
gsave
   newpath 379 109 1 1 tgifellipse stroke
grestore

% OVAL
newpath 379 101 1 1 tgifellipse fill
gsave
   newpath 379 101 1 1 tgifellipse stroke
grestore

% OVAL
newpath 379 93 1 1 tgifellipse fill
gsave
   newpath 379 93 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      364 144 moveto 396 144 lineto 396 224 lineto 364 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      372 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      384 218 moveto (b) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      379 158 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 379 189 1 1 tgifellipse fill
gsave
   newpath 379 189 1 1 tgifellipse stroke
grestore

% OVAL
newpath 379 181 1 1 tgifellipse fill
gsave
   newpath 379 181 1 1 tgifellipse stroke
grestore

% OVAL
newpath 379 173 1 1 tgifellipse fill
gsave
   newpath 379 173 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      396 64 moveto 468 64 lineto 468 144 lineto 396 144 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      396 144 moveto 468 144 lineto 468 224 lineto 396 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      332 64 moveto 364 64 lineto 364 224 lineto 332 224 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      340 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      352 218 moveto (x) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      347 86 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 347 153 1 1 tgifellipse fill
gsave
   newpath 347 153 1 1 tgifellipse stroke
grestore

% OVAL
newpath 347 145 1 1 tgifellipse fill
gsave
   newpath 347 145 1 1 tgifellipse stroke
grestore

% OVAL
newpath 347 137 1 1 tgifellipse fill
gsave
   newpath 347 137 1 1 tgifellipse stroke
grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      404 42 moveto (Unknowns) tgifcentertext show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      108 250 moveto (BCR equations) show
   grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      36 224 moveto 96 224 lineto 96 304 lineto 36 304 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      56 294 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      68 298 moveto (b) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      63 238 moveto (1) tgifcentertext show
   grestore

% OVAL
newpath 63 269 1 1 tgifellipse fill
gsave
   newpath 63 269 1 1 tgifellipse stroke
grestore

% OVAL
newpath 63 261 1 1 tgifellipse fill
gsave
   newpath 63 261 1 1 tgifellipse stroke
grestore

% OVAL
newpath 63 253 1 1 tgifellipse fill
gsave
   newpath 63 253 1 1 tgifellipse stroke
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      96 224 moveto 256 224 lineto 256 304 lineto 96 304 lineto
   closepath stroke
   1 setmiterlimit
grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      72 214 moveto (N) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      84 218 moveto (cs) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      60 214 moveto (-) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Thu Oct 15 20:54:53 1998
%%EndDocument

 endTexFig
 1136 1528 a FH(Figure)30 b(F.1:)41 b(CS/MNA)31 b(equations)f(for)g
(ideal)f(SCN's.)536 1808 y(Since)k(\(F.3\))j(w)m(as)f(deriv)m(ed)e
(from)h(\(F.1\))i(through)d(a)i(linear)e(op)s(eration,)i(the)f(K)m(ChL)
f(equations)300 2034 y(can)e(replace)f(their)g(corresp)s(onding)e(K)m
(CL)j(equations)f(in)f(the)i(CS/MNA.)g(The)f(structure)g(of)h(the)f
(new)300 2260 y(set)h(of)f(equations)h(is)e(illustrated)f(in)h(Fig.)i
(F.1.)536 2486 y(In)f(v)m(ector)i(form,)e(the)h(equations)f(are)1020
2611 y Ft(2)1020 2757 y(6)1020 2807 y(6)1020 2857 y(6)1020
2907 y(6)1020 2960 y(4)1117 2722 y FD(q)1172 2737 y FB(cs;k)1298
2722 y FH(\()p FD(x)1388 2737 y FB(k)1431 2722 y FH(\()p
FG(t)p FH(\)\))1117 2891 y FD(q)1172 2906 y FB(ch;k)1306
2891 y FH(\()p FD(x)1396 2906 y FB(k)1439 2891 y FH(\()p
FG(t)p FH(\)\))1117 3060 y FD(g)1169 3075 y FB(B)s(;k)1288
3060 y FH(\()p FD(x)1378 3075 y FB(k)1421 3060 y FH(\()p
FG(t)p FH(\)\))1620 2611 y Ft(3)1620 2757 y(7)1620 2807
y(7)1620 2857 y(7)1620 2907 y(7)1620 2960 y(5)1700 2880
y FH(=)1796 2611 y Ft(2)1796 2757 y(6)1796 2807 y(6)1796
2857 y(6)1796 2907 y(6)1796 2960 y(4)1893 2722 y FD(q)1948
2737 y FB(cs;k)2074 2722 y FH(\()p FD(x)2164 2737 y FB(k)r
Fv(\000)p FA(1)2297 2722 y FH(\()p FG(t)2365 2737 y FB(k)r
Fv(\000)p FA(1)2498 2722 y FH(\)\))2205 2891 y FD(0)2205
3060 y(0)2610 2611 y Ft(3)2610 2757 y(7)2610 2807 y(7)2610
2857 y(7)2610 2907 y(7)2610 2960 y(5)2686 2880 y FH(+)2777
2611 y Ft(2)2777 2757 y(6)2777 2807 y(6)2777 2857 y(6)2777
2907 y(6)2777 2960 y(4)2944 2722 y FD(0)2944 2891 y(0)2873
3060 y(e)2921 3075 y FB(k)2964 3060 y FH(\()p FG(t)p
FH(\))3109 2611 y Ft(3)3109 2757 y(7)3109 2807 y(7)3109
2857 y(7)3109 2907 y(7)3109 2960 y(5)3699 2880 y FH(\(F.4\))300
3279 y(where)36 b FD(q)624 3293 y FB(cs)692 3279 y FH(\()p
FD(x)p FH(\()p FG(t)p FH(\)\))i(is)e(the)h(same)h(v)m(ector)g
(de\014ned)e(in)g(\(2.32\))j(to)f(represen)m(t)f(the)g(c)m(harge)h
(conserv)-5 b(ation)300 3505 y(equations)21 b(in)f(c)m(harge)i
(surfaces.)38 b(The)20 b(v)m(ector)j FD(q)1942 3520 y
FB(ch)2018 3505 y FH(\()p FD(x)p FH(\()p FG(t)p FH(\)\))f(represen)m
(ts)f(the)h(\()p FG(N)2943 3519 y FB(n)2992 3505 y Fz(\000)r
FG(N)3138 3519 y FB(cs)3205 3505 y FH(\))f(K)m(ChL)f(equations)300
3731 y(of)31 b(the)f(form)g(in)f(\(F.3\))j(and)e(is)f(de\014ned)g(as)
401 4048 y FD(q)456 4063 y FB(ch)532 4048 y FH(\()p FD(x)p
FH(\()p FG(t)p FH(\)\))d Fz(\021)882 3879 y Ft(2)882
4028 y(4)957 3967 y(X)938 4151 y FB(b)p Fv(2B)1061 4160
y Fs(1)1111 4048 y FG(q)1152 4063 y FB(b;)p FA(1)1241
4048 y FH(\()p FD(x)p FH(\()p FG(t)p FH(\)\))92 b FG(;)1711
3967 y Ft(X)1692 4151 y FB(b)p Fv(2B)1815 4160 y Fs(2)1865
4048 y FG(q)1906 4063 y FB(b;)p FA(2)1995 4048 y FH(\()p
FD(x)p FH(\()p FG(t)p FH(\)\))h FG(;)106 b Fz(\001)15
b(\001)g(\001)107 b FG(;)2852 3967 y Ft(X)2790 4151 y
FB(b)p Fv(2B)2913 4162 y Fu(N)2961 4180 y(ch)3049 4048
y FG(q)3090 4062 y FB(c;N)3197 4074 y Fu(ch)3268 4048
y FH(\()p FD(x)p FH(\()p FG(t)p FH(\)\))3496 3879 y Ft(3)3496
4028 y(5)3553 3902 y FB(t)3699 4048 y FH(\(F.5\))300
4365 y(where)32 b FG(N)638 4380 y FB(ch)743 4365 y FH(=)c(\()p
FG(N)950 4379 y FB(n)1020 4365 y Fz(\000)21 b FG(N)1185
4379 y FB(cs)1252 4365 y FH(\).)48 b(The)32 b(v)m(ectors)j
FD(g)1913 4379 y FB(B)1974 4365 y FH(\()p FD(x)p FH(\()p
FG(t)p FH(\)\))f(and)e FD(e)p FH(\()p FG(t)p FH(\))h(represen)m(t)f
(the)h(BCR)g(equations)f(for)300 4591 y(the)f(v)m(oltage)h(sources,)f
(V)m(CVS's,)h(and)e(closed)g(switc)m(hes.)42 b(The)30
b(v)m(ector)i FD(x)p FH(\()p FG(t)p FH(\))f(con)m(tains)g(the)g(unkno)m
(wns.)300 4816 y(The)f(elemen)m(t)h(stamps)f(for)g(\(F.4\))i(are)f(giv)
m(en)f(in)f(Sec.)i(F.2.)536 5042 y(When)k(the)h(net)m(w)m(ork)g(is)e
(linear)g(\(or)h(it)g(is)g(linearized)e(through)h(a)i(small-signal)d
(analysis)h(as)h(in)p eop
%%Page: 173 186
173 185 bop 3764 -200 a FH(173)300 99 y(Sec.)31 b(3.2\))h(the)e
(equations)g(in)f(\(F.4\))j(b)s(ecome)993 222 y Ft(2)993
368 y(6)993 421 y(4)1137 342 y FD(C)1213 357 y FB(cs;k)1090
511 y FG(G)1162 526 y FB(S)t(C)5 b(N)s(;k)1426 222 y
Ft(3)1426 368 y(7)1426 421 y(5)1497 416 y FD(x)1552 431
y FB(k)1594 416 y FH(\()p FG(t)p FH(\))26 b(=)1819 222
y Ft(2)1819 368 y(6)1819 421 y(4)1916 342 y FD(C)1992
309 y Fv(0)1992 369 y FB(cs;k)1990 511 y FD(0)2159 222
y Ft(3)2159 368 y(7)2159 421 y(5)2229 416 y FD(x)2284
431 y FB(k)r Fv(\000)p FA(1)2417 416 y FH(\()p FG(t)2485
431 y FB(k)r Fv(\000)p FA(1)2618 416 y FH(\))21 b(+)2765
222 y Ft(2)2765 368 y(6)2765 421 y(4)2871 342 y FD(0)2861
511 y(l)2890 526 y FB(k)2975 222 y Ft(3)2975 368 y(7)2975
421 y(5)3045 416 y FD(u)p FH(\()p FG(t)p FH(\))493 b(\(F.6\))300
733 y(where)413 1063 y FD(C)489 1078 y FB(cs;k)640 1063
y FH(=)745 1000 y FG(d)p FD(q)847 1015 y FB(cs;k)973
1000 y FH(\()p FD(x)1063 1015 y FB(k)1107 1000 y FH(\))p
745 1042 397 4 v 871 1125 a FG(d)p FD(x)973 1140 y FB(k)1425
1063 y FD(C)1501 1025 y Fv(0)1501 1085 y FB(cs;k)1651
1063 y FH(=)1757 1000 y FG(d)p FD(q)1859 1015 y FB(cs;k)1985
1000 y FH(\()p FD(x)2075 1015 y FB(k)r Fv(\000)p FA(1)2208
1000 y FH(\))p 1757 1042 487 4 v 1882 1125 a FG(d)p FD(x)1984
1140 y FB(k)r Fv(\000)p FA(1)2526 1063 y FD(G)2608 1078
y FB(S)t(C)5 b(N)s(;k)2857 1063 y FH(=)2953 844 y Ft(2)2953
990 y(6)2953 1040 y(6)2953 1093 y(4)3059 901 y FG(d)p
FD(q)3161 916 y FB(ch;k)3295 901 y FH(\()p FD(x)3385
916 y FB(k)3429 901 y FH(\))p 3059 942 405 4 v 3189 1025
a FG(d)p FD(x)3291 1040 y FB(k)3068 1108 y FG(d)p FD(g)3167
1123 y FB(B)s(;k)3287 1108 y FH(\()p FD(x)3377 1123 y
FB(k)3420 1108 y FH(\))p 3068 1149 387 4 v 3189 1232
a FG(d)p FD(x)3291 1247 y FB(k)3515 844 y Ft(3)3515 990
y(7)3515 1040 y(7)3515 1093 y(5)3699 1063 y FH(\(F.7\))300
1415 y(and)37 b FD(x)539 1430 y FB(k)582 1415 y FH(\()p
FG(t)p FH(\))h(is)f(a)h(v)m(ector)h(of)f(unkno)m(wns,)g(for)f(the)h
(linear)e(or)i(linearized)e(net)m(w)m(ork.)63 b(The)37
b(v)m(ector)i FD(u)p FH(\()p FG(t)p FH(\))300 1641 y(con)m(tains)33
b(the)g(input)e(w)m(a)m(v)m(eforms)j(as)f(de\014ned)e(in)h(\(3.20\))j
(and)d FD(l)2519 1656 y FB(k)2594 1641 y FH(relates)h
FD(u)p FH(\()p FG(t)p FH(\))h(to)f FD(e)3241 1656 y FB(k)3284
1641 y FH(\()p FG(t)p FH(\))g(as)g(in)e(\(3.21\).)300
1867 y(The)f(output)g(equations)g(can)h(b)s(e)e(written)h(as)1794
2184 y FD(y)q FH(\()p FG(t)p FH(\))c(=)f FD(m)2163 2146
y FB(t)2163 2206 y(k)2205 2184 y FD(x)2260 2199 y FB(k)2303
2184 y FH(\()p FG(t)p FH(\))1293 b(\(F.8\))300 2501 y(where)38
b FD(y)q FH(\()p FG(t)p FH(\))i(and)f FD(m)1044 2516
y FB(k)1124 2501 y FH(are)h(the)f(same)g(as)g(in)f(3.22.)67
b(The)39 b(elemen)m(t)g(stamps)g(for)f(\(F.6\))j(are)e(giv)m(en)g(in)
300 2727 y(Sec.)31 b(F.2.)536 2953 y(Note)e(that)f FD(C)1023
2968 y FB(cs;k)1176 2953 y FH(and)f FD(C)1426 2920 y
Fv(0)1426 2979 y FB(cs;k)1579 2953 y FH(are)h(the)f(same)i(as)e(in)g
(the)h(general)f(small-signal)e(CS/MNA)j(equa-)300 3178
y(tions)i(\(3.23\))i(of)f(Sec.)g(3.2.2,)h(and)e(the)h(quan)m(tit)m(y)
1665 3496 y FD(q)1720 3511 y FB(k)1788 3496 y FH(=)25
b FD(C)1960 3458 y Fv(0)1960 3518 y FB(cs;k)2085 3496
y FD(x)2140 3511 y FB(k)r Fv(\000)p FA(1)2273 3496 y
FH(\()p FG(t)2341 3511 y FB(k)r Fv(\000)p FA(1)2474 3496
y FH(\))p FG(:)1165 b FH(\(F.9\))300 3813 y(is)27 b(the)i(same)g
FC(state)i(char)-5 b(ge)32 b(variable)d FH(v)m(ector)h(de\014ned)d(in)g
(\(3.19\).)43 b(Therefore,)28 b(the)h(net)m(w)m(ork)g(equations)300
4039 y(in)i(\(F.6\))k(can)e(b)s(e)f(used)g(to)h(obtain)f(the)h(state)h
(c)m(harge)g(v)-5 b(ariable)32 b(represen)m(tation)h(the)g(same)g(w)m
(a)m(y)g(that)300 4264 y(\(3.23\))26 b(w)m(ere)e(used)f(in)g(Sec.)h
(3.3.)40 b(This)22 b(has)h(b)s(een)h(done)f(for)h(the)g(implemen)m
(tation)e(of)i(the)g(noise)f(analysis)300 4490 y(of)31
b(c)m(hapter)g(5.)p eop
%%Page: 174 187
174 186 bop 3764 -200 a FH(174)300 99 y FL(F.2)135 b(Stamps)45
b(for)g(ideal)h(SCN)f(equations)300 414 y FD(Capacitor)p
300 445 482 4 v 350 457 a
 7483322 4736286 2170798 44665815 10590863 49994137 startTexFig
 350 457 a
%%BeginDocument: figs/scn_cap.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 160 192 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 160 192 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 65 moveto
      160 115 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      135 115 moveto
      186 115 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      135 129 moveto
      151.67 126.33 168.67 126.33
      186 129 curveto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      160 127 moveto
      160 189 lineto
   stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      74 93 moveto ( +q ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      112 101 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      130 152 moveto
      -16 16 atan dup cos 8 mul 146 exch sub
      exch sin 8 mul 136 exch sub lineto
   stroke
grestore
gsave
   newpath
      146 136 8 3 16 -16 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      131 89 moveto
      16 16 atan dup cos 8 mul 147 exch sub
      exch sin 8 mul 105 exch sub lineto
   stroke
grestore
gsave
   newpath
      147 105 8 3 16 16 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 160 64 5 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 160 64 5 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      79 157 moveto (-q ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      112 165 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      61 107 moveto
      71 116 lineto
      84 121 lineto
      101 122 lineto
      113 120 lineto
      129 122 lineto
      151 122 lineto
      170 122 lineto
      202 121 lineto
      219 118 lineto
      232 114 lineto
      246 112 lineto
      255 110 lineto
      264 108 lineto
      280 108 lineto
   stroke
   [] 0 setdash
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      185 89 moveto (Surface) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      262 89 moveto ( A) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      204 113 moveto
      -17 0 atan dup cos 8 mul 204 exch sub
      exch sin 8 mul 96 exch sub lineto
   stroke
grestore
gsave
   newpath
      204 96 8 3 0 -17 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      204 131 moveto
      18 0 atan dup cos 8 mul 204 exch sub
      exch sin 8 mul 149 exch sub lineto
   stroke
grestore
gsave
   newpath
      204 149 8 3 0 18 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Helvetica findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      185 177 moveto (Surface) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [24 0 0 -24 0 0] makefont setfont
   gsave
      262 177 moveto ( B) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Oct 14 16:12:39 1998
%%EndDocument

 endTexFig
 1598 778 a Fw(branch)h(charge:)93 b FG(q)2402 793 y
FB(b)2462 778 y FH(=)25 b FG(C)7 b FH(\()p FG(V)2718
792 y FB(i)2766 778 y Fz(\000)20 b FG(V)2910 792 y FB(j)2946
778 y FH(\))300 1303 y FD(Capacitor)35 b(Stamp)e(for)i(\(F.4\))p
300 1339 1202 4 v 417 1555 a Fw(surface)46 b FG(A)i Fw(eqn:)87
b FH(+)p FG(C)7 b FH(\()p FG(V)1425 1569 y FB(i)1453
1555 y FH(\()p FG(t)p FH(\))21 b Fz(\000)f FG(V)1721
1569 y FB(j)1757 1555 y FH(\()p FG(t)p FH(\)\))112 b(+)20
b Fz(\001)15 b(\001)g(\001)117 b FH(=)f(+)p FG(C)7 b
FH(\()p FG(V)2738 1569 y FB(i)2766 1555 y FH(\()p FG(t)2834
1570 y FB(k)r Fv(\000)p FA(1)2967 1555 y FH(\))20 b Fz(\000)g
FG(V)3166 1569 y FB(j)3203 1555 y FH(\()p FG(t)3271 1570
y FB(k)r Fv(\000)p FA(1)3404 1555 y FH(\)\))112 b(+)20
b Fz(\001)15 b(\001)g(\001)417 1725 y Fw(surface)46 b
FG(B)52 b Fw(eqn:)82 b Fz(\000)p FG(C)7 b FH(\()p FG(V)1425
1739 y FB(i)1453 1725 y FH(\()p FG(t)p FH(\))21 b Fz(\000)f
FG(V)1721 1739 y FB(j)1757 1725 y FH(\()p FG(t)p FH(\)\))112
b(+)20 b Fz(\001)15 b(\001)g(\001)117 b FH(=)f Fz(\000)p
FG(C)7 b FH(\()p FG(V)2738 1739 y FB(i)2766 1725 y FH(\()p
FG(t)2834 1740 y FB(k)r Fv(\000)p FA(1)2967 1725 y FH(\))20
b Fz(\000)g FG(V)3166 1739 y FB(j)3203 1725 y FH(\()p
FG(t)3271 1740 y FB(k)r Fv(\000)p FA(1)3404 1725 y FH(\)\))112
b(+)20 b Fz(\001)15 b(\001)g(\001)417 1894 y Fw(node)47
b FG(i)h Fw(KChL:)219 b FH(+)p FG(C)7 b FH(\()p FG(V)1425
1908 y FB(i)1453 1894 y FH(\()p FG(t)p FH(\))21 b Fz(\000)f
FG(V)1721 1908 y FB(j)1757 1894 y FH(\()p FG(t)p FH(\)\))112
b(+)20 b Fz(\001)15 b(\001)g(\001)117 b FH(=)f(0)417
2063 y Fw(node)47 b FG(j)53 b Fw(KChL:)208 b Fz(\000)p
FG(C)7 b FH(\()p FG(V)1425 2077 y FB(i)1453 2063 y FH(\()p
FG(t)p FH(\))21 b Fz(\000)f FG(V)1721 2077 y FB(j)1757
2063 y FH(\()p FG(t)p FH(\)\))112 b(+)20 b Fz(\001)15
b(\001)g(\001)117 b FH(=)f(0)300 2434 y FD(Capacitor)35
b(Stamp)e(for)i(\(F.6\))p 300 2470 V 766 2637 a FG(V)819
2651 y FB(i)1026 2637 y FG(V)1079 2651 y FB(j)784 2748
y Fz(#)219 b(#)438 2916 y FG(A)26 b Fz(!)433 3085 y FG(B)k
Fz(!)475 3293 y FG(i)c Fz(!)464 3463 y FG(j)31 b Fz(!)619
2810 y Ft(2)619 2956 y(6)619 3006 y(6)619 3056 y(6)619
3106 y(6)619 3155 y(6)619 3205 y(6)619 3255 y(6)619 3305
y(6)619 3358 y(4)771 2916 y FG(C)164 b Fz(\000)p FG(C)735
3085 y Fz(\000)p FG(C)g(C)771 3293 y(C)g Fz(\000)p FG(C)735
3463 y Fz(\000)p FG(C)g(C)1204 2810 y Ft(3)1204 2956
y(7)1204 3006 y(7)1204 3056 y(7)1204 3106 y(7)1204 3155
y(7)1204 3205 y(7)1204 3255 y(7)1204 3305 y(7)1204 3358
y(5)1257 2759 y(9)1257 2834 y(>)1257 2859 y(=)1257 3008
y(>)1257 3033 y(;)1346 2956 y FD(C)1422 2970 y FB(cs)1257
3203 y Ft(9)1257 3278 y(>)1257 3302 y(=)1257 3452 y(>)1257
3477 y(;)1346 3400 y FD(G)1428 3414 y FB(S)t(C)5 b(N)2190
2637 y FG(V)2243 2651 y FB(i)2451 2637 y FG(V)2504 2651
y FB(j)2208 2748 y Fz(#)220 b(#)1862 2883 y FG(A)26 b
Fz(!)1857 3052 y FG(B)k Fz(!)2043 2763 y Ft(2)2043 2909
y(6)2043 2962 y(4)2195 2883 y FG(C)164 b Fz(\000)p FG(C)2160
3052 y Fz(\000)p FG(C)g(C)2628 2763 y Ft(3)2628 2909
y(7)2628 2962 y(5)2043 3143 y(|)p 2080 3143 246 10 v
246 w({z)p 2400 3143 V 246 w(})2292 3256 y FD(C)2368
3218 y Fv(0)2368 3278 y FB(cs)3107 2802 y Ft(2)3107 2948
y(6)3107 3001 y(4)3208 2922 y FG(V)3261 2936 y FB(i)3204
3091 y FG(V)3257 3105 y FB(j)3335 2802 y Ft(3)3335 2948
y(7)3335 3001 y(5)3107 3182 y(|)p 3144 3182 67 10 v 67
w({z)p 3285 3182 V 67 w(})3221 3261 y FD(x)300 3761 y(Closed)35
b(switc)m(h)p 300 3774 662 4 v 350 3825 a
 2415502 4736286 3552215 43744870 7170211 50717736 startTexFig
 350 3825 a
%%BeginDocument: figs/scn_switch.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 104 64 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 64 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      160 136 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      178 145 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      144 113 moveto
      30 0 atan dup cos 10 mul 144 exch sub
      exch sin 10 mul 143 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      144 143 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 104 moveto
      104 64 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 152 moveto
      104 200 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 104 200 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 200 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      120 70 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      112 214 moveto ( j) show
   grestore

% OVAL
newpath 104 104 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 104 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 104 152 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 104 152 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      104 104 moveto
      104 152 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Oct 14 16:42:43 1998
%%EndDocument

 endTexFig
 956 4087 a Fw(branch)46 b(charge:)93 b FG(q)1760 4102
y FB(b)956 4200 y Fw(additional)45 b(unknown:)93 b FG(q)1999
4215 y FB(b)300 4671 y FD(Closed)35 b(switc)m(h)g(stamp)f(for)h
(\(F.4\))p 300 4707 1366 4 v 1374 4923 a Fw(node)46 b
FG(i)i Fw(KChL:)93 b FH(+)p FG(q)2136 4938 y FB(b)2281
4923 y FH(+)20 b Fz(\001)15 b(\001)g(\001)117 b FH(=)f(0)1374
5093 y Fw(node)46 b FG(j)54 b Fw(KChL:)81 b Fz(\000)p
FG(q)2136 5108 y FB(b)2281 5093 y FH(+)20 b Fz(\001)15
b(\001)g(\001)117 b FH(=)f(0)1374 5262 y Fw(BCR:)458
b FG(V)2077 5276 y FB(i)2126 5262 y Fz(\000)20 b FG(V)2270
5276 y FB(j)2331 5262 y FH(=)25 b(0)p eop
%%Page: 175 188
175 187 bop 3764 -200 a FH(175)300 99 y FD(Closed)35
b(switc)m(h)g(stamp)f(for)h(\(F.6\))p 300 135 1366 4
v 939 301 a FG(V)992 315 y FB(i)1199 301 y FG(V)1252
315 y FB(j)1472 301 y FG(q)1513 316 y FB(b)957 412 y
Fz(#)219 b(#)h(#)648 743 y FG(i)26 b Fz(!)637 912 y FG(j)31
b Fz(!)465 1081 y FG(B)5 b(C)i(R)25 b Fz(!)792 473 y
Ft(2)792 619 y(6)792 669 y(6)792 719 y(6)792 768 y(6)792
818 y(6)792 868 y(6)792 918 y(6)792 971 y(4)1486 743
y FH(1)1451 912 y Fz(\000)p FH(1)957 1081 y(1)184 b Fz(\000)p
FH(1)1641 473 y Ft(3)1641 619 y(7)1641 669 y(7)1641 719
y(7)1641 768 y(7)1641 818 y(7)1641 868 y(7)1641 918 y(7)1641
971 y(5)1695 427 y(\033)1772 546 y FD(C)1848 560 y FB(cs)1695
660 y Ft(9)1695 735 y(>)1695 760 y(>)1695 785 y(>)1695
810 y(>)1695 835 y(=)1695 984 y(>)1695 1009 y(>)1695
1034 y(>)1695 1059 y(>)1695 1084 y(;)1784 932 y FD(G)1866
946 y FB(S)t(C)5 b(N)2408 471 y Ft(2)2408 617 y(6)2408
667 y(6)2408 717 y(6)2408 766 y(6)2408 820 y(4)2509 581
y FG(V)2562 595 y FB(i)2505 750 y FG(V)2558 764 y FB(j)2512
920 y FG(q)2553 935 y FB(b)2636 471 y Ft(3)2636 617 y(7)2636
667 y(7)2636 717 y(7)2636 766 y(7)2636 820 y(5)2408 1005
y(|)p 2445 1005 67 10 v 67 w({z)p 2586 1005 V 67 w(})2522
1085 y FD(x)300 1372 y(V)m(CVS)p 300 1385 324 4 v 350
1436 a
 5162544 4736286 592035 44928942 8222720 51901808 startTexFig
 350 1436 a
%%BeginDocument: figs/scn_vcvs.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 128 32 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 128 32 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      184 112 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      207 121 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 89 moveto
      30 0 atan dup cos 10 mul 168 exch sub
      exch sin 10 mul 119 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      168 119 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 72 moveto
      128 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      128 120 moveto
      128 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 128 168 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 128 168 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      144 38 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      136 182 moveto ( j) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      117 96 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      120 104 moveto (_) show
   grestore

% OVAL
newpath 24 32 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 24 32 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 24 168 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 24 168 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      40 38 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      32 182 moveto ( l ) show
   grestore

% POLYGON/CLOSED-SPLINE
gsave
   2 setlinewidth
   newpath
      128 72 moveto
      104 96 lineto
      128 120 lineto
      152 96 lineto
   closepath stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      48 104 moveto ( A) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      79 113 moveto (0) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      24 144 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      21 64 moveto (+) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Oct 14 18:19:16 1998
%%EndDocument

 endTexFig
 1304 1699 a Fw(branch)46 b(charge:)93 b FG(q)2108 1714
y FB(b)1304 1811 y Fw(additional)45 b(unknown:)93 b FG(q)2347
1826 y FB(b)300 2282 y FD(V)m(CVS)35 b(stamp)e(for)i(\(F.4\))p
300 2318 1027 4 v 1227 2498 a Fw(node)47 b FG(i)h Fw(KChL:)93
b FH(+)p FG(q)1990 2513 y FB(b)2135 2498 y FH(+)20 b
Fz(\001)15 b(\001)g(\001)117 b FH(=)f(0)1227 2667 y Fw(node)47
b FG(j)53 b Fw(KChL:)82 b Fz(\000)p FG(q)1990 2682 y
FB(b)2135 2667 y FH(+)20 b Fz(\001)15 b(\001)g(\001)117
b FH(=)f(0)1227 2836 y Fw(BCR:)459 b FH(\()p FG(V)1966
2850 y FB(i)2015 2836 y Fz(\000)20 b FG(V)2159 2850 y
FB(j)2195 2836 y FH(\))h Fz(\000)f FG(A)2410 2850 y FA(0)2449
2836 y FH(\()p FG(V)2537 2851 y FB(k)2601 2836 y Fz(\000)g
FG(V)2745 2851 y FB(l)2771 2836 y FH(\))25 b(=)g(0)300
3171 y FD(V)m(CVS)35 b(stamp)e(for)i(\(F.6\))p 300 3207
V 974 3373 a FG(V)1027 3387 y FB(i)1235 3373 y FG(V)1288
3387 y FB(j)1496 3373 y FG(V)1549 3388 y FB(k)1770 3373
y FG(V)1823 3388 y FB(l)2036 3373 y FG(q)2077 3388 y
FB(b)992 3484 y Fz(#)220 b(#)f(#)h(#)g(#)683 3815 y FG(i)26
b Fz(!)672 3984 y FG(j)31 b Fz(!)500 4153 y FG(B)5 b(C)i(R)25
b Fz(!)827 3545 y Ft(2)827 3691 y(6)827 3741 y(6)827
3791 y(6)827 3841 y(6)827 3890 y(6)827 3940 y(6)827 3990
y(6)827 4043 y(4)2051 3815 y FH(1)2016 3984 y Fz(\000)p
FH(1)992 4153 y(1)184 b Fz(\000)p FH(1)118 b Fz(\000)p
FG(A)1594 4167 y FA(0)1755 4153 y FG(A)1823 4167 y FA(0)2206
3545 y Ft(3)2206 3691 y(7)2206 3741 y(7)2206 3791 y(7)2206
3841 y(7)2206 3890 y(7)2206 3940 y(7)2206 3990 y(7)2206
4043 y(5)2260 3499 y(\033)2337 3618 y FD(C)2413 3632
y FB(cs)2260 3732 y Ft(9)2260 3807 y(>)2260 3832 y(>)2260
3857 y(>)2260 3882 y(>)2260 3907 y(=)2260 4056 y(>)2260
4081 y(>)2260 4106 y(>)2260 4131 y(>)2260 4156 y(;)2349
4004 y FD(G)2431 4018 y FB(S)t(C)5 b(N)3005 3427 y Ft(2)3005
3573 y(6)3005 3623 y(6)3005 3673 y(6)3005 3723 y(6)3005
3773 y(6)3005 3822 y(6)3005 3872 y(6)3005 3922 y(6)3005
3972 y(6)3005 4022 y(6)3005 4072 y(6)3005 4125 y(4)3109
3543 y FG(V)3162 3557 y FB(i)3105 3712 y FG(V)3158 3726
y FB(j)3102 3881 y FG(V)3155 3896 y FB(k)3110 4051 y
FG(V)3163 4066 y FB(l)3112 4220 y FG(q)3153 4235 y FB(b)3239
3427 y Ft(3)3239 3573 y(7)3239 3623 y(7)3239 3673 y(7)3239
3723 y(7)3239 3773 y(7)3239 3822 y(7)3239 3872 y(7)3239
3922 y(7)3239 3972 y(7)3239 4022 y(7)3239 4072 y(7)3239
4125 y(5)3005 4306 y(|)p 3042 4306 70 10 v 70 w({z)p
3186 4306 V 70 w(})3122 4385 y FD(x)300 4602 y(Opamp)p
300 4633 368 4 v 350 4683 a
 5683542 4736286 131563 44007997 9669918 51901808 startTexFig
 350 4683 a
%%BeginDocument: figs/scn_opamp.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
newpath 168 32 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 168 32 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      224 112 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      247 121 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      208 89 moveto
      30 0 atan dup cos 10 mul 208 exch sub
      exch sin 10 mul 119 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      208 119 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 72 moveto
      168 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      168 120 moveto
      168 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 168 168 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 168 168 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      184 38 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      184 174 moveto ( j) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      141 56 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      144 144 moveto (_) show
   grestore

% OVAL
newpath 64 32 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 64 32 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 64 168 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 64 168 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      80 38 moveto (k) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      72 182 moveto ( l ) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      72 144 moveto (_) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      69 56 moveto (+) show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 168 84 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 168 108 12 12 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 72 moveto
      64 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 120 moveto
      64 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 64 96 12 24 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      16 59 moveto (I=0 ) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      56 41 moveto
      22 0 atan dup cos 10 mul 56 exch sub
      exch sin 10 mul 63 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      56 63 10 4 0 22 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Times-Italic findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      8 99 moveto (V=0 ) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      40 210 moveto (nullator) show
   grestore

% TEXT
0 setgray
/Times-Roman findfont [20 0 0 -20 0 0] makefont setfont
   gsave
      144 210 moveto (norator) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Oct 14 18:57:33 1998
%%EndDocument

 endTexFig
 1370 4946 a Fw(branch)46 b(charge:)93 b FG(q)2174 4961
y FB(b)1370 5059 y Fw(additional)45 b(unknown:)93 b FG(q)2413
5074 y FB(b)p eop
%%Page: 176 189
176 188 bop 3764 -200 a FH(176)300 99 y FD(Opamp)33 b(stamp)h(for)h
(\(F.4\))p 300 135 1071 4 v 1374 356 a Fw(node)46 b FG(i)i
Fw(KChL:)93 b FH(+)p FG(q)2136 371 y FB(b)2281 356 y
FH(+)20 b Fz(\001)15 b(\001)g(\001)117 b FH(=)f(0)1374
525 y Fw(node)46 b FG(j)54 b Fw(KChL:)81 b Fz(\000)p
FG(q)2136 540 y FB(b)2281 525 y FH(+)20 b Fz(\001)15
b(\001)g(\001)117 b FH(=)f(0)1374 695 y Fw(BCR:)458 b
FH(\()p FG(V)2112 710 y FB(k)2175 695 y Fz(\000)20 b
FG(V)2319 710 y FB(l)2345 695 y FH(\))26 b(=)f(0)300
951 y FD(Opamp)33 b(stamp)h(for)h(\(F.6\))p 300 987 V
974 1154 a FG(V)1027 1168 y FB(i)1235 1154 y FG(V)1288
1168 y FB(j)1496 1154 y FG(V)1549 1169 y FB(k)1770 1154
y FG(V)1823 1169 y FB(l)2036 1154 y FG(q)2077 1169 y
FB(b)992 1264 y Fz(#)220 b(#)f(#)h(#)g(#)683 1595 y FG(i)26
b Fz(!)672 1764 y FG(j)31 b Fz(!)500 1934 y FG(B)5 b(C)i(R)25
b Fz(!)827 1325 y Ft(2)827 1472 y(6)827 1521 y(6)827
1571 y(6)827 1621 y(6)827 1671 y(6)827 1721 y(6)827 1770
y(6)827 1824 y(4)2051 1595 y FH(1)2016 1764 y Fz(\000)p
FH(1)1521 1934 y(1)185 b Fz(\000)p FH(1)2206 1325 y Ft(3)2206
1472 y(7)2206 1521 y(7)2206 1571 y(7)2206 1621 y(7)2206
1671 y(7)2206 1721 y(7)2206 1770 y(7)2206 1824 y(5)2260
1279 y(\033)2337 1398 y FD(C)2413 1412 y FB(cs)2260 1513
y Ft(9)2260 1587 y(>)2260 1612 y(>)2260 1637 y(>)2260
1662 y(>)2260 1687 y(=)2260 1837 y(>)2260 1861 y(>)2260
1886 y(>)2260 1911 y(>)2260 1936 y(;)2349 1785 y FD(G)2431
1799 y FB(S)t(C)5 b(N)3005 1208 y Ft(2)3005 1354 y(6)3005
1404 y(6)3005 1453 y(6)3005 1503 y(6)3005 1553 y(6)3005
1603 y(6)3005 1653 y(6)3005 1703 y(6)3005 1752 y(6)3005
1802 y(6)3005 1852 y(6)3005 1905 y(4)3109 1323 y FG(V)3162
1337 y FB(i)3105 1492 y FG(V)3158 1506 y FB(j)3102 1662
y FG(V)3155 1677 y FB(k)3110 1831 y FG(V)3163 1846 y
FB(l)3112 2000 y FG(q)3153 2015 y FB(b)3239 1208 y Ft(3)3239
1354 y(7)3239 1404 y(7)3239 1453 y(7)3239 1503 y(7)3239
1553 y(7)3239 1603 y(7)3239 1653 y(7)3239 1703 y(7)3239
1752 y(7)3239 1802 y(7)3239 1852 y(7)3239 1905 y(5)3005
2086 y(|)p 3042 2086 70 10 v 70 w({z)p 3186 2086 V 70
w(})3122 2165 y FD(x)300 2263 y(V)-9 b(oltage)35 b(source)p
300 2294 703 4 v 350 2345 a
 4594186 4736286 131563 44928942 6907084 51901808 startTexFig
 350 2345 a
%%BeginDocument: figs/scn_vsrc.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
gsave
   2 setlinewidth
   newpath 96 95 23 24 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 96 32 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 96 32 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      152 112 moveto (q) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      172 121 moveto (b) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      136 89 moveto
      30 0 atan dup cos 10 mul 136 exch sub
      exch sin 10 mul 119 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      136 119 10 4 0 30 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 72 moveto
      96 32 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      96 120 moveto
      96 168 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 96 168 4 5 tgifellipse fill
gsave
   2 setlinewidth
   newpath 96 168 4 5 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      8 110 moveto (E\(t\)) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      112 38 moveto (i) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      104 182 moveto ( j) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      85 96 moveto (+) show
   grestore

% TEXT
0 setgray
/Times-Italic findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      88 104 moveto (_) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Wed Oct 14 19:12:20 1998
%%EndDocument

 endTexFig
 1232 2607 a Fw(branch)46 b(charge:)93 b FG(q)2036 2622
y FB(b)1232 2720 y Fw(additional)45 b(unknown:)93 b FG(q)2275
2735 y FB(b)300 3071 y FD(V)-9 b(oltage)35 b(source)h(stamp)e(for)h
(\(F.4\))p 300 3107 1406 4 v 1374 3328 a Fw(node)46 b
FG(i)i Fw(KChL:)93 b FH(+)p FG(q)2136 3343 y FB(b)2281
3328 y FH(+)20 b Fz(\001)15 b(\001)g(\001)117 b FH(=)f(0)1374
3497 y Fw(node)46 b FG(j)54 b Fw(KChL:)81 b Fz(\000)p
FG(q)2136 3512 y FB(b)2281 3497 y FH(+)20 b Fz(\001)15
b(\001)g(\001)117 b FH(=)f(0)1374 3667 y Fw(BCR:)458
b FG(V)2077 3681 y FB(i)2126 3667 y Fz(\000)20 b FG(V)2270
3681 y FB(j)2331 3667 y FH(=)25 b FG(E)5 b FH(\()p FG(t)p
FH(\))300 3923 y FD(V)-9 b(oltage)35 b(source)h(stamp)e(for)h(\(F.6\))p
300 3959 V 939 4126 a FG(V)992 4140 y FB(i)1199 4126
y FG(V)1252 4140 y FB(j)1472 4126 y FG(q)1513 4141 y
FB(b)957 4236 y Fz(#)219 b(#)h(#)648 4567 y FG(i)26 b
Fz(!)637 4736 y FG(j)31 b Fz(!)465 4906 y FG(B)5 b(C)i(R)25
b Fz(!)792 4297 y Ft(2)792 4444 y(6)792 4493 y(6)792
4543 y(6)792 4593 y(6)792 4643 y(6)792 4693 y(6)792 4742
y(6)792 4796 y(4)1486 4567 y FH(1)1451 4736 y Fz(\000)p
FH(1)957 4906 y(1)184 b Fz(\000)p FH(1)1641 4297 y Ft(3)1641
4444 y(7)1641 4493 y(7)1641 4543 y(7)1641 4593 y(7)1641
4643 y(7)1641 4693 y(7)1641 4742 y(7)1641 4796 y(5)1695
4251 y(\033)1772 4370 y FD(C)1848 4384 y FB(cs)1695 4485
y Ft(9)1695 4559 y(>)1695 4584 y(>)1695 4609 y(>)1695
4634 y(>)1695 4659 y(=)1695 4809 y(>)1695 4833 y(>)1695
4858 y(>)1695 4883 y(>)1695 4908 y(;)1784 4757 y FD(G)1866
4771 y FB(S)t(C)5 b(N)2408 4295 y Ft(2)2408 4441 y(6)2408
4491 y(6)2408 4541 y(6)2408 4591 y(6)2408 4644 y(4)2509
4406 y FG(V)2562 4420 y FB(i)2505 4575 y FG(V)2558 4589
y FB(j)2512 4744 y FG(q)2553 4759 y FB(b)2636 4295 y
Ft(3)2636 4441 y(7)2636 4491 y(7)2636 4541 y(7)2636 4591
y(7)2636 4644 y(5)2408 4830 y(|)p 2445 4830 67 10 v 67
w({z)p 2586 4830 V 67 w(})2522 4909 y FD(x)3215 4563
y FG(i)26 b Fz(!)3204 4732 y FG(j)31 b Fz(!)3032 4902
y FG(B)5 b(C)i(R)25 b Fz(!)3401 4286 y Ft(2)3401 4432
y(6)3401 4482 y(6)3401 4531 y(6)3401 4581 y(6)3401 4631
y(6)3401 4681 y(6)3401 4731 y(6)3401 4784 y(4)3497 4894
y FH(1)3584 4286 y Ft(3)3584 4432 y(7)3584 4482 y(7)3584
4531 y(7)3584 4581 y(7)3584 4631 y(7)3584 4681 y(7)3584
4731 y(7)3584 4784 y(5)3401 4980 y(|)p 3438 4980 45 10
v 45 w({z)p 3557 4980 V 45 w(})3506 5082 y FD(l)3655
4629 y FG(E)5 b FH(\()p FG(t)p FH(\))p eop
%%Page: 177 190
177 189 bop 3764 -200 a FH(177)300 721 y FM(App)5 b(endix)65
b(G)300 1095 y(Rank-1-up)5 b(date)64 b(v)-5 b(ectors)300
1653 y FH(In)44 b(this)f(app)s(endix)f(it)h(is)h(sho)m(wn)f(that)i(the)
g(net)m(w)m(ork)g(equations)f(for)g(the)g(original)f(SCN)g(and)h(the)
300 1878 y(mo)s(di\014ed)24 b(SCN)i(ha)m(v)m(e)i(the)f(relationship)d
(giv)m(en)i(in)f(\(5.74\).)42 b(Also,)27 b(the)g(rank-1-up)s(date)g(v)m
(ectors)h FD(a)3685 1893 y FB(k)3754 1878 y FH(and)300
2104 y FD(l)329 2119 y FB(k)402 2104 y FH(are)j(deriv)m(ed)e(for)h(the)
h(three)f(t)m(yp)s(es)h(of)f(noisy)g(elemen)m(ts.)536
2330 y(Eac)m(h)i(net)m(w)m(ork)g(elemen)m(t)g(has)f(a)g(con)m
(tribution)f(to)i(the)f(CS/MNA)g(net)m(w)m(ork)h(equations)f(that)h(is)
300 2556 y(represen)m(ted)e(b)m(y)h(its)f(stamp)g(\(de\014ned)g(in)f
(Sec.)i(F.2.\))42 b(The)30 b(con)m(tributions)f(from)h(the)h(elemen)m
(ts)g(in)e(the)300 2782 y(\\subnet)m(w)m(ork")35 b(\(sho)m(wn)f(in)f
(Fig.)h(5.16\))i(is)e(the)g(same)h(to)g(b)s(oth)e(the)i(equations)e(of)
i(the)f(original)f(SCN)300 3008 y(and)27 b(the)h(equations)f(of)h(the)g
(mo)s(di\014ed)d(SCN.)j(The)f(only)g(di\013erence)g(b)s(et)m(w)m(een)h
(the)g(net)m(w)m(ork)g(equations)300 3233 y(is)38 b(that)i(the)f
(equations)f(of)h(the)g(original)f(SCN)g(con)m(tain)h(the)g(stamp)g(of)
g(the)g(noisy)f(elemen)m(t,)k(while)300 3459 y(the)35
b(equations)g(of)g(the)g(mo)s(di\014ed)d(SCN)i(con)m(tain)i(the)f
(stamp)f(of)h(the)g(v)m(oltage)i(source)e(that)g(replaced)300
3685 y(the)h(noisy)e(elemen)m(t.)56 b(It)36 b(turns)e(out,)j(that)f
(for)f(all)g(three)g(t)m(yp)s(es)h(of)f(noisy)g(elemen)m(ts,)i(this)d
(di\013erence)300 3911 y(can)i(b)s(e)e(expressed)h(b)m(y)g(the)h
(rank-1-up)s(date)f(op)s(eration)g(in)f(\(5.74\).)58
b(This)33 b(op)s(eration)i(has)g(the)g(e\013ect)300 4137
y(of)c(subtracting)f(the)g(stamp)h(of)g(the)f(noisy)g(elemen)m(t)h(and)
f(adding)f(the)i(stamp)g(of)f(the)h(v)m(oltage)i(source.)300
4362 y(T)-8 b(o)38 b(get)g(up)s(date)e(v)m(ectors)j FD(a)1278
4377 y FB(k)1358 4362 y FH(and)d FD(l)1570 4377 y FB(k)1613
4362 y FH(,)j(it)e(is)f(only)g(necessary)i(to)g(compare)g(the)f(stamp)g
(of)h(the)f(noisy)300 4588 y(elemen)m(t)31 b(to)g(the)g(stamp)f(of)g
(the)h(v)m(oltage)h(source.)p eop
%%Page: 178 191
178 190 bop 3764 -200 a FH(178)300 99 y FD(V)m(CVS)p
300 112 289 4 v 300 324 a FH(Using)29 b(the)g(no)s(de)g(and)g(branc)m
(h)g(de\014nitions)e(in)h(Fig.)i(5.16\(b\))h(and)e(the)h(stamp)f
(de\014nition)e(in)i(Sec.)h(F.2,)300 550 y(the)h(con)m(tribution)d(of)j
(the)g(V)m(CVS)f(in)f(the)i(original)d(SCN)i(to)h(\(5.66\))h(is)917
899 y FG(V)970 913 y FB(i)1132 899 y FG(V)1185 913 y
FB(j)1349 899 y FG(V)1402 914 y FB(k)1576 899 y FG(V)1629
914 y FB(l)1798 899 y FG(q)1839 914 y FB(b)935 1009 y
Fz(#)174 b(#)h(#)f(#)g(#)704 1340 y FG(i)26 b Fz(!)693
1509 y FG(j)31 b Fz(!)521 1679 y FG(B)5 b(C)i(R)25 b
Fz(!)852 1070 y Ft(2)852 1217 y(6)852 1266 y(6)852 1316
y(6)852 1366 y(6)852 1416 y(6)852 1466 y(6)852 1515 y(6)852
1569 y(4)1764 1340 y FH(1)1728 1509 y Fz(\000)p FH(1)949
1679 y(1)83 b Fz(\000)p FH(1)g Fz(\000)p FG(A)1415 1693
y FA(0)1538 1679 y FG(A)1606 1693 y FA(0)1886 1070 y
Ft(3)1886 1217 y(7)1886 1266 y(7)1886 1316 y(7)1886 1366
y(7)1886 1416 y(7)1886 1466 y(7)1886 1515 y(7)1886 1569
y(5)1943 1024 y(\033)2020 1143 y FD(C)2096 1158 y FB(cs;k)1943
1258 y Ft(9)1943 1333 y(>)1943 1357 y(>)1943 1382 y(>)1943
1407 y(>)1943 1432 y(=)1943 1582 y(>)1943 1606 y(>)1943
1631 y(>)1943 1656 y(>)1943 1681 y(;)2032 1530 y FD(G)2114
1545 y FB(S)t(C)5 b(N)s(;k)2644 867 y Ft(2)2644 1013
y(6)2644 1062 y(6)2644 1112 y(6)2644 1162 y(6)2644 1212
y(6)2644 1262 y(6)2644 1312 y(6)2644 1361 y(6)2644 1411
y(6)2644 1461 y(6)2644 1511 y(6)2644 1564 y(4)2748 982
y FG(V)2801 996 y FB(i)2744 1151 y FG(V)2797 1165 y FB(j)2740
1320 y FG(V)2793 1335 y FB(k)2749 1490 y FG(V)2802 1505
y FB(l)2751 1659 y FG(q)2792 1674 y FB(b)2878 867 y Ft(3)2878
1013 y(7)2878 1062 y(7)2878 1112 y(7)2878 1162 y(7)2878
1212 y(7)2878 1262 y(7)2878 1312 y(7)2878 1361 y(7)2878
1411 y(7)2878 1461 y(7)2878 1511 y(7)2878 1564 y(5)2644
1745 y(|)p 2681 1745 70 10 v 70 w({z)p 2825 1745 V 70
w(})2739 1824 y FD(x)2794 1839 y FB(k)3289 1015 y Ft(2)3289
1161 y(6)3289 1210 y(6)3289 1260 y(6)3289 1310 y(6)3289
1360 y(6)3289 1410 y(6)3289 1460 y(6)3289 1509 y(6)3289
1562 y(4)3386 1243 y FH(.)3386 1276 y(.)3386 1309 y(.)3386
1589 y(.)3386 1622 y(.)3386 1655 y(.)3452 1015 y Ft(3)3452
1161 y(7)3452 1210 y(7)3452 1260 y(7)3452 1310 y(7)3452
1360 y(7)3452 1410 y(7)3452 1460 y(7)3452 1509 y(7)3452
1562 y(5)3289 1743 y(|)p 3326 1743 35 10 v 35 w({z)p
3435 1743 V 35 w(})3362 1845 y FD(l)3391 1860 y FB(k)3687
1293 y FH(\(G.1\))536 2194 y(The)30 b(con)m(tribution)f(of)i(the)f(v)m
(oltage)i(source)f(in)e(the)h(mo)s(di\014ed)f(SCN)g(to)i(\(5.70\))i(is)
924 2541 y FG(V)977 2555 y FB(i)1139 2541 y FG(V)1192
2555 y FB(j)1355 2541 y FG(V)1408 2556 y FB(k)1583 2541
y FG(V)1636 2556 y FB(l)1805 2541 y FG(q)1846 2556 y
FB(b)942 2652 y Fz(#)174 b(#)h(#)f(#)g(#)711 2983 y FG(i)26
b Fz(!)700 3152 y FG(j)31 b Fz(!)528 3322 y FG(B)5 b(C)i(R)25
b Fz(!)855 2713 y Ft(2)855 2859 y(6)855 2909 y(6)855
2959 y(6)855 3009 y(6)855 3059 y(6)855 3108 y(6)855 3158
y(6)855 3211 y(4)1774 2983 y FH(1)1739 3152 y Fz(\000)p
FH(1)952 3322 y(1)94 b Fz(\000)p FH(1)138 b(0)175 b(0)1896
2713 y Ft(3)1896 2859 y(7)1896 2909 y(7)1896 2959 y(7)1896
3009 y(7)1896 3059 y(7)1896 3108 y(7)1896 3158 y(7)1896
3211 y(5)1950 2667 y(\033)2042 2763 y FH(\024)2027 2786
y FD(C)2103 2801 y FB(cs;k)1950 2901 y Ft(9)1950 2975
y(>)1950 3000 y(>)1950 3025 y(>)1950 3050 y(>)1950 3075
y(=)1950 3224 y(>)1950 3249 y(>)1950 3274 y(>)1950 3299
y(>)1950 3324 y(;)2057 3149 y FH(\024)2039 3172 y FD(G)2121
3187 y FB(S)t(C)5 b(N)s(;k)2650 2500 y Ft(2)2650 2646
y(6)2650 2696 y(6)2650 2746 y(6)2650 2796 y(6)2650 2846
y(6)2650 2896 y(6)2650 2945 y(6)2650 2995 y(6)2650 3045
y(6)2650 3095 y(6)2650 3145 y(6)2650 3198 y(4)2755 2616
y FG(V)2808 2630 y FB(i)2750 2785 y FG(V)2803 2799 y
FB(j)2747 2954 y FG(V)2800 2969 y FB(k)2756 3124 y FG(V)2809
3139 y FB(l)2758 3293 y FG(q)2799 3308 y FB(b)2885 2500
y Ft(3)2885 2646 y(7)2885 2696 y(7)2885 2746 y(7)2885
2796 y(7)2885 2846 y(7)2885 2896 y(7)2885 2945 y(7)2885
2995 y(7)2885 3045 y(7)2885 3095 y(7)2885 3145 y(7)2885
3198 y(5)2650 3379 y(|)p 2687 3379 70 10 v 70 w({z)p
2831 3379 V 70 w(})2751 3475 y FH(\024)2746 3476 y FD(x)2801
3491 y FB(k)3106 3282 y FG(B)g(C)i(R)25 b Fz(!)3433 2673
y Ft(2)3433 2819 y(6)3433 2869 y(6)3433 2919 y(6)3433
2969 y(6)3433 3019 y(6)3433 3068 y(6)3433 3118 y(6)3433
3171 y(4)3530 3282 y FH(1)3617 2673 y Ft(3)3617 2819
y(7)3617 2869 y(7)3617 2919 y(7)3617 2969 y(7)3617 3019
y(7)3617 3068 y(7)3617 3118 y(7)3617 3171 y(5)3433 3367
y(|)p 3470 3367 45 10 v 45 w({z)p 3589 3367 V 45 w(})3508
3463 y FH(\024)3517 3487 y FD(l)3546 3502 y FB(k)3687
3587 y FH(\(G.2\))536 3813 y(Note)g(that)g(the)f(only)f(di\013erence)g
(b)s(et)m(w)m(een)i(the)f(con)m(tributions)e(in)h(\(G.1\))i(and)e
(\(G.2\))j(is)d(the)h(BCR)300 4038 y(equation.)45 b(Consequen)m(tly)-8
b(,)31 b(the)h(matrices)g FD(G)1899 4053 y FB(S)t(C)5
b(N)s(;k)2154 4038 y FH(and)2350 4015 y(\024)2332 4038
y FD(G)2414 4053 y FB(S)t(C)g(N)s(;k)2669 4038 y FH(are)32
b(di\013eren)m(t)f(and)g(the)h(v)m(ectors)h FD(l)3857
4053 y FB(k)300 4264 y FH(and)469 4240 y(\024)477 4264
y FD(l)506 4279 y FB(k)580 4264 y FH(are)e(di\013eren)m(t.)42
b(The)31 b(rest)g(of)g(the)g(matrices)h(and)e(v)m(ectors)i(are)g(the)f
(same.)43 b(In)30 b(order)h(to)g(satisfy)300 4490 y(the)g(condition)e
(in)g(\(5.74\),)j(the)f(up)s(date)f(v)m(ector)i FD(a)2036
4505 y FB(k)2108 4490 y FH(can)f(b)s(e)1484 4974 y FD(a)1535
4989 y FB(k)1602 4974 y FH(=)1740 4631 y Ft(2)1740 4777
y(6)1740 4827 y(6)1740 4876 y(6)1740 4926 y(6)1740 4976
y(6)1740 5026 y(6)1740 5076 y(6)1740 5129 y(4)1903 4731
y FH(0)1903 4900 y(0)1872 5070 y FG(A)1940 5084 y FA(0)1837
5239 y Fz(\000)p FG(A)1976 5253 y FA(0)2056 4631 y Ft(3)2056
4777 y(7)2056 4827 y(7)2056 4876 y(7)2056 4926 y(7)2056
4976 y(7)2056 5026 y(7)2056 5076 y(7)2056 5129 y(5)2115
4731 y Fz( )25 b FH(ro)m(w)31 b(for)f FG(V)2598 4745
y FB(i)2111 4900 y Fz( )25 b FH(ro)m(w)31 b(for)f FG(V)2594
4914 y FB(j)2108 5070 y Fz( )25 b FH(ro)m(w)31 b(for)f
FG(V)2591 5085 y FB(k)2116 5239 y Fz( )25 b FH(ro)m(w)31
b(for)f FG(V)2599 5254 y FB(l)3687 4974 y FH(\(G.3\))p
eop
%%Page: 179 192
179 191 bop 3764 -200 a FH(179)300 99 y FD(Closed)35
b(switc)m(h)p 300 112 627 4 v 300 324 a FH(Using)29 b(the)h(no)s(de)f
(and)g(branc)m(h)h(de\014nitions)d(in)i(Fig.)h(5.16\(a\))i(and)e(the)g
(stamp)f(de\014nition)f(in)g(Sec.)j(F.2,)300 550 y(the)g(con)m
(tribution)d(of)j(the)g(closed)f(switc)m(h)g(in)f(the)h(original)f(SCN)
g(to)j(\(5.66\))g(is)1246 899 y FG(V)1299 913 y FB(i)1461
899 y FG(V)1514 913 y FB(j)1688 899 y FG(q)1729 914 y
FB(b)1264 1009 y Fz(#)174 b(#)h(#)1033 1340 y FG(i)26
b Fz(!)1022 1509 y FG(j)31 b Fz(!)850 1679 y FG(B)5 b(C)i(R)25
b Fz(!)1187 1070 y Ft(2)1187 1217 y(6)1187 1266 y(6)1187
1316 y(6)1187 1366 y(6)1187 1416 y(6)1187 1466 y(6)1187
1515 y(6)1187 1569 y(4)1647 1340 y FH(1)1612 1509 y Fz(\000)p
FH(1)1284 1679 y(1)83 b Fz(\000)p FH(1)1769 1070 y Ft(3)1769
1217 y(7)1769 1266 y(7)1769 1316 y(7)1769 1366 y(7)1769
1416 y(7)1769 1466 y(7)1769 1515 y(7)1769 1569 y(5)1833
1024 y(\033)1911 1143 y FD(C)1987 1158 y FB(cs;k)1833
1258 y Ft(9)1833 1333 y(>)1833 1357 y(>)1833 1382 y(>)1833
1407 y(>)1833 1432 y(=)1833 1582 y(>)1833 1606 y(>)1833
1631 y(>)1833 1656 y(>)1833 1681 y(;)1922 1530 y FD(G)2004
1545 y FB(S)t(C)5 b(N)s(;k)2534 1041 y Ft(2)2534 1187
y(6)2534 1237 y(6)2534 1287 y(6)2534 1336 y(6)2534 1390
y(4)2635 1151 y FG(V)2688 1165 y FB(i)2631 1320 y FG(V)2684
1334 y FB(j)2638 1490 y FG(q)2679 1505 y FB(b)2762 1041
y Ft(3)2762 1187 y(7)2762 1237 y(7)2762 1287 y(7)2762
1336 y(7)2762 1390 y(5)2534 1576 y(|)p 2571 1576 67 10
v 67 w({z)p 2712 1576 V 67 w(})2626 1655 y FD(x)2681
1670 y FB(k)3173 1015 y Ft(2)3173 1161 y(6)3173 1210
y(6)3173 1260 y(6)3173 1310 y(6)3173 1360 y(6)3173 1410
y(6)3173 1460 y(6)3173 1509 y(6)3173 1562 y(4)3270 1243
y FH(.)3270 1276 y(.)3270 1309 y(.)3270 1589 y(.)3270
1622 y(.)3270 1655 y(.)3336 1015 y Ft(3)3336 1161 y(7)3336
1210 y(7)3336 1260 y(7)3336 1310 y(7)3336 1360 y(7)3336
1410 y(7)3336 1460 y(7)3336 1509 y(7)3336 1562 y(5)3173
1743 y(|)p 3210 1743 35 10 v 35 w({z)p 3319 1743 V 35
w(})3246 1845 y FD(l)3275 1860 y FB(k)3687 1293 y FH(\(G.4\))536
2194 y(The)30 b(con)m(tribution)f(of)i(the)f(v)m(oltage)i(source)f(in)e
(the)h(mo)s(di\014ed)f(SCN)g(to)i(\(5.70\))i(is)1040
2541 y FG(V)1093 2555 y FB(i)1255 2541 y FG(V)1308 2555
y FB(j)1482 2541 y FG(q)1523 2556 y FB(b)1058 2652 y
Fz(#)174 b(#)h(#)827 2983 y FG(i)26 b Fz(!)816 3152 y
FG(j)31 b Fz(!)644 3322 y FG(B)5 b(C)i(R)25 b Fz(!)981
2713 y Ft(2)981 2859 y(6)981 2909 y(6)981 2959 y(6)981
3009 y(6)981 3059 y(6)981 3108 y(6)981 3158 y(6)981 3211
y(4)1441 2983 y FH(1)1406 3152 y Fz(\000)p FH(1)1078
3322 y(1)84 b Fz(\000)p FH(1)1563 2713 y Ft(3)1563 2859
y(7)1563 2909 y(7)1563 2959 y(7)1563 3009 y(7)1563 3059
y(7)1563 3108 y(7)1563 3158 y(7)1563 3211 y(5)1627 2667
y(\033)1720 2763 y FH(\024)1705 2786 y FD(C)1781 2801
y FB(cs;k)1627 2901 y Ft(9)1627 2975 y(>)1627 3000 y(>)1627
3025 y(>)1627 3050 y(>)1627 3075 y(=)1627 3224 y(>)1627
3249 y(>)1627 3274 y(>)1627 3299 y(>)1627 3324 y(;)1735
3149 y FH(\024)1716 3172 y FD(G)1798 3187 y FB(S)t(C)5
b(N)s(;k)2328 2675 y Ft(2)2328 2821 y(6)2328 2871 y(6)2328
2920 y(6)2328 2970 y(6)2328 3023 y(4)2429 2785 y FG(V)2482
2799 y FB(i)2425 2954 y FG(V)2478 2968 y FB(j)2432 3124
y FG(q)2473 3139 y FB(b)2556 2675 y Ft(3)2556 2821 y(7)2556
2871 y(7)2556 2920 y(7)2556 2970 y(7)2556 3023 y(5)2328
3209 y(|)p 2365 3209 67 10 v 67 w({z)p 2506 3209 V 67
w(})2425 3305 y FH(\024)2421 3306 y FD(x)2476 3321 y
FB(k)2777 3282 y FG(B)g(C)i(R)25 b Fz(!)3104 2673 y Ft(2)3104
2819 y(6)3104 2869 y(6)3104 2919 y(6)3104 2969 y(6)3104
3019 y(6)3104 3068 y(6)3104 3118 y(6)3104 3171 y(4)3201
3282 y FH(1)3288 2673 y Ft(3)3288 2819 y(7)3288 2869
y(7)3288 2919 y(7)3288 2969 y(7)3288 3019 y(7)3288 3068
y(7)3288 3118 y(7)3288 3171 y(5)3104 3367 y(|)p 3141
3367 45 10 v 45 w({z)p 3260 3367 V 45 w(})3180 3463 y
FH(\024)3188 3487 y FD(l)3217 3502 y FB(k)3687 2936 y
FH(\(G.5\))536 3691 y(Note)30 b(that)f(the)g(only)e(di\013erence)h(b)s
(et)m(w)m(een)i(\(G.4\))g(and)e(\(G.5\))i(is)d(in)h(the)g(v)m(ectors)i
FD(l)3397 3706 y FB(k)3468 3691 y FH(and)3635 3667 y(\024)3643
3691 y FD(l)3672 3706 y FB(k)3743 3691 y FH(The)300 3917
y(rest)35 b(of)f(the)h(matrices)g(and)f(v)m(ectors)i(are)f(the)f(same.)
54 b(In)34 b(order)g(to)h(satisfy)f(the)h(condition)e(in)g(\(5.74\),)
300 4143 y(the)e(up)s(date)e(v)m(ector)1967 4369 y FD(a)2018
4384 y FB(k)2085 4369 y FH(=)c FD(0)1454 b FH(\(G.6\))p
eop
%%Page: 180 193
180 192 bop 3764 -200 a FH(180)300 99 y FD(Ideal)34 b(opamp)p
300 129 567 4 v 300 324 a FH(Using)29 b(the)i(no)s(de)e(and)h(branc)m
(h)f(de\014nitions)f(in)h(Fig.)h(5.16\(c\))j(and)d(the)g(stamp)g
(de\014nition)e(in)h(Sec.)i(F.2,)300 550 y(the)g(con)m(tribution)d(of)j
(the)g(ideal)e(opamp)h(in)f(the)h(original)f(SCN)h(to)h(\(5.66\))h(is)
917 899 y FG(V)970 913 y FB(i)1132 899 y FG(V)1185 913
y FB(j)1349 899 y FG(V)1402 914 y FB(k)1576 899 y FG(V)1629
914 y FB(l)1798 899 y FG(q)1839 914 y FB(b)935 1009 y
Fz(#)174 b(#)h(#)f(#)g(#)704 1340 y FG(i)26 b Fz(!)693
1509 y FG(j)31 b Fz(!)521 1679 y FG(B)5 b(C)i(R)25 b
Fz(!)858 1070 y Ft(2)858 1217 y(6)858 1266 y(6)858 1316
y(6)858 1366 y(6)858 1416 y(6)858 1466 y(6)858 1515 y(6)858
1569 y(4)1757 1340 y FH(1)1722 1509 y Fz(\000)p FH(1)955
1679 y(0)129 b(0)174 b(1)129 b Fz(\000)p FH(1)1879 1070
y Ft(3)1879 1217 y(7)1879 1266 y(7)1879 1316 y(7)1879
1366 y(7)1879 1416 y(7)1879 1466 y(7)1879 1515 y(7)1879
1569 y(5)1943 1024 y(\033)2020 1143 y FD(C)2096 1158
y FB(cs;k)1943 1258 y Ft(9)1943 1333 y(>)1943 1357 y(>)1943
1382 y(>)1943 1407 y(>)1943 1432 y(=)1943 1582 y(>)1943
1606 y(>)1943 1631 y(>)1943 1656 y(>)1943 1681 y(;)2032
1530 y FD(G)2114 1545 y FB(S)t(C)5 b(N)s(;k)2644 867
y Ft(2)2644 1013 y(6)2644 1062 y(6)2644 1112 y(6)2644
1162 y(6)2644 1212 y(6)2644 1262 y(6)2644 1312 y(6)2644
1361 y(6)2644 1411 y(6)2644 1461 y(6)2644 1511 y(6)2644
1564 y(4)2748 982 y FG(V)2801 996 y FB(i)2744 1151 y
FG(V)2797 1165 y FB(j)2740 1320 y FG(V)2793 1335 y FB(k)2749
1490 y FG(V)2802 1505 y FB(l)2751 1659 y FG(q)2792 1674
y FB(b)2878 867 y Ft(3)2878 1013 y(7)2878 1062 y(7)2878
1112 y(7)2878 1162 y(7)2878 1212 y(7)2878 1262 y(7)2878
1312 y(7)2878 1361 y(7)2878 1411 y(7)2878 1461 y(7)2878
1511 y(7)2878 1564 y(5)2644 1745 y(|)p 2681 1745 70 10
v 70 w({z)p 2825 1745 V 70 w(})2739 1824 y FD(x)2794
1839 y FB(k)3289 1015 y Ft(2)3289 1161 y(6)3289 1210
y(6)3289 1260 y(6)3289 1310 y(6)3289 1360 y(6)3289 1410
y(6)3289 1460 y(6)3289 1509 y(6)3289 1562 y(4)3386 1243
y FH(.)3386 1276 y(.)3386 1309 y(.)3386 1589 y(.)3386
1622 y(.)3386 1655 y(.)3452 1015 y Ft(3)3452 1161 y(7)3452
1210 y(7)3452 1260 y(7)3452 1310 y(7)3452 1360 y(7)3452
1410 y(7)3452 1460 y(7)3452 1509 y(7)3452 1562 y(5)3289
1743 y(|)p 3326 1743 35 10 v 35 w({z)p 3435 1743 V 35
w(})3362 1845 y FD(l)3391 1860 y FB(k)3687 1293 y FH(\(G.7\))536
2194 y(The)30 b(con)m(tribution)f(of)i(the)f(v)m(oltage)i(source)f(in)e
(the)h(mo)s(di\014ed)f(SCN)g(to)i(\(5.70\))i(is)924 2541
y FG(V)977 2555 y FB(i)1139 2541 y FG(V)1192 2555 y FB(j)1355
2541 y FG(V)1408 2556 y FB(k)1583 2541 y FG(V)1636 2556
y FB(l)1805 2541 y FG(q)1846 2556 y FB(b)942 2652 y Fz(#)174
b(#)h(#)f(#)g(#)711 2983 y FG(i)26 b Fz(!)700 3152 y
FG(j)31 b Fz(!)528 3322 y FG(B)5 b(C)i(R)25 b Fz(!)855
2713 y Ft(2)855 2859 y(6)855 2909 y(6)855 2959 y(6)855
3009 y(6)855 3059 y(6)855 3108 y(6)855 3158 y(6)855 3211
y(4)1774 2983 y FH(1)1739 3152 y Fz(\000)p FH(1)952 3322
y(1)94 b Fz(\000)p FH(1)138 b(0)175 b(0)1896 2713 y Ft(3)1896
2859 y(7)1896 2909 y(7)1896 2959 y(7)1896 3009 y(7)1896
3059 y(7)1896 3108 y(7)1896 3158 y(7)1896 3211 y(5)1950
2667 y(\033)2042 2763 y FH(\024)2027 2786 y FD(C)2103
2801 y FB(cs;k)1950 2901 y Ft(9)1950 2975 y(>)1950 3000
y(>)1950 3025 y(>)1950 3050 y(>)1950 3075 y(=)1950 3224
y(>)1950 3249 y(>)1950 3274 y(>)1950 3299 y(>)1950 3324
y(;)2057 3149 y FH(\024)2039 3172 y FD(G)2121 3187 y
FB(S)t(C)5 b(N)s(;k)2650 2500 y Ft(2)2650 2646 y(6)2650
2696 y(6)2650 2746 y(6)2650 2796 y(6)2650 2846 y(6)2650
2896 y(6)2650 2945 y(6)2650 2995 y(6)2650 3045 y(6)2650
3095 y(6)2650 3145 y(6)2650 3198 y(4)2755 2616 y FG(V)2808
2630 y FB(i)2750 2785 y FG(V)2803 2799 y FB(j)2747 2954
y FG(V)2800 2969 y FB(k)2756 3124 y FG(V)2809 3139 y
FB(l)2758 3293 y FG(q)2799 3308 y FB(b)2885 2500 y Ft(3)2885
2646 y(7)2885 2696 y(7)2885 2746 y(7)2885 2796 y(7)2885
2846 y(7)2885 2896 y(7)2885 2945 y(7)2885 2995 y(7)2885
3045 y(7)2885 3095 y(7)2885 3145 y(7)2885 3198 y(5)2650
3379 y(|)p 2687 3379 70 10 v 70 w({z)p 2831 3379 V 70
w(})2751 3475 y FH(\024)2746 3476 y FD(x)2801 3491 y
FB(k)3106 3282 y FG(B)g(C)i(R)25 b Fz(!)3433 2673 y Ft(2)3433
2819 y(6)3433 2869 y(6)3433 2919 y(6)3433 2969 y(6)3433
3019 y(6)3433 3068 y(6)3433 3118 y(6)3433 3171 y(4)3530
3282 y FH(1)3617 2673 y Ft(3)3617 2819 y(7)3617 2869
y(7)3617 2919 y(7)3617 2969 y(7)3617 3019 y(7)3617 3068
y(7)3617 3118 y(7)3617 3171 y(5)3433 3367 y(|)p 3470
3367 45 10 v 45 w({z)p 3589 3367 V 45 w(})3508 3463 y
FH(\024)3517 3487 y FD(l)3546 3502 y FB(k)3687 3587 y
FH(\(G.8\))536 3813 y(Note)g(that)g(the)f(only)f(di\013erence)g(b)s(et)
m(w)m(een)i(the)f(con)m(tributions)e(in)h(\(G.7\))i(and)e(\(G.8\))j(is)
d(the)h(BCR)300 4038 y(equation.)45 b(Consequen)m(tly)-8
b(,)31 b(the)h(matrices)g FD(G)1899 4053 y FB(S)t(C)5
b(N)s(;k)2154 4038 y FH(and)2350 4015 y(\024)2332 4038
y FD(G)2414 4053 y FB(S)t(C)g(N)s(;k)2669 4038 y FH(are)32
b(di\013eren)m(t)f(and)g(the)h(v)m(ectors)h FD(l)3857
4053 y FB(k)300 4264 y FH(and)469 4240 y(\024)477 4264
y FD(l)506 4279 y FB(k)580 4264 y FH(are)e(di\013eren)m(t.)42
b(The)31 b(rest)g(of)g(the)g(matrices)h(and)e(v)m(ectors)i(are)g(the)f
(same.)43 b(In)30 b(order)h(to)g(satisfy)300 4490 y(the)g(condition)e
(in)g(\(5.74\),)j(the)f(up)s(date)f(v)m(ector)1515 4974
y FD(a)1566 4989 y FB(k)1633 4974 y FH(=)1771 4631 y
Ft(2)1771 4777 y(6)1771 4827 y(6)1771 4876 y(6)1771 4926
y(6)1771 4976 y(6)1771 5026 y(6)1771 5076 y(6)1771 5129
y(4)1903 4731 y FH(1)1868 4900 y Fz(\000)p FH(1)1868
5070 y Fz(\000)p FH(1)1903 5239 y(1)2025 4631 y Ft(3)2025
4777 y(7)2025 4827 y(7)2025 4876 y(7)2025 4926 y(7)2025
4976 y(7)2025 5026 y(7)2025 5076 y(7)2025 5129 y(5)2084
4731 y Fz( )25 b FH(ro)m(w)31 b(for)f FG(V)2567 4745
y FB(i)2080 4900 y Fz( )25 b FH(ro)m(w)31 b(for)f FG(V)2563
4914 y FB(j)2077 5070 y Fz( )25 b FH(ro)m(w)30 b(for)h
FG(V)2560 5085 y FB(k)2085 5239 y Fz( )25 b FH(ro)m(w)31
b(for)f FG(V)2568 5254 y FB(l)3687 4974 y FH(\(G.9\))p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
